<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="rdb" runtimeProfile="rt" qualifiedName="javax.baja.rdb.sql.SqlSchemeConsumer" name="SqlSchemeConsumer" packageName="javax.baja.rdb.sql" public="true" interface="true" abstract="true" category="interface">
<description>
When BSqlScheme directly instead of ord.resolve(), using&#xa; &lt;code&gt;resolve(SqlSchemeConsumer consumer, OrdTarget base, OrdQuery ordQuery)&lt;/code&gt;&#xa; provides a mechanism for handling one database row at a time rather than loading the&#xa; entire result set into a table.
</description>
<tag name="@author">Tony Richards</tag>
<tag name="@since">Niagara 4.4</tag>
<!-- javax.baja.rdb.sql.SqlSchemeConsumer.acceptRow(javax.baja.sys.BComponent) -->
<method name="acceptRow"  public="true" abstract="true">
<description/>
<parameter name="row">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
