<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="rdb" runtimeProfile="rt" qualifiedName="javax.baja.rdb.BRdbmsSession" name="BRdbmsSession" packageName="javax.baja.rdb" public="true" final="true">
<description>
BRdbmsSession is a session for a BRdbms
</description>
<tag name="@author">Mike Jarmy</tag>
<tag name="@creation">24 Jul 03</tag>
<tag name="@version">$Revision: 6$ $Date: 5/16/05 3:34:34 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.naming.BSession"/>
</extends>
<implements>
<type class="javax.baja.security.AuthenticationRealm"/>
</implements>
<!-- javax.baja.rdb.BRdbmsSession.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.make(javax.baja.naming.BHost, javax.baja.rdb.RdbmsQuery, javax.baja.rdb.BRdbmsScheme) -->
<method name="make"  public="true" static="true">
<description/>
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
</parameter>
<parameter name="query">
<type class="javax.baja.rdb.RdbmsQuery"/>
</parameter>
<parameter name="scheme">
<type class="javax.baja.rdb.BRdbmsScheme"/>
</parameter>
<return>
<type class="javax.baja.rdb.BRdbmsSession"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.isConnected() -->
<method name="isConnected"  public="true">
<description>
Return if space is currently connected.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.connect() -->
<method name="connect"  public="true">
<description>
Connect to remote station using current credentials.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.rdb.BRdbmsSession.disconnect() -->
<method name="disconnect"  public="true">
<description>
Disconnect from remote system.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.close() -->
<method name="close"  public="true">
<description>
Disconnect and remove the BRdbmsSession from the navigation tree.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getHost() -->
<method name="getHost"  public="true">
<description>
Get the host for this session.
</description>
<return>
<type class="javax.baja.naming.BHost"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getAbsoluteOrd() -->
<method name="getAbsoluteOrd"  public="true">
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getOrdInHost() -->
<method name="getOrdInHost"  public="true">
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getAuthenticationRealmName() -->
<method name="getAuthenticationRealmName"  public="true">
<description>
Get a description of the space itself.  The value&#xa; of this method should be a universal identifier for&#xa; the space which makes sense to a user and may be&#xa; used as key for caching credentials.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getAuthenticationScheme() -->
<method name="getAuthenticationScheme"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.makeCredentials() -->
<method name="makeCredentials"  public="true">
<description>
Make a default instance of the proper BICredentials&#xa; implementation to use for prompting the user.
</description>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getCredentials() -->
<method name="getCredentials"  public="true">
<description>
Get the current credentials being used to log &#xa; into the authentication space.
</description>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.setCredentials(javax.baja.security.BICredentials) -->
<method name="setCredentials"  public="true">
<description>
Set the current credentials to use for the next&#xa; authentication attempt.
</description>
<parameter name="credentials">
<type class="javax.baja.security.BICredentials"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getNavDisplayName(javax.baja.sys.Context) -->
<method name="getNavDisplayName"  public="true">
<description>
Display name is the oracle address.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getNavOrd() -->
<method name="getNavOrd"  public="true">
<description>
Return absolute ord.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getHostName() -->
<method name="getHostName"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getQuery() -->
<method name="getQuery"  public="true">
<description/>
<return>
<type class="javax.baja.rdb.RdbmsQuery"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getScheme() -->
<method name="getScheme"  public="true">
<description/>
<return>
<type class="javax.baja.rdb.BRdbmsScheme"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getDatabase() -->
<method name="getDatabase"  public="true">
<description/>
<return>
<type class="javax.baja.rdb.BRdbms"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getConnection() -->
<method name="getConnection"  public="true">
<description/>
<return>
<type class="java.sql.Connection"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.rdb.BRdbmsSession.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
