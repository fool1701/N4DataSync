<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="orion" runtimeProfile="rt" qualifiedName="com.tridium.orion.sql.BSqlJoin" name="BSqlJoin" packageName="com.tridium.orion.sql" public="true">
<description>
A BSqlJoin represents a JOIN operation in SQL. &#xa; &lt;p&gt;&#xa; Suppose you have the following BSqlQuery:&#xa; &lt;pre&gt;&#xa; BSqlQuery q = new BSqlQuery();&#xa; ...&#xa; BSqlExtent person = new BSqlExtent(BPerson.ORION_TYPE, baseOrd).alias(&#x22;p&#x22;);&#xa; BSqlExtent badge  = new BSqlExtent(BBadge.ORION_TYPE, baseOrd).alias(&#x22;b&#x22;);&#xa; q.from(badge)&#xa; q.join(new BSqlJoin(&#xa;  new BSqlField(badge, &#x22;person_id&#x22;),&#xa;  new BSqlField(person, &#x22;id&#x22;)));&#xa; &lt;/pre&gt;&#xa; The above BSqlQuery would generate the following SQL snippet:&#xa; &lt;pre&gt;&#xa; SELECT ... FROM badge_table b&#xa;    INNER JOIN person_table p ON b.person_id = p.id&#xa;    ...&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Mike Jarmy</tag>
<tag name="@creation">22 May 08</tag>
<tag name="@version">$Revision$Date: 6/22/2007 11:17:32 AM$</tag>
<tag name="@since">Baja 1.0</tag>
<tag name="@see">BJoin</tag>
<extends>
<type class="javax.baja.query.BQueryNode"/>
</extends>
<property name="joinKind" flags="">
<type class="com.tridium.orion.sql.BJoin"/>
<description>
Slot for the &lt;code&gt;joinKind&lt;/code&gt; property.&#xa; The kind of join.  The default is an INNER JOIN.
</description>
<tag name="@see">com.tridium.orion.sql.BJoin</tag>
<tag name="@see">#getJoinKind</tag>
<tag name="@see">#setJoinKind</tag>
</property>

<property name="joinTable" flags="">
<type class="com.tridium.orion.sql.BSqlExtent"/>
<description>
Slot for the &lt;code&gt;joinTable&lt;/code&gt; property.&#xa; The table to join on.
</description>
<tag name="@see">#getJoinTable</tag>
<tag name="@see">#setJoinTable</tag>
</property>

<!-- com.tridium.orion.sql.BSqlJoin() -->
<constructor name="BSqlJoin" public="true">
<description/>
</constructor>

<!-- com.tridium.orion.sql.BSqlJoin(com.tridium.orion.sql.BJoin, com.tridium.orion.sql.BSqlExtent, javax.baja.query.BExpression) -->
<constructor name="BSqlJoin" public="true">
<parameter name="joinKind">
<type class="com.tridium.orion.sql.BJoin"/>
</parameter>
<parameter name="joinTable">
<type class="com.tridium.orion.sql.BSqlExtent"/>
</parameter>
<parameter name="onExpr">
<type class="javax.baja.query.BExpression"/>
</parameter>
<description>
Create a join expression of the given kind, for the given table, using&#xa; the given onExpr.
</description>
</constructor>

<!-- com.tridium.orion.sql.BSqlJoin(com.tridium.orion.sql.BJoin, com.tridium.orion.sql.BSqlField, com.tridium.orion.sql.BSqlField) -->
<constructor name="BSqlJoin" public="true">
<parameter name="joinKind">
<type class="com.tridium.orion.sql.BJoin"/>
</parameter>
<parameter name="from">
<type class="com.tridium.orion.sql.BSqlField"/>
</parameter>
<parameter name="to">
<type class="com.tridium.orion.sql.BSqlField"/>
</parameter>
<description>
Creates a BSqlJoin of kind &lt;code&gt;joinKind&lt;/code&gt;.  It will set the &#xa; &lt;code&gt;joinTable&lt;/code&gt; property to a BSqlExtent created by doing the &#xa; following:&#xa; &lt;pre&gt;&#xa; setJoinTable(new BSqlExtent(to.getExtentType()).alias(to.getExtentAlias());&#xa; &lt;/pre&gt;&#xa; It will set the &lt;code&gt;onExpr&lt;/code&gt; to an equality expression created as:&#xa; &lt;pre&gt;&#xa; setOnExpr(Predicates.eq(from, to)&#xa; &lt;/pre&gt;
</description>
</constructor>

<!-- com.tridium.orion.sql.BSqlJoin(com.tridium.orion.sql.BSqlField, com.tridium.orion.sql.BSqlField) -->
<constructor name="BSqlJoin" public="true">
<parameter name="from">
<type class="com.tridium.orion.sql.BSqlField"/>
</parameter>
<parameter name="to">
<type class="com.tridium.orion.sql.BSqlField"/>
</parameter>
<description>
Convenience for &lt;code&gt;this(BJoin.innerJoin, from, to)&lt;/code&gt;.
</description>
</constructor>

<!-- com.tridium.orion.sql.BSqlJoin(com.tridium.orion.OrionType, javax.baja.sys.Property, com.tridium.orion.OrionType, javax.baja.sys.Property) -->
<constructor name="BSqlJoin" public="true">
<parameter name="fromType">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<parameter name="fromProp">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="toType">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<parameter name="toProp">
<type class="javax.baja.sys.Property"/>
</parameter>
<description>
Convenience for &#xa; &lt;code&gt;this(BJoin.innerJoin, new BSqlField(fromType, fromProp), new BSqlField(toType, toProp))&lt;/code&gt;.
</description>
</constructor>

<!-- com.tridium.orion.sql.BSqlJoin.getJoinKind() -->
<method name="getJoinKind"  public="true">
<description>
Get the &lt;code&gt;joinKind&lt;/code&gt; property.&#xa; The kind of join.  The default is an INNER JOIN.
</description>
<tag name="@see">com.tridium.orion.sql.BJoin</tag>
<tag name="@see">#joinKind</tag>
<return>
<type class="com.tridium.orion.sql.BJoin"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.setJoinKind(com.tridium.orion.sql.BJoin) -->
<method name="setJoinKind"  public="true">
<description>
Set the &lt;code&gt;joinKind&lt;/code&gt; property.&#xa; The kind of join.  The default is an INNER JOIN.
</description>
<tag name="@see">com.tridium.orion.sql.BJoin</tag>
<tag name="@see">#joinKind</tag>
<parameter name="v">
<type class="com.tridium.orion.sql.BJoin"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.getJoinTable() -->
<method name="getJoinTable"  public="true">
<description>
Get the &lt;code&gt;joinTable&lt;/code&gt; property.&#xa; The table to join on.
</description>
<tag name="@see">#joinTable</tag>
<return>
<type class="com.tridium.orion.sql.BSqlExtent"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.setJoinTable(com.tridium.orion.sql.BSqlExtent) -->
<method name="setJoinTable"  public="true">
<description>
Set the &lt;code&gt;joinTable&lt;/code&gt; property.&#xa; The table to join on.
</description>
<tag name="@see">#joinTable</tag>
<parameter name="v">
<type class="com.tridium.orion.sql.BSqlExtent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.setOnExpr(javax.baja.query.BExpression) -->
<method name="setOnExpr"  public="true">
<description>
Set the ON expression for this join. This will replace any previously&#xa; set ON expression.
</description>
<parameter name="onExpr">
<type class="javax.baja.query.BExpression"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.getOnExpr() -->
<method name="getOnExpr"  public="true">
<description/>
<return>
<type class="javax.baja.query.BExpression"/>
<description>
the BExpression for the ON expression for this join, or null&#xa; if one has not been set.
</description>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlJoin.joinKind -->
<field name="joinKind"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;joinKind&lt;/code&gt; property.&#xa; The kind of join.  The default is an INNER JOIN.
</description>
<tag name="@see">com.tridium.orion.sql.BJoin</tag>
<tag name="@see">#getJoinKind</tag>
<tag name="@see">#setJoinKind</tag>
</field>

<!-- com.tridium.orion.sql.BSqlJoin.joinTable -->
<field name="joinTable"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;joinTable&lt;/code&gt; property.&#xa; The table to join on.
</description>
<tag name="@see">#getJoinTable</tag>
<tag name="@see">#setJoinTable</tag>
</field>

<!-- com.tridium.orion.sql.BSqlJoin.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
