<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<package module="orion" runtimeProfile="rt" name="com.tridium.orion.sql">
<description/>
<class packageName="com.tridium.orion.sql" name="BExtentProjection"><description>A BExtentProjection can be used to query for all the properties of an&#xa; OrionType.</description></class>
<class packageName="com.tridium.orion.sql" name="BIsNull"><description>BIsNull is a unary expression that&#xa; allows an SqlQuery to check for &#x22;IS NULL&#x22;</description></class>
<class packageName="com.tridium.orion.sql" name="BJoin"><description>The join types supported by BSqlQuerys.</description></class>
<class packageName="com.tridium.orion.sql" name="BPage"><description>BPage represents a page of records in a SQL Query.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlCase"><description>Models a standard SQL CASE expression.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlCase.WhenTuple"><description>A tuple consisting of a WHEN expression with its corresponding THEN&#xa; expression.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlExtent"><description>An SQL extent is a single extent that allows for the extent to have an alias.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlField"><description>An SQL specific BFieldExpression implementation that represents a specific&#xa; property for a specific ORION_TYPE.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlJoin"><description>A BSqlJoin represents a JOIN operation in SQL.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlQuery"><description>BSqlQuery represents a SQL Query.</description></class>
<class packageName="com.tridium.orion.sql" name="BSqlUpdate"><description>BSqlUpdate can be used to programatically build up a SQL UPDATE statement.</description></class>
<class packageName="com.tridium.orion.sql" name="BSubSqlQuery"><description>BSubSqlQuery wraps a SqlQuery in an expression so a SqlVisitor can visit it with anothre BSqlQuery.</description></class>
<class packageName="com.tridium.orion.sql" name="PropertyValue"><description>PropertyValue contains a Property and an associated BValue.</description></class>
<class packageName="com.tridium.orion.sql" name="SqlColumns"><description>SQL Column factory utility.</description></class>
<class packageName="com.tridium.orion.sql" name="TableBuilder"><description>TableBuilder can build a table from an OrionType.</description></class>
<class packageName="com.tridium.orion.sql" name="BatchStatement" category="interface"><description>BatchStatement does inserts/updates/deletes in batch mode,&#xa; which is generally much more efficient than doing them&#xa; one at a time.</description></class>
<class packageName="com.tridium.orion.sql" name="BISqlQueryFilter" category="interface"><description>BISqlQueryFilter is an interface that allows users to drop in additional&#xa; filters into a BDynamicTable.</description></class>
</package>
</bajadoc>
