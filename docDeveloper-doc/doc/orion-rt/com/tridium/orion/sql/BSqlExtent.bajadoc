<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="orion" runtimeProfile="rt" qualifiedName="com.tridium.orion.sql.BSqlExtent" name="BSqlExtent" packageName="com.tridium.orion.sql" public="true" final="true">
<description>
An SQL extent is a single extent that allows for the extent to have an alias.
</description>
<tag name="@author">Matthew Giannini</tag>
<tag name="@creation">Jul 7, 2008</tag>
<tag name="@version">$Revision$ $Date: $</tag>
<tag name="@since">Baja 3.4</tag>
<extends>
<type class="javax.baja.query.BSingleExtent"/>
</extends>
<property name="extentAlias" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;extentAlias&lt;/code&gt; property.&#xa; An optional alias for the extent. When constructing SQL query&#xa; strings, the extent alias will be used instead of the table name for&#xa; the extent type when qualifying the propertyName.  If the value is the&#xa; empty string (&#x22;&#x22;), then no table aliasing will be used
</description>
<tag name="@see">#getExtentAlias</tag>
<tag name="@see">#setExtentAlias</tag>
</property>

<!-- com.tridium.orion.sql.BSqlExtent(com.tridium.orion.OrionType) -->
<constructor name="BSqlExtent" public="true">
<parameter name="baseExtentType">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.orion.sql.BSqlExtent(javax.baja.util.BTypeSpec) -->
<constructor name="BSqlExtent" public="true">
<parameter name="baseExtent">
<type class="javax.baja.util.BTypeSpec"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.orion.sql.BSqlExtent() -->
<constructor name="BSqlExtent" public="true">
<description/>
</constructor>

<!-- com.tridium.orion.sql.BSqlExtent.getExtentAlias() -->
<method name="getExtentAlias"  public="true">
<description>
Get the &lt;code&gt;extentAlias&lt;/code&gt; property.&#xa; An optional alias for the extent. When constructing SQL query&#xa; strings, the extent alias will be used instead of the table name for&#xa; the extent type when qualifying the propertyName.  If the value is the&#xa; empty string (&#x22;&#x22;), then no table aliasing will be used
</description>
<tag name="@see">#extentAlias</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlExtent.setExtentAlias(java.lang.String) -->
<method name="setExtentAlias"  public="true">
<description>
Set the &lt;code&gt;extentAlias&lt;/code&gt; property.&#xa; An optional alias for the extent. When constructing SQL query&#xa; strings, the extent alias will be used instead of the table name for&#xa; the extent type when qualifying the propertyName.  If the value is the&#xa; empty string (&#x22;&#x22;), then no table aliasing will be used
</description>
<tag name="@see">#extentAlias</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlExtent.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlExtent.alias(java.lang.String) -->
<method name="alias"  public="true">
<description>
Set the extentAlias to the given alias, and return this.
</description>
<parameter name="alias">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridium.orion.sql.BSqlExtent"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlExtent.isExtentAliased() -->
<method name="isExtentAliased"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.sql.BSqlExtent.extentAlias -->
<field name="extentAlias"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;extentAlias&lt;/code&gt; property.&#xa; An optional alias for the extent. When constructing SQL query&#xa; strings, the extent alias will be used instead of the table name for&#xa; the extent type when qualifying the propertyName.  If the value is the&#xa; empty string (&#x22;&#x22;), then no table aliasing will be used
</description>
<tag name="@see">#getExtentAlias</tag>
<tag name="@see">#setExtentAlias</tag>
</field>

<!-- com.tridium.orion.sql.BSqlExtent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
