<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<package module="orion" runtimeProfile="rt" name="com.tridium.orion">
<description/>
<class packageName="com.tridium.orion" name="BAbstractOrionApp"><description>BAbstractOrionApp is an abstract implementation of BIOrionApp that provides&#xa; some conveniences for common functions.</description></class>
<class packageName="com.tridium.orion" name="BAuditMode"><description>BAuditMode specifies how audit information is generated.</description></class>
<class packageName="com.tridium.orion" name="BLocalOrionDatabase"><description>BLocalOrionDatabase is the persistent storage for Orion objects and types.</description></class>
<class packageName="com.tridium.orion" name="BNameFactory"><description>BNameFactory is responsible for providing names&#xa; for database objects.</description></class>
<class packageName="com.tridium.orion" name="BOrionDatabase"><description>BOrionDatabase.</description></class>
<class packageName="com.tridium.orion" name="BOrionDeviceExt"><description>BOrionDeviceExt manages orion communication between devices.</description></class>
<class packageName="com.tridium.orion" name="BOrionModule"><description>BOrionModule represents a module with types registered in an&#xa; Orion database.</description></class>
<class packageName="com.tridium.orion" name="BOrionObject"><description>BOrionObject is an implementation of BIOrionObject that handles&#xa; constructing the OrionType from the slot map.</description></class>
<class packageName="com.tridium.orion" name="BOrionRoot"><description>This is the root component of an Orion component space.</description></class>
<class packageName="com.tridium.orion" name="BOrionScheme"><description>BOrionScheme is the ORD scheme for identifying objects and types in&#xa; the Orion database.</description></class>
<class packageName="com.tridium.orion" name="BOrionService"><description>BOrionService is the service that enables a station and its applications&#xa; to use the Orion database.</description></class>
<class packageName="com.tridium.orion" name="BOrionSpace"><description>BOrionSpace is the interface to the Orion database.</description></class>
<class packageName="com.tridium.orion" name="BOrionType"><description>BOrionType is a BObject wrapper for an OrionType.</description></class>
<class packageName="com.tridium.orion" name="BOrionTypeId"><description>BOrionTypeId is the unique identifier for an orion type.</description></class>
<class packageName="com.tridium.orion" name="BRef"><description>BRef is a reference to BIOrionObject.</description></class>
<class packageName="com.tridium.orion" name="BSchemaVersion"><description>BSchemaVersion represents the current version&#xa; of a BIOrionApp.</description></class>
<class packageName="com.tridium.orion" name="BTypeDependency"><description>BTypeDependency describes a direct dependency between two Orion types.</description></class>
<class packageName="com.tridium.orion" name="Index"><description>An Index specifies that certain properties &#xa; should be indexed in the persistence layer.</description></class>
<class packageName="com.tridium.orion" name="InverseRefProperty"><description>InverseRefProperty is a property on the target type of a BRef that&#xa; represents the inverse relationship.</description></class>
<class packageName="com.tridium.orion" name="OrionAppSchemaManager"><description>Utility class which may be used by BIOrionApp implementations to &#xa; manage their schema versions.</description></class>
<class packageName="com.tridium.orion" name="OrionQuery"><description>OrionQuery is the Orion-specific ord query implementation.</description></class>
<class packageName="com.tridium.orion" name="OrionQuery.PathElem"/>
<class packageName="com.tridium.orion" name="BIMappable" category="interface"><description>The BIMappable interface allows BOrionObjects to create themselves from a&#xa; BObject.</description></class>
<class packageName="com.tridium.orion" name="BIOrionApp" category="interface"><description>BIOrionApp is a service that manages data in the Orion database.</description></class>
<class packageName="com.tridium.orion" name="BIOrionAssociation" category="interface"><description>BIOrionAssociation is a marker interface for types that define&#xa; an association between two other types.</description></class>
<class packageName="com.tridium.orion" name="BIOrionDatabaseObject" category="interface"><description>A BIOrionDatabaseObject is an object associated with Orion&#xa; that also knows what database it is associated with.</description></class>
<class packageName="com.tridium.orion" name="BIOrionObject" category="interface"><description>BIOrionObject is the interface implemented by objects that&#xa; can be stored in the Orion database.</description></class>
<class packageName="com.tridium.orion" name="ISchemaUpgrader" category="interface"><description>Implementing classes upgrade the schema version of a single&#xa; Orion application between specific versions</description></class>
<class packageName="com.tridium.orion" name="OrionCursor" category="interface"><description>OrionCursor is a cursor returned by queries of the Orion database.</description></class>
<class packageName="com.tridium.orion" name="OrionModel" category="interface"><description>OrionModel is the data model for orion applications.</description></class>
<class packageName="com.tridium.orion" name="OrionSession" category="interface"><description>An OrionSession is the interface for interacting with the OrionDatabase.</description></class>
<class packageName="com.tridium.orion" name="OrionType" category="interface"><description>An OrionType contains the information about a single type in the&#xa; Orion database.</description></class>
<class packageName="com.tridium.orion" name="Relationship" category="interface"><description>A Relationship defines a general relationship between Orion types.</description></class>
<class packageName="com.tridium.orion" name="OrionException" category="exception"><description>OrionException is the base class for exceptions related to the Orion system.</description></class>
</package>
</bajadoc>
