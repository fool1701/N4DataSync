<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="orion" runtimeProfile="rt" qualifiedName="com.tridium.orion.BOrionDatabase" name="BOrionDatabase" packageName="com.tridium.orion" public="true" abstract="true">
<description>
BOrionDatabase.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">14 Jul 2008</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="com.tridium.orion.BIOrionDatabaseObject"/>
</implements>
<!-- com.tridium.orion.BOrionDatabase() -->
<constructor name="BOrionDatabase" public="true">
<description/>
</constructor>

<!-- com.tridium.orion.BOrionDatabase.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getId() -->
<method name="getId"  public="true" abstract="true">
<description>
Get the identity of this database for use in the orion ord scheme.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getOrionSpace() -->
<method name="getOrionSpace"  public="true" abstract="true">
<description>
Get the orion space that contains this database.
</description>
<return>
<type class="com.tridium.orion.BOrionSpace"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getRdbms() -->
<method name="getRdbms"  public="true" abstract="true">
<description>
Get the Rddbms
</description>
<return>
<type class="javax.baja.rdb.BRdbms"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getOrionDatabase() -->
<method name="getOrionDatabase"  public="true">
<description>
Get the OrionDatabase to implement BIOrionDatabaseObject.
</description>
<return>
<type class="com.tridium.orion.BOrionDatabase"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getNavOrd() -->
<method name="getNavOrd"  public="true">
<description>
Get the nav ord for the database.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getHandle() -->
<method name="getHandle"  public="true">
<description>
Get the handle for the database.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getHandleOrd() -->
<method name="getHandleOrd"  public="true">
<description>
Get the handle ord for the database.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getOrdInSession() -->
<method name="getOrdInSession"  public="true">
<description>
Get the ord in session.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getOrdInSpace() -->
<method name="getOrdInSpace"  public="true">
<description>
Get the ord for this database in the orion space.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getNavDescription(javax.baja.sys.Context) -->
<method name="getNavDescription"  public="true">
<description>
Get the nav description for the database.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getNameFactory(com.tridium.orion.OrionType) -->
<method name="getNameFactory"  public="true" abstract="true">
<description>
Return the BNameFactory associated with the given type.&#xa; &lt;p&gt;&#xa; If there is a BNameFactory registered on the BIOrionApp&#xa; that is associated with the type, then that factory is used.&#xa; &lt;p&gt;&#xa; If there is no BIOrionApp associated with the type,&#xa; then if there is a BNameFactory registered on BOrionDatabase,&#xa; then that is used instead.&#xa; &lt;p&gt;&#xa; Otherwise, if the type is dynamic, then BNameFactory.INSTANCE is returned.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<return>
<type class="com.tridium.orion.BNameFactory"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getTableName(com.tridium.orion.OrionType) -->
<method name="getTableName"  public="true">
<description>
Return the name of the database table for the&#xa; given type. Convenience for&#xa; &lt;code&gt;getNameFactory(type).getTableName(this, type)&lt;/code&gt;.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getColumnName(com.tridium.orion.OrionType, javax.baja.sys.Property) -->
<method name="getColumnName"  public="true">
<description>
Return the name of the database table column for the&#xa; given property. Convenience for&#xa; &lt;code&gt;getNameFactory(type).getColumnName(this, type, property)&lt;/code&gt;.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getConstraintName(com.tridium.orion.OrionType, javax.baja.sys.Property, java.lang.String, boolean) -->
<method name="getConstraintName"  public="true">
<description>
Get the name for a constraint. In the default implementation, if isPrimaryKey is true, &#xa; then &#x27;property&#x27; will be ignored when creating the name.&#xa; Convenience for &lt;code&gt;getNameFactory(type).getConstraintName(this, type, property, suffix)&lt;/code&gt;.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="suffix">
<type class="java.lang.String"/>
</parameter>
<parameter name="isPrimaryKey">
<type class="boolean"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getIndexName(com.tridium.orion.OrionType, javax.baja.sys.Property) -->
<method name="getIndexName"  public="true">
<description>
Get the name for an index.&#xa; Convenience for &lt;code&gt;return getNameFactory(type).getIndexName(this, type, property)&lt;/code&gt;.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.isRegistered(com.tridium.orion.BIOrionApp) -->
<method name="isRegistered"  public="true">
<description>
Is the specified app registered with this database?
</description>
<parameter name="app">
<type class="com.tridium.orion.BIOrionApp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getModules() -->
<method name="getModules"  public="true">
<description>
Get the modules that have registered types in this&#xa; database.
</description>
<return>
<type class="com.tridium.orion.BOrionModule" dimension="1"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getModule(java.lang.String) -->
<method name="getModule"  public="true">
<description>
Get a module by name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridium.orion.BOrionModule"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getTypes() -->
<method name="getTypes"  public="true" abstract="true">
<description>
Get the list of all types defined in the database.
</description>
<return>
<type class="com.tridium.orion.BOrionType" dimension="1"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getType(javax.baja.util.BTypeSpec) -->
<method name="getType"  public="true" abstract="true">
<description>
Get a type by type spec.
</description>
<parameter name="typeSpec">
<type class="javax.baja.util.BTypeSpec"/>
</parameter>
<return>
<type class="com.tridium.orion.BOrionType"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getType(com.tridium.orion.BOrionTypeId) -->
<method name="getType"  public="true" abstract="true">
<description>
Get a type by id.
</description>
<parameter name="id">
<type class="com.tridium.orion.BOrionTypeId"/>
</parameter>
<return>
<type class="com.tridium.orion.OrionType"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getType(com.tridium.orion.OrionType) -->
<method name="getType"  public="true">
<description>
Get the BOrionType for the specified type from this database.
</description>
<parameter name="type">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<return>
<type class="com.tridium.orion.BOrionType"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getDependentTypes(com.tridium.orion.OrionType) -->
<method name="getDependentTypes"  public="true" abstract="true">
<description>
Get the list of types that are dependent on the specified type.&#xa; Dependent types have a ref property that references the specified&#xa; type.
</description>
<parameter name="toType">
<type class="com.tridium.orion.OrionType"/>
</parameter>
<return>
<type class="com.tridium.orion.BTypeDependency" dimension="1"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.createSession(javax.baja.sys.Context) -->
<method name="createSession"  public="true" abstract="true">
<description>
Create a session to this database.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="com.tridium.orion.OrionSession"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- com.tridium.orion.BOrionDatabase.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
