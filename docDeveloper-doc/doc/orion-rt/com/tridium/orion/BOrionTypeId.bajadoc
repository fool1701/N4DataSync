<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="orion" runtimeProfile="rt" qualifiedName="com.tridium.orion.BOrionTypeId" name="BOrionTypeId" packageName="com.tridium.orion" public="true" final="true">
<description>
BOrionTypeId is the unique identifier for an orion type.  The&#xa; TEMPORARY type ID is a special ID used for temporary dynamic&#xa; types.  Two OrionTypes with the TEMPORARY type ID are not&#xa; considered to be the same type.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">04 Oct 2007</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- com.tridium.orion.BOrionTypeId() -->
<constructor name="BOrionTypeId" protected="true">
<description>
Create a null instance.
</description>
</constructor>

<!-- com.tridium.orion.BOrionTypeId.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Make a new type id instance.
</description>
<parameter name="id">
<type class="java.lang.String"/>
<description>
A string encoding of a BOrionTypeId.
</description>
</parameter>
<return>
<type class="com.tridium.orion.BOrionTypeId"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.make(java.lang.String, java.lang.String, boolean) -->
<method name="make"  public="true" static="true">
<description>
Make a new type id instance.
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
<description>
The name of the module that defines the type.
</description>
</parameter>
<parameter name="typeName">
<type class="java.lang.String"/>
<description>
The unique identifier of this type within the module.
</description>
</parameter>
<parameter name="dynamic">
<type class="boolean"/>
<description>
Is this a dynamic type?  Dynamic types do not necessarily&#xa;   have a class file that implements them.
</description>
</parameter>
<return>
<type class="com.tridium.orion.BOrionTypeId"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.make(javax.baja.sys.Type) -->
<method name="make"  public="true" static="true">
<description>
Make a new type id instance.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
An existing type to extrace the type id from.
</description>
</parameter>
<return>
<type class="com.tridium.orion.BOrionTypeId"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.make(javax.baja.util.BTypeSpec) -->
<method name="make"  public="true" static="true">
<description>
Make a new type id instance.
</description>
<parameter name="typeSpec">
<type class="javax.baja.util.BTypeSpec"/>
<description>
The type spec for an existing type.  A type spec can&#xa;   only identify a static type, so the resulting OrionTypeId will&#xa;   never identify a dynamic type.
</description>
</parameter>
<return>
<type class="com.tridium.orion.BOrionTypeId"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.getModuleName() -->
<method name="getModuleName"  public="true">
<description>
Get the name of the module that defines this type.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.getTypeName() -->
<method name="getTypeName"  public="true">
<description>
Get the unique identifier for this type within the module that defined it.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.isDynamic() -->
<method name="isDynamic"  public="true">
<description>
Does this instance identify a dynamic type?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.getTypeSpec() -->
<method name="getTypeSpec"  public="true">
<description>
If this instance identifies a static type, get the TypeSpec for it.
</description>
<return>
<type class="javax.baja.util.BTypeSpec"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.isNull() -->
<method name="isNull"  public="true">
<description>
Is this a null instance?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.isTemporary() -->
<method name="isTemporary"  public="true">
<description>
Is this a temporary type?  If so, the id is equivalent to&#xa; the TEMPORARY instance.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.getTypeOrd(com.tridium.orion.BOrionDatabase) -->
<method name="getTypeOrd"  public="true">
<description>
Get the ord for this instance relative to the Orion space.
</description>
<parameter name="db">
<type class="com.tridium.orion.BOrionDatabase"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.orion.BOrionTypeId.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.orion.BOrionTypeId.encodeToString() -->
<method name="encodeToString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.decode(java.lang.String) -->
<method name="decode"  public="true" static="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridium.orion.BOrionTypeId"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.hashCode() -->
<method name="hashCode"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.getType() -->
<method name="getType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.orion.BOrionTypeId.NULL -->
<field name="NULL"  public="true" static="true" final="true">
<type class="com.tridium.orion.BOrionTypeId"/>
<description/>
</field>

<!-- com.tridium.orion.BOrionTypeId.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="com.tridium.orion.BOrionTypeId"/>
<description/>
</field>

<!-- com.tridium.orion.BOrionTypeId.TEMPORARY -->
<field name="TEMPORARY"  public="true" static="true" final="true">
<type class="com.tridium.orion.BOrionTypeId"/>
<description/>
</field>

<!-- com.tridium.orion.BOrionTypeId.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
