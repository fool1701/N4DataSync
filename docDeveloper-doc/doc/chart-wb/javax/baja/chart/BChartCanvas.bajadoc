<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="chart" runtimeProfile="wb" qualifiedName="javax.baja.chart.BChartCanvas" name="BChartCanvas" packageName="javax.baja.chart" public="true">
<description>
BChartCanvas is the drawing area for all ChartRenderers in the chart.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">11 Jun 2004</tag>
<tag name="@version">$Revision: 27$ $Date: 6/9/10 10:15:59 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BWidget"/>
</extends>
<property name="fill" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;fill&lt;/code&gt; property.&#xa; The brush used to fill the canvas background.
</description>
<tag name="@see">#getFill</tag>
<tag name="@see">#setFill</tag>
</property>

<property name="borderStroke" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;borderStroke&lt;/code&gt; property.&#xa; The brush used to draw the canvas border.
</description>
<tag name="@see">#getBorderStroke</tag>
<tag name="@see">#setBorderStroke</tag>
</property>

<property name="borderPen" flags="">
<type class="javax.baja.gx.BPen"/>
<description>
Slot for the &lt;code&gt;borderPen&lt;/code&gt; property.&#xa; The pen used to draw the canvas border.
</description>
<tag name="@see">#getBorderPen</tag>
<tag name="@see">#setBorderPen</tag>
</property>

<property name="showHorizontalGridLines" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;showHorizontalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#getShowHorizontalGridLines</tag>
<tag name="@see">#setShowHorizontalGridLines</tag>
</property>

<property name="showVerticalGridLines" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;showVerticalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#getShowVerticalGridLines</tag>
<tag name="@see">#setShowVerticalGridLines</tag>
</property>

<property name="gridStroke" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;gridStroke&lt;/code&gt; property.&#xa; The stroke used to draw the grid.
</description>
<tag name="@see">#getGridStroke</tag>
<tag name="@see">#setGridStroke</tag>
</property>

<property name="gridPen" flags="">
<type class="javax.baja.gx.BPen"/>
<description>
Slot for the &lt;code&gt;gridPen&lt;/code&gt; property.&#xa; The pen used to draw the grid.
</description>
<tag name="@see">#getGridPen</tag>
<tag name="@see">#setGridPen</tag>
</property>

<action name="showPanControl" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;showPanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s showPanRequested event.
</description>
<tag name="@see">#showPanControl()</tag>
</action>

<action name="hidePanControl" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;hidePanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s hidePanRequested event.
</description>
<tag name="@see">#hidePanControl()</tag>
</action>

<!-- javax.baja.chart.BChartCanvas() -->
<constructor name="BChartCanvas" public="true">
<description/>
</constructor>

<!-- javax.baja.chart.BChartCanvas.getFill() -->
<method name="getFill"  public="true">
<description>
Get the &lt;code&gt;fill&lt;/code&gt; property.&#xa; The brush used to fill the canvas background.
</description>
<tag name="@see">#fill</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setFill(javax.baja.gx.BBrush) -->
<method name="setFill"  public="true">
<description>
Set the &lt;code&gt;fill&lt;/code&gt; property.&#xa; The brush used to fill the canvas background.
</description>
<tag name="@see">#fill</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getBorderStroke() -->
<method name="getBorderStroke"  public="true">
<description>
Get the &lt;code&gt;borderStroke&lt;/code&gt; property.&#xa; The brush used to draw the canvas border.
</description>
<tag name="@see">#borderStroke</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setBorderStroke(javax.baja.gx.BBrush) -->
<method name="setBorderStroke"  public="true">
<description>
Set the &lt;code&gt;borderStroke&lt;/code&gt; property.&#xa; The brush used to draw the canvas border.
</description>
<tag name="@see">#borderStroke</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getBorderPen() -->
<method name="getBorderPen"  public="true">
<description>
Get the &lt;code&gt;borderPen&lt;/code&gt; property.&#xa; The pen used to draw the canvas border.
</description>
<tag name="@see">#borderPen</tag>
<return>
<type class="javax.baja.gx.BPen"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setBorderPen(javax.baja.gx.BPen) -->
<method name="setBorderPen"  public="true">
<description>
Set the &lt;code&gt;borderPen&lt;/code&gt; property.&#xa; The pen used to draw the canvas border.
</description>
<tag name="@see">#borderPen</tag>
<parameter name="v">
<type class="javax.baja.gx.BPen"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getShowHorizontalGridLines() -->
<method name="getShowHorizontalGridLines"  public="true">
<description>
Get the &lt;code&gt;showHorizontalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#showHorizontalGridLines</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setShowHorizontalGridLines(boolean) -->
<method name="setShowHorizontalGridLines"  public="true">
<description>
Set the &lt;code&gt;showHorizontalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#showHorizontalGridLines</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getShowVerticalGridLines() -->
<method name="getShowVerticalGridLines"  public="true">
<description>
Get the &lt;code&gt;showVerticalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#showVerticalGridLines</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setShowVerticalGridLines(boolean) -->
<method name="setShowVerticalGridLines"  public="true">
<description>
Set the &lt;code&gt;showVerticalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#showVerticalGridLines</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getGridStroke() -->
<method name="getGridStroke"  public="true">
<description>
Get the &lt;code&gt;gridStroke&lt;/code&gt; property.&#xa; The stroke used to draw the grid.
</description>
<tag name="@see">#gridStroke</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setGridStroke(javax.baja.gx.BBrush) -->
<method name="setGridStroke"  public="true">
<description>
Set the &lt;code&gt;gridStroke&lt;/code&gt; property.&#xa; The stroke used to draw the grid.
</description>
<tag name="@see">#gridStroke</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getGridPen() -->
<method name="getGridPen"  public="true">
<description>
Get the &lt;code&gt;gridPen&lt;/code&gt; property.&#xa; The pen used to draw the grid.
</description>
<tag name="@see">#gridPen</tag>
<return>
<type class="javax.baja.gx.BPen"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setGridPen(javax.baja.gx.BPen) -->
<method name="setGridPen"  public="true">
<description>
Set the &lt;code&gt;gridPen&lt;/code&gt; property.&#xa; The pen used to draw the grid.
</description>
<tag name="@see">#gridPen</tag>
<parameter name="v">
<type class="javax.baja.gx.BPen"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.showPanControl() -->
<method name="showPanControl"  public="true">
<description>
Invoke the &lt;code&gt;showPanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s showPanRequested event.
</description>
<tag name="@see">#showPanControl</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.hidePanControl() -->
<method name="hidePanControl"  public="true">
<description>
Invoke the &lt;code&gt;hidePanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s hidePanRequested event.
</description>
<tag name="@see">#hidePanControl</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.started() -->
<method name="started"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.getPane() -->
<method name="getPane"  public="true">
<description>
Get the chart that contains this canvas.
</description>
<return>
<type class="javax.baja.chart.BChartPane"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.updateGridAxes() -->
<method name="updateGridAxes"  public="true">
<description>
Update the axes used for drawing the grid.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout the canvas.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the canvas by letting all of&#xa; the chart renderers draw onto it.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.select(double, double, double, double) -->
<method name="select"  public="true">
<description>
Select the specified region.
</description>
<parameter name="x">
<type class="double"/>
</parameter>
<parameter name="y">
<type class="double"/>
</parameter>
<parameter name="w">
<type class="double"/>
</parameter>
<parameter name="h">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.selectHorizontal(double, double) -->
<method name="selectHorizontal"  public="true">
<description>
Select a rectangle including the entire vertical range and&#xa; the specified horizontal range.
</description>
<parameter name="x1">
<type class="double"/>
</parameter>
<parameter name="x2">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.selectVertical(double, double) -->
<method name="selectVertical"  public="true">
<description>
Select a rectangle including the entire horizontal range and&#xa; the specified vertical range.
</description>
<parameter name="y1">
<type class="double"/>
</parameter>
<parameter name="y2">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.clearSelection() -->
<method name="clearSelection"  public="true">
<description>
Clear the current selection.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.setZoomed(boolean) -->
<method name="setZoomed"  public="true">
<description>
Set the zoomed state of the canvas.  If zoomed,&#xa; a control is displayed in the canvas for panning and&#xa; zooming out.
</description>
<parameter name="zoomed">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.isZoomed() -->
<method name="isZoomed"  public="true">
<description>
Return the zoomed state of the canvas.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.doShowPanControl() -->
<method name="doShowPanControl"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.doHidePanControl() -->
<method name="doHidePanControl"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.isFocusTraversable() -->
<method name="isFocusTraversable"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseMoved"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseWheel(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseWheel"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mousePulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePulsed"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.mouseHover(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseHover"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.keyReleased(javax.baja.ui.event.BKeyEvent) -->
<method name="keyReleased"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.keyTyped(javax.baja.ui.event.BKeyEvent) -->
<method name="keyTyped"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BChartCanvas.fill -->
<field name="fill"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;fill&lt;/code&gt; property.&#xa; The brush used to fill the canvas background.
</description>
<tag name="@see">#getFill</tag>
<tag name="@see">#setFill</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.borderStroke -->
<field name="borderStroke"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;borderStroke&lt;/code&gt; property.&#xa; The brush used to draw the canvas border.
</description>
<tag name="@see">#getBorderStroke</tag>
<tag name="@see">#setBorderStroke</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.borderPen -->
<field name="borderPen"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;borderPen&lt;/code&gt; property.&#xa; The pen used to draw the canvas border.
</description>
<tag name="@see">#getBorderPen</tag>
<tag name="@see">#setBorderPen</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.showHorizontalGridLines -->
<field name="showHorizontalGridLines"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;showHorizontalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#getShowHorizontalGridLines</tag>
<tag name="@see">#setShowHorizontalGridLines</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.showVerticalGridLines -->
<field name="showVerticalGridLines"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;showVerticalGridLines&lt;/code&gt; property.&#xa; Indicates whether the horizontal grid lines are&#xa; visible for this chart.
</description>
<tag name="@see">#getShowVerticalGridLines</tag>
<tag name="@see">#setShowVerticalGridLines</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.gridStroke -->
<field name="gridStroke"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;gridStroke&lt;/code&gt; property.&#xa; The stroke used to draw the grid.
</description>
<tag name="@see">#getGridStroke</tag>
<tag name="@see">#setGridStroke</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.gridPen -->
<field name="gridPen"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;gridPen&lt;/code&gt; property.&#xa; The pen used to draw the grid.
</description>
<tag name="@see">#getGridPen</tag>
<tag name="@see">#setGridPen</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.showPanControl -->
<field name="showPanControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;showPanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s showPanRequested event.
</description>
<tag name="@see">#showPanControl()</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.hidePanControl -->
<field name="hidePanControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;hidePanControl&lt;/code&gt; action.&#xa; this action responds to a BChartPane&#x27;s hidePanRequested event.
</description>
<tag name="@see">#hidePanControl()</tag>
</field>

<!-- javax.baja.chart.BChartCanvas.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
