<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="chart" runtimeProfile="wb" qualifiedName="javax.baja.chart.ChartModel" name="ChartModel" packageName="javax.baja.chart" public="true" abstract="true">
<description>
ChartModel is the container for the series in a chart.  The collection&#xa; of series is the data model.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">11 Jun 2004</tag>
<tag name="@version">$Revision: 10$ $Date: 2/11/11 4:37:50 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.chart.BChart$ChartSupport"/>
</extends>
<!-- javax.baja.chart.ChartModel() -->
<constructor name="ChartModel" public="true">
<description/>
</constructor>

<!-- javax.baja.chart.ChartModel.getSpecCount() -->
<method name="getSpecCount"  public="true" abstract="true">
<description>
Get the number of specs in this model.  The ordering of specs&#xa; in the model controls the z-order during rendering.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.getSpec(int) -->
<method name="getSpec"  public="true" abstract="true">
<description>
Get the BChart at the specified index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.chart.ChartSpec"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.getAllSeries() -->
<method name="getAllSeries"  public="true">
<description>
Get all of the series in this model.
</description>
<return>
<type class="javax.baja.chart.Series" dimension="1"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.fireSeriesModified(javax.baja.chart.Series) -->
<method name="fireSeriesModified"  public="true">
<description>
Receive notification that a series has changed.
</description>
<parameter name="series">
<type class="javax.baja.chart.Series"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.fireSpecModified(javax.baja.chart.ChartSpec) -->
<method name="fireSpecModified"  public="true">
<description>
Fire a specModified event to the chart.
</description>
<parameter name="spec">
<type class="javax.baja.chart.ChartSpec"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.fireSpecAdded(javax.baja.chart.ChartSpec) -->
<method name="fireSpecAdded"  public="true">
<description>
Fire a specAdded event to the chart.
</description>
<parameter name="spec">
<type class="javax.baja.chart.ChartSpec"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.fireSpecRemoved(javax.baja.chart.ChartSpec) -->
<method name="fireSpecRemoved"  public="true">
<description>
Fire a specRemoved event to the chart.
</description>
<parameter name="spec">
<type class="javax.baja.chart.ChartSpec"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.fireModelModified() -->
<method name="fireModelModified"  public="true">
<description>
Fire a generic modelModified event.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.getSpecForSeries(javax.baja.chart.Series) -->
<method name="getSpecForSeries"  public="true">
<description>
Get the chart spec for the specified series.
</description>
<parameter name="series">
<type class="javax.baja.chart.Series"/>
</parameter>
<return>
<type class="javax.baja.chart.ChartSpec"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.getAxes(javax.baja.chart.BAxisDimension) -->
<method name="getAxes"  public="true">
<description>
Get a list of all of the axes for the specified dimension.
</description>
<parameter name="dim">
<type class="javax.baja.chart.BAxisDimension"/>
</parameter>
<return>
<type class="javax.baja.chart.BAxis" dimension="1"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.findAxis(javax.baja.chart.BAxis) -->
<method name="findAxis"  public="true">
<description>
Find an axis in this model that is equivalent to the specified axis.&#xa; If no match is found, null is returned.
</description>
<parameter name="axis">
<type class="javax.baja.chart.BAxis"/>
</parameter>
<return>
<type class="javax.baja.chart.BAxis"/>
</return>
</method>

<!-- javax.baja.chart.ChartModel.export() -->
<method name="export"  public="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;unchecked&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description/>
<return>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.chart.ChartModel.log -->
<field name="log"  public="true" static="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
