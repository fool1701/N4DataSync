<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="chart" runtimeProfile="wb" qualifiedName="javax.baja.chart.BDiscreteAxis" name="BDiscreteAxis" packageName="javax.baja.chart" public="true">
<description>
A BDiscreteAxis is an axis for a set of discrete values.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">16 Jul 2004</tag>
<tag name="@version">$Revision: 12$ $Date: 2/15/07 4:07:25 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.chart.BAxis"/>
</extends>
<!-- javax.baja.chart.BDiscreteAxis() -->
<constructor name="BDiscreteAxis" public="true">
<description>
Default constructor.
</description>
</constructor>

<!-- javax.baja.chart.BDiscreteAxis.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.getValueType() -->
<method name="getValueType"  public="true">
<description>
A DiscreteAxis translates baja:BValue values to&#xa; display space.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.setRange(java.lang.Object[]) -->
<method name="setRange"  public="true">
<description>
Set the set of values that will be represented on this axis.&#xa; The values are assumed to be in the order that they should&#xa; appear on the axis.
</description>
<parameter name="range">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.getAxisMin() -->
<method name="getAxisMin"  public="true">
<description>
Get the minimum axis value.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.setAxisMin(java.lang.Object) -->
<method name="setAxisMin"  public="true">
<description>
Set the minimum axis value.
</description>
<parameter name="newMin">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.getAxisMax() -->
<method name="getAxisMax"  public="true">
<description>
Get the maximum axis value.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.setAxisMax(java.lang.Object) -->
<method name="setAxisMax"  public="true">
<description>
Set the maximum axis value.
</description>
<parameter name="newMax">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.getTickValues() -->
<method name="getTickValues"  public="true">
<description>
Get the values that correspond to ticks on the axis.
</description>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.valueToString(java.lang.Object) -->
<method name="valueToString"  public="true">
<description>
Get a string representation of the specified value.
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.doLayout() -->
<method name="doLayout"  public="true">
<description>
Layout the axis.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.toDisplaySpace(java.lang.Object) -->
<method name="toDisplaySpace"  public="true">
<description>
Convert the specified value to a location on the axis.
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.fromDisplaySpace(double) -->
<method name="fromDisplaySpace"  public="true">
<description>
Convert the specified location on the axis to a value.
</description>
<parameter name="loc">
<type class="double"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.isZoomEnabled() -->
<method name="isZoomEnabled"  public="true">
<description>
Is zoom enabled for this axis?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.extractRange(javax.baja.chart.Series, int) -->
<method name="extractRange"  public="true" static="true">
<description>
Extract the range of values from the specified series column.&#xa; The result is the set of all unique values in the specified column.
</description>
<parameter name="series">
<type class="javax.baja.chart.Series"/>
</parameter>
<parameter name="column">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.extractEnumRange(javax.baja.sys.BEnumRange, javax.baja.chart.Series, int) -->
<method name="extractEnumRange"  public="true" static="true">
<description>
Extract the range by merging the values defined in the enum range and the&#xa; column values.
</description>
<parameter name="range">
<type class="javax.baja.sys.BEnumRange"/>
</parameter>
<parameter name="series">
<type class="javax.baja.chart.Series"/>
</parameter>
<parameter name="column">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.merge(javax.baja.chart.BDiscreteAxis) -->
<method name="merge"  public="true">
<description>
This method merges the given discrete axis with this axis &#xa; containing the range values of both axes.
</description>
<parameter name="arg">
<type class="javax.baja.chart.BDiscreteAxis"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.BDiscreteAxis.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
