<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="chart" runtimeProfile="wb" qualifiedName="javax.baja.chart.TableSeries" name="TableSeries" packageName="javax.baja.chart" public="true">
<description>
TableSeries exposes a BITable as a series.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">21 Jul 2004</tag>
<tag name="@version">$Revision: 19$ $Date: 2/11/11 4:37:50 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.chart.Series"/>
</extends>
<!-- javax.baja.chart.TableSeries(java.lang.String, javax.baja.collection.BITable&lt;?&gt;, java.lang.String, java.lang.String) -->
<constructor name="TableSeries" public="true">
<parameter name="seriesName">
<type class="java.lang.String"/>
<description>
The name of the series.  If seriesName is null, the value of&#xa;   table.getTableFacets().gets(&#x22;tableName&#x22;, &#x22;&#x22;) is used.
</description>
</parameter>
<parameter name="backingTable">
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
<description>
The table that backs the series.
</description>
</parameter>
<parameter name="column0">
<type class="java.lang.String"/>
<description>
The name of the table column that&#xa;   maps to series column 0.
</description>
</parameter>
<parameter name="column1">
<type class="java.lang.String"/>
<description>
The name of the table column that&#xa;   maps to series column 1.
</description>
</parameter>
<description>
Create a series for the specified table.
</description>
</constructor>

<!-- javax.baja.chart.TableSeries(java.lang.String, javax.baja.collection.BITable&lt;?&gt;, javax.baja.chart.binding.BColumnIdentifier, javax.baja.chart.binding.BColumnIdentifier) -->
<constructor name="TableSeries" public="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;unchecked&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<parameter name="seriesName">
<type class="java.lang.String"/>
<description>
The name of the series.  If seriesName is null, the value of&#xa;   table.getTableFacets().gets(&#x22;tableName&#x22;, &#x22;&#x22;) is used.
</description>
</parameter>
<parameter name="backingTable">
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
<description>
The table that backs the series.
</description>
</parameter>
<parameter name="id0">
<type class="javax.baja.chart.binding.BColumnIdentifier"/>
<description>
The identifier of the column that&#xa;   maps to series column 0.
</description>
</parameter>
<parameter name="id1">
<type class="javax.baja.chart.binding.BColumnIdentifier"/>
<description>
The identifier of the column that&#xa;   maps to series column 1.
</description>
</parameter>
<description>
Create a series for the specified table.
</description>
</constructor>

<!-- javax.baja.chart.TableSeries(java.lang.String, javax.baja.collection.BITable&lt;?&gt;, javax.baja.chart.binding.BColumnIdentifier, javax.baja.chart.binding.BColumnIdentifier, javax.baja.gx.BBrush, javax.baja.gx.BPen) -->
<constructor name="TableSeries" public="true">
<parameter name="seriesName">
<type class="java.lang.String"/>
<description>
The name of the series.  If seriesName is null, the value of&#xa;   table.getTableFacets().gets(&#x22;tableName&#x22;, &#x22;&#x22;) is used.
</description>
</parameter>
<parameter name="table">
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
<description>
The table that backs the series.
</description>
</parameter>
<parameter name="id0">
<type class="javax.baja.chart.binding.BColumnIdentifier"/>
<description>
The identifier of the column that&#xa;   maps to series column 0.
</description>
</parameter>
<parameter name="id1">
<type class="javax.baja.chart.binding.BColumnIdentifier"/>
<description>
The identifier of the column that&#xa;   maps to series column 1.
</description>
</parameter>
<parameter name="brush">
<type class="javax.baja.gx.BBrush"/>
<description>
The brush used to draw the series.
</description>
</parameter>
<parameter name="pen">
<type class="javax.baja.gx.BPen"/>
<description>
The pen used to draw the series.
</description>
</parameter>
<description>
Create a series for the specified table.
</description>
</constructor>

<!-- javax.baja.chart.TableSeries.getName() -->
<method name="getName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
The series name is the table name.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getRowCount() -->
<method name="getRowCount"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the row count.  This is the number of rows in the table.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getColumnName(int) -->
<method name="getColumnName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the name of the specified column.
</description>
<parameter name="index">
<type class="int"/>
<description>
The series column index.
</description>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getColumnDisplayName(int) -->
<method name="getColumnDisplayName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getColumnType(int) -->
<method name="getColumnType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getColumnFacets(int) -->
<method name="getColumnFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the facets for the specified column.
</description>
<parameter name="index">
<type class="int"/>
<description>
The series column index.
</description>
</parameter>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getValue(int, int) -->
<method name="getValue"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the value at the specified row and column.
</description>
<parameter name="row">
<type class="int"/>
<description>
The series row index.
</description>
</parameter>
<parameter name="column">
<type class="int"/>
<description>
The series column index.
</description>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getTrendFlags(int) -->
<method name="getTrendFlags"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the trend flags for the specified row.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getMin(int) -->
<method name="getMin"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the minimum value in the specified series column.
</description>
<parameter name="column">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getMax(int) -->
<method name="getMax"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the maximum value in the specified series column.
</description>
<parameter name="column">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.shouldInterpolateTail() -->
<method name="shouldInterpolateTail"  public="true">
<description>
Get indicator for this table series that indicates if the tail interpolation&#xa; should be displayed.
</description>
<return>
<type class="boolean"/>
<description/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.setInterpolateTail(boolean) -->
<method name="setInterpolateTail"  public="true">
<description>
Set the Interpolate Tail indicator.
</description>
<parameter name="value">
<type class="boolean"/>
<description>
true if the interpolate tail should be displayed.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.chart.TableSeries.getContext() -->
<method name="getContext"  public="true">
<description>
Get the context for the backing table (or table if no backing table was&#xa; specified)
</description>
<return>
<type class="javax.baja.sys.Context"/>
<description>
context or null
</description>
</return>
</method>

</class>
</bajadoc>
