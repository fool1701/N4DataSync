<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="export" runtimeProfile="ux" qualifiedName="javax.baja.export.ux.BIJavaScriptExportDestination" name="BIJavaScriptExportDestination" packageName="javax.baja.export.ux" public="true" interface="true" abstract="true" category="interface">
<description>
To declare an export destination that works with the JavaScript export&#xa; framework, implement this interface. Your JavaScript module should contain&#xa; a class that implements the &lt;code&gt;ExportDestinationType&lt;/code&gt; interface.&#xa; &lt;p&gt;&#xa; Since export destination types are essentially singletons, there is no need&#xa; to register your class as an agent on any other Type.&#xa; &lt;p&gt;&#xa; API Status: **Development**
</description>
<tag name="@since">Niagara 4.8</tag>
<tag name="@see">&lt;a href=&#x22;module://docDeveloper/doc/jsdoc/export-ux/module-nmodule_export_rc_ExportDestinationType.html&#x22;&gt;ExportDestinationType&lt;/a&gt;</tag>
<implements>
<type class="javax.baja.web.js.BIJavaScript"/>
</implements>
<!-- javax.baja.export.ux.BIJavaScriptExportDestination.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
