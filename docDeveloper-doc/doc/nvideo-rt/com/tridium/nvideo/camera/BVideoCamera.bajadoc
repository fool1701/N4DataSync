<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nvideo" runtimeProfile="rt" qualifiedName="com.tridium.nvideo.camera.BVideoCamera" name="BVideoCamera" packageName="com.tridium.nvideo.camera" public="true" abstract="true">
<description>
This is the base class for sophisticated video cameras in the Niagara AX framework. A&#xa; sophisticated camera is one that supports pan, tilt, zoom, move to preset, iris control, and/or&#xa; focus control.
</description>
<tag name="@author">lperkins (Original ddf code)</tag>
<tag name="@author">Robert Adams (rework for ndriver)</tag>
<tag name="@creation">25 Jan 2012</tag>
<extends>
<type class="com.tridium.nvideo.camera.BSimpleVideoCamera"/>
</extends>
<implements>
<type class="com.tridium.videoDriver.camera.BIVideoPtzCamera"/>
</implements>
<implements>
<type class="com.tridium.videoDriver.camera.control.BIVideoFocusControl"/>
</implements>
<implements>
<type class="com.tridium.videoDriver.camera.control.BIVideoIrisControl"/>
</implements>
<implements>
<type class="com.tridium.videoDriver.camera.control.BIVideoStorePresetControl"/>
</implements>
<implements>
<type class="com.tridium.videoDriver.videoStream.BIVideoSource"/>
</implements>
<property name="ptzSupport" flags="">
<type class="com.tridium.nvideo.datatypes.BVideoCameraInfo"/>
<description>
Slot for the &lt;code&gt;ptzSupport&lt;/code&gt; property.
</description>
<tag name="@see">#getPtzSupport</tag>
<tag name="@see">#setPtzSupport</tag>
</property>

<property name="controlTiming" flags="">
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlTimings"/>
<description>
Slot for the &lt;code&gt;controlTiming&lt;/code&gt; property.&#xa; Various watchdog and interval time-outs for fine-tuning camera&#xa; control.
</description>
<tag name="@see">#getControlTiming</tag>
<tag name="@see">#setControlTiming</tag>
</property>

<property name="videoPreferences" flags="">
<type class="com.tridium.nvideo.camera.BVideoSourcePreferences"/>
<description>
Slot for the &lt;code&gt;videoPreferences&lt;/code&gt; property.
</description>
<tag name="@see">#getVideoPreferences</tag>
<tag name="@see">#setVideoPreferences</tag>
</property>

<action name="move" flags="ah">
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;move&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a joystick button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#move(BVideoPanTiltEnum parameter)</tag>
</action>

<action name="zoom" flags="ah">
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoZoomEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;zoom&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a zoom button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#zoom(BVideoZoomEnum parameter)</tag>
</action>

<action name="moveToPreset" flags="ah">
<parameter name="parameter">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;moveToPreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to move the camera to a preset&#xa; location. The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#moveToPreset(BValue parameter)</tag>
</action>

<action name="storePreset" flags="ah">
<parameter name="parameter">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;storePreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to save the camera&#x27;s current position.&#xa; The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#storePreset(BValue parameter)</tag>
</action>

<action name="makeActive" flags="ah">
<parameter name="parameter">
<type class="com.tridium.nvideo.display.BVideoDisplayChooser"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;makeActive&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to assign the camera to one of&#xa; the video displays that are modeled in the station under&#xa; the BDisplayDeviceExt.
</description>
<tag name="@see">#makeActive(BVideoDisplayChooser parameter)</tag>
</action>

<action name="irisControl" flags="ah">
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoIrisEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;irisControl&lt;/code&gt; action.&#xa; Declares the &#x27;irisControl&#x27; action. This is invoked to perform&#xa; perform station-side adjustment to the iris (aperture) of&#xa; the camera.
</description>
<tag name="@see">#irisControl(BVideoIrisEnum parameter)</tag>
</action>

<action name="focusControl" flags="ah">
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoFocusEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;focusControl&lt;/code&gt; action.&#xa; Declares the &#x27;focusControl&#x27; action. This is invoked to perform&#xa; station-side communication to control the focus of the camera.
</description>
<tag name="@see">#focusControl(BVideoFocusEnum parameter)</tag>
</action>

<action name="reevaluate" flags="ah">
<parameter name="parameter">
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlHelper"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;reevaluate&lt;/code&gt; action.&#xa; Action for clock schedule used by BCameraControlHelper
</description>
<tag name="@see">#reevaluate(BCameraControlHelper parameter)</tag>
</action>

<action name="sendToDisplay" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;sendToDisplay&lt;/code&gt; action.
</description>
<tag name="@see">#sendToDisplay()</tag>
</action>

<!-- com.tridium.nvideo.camera.BVideoCamera() -->
<constructor name="BVideoCamera" public="true">
<description/>
</constructor>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPtzSupport() -->
<method name="getPtzSupport"  public="true">
<description>
Get the &lt;code&gt;ptzSupport&lt;/code&gt; property.
</description>
<tag name="@see">#ptzSupport</tag>
<return>
<type class="com.tridium.nvideo.datatypes.BVideoCameraInfo"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.setPtzSupport(com.tridium.nvideo.datatypes.BVideoCameraInfo) -->
<method name="setPtzSupport"  public="true">
<description>
Set the &lt;code&gt;ptzSupport&lt;/code&gt; property.
</description>
<tag name="@see">#ptzSupport</tag>
<parameter name="v">
<type class="com.tridium.nvideo.datatypes.BVideoCameraInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getControlTiming() -->
<method name="getControlTiming"  public="true">
<description>
Get the &lt;code&gt;controlTiming&lt;/code&gt; property.&#xa; Various watchdog and interval time-outs for fine-tuning camera&#xa; control.
</description>
<tag name="@see">#controlTiming</tag>
<return>
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlTimings"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.setControlTiming(com.tridium.nvideo.camera.controlHelper.BCameraControlTimings) -->
<method name="setControlTiming"  public="true">
<description>
Set the &lt;code&gt;controlTiming&lt;/code&gt; property.&#xa; Various watchdog and interval time-outs for fine-tuning camera&#xa; control.
</description>
<tag name="@see">#controlTiming</tag>
<parameter name="v">
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlTimings"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getVideoPreferences() -->
<method name="getVideoPreferences"  public="true">
<description>
Get the &lt;code&gt;videoPreferences&lt;/code&gt; property.
</description>
<tag name="@see">#videoPreferences</tag>
<return>
<type class="com.tridium.nvideo.camera.BVideoSourcePreferences"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.setVideoPreferences(com.tridium.nvideo.camera.BVideoSourcePreferences) -->
<method name="setVideoPreferences"  public="true">
<description>
Set the &lt;code&gt;videoPreferences&lt;/code&gt; property.
</description>
<tag name="@see">#videoPreferences</tag>
<parameter name="v">
<type class="com.tridium.nvideo.camera.BVideoSourcePreferences"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.move(com.tridium.videoDriver.enums.BVideoPanTiltEnum) -->
<method name="move"  public="true">
<description>
Invoke the &lt;code&gt;move&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a joystick button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#move</tag>
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.zoom(com.tridium.videoDriver.enums.BVideoZoomEnum) -->
<method name="zoom"  public="true">
<description>
Invoke the &lt;code&gt;zoom&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a zoom button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#zoom</tag>
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoZoomEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.moveToPreset(javax.baja.sys.BValue) -->
<method name="moveToPreset"  public="true">
<description>
Invoke the &lt;code&gt;moveToPreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to move the camera to a preset&#xa; location. The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#moveToPreset</tag>
<parameter name="parameter">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.storePreset(javax.baja.sys.BValue) -->
<method name="storePreset"  public="true">
<description>
Invoke the &lt;code&gt;storePreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to save the camera&#x27;s current position.&#xa; The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#storePreset</tag>
<parameter name="parameter">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.makeActive(com.tridium.nvideo.display.BVideoDisplayChooser) -->
<method name="makeActive"  public="true">
<description>
Invoke the &lt;code&gt;makeActive&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to assign the camera to one of&#xa; the video displays that are modeled in the station under&#xa; the BDisplayDeviceExt.
</description>
<tag name="@see">#makeActive</tag>
<parameter name="parameter">
<type class="com.tridium.nvideo.display.BVideoDisplayChooser"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.irisControl(com.tridium.videoDriver.enums.BVideoIrisEnum) -->
<method name="irisControl"  public="true">
<description>
Invoke the &lt;code&gt;irisControl&lt;/code&gt; action.&#xa; Declares the &#x27;irisControl&#x27; action. This is invoked to perform&#xa; perform station-side adjustment to the iris (aperture) of&#xa; the camera.
</description>
<tag name="@see">#irisControl</tag>
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoIrisEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.focusControl(com.tridium.videoDriver.enums.BVideoFocusEnum) -->
<method name="focusControl"  public="true">
<description>
Invoke the &lt;code&gt;focusControl&lt;/code&gt; action.&#xa; Declares the &#x27;focusControl&#x27; action. This is invoked to perform&#xa; station-side communication to control the focus of the camera.
</description>
<tag name="@see">#focusControl</tag>
<parameter name="parameter">
<type class="com.tridium.videoDriver.enums.BVideoFocusEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.reevaluate(com.tridium.nvideo.camera.controlHelper.BCameraControlHelper) -->
<method name="reevaluate"  public="true">
<description>
Invoke the &lt;code&gt;reevaluate&lt;/code&gt; action.&#xa; Action for clock schedule used by BCameraControlHelper
</description>
<tag name="@see">#reevaluate</tag>
<parameter name="parameter">
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlHelper"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.sendToDisplay() -->
<method name="sendToDisplay"  public="true">
<description>
Invoke the &lt;code&gt;sendToDisplay&lt;/code&gt; action.
</description>
<tag name="@see">#sendToDisplay</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<description>
Add live video and playback views to agent list. &lt;p&gt;Subclasses may&#xa; control this feature by overriding &lt;code&gt;addLiveVideoView()&lt;/code&gt; &#xa; &lt;code&gt;getCameraViewTypeSpec()&lt;/code&gt;, &lt;code&gt;addPlaybackView()&lt;/code&gt;,&#xa; &lt;code&gt;getPlaybackViewTypeSpec()&lt;/code&gt;, or &lt;code&gt;areCameraViewsTopMost()&lt;/code&gt;.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.addLiveVideoView() -->
<method name="addLiveVideoView"  protected="true">
<description>
Override point to control adding a live vides view to agent list.
</description>
<return>
<type class="boolean"/>
<description>
true
</description>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.addPlaybackView() -->
<method name="addPlaybackView"  protected="true">
<description>
Override point to control adding a playback view to agent list.
</description>
<return>
<type class="boolean"/>
<description>
true
</description>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getCameraViewTypeSpec() -->
<method name="getCameraViewTypeSpec"  protected="true">
<description>
Override point to set the default type of camera view&#xa; to add to the camera agent list.
</description>
<return>
<type class="java.lang.String"/>
<description>
&#x22;videoDriver:LiveVideo&#x22;
</description>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPlaybackViewTypeSpec() -->
<method name="getPlaybackViewTypeSpec"  protected="true">
<description>
Override point to set the default type of playback view&#xa; to add to the camera agent list.
</description>
<return>
<type class="java.lang.String"/>
<description>
&#x22;videoDriver:VideoPlaybackView&#x22;
</description>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.areCameraViewsTopMost() -->
<method name="areCameraViewsTopMost"  protected="true">
<description>
Controls getAgents() placement of camera views at top of agent list.&#xa; Default returns true. Override to disable this function.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getMoveToPresetActionDefault() -->
<method name="getMoveToPresetActionDefault"  protected="true">
<description>
Override point to specify the default value that an end user will see when&#xa; he or she invokes the &#x27;moveToPreset&#x27; action.&#xa; &lt;p&gt;&#xa; The default implementation returns a BString with a &#x22;-&#x22; dash in it.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getStorePresetActionDefault() -->
<method name="getStorePresetActionDefault"  protected="true">
<description>
Override point to specify the default value that an end user will see when&#xa; invoking the &#x27;storePreset&#x27; action.&#xa; &lt;p&gt;&#xa; The default implementation returns a BString with a &#x22;-&#x22; dash in it.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getCameraInfo() -->
<method name="getCameraInfo"  public="true">
<description>
Gets the BVideoCameraInfo for the video camera, which&#xa; by default is stored in the &#x27;ptzSupport&#x27; property.
</description>
<return>
<type class="com.tridium.nvideo.datatypes.BVideoCameraInfo"/>
<description>
the BVideoCameraInfo for the video camera.
</description>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getVideoSystem() -->
<method name="getVideoSystem"  public="true">
<description>
Gets the BIVideoDeviceSystem component for this camera, which&#xa; is usually a DVR that owns this camera. It could also be null&#xa; if this camera is a stand-alone camera.
</description>
<return>
<type class="com.tridium.videoDriver.BIVideoDeviceSystem"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doReevaluate(com.tridium.nvideo.camera.controlHelper.BCameraControlHelper) -->
<method name="doReevaluate"  public="true">
<description>
Implementaion of action for clock schedule used by BCameraControlHelper
</description>
<parameter name="target">
<type class="com.tridium.nvideo.camera.controlHelper.BCameraControlHelper"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doMove(com.tridium.videoDriver.enums.BVideoPanTiltEnum) -->
<method name="doMove"  public="true">
<description>
This is the default implementation of the &#x27;move&#x27; action.&#xa; &#xa; This arranges for the &#x27;onMove&#x27; method to be called periodically&#xa; from the network&#x27;s background processor thread until the &#x27;move&#x27;&#xa; action is invoked again with BVideoPanTiltEnum.none as the action&#xa; argument.&#xa; &#xa; The &#x27;onMove&#x27; method will be called on the &#x27;Move Interval&#x27; defined&#xa; on the &#x27;Control Timing&#x27; property. The &#x27;onMove&#x27; method will continue&#xa; to be called on this interval until either:&#xa; &lt;p&gt;&#xa; 1.) The &#x27;move&#x27; action is invoked with BVideoPanTiltEnum.none as the&#xa;     argument.&lt;p&gt;&#xa; 2.) The &#x27;Move Watchdog Timeout&#x27; elapses. The &#x27;Move Watchdog Timeout&#x27;&#xa;     is specified on the &#x27;Control Timings&#x27; property.&#xa; &lt;p&gt;
</description>
<parameter name="panTiltAction">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
<description>
- indicates how to move the camera (encapsulates&#xa; the direction and speed or &#x27;none&#x27; to stop movement).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doZoom(com.tridium.videoDriver.enums.BVideoZoomEnum) -->
<method name="doZoom"  public="true">
<description>
This is the default implementation of the &#x27;zoom&#x27; action.&#xa; &lt;p&gt;&#xa; This arranges for the &#x27;onZoom&#x27; method to be called periodically&#xa; from the network&#x27;s background processor thread until the &#x27;zoom&#x27;&#xa; action is invoked again with BVideoZoomtEnum.none as the action&#xa; argument.&#xa; &lt;p&gt;&#xa; The &#x27;onZoom&#x27; method will be called on the &#x27;Zoom Interval&#x27; defined&#xa; on the &#x27;Control Timing&#x27; property. The &#x27;onZoom&#x27; method will continue&#xa; to be called on this interval until either:&#xa; &lt;p&gt;&#xa; 1.) The &#x27;zoom&#x27; action is invoked with BVideoZoomtEnum.none as the&#xa;     argument.&lt;p&gt;&#xa; 2.) The &#x27;Zoom Watchdog Timeout&#x27; elapses. The &#x27;Zoom Watchdog Timeout&#x27;&#xa;     is specified on the &#x27;Control Timings&#x27; property.&#xa;  &lt;p&gt;
</description>
<parameter name="zoomAction">
<type class="com.tridium.videoDriver.enums.BVideoZoomEnum"/>
<description>
- indicates how to zoom the camera (encapsulates&#xa; the direction (in/out) and speed(fast/medium/slow), or &#x27;none&#x27; to stop zooming).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doMoveToPreset(javax.baja.sys.BValue) -->
<method name="doMoveToPreset"  public="true">
<description>
Override point for subclasses to command camera to moveToPreset.&#xa; &lt;p&gt;
</description>
<parameter name="presetPosition">
<type class="javax.baja.sys.BValue"/>
<description>
-&#xa;          specifies the preset position to move the camera to. Please note that this is a&#xa;          generic BValue. This allows driver&#x27;s to define the type of the &#x27;moveToPreset&#x27;&#xa;          parameter in whatever fashion makes the most sense to the driver. When this method is&#xa;          called, it will automatically be passed a BValue of the appropriate type for the&#xa;          driver (this happens automatically if the driver developer either redefines the&#xa;          &#x27;moveToPreset&#x27; action with a default action argument that is appropriate to the driver&#xa;          and/or if the driver developer overrides the &#x27;getMoveToPresetActionDefault&#x27; method).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doStorePreset(javax.baja.sys.BValue) -->
<method name="doStorePreset"  public="true">
<description>
Override point for subclasses to command camera to storePreset.&#xa; &lt;p&gt;
</description>
<parameter name="presetPosition">
<type class="javax.baja.sys.BValue"/>
<description>
-&#xa;          specifies a preset position for the current camera position to be saved as. Please&#xa;          note that this is a generic BValue. This allows driver&#x27;s to define the type of the&#xa;          &#x27;moveToPreset&#x27; parameter in whatever fashion makes the most sense to the driver. When&#xa;          this method is called, it will automatically be passed a BValue of the appropriate&#xa;          type for the driver (this happens automatically if the driver developer either&#xa;          redefines the &#x27;moveToPreset&#x27; action with a default action argument that is appropriate&#xa;          to the driver and/or if the driver developer overrides the&#xa;          &#x27;getMoveToPresetActionDefault&#x27; method).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doMakeActive(com.tridium.nvideo.display.BVideoDisplayChooser) -->
<method name="doMakeActive"  public="true">
<description>
Implements the &#x27;makeActive&#x27; action. Resolves the given BOrd to a &#xa; BVideoDisplay and sets the &#x27;currentCamera&#x27; property on the video&#xa; display to a copy of this camera&#x27;s &#x27;deviceId&#x27;.&#xa;&lt;p&gt;
</description>
<parameter name="videoDisplayChooser">
<type class="com.tridium.nvideo.display.BVideoDisplayChooser"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doIrisControl(com.tridium.videoDriver.enums.BVideoIrisEnum) -->
<method name="doIrisControl"  public="true">
<description>
This is the default implementation of the &#x27;irisControl&#x27; action.&#xa; &lt;p&gt;&#xa; This arranges for the &#x27;onIrisControl&#x27; method to be called periodically from the network&#x27;s&#xa; background processor thread until the &#x27;irisControl&#x27; action is invoked again with&#xa; BVideoIrisEnum.none as the action argument.&#xa; &lt;p&gt;&#xa; The &#x27;onIrisControl&#x27; method will be called on the &#x27;Iris Interval&#x27; defined on the &#x27;Control&#xa; Timing&#x27; property. The &#x27;onIrisControl&#x27; method will continue to be called on this interval until&#xa; either:&#xa; &lt;p&gt;&#xa; 1.) The &#x27;irisControl&#x27; action is invoked with BVideoIrisEnum.none as the argument.&#xa; &lt;p&gt;&#xa; 2.) The &#x27;Iris Watchdog Timeout&#x27; elapses. The &#x27;Iris Watchdog Timeout&#x27; is specified on the&#xa; &#x27;Control Timings&#x27; property.&#xa; &lt;p&gt;
</description>
<parameter name="irisEnum">
<type class="com.tridium.videoDriver.enums.BVideoIrisEnum"/>
<description>
-&#xa;          indicates how to adjust the iris (brighten/dim/none).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doFocusControl(com.tridium.videoDriver.enums.BVideoFocusEnum) -->
<method name="doFocusControl"  public="true">
<description>
This is the default implementation of the &#x27;focusControl&#x27; action.&#xa; &lt;p&gt;&#xa; This arranges for the &#x27;onFocusControl&#x27; method to be called periodically from the network&#x27;s&#xa; background processor thread until the &#x27;focusControl&#x27; action is invoked again with&#xa; BVideoFocusEnum.none as the action argument.&#xa; &lt;p&gt;&#xa; The &#x27;onFocusControl&#x27; method will be called on the &#x27;Focus Interval&#x27; defined on the &#x27;Control&#xa; Timing&#x27; property. The &#x27;onFocusControl&#x27; method will continue to be called on this interval until&#xa; either:&#xa; &lt;p&gt;&#xa; 1.) The &#x27;focusControl&#x27; action is invoked with BVideoFocusEnum.none as the argument.&#xa; &lt;p&gt;&#xa; 2.) The &#x27;Focus Watchdog Timeout&#x27; elapses. The &#x27;Focus Watchdog Timeout&#x27; is specified on the&#xa; &#x27;Control Timings&#x27; property.&#xa; &lt;p&gt;
</description>
<parameter name="focusEnum">
<type class="com.tridium.videoDriver.enums.BVideoFocusEnum"/>
<description>
-&#xa;          indicates how to adjust the focus (in/out/none).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.doSendToDisplay() -->
<method name="doSendToDisplay"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getCameraDescription() -->
<method name="getCameraDescription"  public="true">
<description>
Gets the description of the video camera to display on the dialog&#xa; that appears with the Video Camera Widget on a Px Page.&lt;p&gt; &#xa; Default returns &lt;code&gt;getVideoDeviceId().getDescription()&lt;/code&gt;
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getMoveToPresetAction() -->
<method name="getMoveToPresetAction"  public="true" abstract="true">
<description>
Gets the Action slot for the &#x27;moveToPreset&#x27; action on the BIVideoCamera or other entity that&#xa; implements this interface. This is declared as abstract instead of returning the &#x27;moveToPreset&#x27;&#xa; action because the overriding class will likely need to override the &#x27;moveToPresetAction&#x27;&#xa; anyway. If so then the overriding class should return its overridden &#x27;moveToPreset&#x27; action.&#xa; Otherwise, it should return the &#x27;moveToPreset&#x27; action for this class.
</description>
<return>
<type class="javax.baja.sys.Action"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getStorePresetAction() -->
<method name="getStorePresetAction"  public="true" abstract="true">
<description>
Gets the Action slot for the &#x27;storePreset&#x27; action on the BIVideoCamera or other entity that&#xa; implements this interface. This is declared as abstract instead of returning the &#x27;storePreset&#x27;&#xa; action because the overriding class will likely need to override the &#x27;storePresetAction&#x27;&#xa; anyway. If so then the overriding class should return its overridden &#x27;storePreset&#x27; action.&#xa; Otherwise, it should return the &#x27;storePreset&#x27; action for this class.
</description>
<return>
<type class="javax.baja.sys.Action"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getActionParameterDefault(javax.baja.sys.Action) -->
<method name="getActionParameterDefault"  public="true">
<description>
Returns a BVideoDisplayChooser for the &#x27;moveToPreset&#x27; action. The BVideoDisplayChooser&#xa; has its &#x27;Video System Ord&#x27; preset to the slot path ord of the camera&#x27;s video system. This allows&#xa; its field editor to display the list of available displays.&#xa; &lt;p&gt;&#xa; Or, for the &#x27;moveToPreset&#x27; action, this calls the &#x27;getMoveToPresetActionDefault&#x27; descendant&#xa; override method to get the an appropriate, default &#x27;moveToPreset&#x27; parameter for the driver.
</description>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.onFocusControl(com.tridium.videoDriver.enums.BVideoFocusEnum) -->
<method name="onFocusControl"  public="true">
<description>
This method is called on the background processor thread as necessary to implement &#xa; the &#x27;focusControl&#x27; action. See JavaDoc for further details.&#xa; &lt;p&gt;&#xa; Developers should override this method to produce the commanded focus.&#xa; &lt;p&gt;
</description>
<parameter name="focusEnum">
<type class="com.tridium.videoDriver.enums.BVideoFocusEnum"/>
<description>
-&#xa;          indicates how to adjust the focus (in/out/none).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.onIrisControl(com.tridium.videoDriver.enums.BVideoIrisEnum) -->
<method name="onIrisControl"  public="true">
<description>
Override point for subclasses to control cameras iris setting.&#xa; &lt;p&gt;&#xa; This method is called on the background processor thread as necessary to implement &#xa; the &#x27;irisControl&#x27; action. See JavaDoc for further details.&#xa; &lt;p&gt;
</description>
<parameter name="irisEnum">
<type class="com.tridium.videoDriver.enums.BVideoIrisEnum"/>
<description>
-&#xa;          indicates how to adjust the iris (brighten/dim/none).
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.onZoom(com.tridium.videoDriver.enums.BVideoZoomEnum) -->
<method name="onZoom"  public="true">
<description>
Override point for subclasses to control camera&#x27;s zoom.&#xa; &lt;p&gt;&#xa; This method is called on the background processor thread as necessary to implement &#xa; the &#x27;zoom&#x27; action. See JavaDoc for further details.&#xa; &lt;p&gt;
</description>
<parameter name="zoomAction">
<type class="com.tridium.videoDriver.enums.BVideoZoomEnum"/>
<description>
-&#xa;          information about the button that was pressed on the user-interface.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.onMove(com.tridium.videoDriver.enums.BVideoPanTiltEnum) -->
<method name="onMove"  public="true">
<description>
Override point for subclasses to command camera pan tilt motion.&#xa; &lt;p&gt;&#xa; This method is called on the background processor thread as necessary to implement &#xa; the &#x27;move&#x27; action. See JavaDoc for further details.&#xa; &lt;p&gt;
</description>
<parameter name="panTiltAction">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
<description>
-&#xa;          information about the button that was pressed on the user-interface.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.streamToDestination(com.tridium.videoDriver.videoStream.BPlaybackParams, com.tridium.videoDriver.videoStream.IVideoDestination) -->
<method name="streamToDestination"  public="true">
<description>
Override point for subclasses to initiate a video stream from the camera.
</description>
<parameter name="playbackParams">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</parameter>
<parameter name="videoDestination">
<type class="com.tridium.videoDriver.videoStream.IVideoDestination"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isMoveToPresetEnabled() -->
<method name="isMoveToPresetEnabled"  public="true">
<description>
Is camera, in its present physical state, able to move to a preset?&#xa;  Default returns &lt;code&gt;getCameraInfo().getSupportsMoveToPreset()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isPanTiltEnabled() -->
<method name="isPanTiltEnabled"  public="true">
<description>
Is camera, in its present physical state, able to pan or tilt? &#xa;  Default returns &lt;code&gt;getCameraInfo().getSupportsPanTilt()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isStorePresetEnabled() -->
<method name="isStorePresetEnabled"  public="true">
<description>
Is camera, in its present physical state, able to store its current position as a preset.&#xa;  Default returns &lt;code&gt;getCameraInfo().getSupportsStorePreset()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isZoomEnabled() -->
<method name="isZoomEnabled"  public="true">
<description>
Is camera, in its present physical state, able to zoom.&#xa;  Default returns &lt;code&gt;getCameraInfo().getSupportsZoom()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isFocusEnabled() -->
<method name="isFocusEnabled"  public="true">
<description>
Default returns &lt;code&gt;getCameraInfo().getSupportsFocus()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isIrisEnabled() -->
<method name="isIrisEnabled"  public="true">
<description>
Default returns &lt;code&gt;getCameraInfo().getSupportsIris()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.supportsPlaybackControl() -->
<method name="supportsPlaybackControl"  public="true">
<description>
Indicates video camera supports rewinding, fast forwarding, etc. &#xa; Default is true. Override if not supported to return false.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isTimestampPreferred() -->
<method name="isTimestampPreferred"  public="true">
<description>
Convience method to return &lt;code&gt;getVideoPreferences().getTimestampPreferred()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getInterframeTimeout() -->
<method name="getInterframeTimeout"  public="true">
<description>
This is the maximum amount of time permitted to elapse between frames&#xa; in a video stream before the stream is closed and re-established.
</description>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.recurseFoxVideoStreamPreferredToNet() -->
<method name="recurseFoxVideoStreamPreferredToNet"  protected="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.recurseFoxVideoStreamPreferredToDvr() -->
<method name="recurseFoxVideoStreamPreferredToDvr"  protected="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.isFoxVideoStreamPreferred() -->
<method name="isFoxVideoStreamPreferred"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getFoxVideoStreamSetting() -->
<method name="getFoxVideoStreamSetting"  public="true">
<description>
Indicates whether or not a fox stream is preferred for this video&#xa; source.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPreferredBackgroundColor() -->
<method name="getPreferredBackgroundColor"  public="true">
<description>
Indicates the background color for the blank edges around a video frame
</description>
<return>
<type class="javax.baja.gx.BColor"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPreferredAspectRatio() -->
<method name="getPreferredAspectRatio"  public="true">
<description>
Indicates the desired aspect ratio of the video frame
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoAspectRatioEnum"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPreferredFrameRate() -->
<method name="getPreferredFrameRate"  public="true">
<description>
Indicates the frame rate that is preferred for playback. The live video and&#xa; video playback views use this value for the video frame rate that is displayed&#xa; to the user.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoFrameRateEnum"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPreferredResolution() -->
<method name="getPreferredResolution"  public="true">
<description>
Indicates the resolution that is preferred for playback. The live video and&#xa; video playback views use this value for the video resolution that is displayed&#xa; to the user.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoResolutionEnum"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getPreferredCompression() -->
<method name="getPreferredCompression"  public="true">
<description>
Indicates the compression that is preferred for playback. The live video and&#xa; video playback views use this value for the video compression that is displayed&#xa; to the user.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoCompressionEnum"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- com.tridium.nvideo.camera.BVideoCamera.ptzSupport -->
<field name="ptzSupport"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;ptzSupport&lt;/code&gt; property.
</description>
<tag name="@see">#getPtzSupport</tag>
<tag name="@see">#setPtzSupport</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.controlTiming -->
<field name="controlTiming"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;controlTiming&lt;/code&gt; property.&#xa; Various watchdog and interval time-outs for fine-tuning camera&#xa; control.
</description>
<tag name="@see">#getControlTiming</tag>
<tag name="@see">#setControlTiming</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.videoPreferences -->
<field name="videoPreferences"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;videoPreferences&lt;/code&gt; property.
</description>
<tag name="@see">#getVideoPreferences</tag>
<tag name="@see">#setVideoPreferences</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.move -->
<field name="move"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;move&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a joystick button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#move(BVideoPanTiltEnum parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.zoom -->
<field name="zoom"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;zoom&lt;/code&gt; action.&#xa; This action is invoked from the graphical user interface&#xa; as the user presses or holds down a zoom button on the&#xa; pan-tilt-zoom view for Niagara AX.
</description>
<tag name="@see">#zoom(BVideoZoomEnum parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.moveToPreset -->
<field name="moveToPreset"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;moveToPreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to move the camera to a preset&#xa; location. The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#moveToPreset(BValue parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.storePreset -->
<field name="storePreset"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;storePreset&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to save the camera&#x27;s current position.&#xa; The mechanism for specifying the preset location&#xa; is driver-specific. Therefore, the parameter type for this&#xa; action is BValue.
</description>
<tag name="@see">#storePreset(BValue parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.makeActive -->
<field name="makeActive"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;makeActive&lt;/code&gt; action.&#xa; This action is invoked via programmatic link or from the&#xa; graphical user interface to assign the camera to one of&#xa; the video displays that are modeled in the station under&#xa; the BDisplayDeviceExt.
</description>
<tag name="@see">#makeActive(BVideoDisplayChooser parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.irisControl -->
<field name="irisControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;irisControl&lt;/code&gt; action.&#xa; Declares the &#x27;irisControl&#x27; action. This is invoked to perform&#xa; perform station-side adjustment to the iris (aperture) of&#xa; the camera.
</description>
<tag name="@see">#irisControl(BVideoIrisEnum parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.focusControl -->
<field name="focusControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;focusControl&lt;/code&gt; action.&#xa; Declares the &#x27;focusControl&#x27; action. This is invoked to perform&#xa; station-side communication to control the focus of the camera.
</description>
<tag name="@see">#focusControl(BVideoFocusEnum parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.reevaluate -->
<field name="reevaluate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;reevaluate&lt;/code&gt; action.&#xa; Action for clock schedule used by BCameraControlHelper
</description>
<tag name="@see">#reevaluate(BCameraControlHelper parameter)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.sendToDisplay -->
<field name="sendToDisplay"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;sendToDisplay&lt;/code&gt; action.
</description>
<tag name="@see">#sendToDisplay()</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.icon -->
<field name="icon"  protected="true" static="true" final="true">
<type class="javax.baja.sys.BIcon"/>
<description/>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.videoStreamThreadNumber -->
<field name="videoStreamThreadNumber"  protected="true">
<type class="int"/>
<description>
This is used to assign a unique name to any threads that are spawned from the&#xa; &lt;code&gt;<see ref="com.tridium.nvideo.camera.BVideoCamera#streamToDestination(com.tridium.videoDriver.videoStream.BPlaybackParams, com.tridium.videoDriver.videoStream.IVideoDestination)">#streamToDestination(BPlaybackParams, IVideoDestination)</see>&lt;/code&gt; method.
</description>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.focusControlHelper -->
<field name="focusControlHelper"  protected="true">
<type class="com.tridium.nvideo.camera.controlHelper.BFocusControlHelper"/>
<description>
Helps the &#x27;doFocusControl&#x27; method to call the &#x27;onFocusControl&#x27; method.&#xa; &#xa; Please see the JavaDoc for the &#x27;doFocusControl&#x27; method for further details.
</description>
<tag name="@see">#doFocusControl(BVideoFocusEnum)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.irisControlHelper -->
<field name="irisControlHelper"  protected="true">
<type class="com.tridium.nvideo.camera.controlHelper.BIrisControlHelper"/>
<description>
Helps the &#x27;doIrisControl&#x27; method to call the &#x27;onIrisControl&#x27; method.&#xa; &#xa; Please see the JavaDoc for the &#x27;doIrisControl&#x27; method for further details.
</description>
<tag name="@see">#doIrisControl(BVideoIrisEnum)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.zoomControlHelper -->
<field name="zoomControlHelper"  protected="true">
<type class="com.tridium.nvideo.camera.controlHelper.BZoomControlHelper"/>
<description>
Helps the &#x27;doZoom&#x27; method to call the &#x27;onZoom&#x27; method.&#xa; &#xa; Please see the JavaDoc for the &#x27;doZoom&#x27; method for further details.
</description>
<tag name="@see">#doZoom(BVideoZoomEnum)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.movementControlHelper -->
<field name="movementControlHelper"  protected="true">
<type class="com.tridium.nvideo.camera.controlHelper.BMovementControlHelper"/>
<description>
Helps the &#x27;doMove&#x27; method to call the &#x27;onMove&#x27; method.&#xa; &#xa; Please see the JavaDoc for the &#x27;doMove&#x27; method for further details.
</description>
<tag name="@see">#doMove(BVideoPanTiltEnum)</tag>
</field>

<!-- com.tridium.nvideo.camera.BVideoCamera.ONE_SECOND -->
<field name="ONE_SECOND"  public="true" static="true" final="true">
<type class="javax.baja.sys.BRelTime"/>
<description/>
</field>

</class>
</bajadoc>
