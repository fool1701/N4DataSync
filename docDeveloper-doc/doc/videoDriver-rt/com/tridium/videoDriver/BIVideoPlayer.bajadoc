<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.BIVideoPlayer" name="BIVideoPlayer" packageName="com.tridium.videoDriver" public="true" interface="true" abstract="true" category="interface">
<description>
This is the interface that any video player widget must implement&#xa; in order to plug seamlessly into the Niagara AX videoDriver&#xa; framework.
</description>
<tag name="@author">lperkins</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- com.tridium.videoDriver.BIVideoPlayer.setMessage(java.lang.String) -->
<method name="setMessage"  public="true" abstract="true">
<description>
Sets the &#x27;message&#x27;, such as &#x27;buffering...&#x27; that&#xa; is displayed in a message area inside the video&#xa; player&#x27;s real estate.
</description>
<parameter name="message">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.setVideoDecoder(com.tridium.videoDriver.videoStream.decoder.IVideoDecoder) -->
<method name="setVideoDecoder"  public="true" abstract="true">
<description>
Associates the video player to the BIVideoDecoder updates the&#xa; current video image.
</description>
<parameter name="videoDecoder">
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.getVideoDecoder() -->
<method name="getVideoDecoder"  public="true" abstract="true">
<description>
Gets the IVideoDecoder that was most recently passed to the&#xa; &#x27;setVideoDecoder&#x27; method.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
<description>
the IVideoDecoder that was most recently passed to the&#xa; &#x27;setVideoDecoder&#x27; method.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.updateVideoFrame(com.tridium.videoDriver.videoStream.decoder.VidFrame) -->
<method name="updateVideoFrame"  public="true" abstract="true">
<description>
The BIVideoDecoder calls this method each time it decodes a new frame.
</description>
<parameter name="vf">
<type class="com.tridium.videoDriver.videoStream.decoder.VidFrame"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.getPlaybackParams() -->
<method name="getPlaybackParams"  public="true" abstract="true">
<description>
The BVideoStreamBinding calls this to get information about the desired&#xa; video stream. The BVideoStreamBinding passes this information to the&#xa; particular video driver.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
<description/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.getVideoStreamFox() -->
<method name="getVideoStreamFox"  public="true" abstract="true">
<description>
Indicates whether the station should obtain the video stream from the&#xa; field-device and forward it to the graphical user interface over the&#xa; Niagara-AX FOX protocol. This is used in attempts to overcome any&#xa; firewall issues with the Workbench not being able to directly access&#xa; the field-device that serves the video stream. If BVideoStreamEnum.yes&#xa; is returned then the video stream will be forwarded through fox. If&#xa; BVideoStreamEnum.no is returned then the video stream will be sent&#xa; directly from the video camera or other video device to the video player&#xa; in the client PC. If BFoxVideoStreamEnum.inherit is returned then&#xa; the setting will be chosen based on the preferences for the video camera&#xa; or other video device.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.resetImage() -->
<method name="resetImage"  public="true" abstract="true">
<description>
Resets the image back to an empty, default video player.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.getReloadVideoTopic() -->
<method name="getReloadVideoTopic"  public="true" abstract="true">
<description>
Gets the topic that will be fired when the video stream binding needs&#xa; to reload video.
</description>
<return>
<type class="javax.baja.sys.Topic"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.isRunning() -->
<method name="isRunning"  public="true" abstract="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.BIVideoPlayer.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
