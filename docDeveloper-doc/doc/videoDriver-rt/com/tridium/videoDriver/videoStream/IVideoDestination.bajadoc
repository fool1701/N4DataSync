<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.videoStream.IVideoDestination" name="IVideoDestination" packageName="com.tridium.videoDriver.videoStream" public="true" interface="true" abstract="true" category="interface">
<description>
The IVideoDestination is the opposite of the BIVideoSource. When a&#xa; video stream is request from a BIVideoSource, the BIVideoSource&#xa; uses a background thread to open the video stream. After successfully&#xa; establishing the video stream, the BIVideoSource passes the video&#xa; stream to the IVideoDestination. Alternatively, after timing out&#xa; while establishing the video stream, the BIVideoSource calls the&#xa; &lt;code&gt;<see ref="com.tridium.videoDriver.videoStream.IVideoDestination#videoStreamTimeout()">#videoStreamTimeout()</see>&lt;/code&gt; on the IVideoDestination object.&#xa; &#xa; Sometimes a video decoder serves as a video destination.&#xa; &#xa; Sometimes a fox video source serves as a video destination.
</description>
<tag name="@author">lperkins</tag>
<!-- com.tridium.videoDriver.videoStream.IVideoDestination.receiveVideoStream(com.tridium.videoDriver.videoStream.IVideoStream) -->
<method name="receiveVideoStream"  public="true" abstract="true">
<description>
The BIVideoSource calls this method to pass the video stream&#xa; to the video destination.
</description>
<parameter name="videoStream">
<type class="com.tridium.videoDriver.videoStream.IVideoStream"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.IVideoDestination.videoStreamTimeout() -->
<method name="videoStreamTimeout"  public="true" abstract="true">
<description>
Indicates that the attempt to establish a video stream timed out. The&#xa; BIVideoSource object calls this method if the BIVideoSource object&#xa; is unable to establish a video stream.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.IVideoDestination.getVideoSession() -->
<method name="getVideoSession"  public="true" abstract="true">
<description>
Gets an IVideoSession which is used to identify a particular video session&#xa; within a client-side virtual machine. A session typically corresponds&#xa; one-to-one with a single video player that a user looks at.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.IVideoSession"/>
<description>
an IVideoSession that accomplishes as the documentation for this&#xa; method indicates.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.IVideoDestination.getVideoDecoder() -->
<method name="getVideoDecoder"  public="true" abstract="true">
<description/>
<return>
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
</return>
</method>

</class>
</bajadoc>
