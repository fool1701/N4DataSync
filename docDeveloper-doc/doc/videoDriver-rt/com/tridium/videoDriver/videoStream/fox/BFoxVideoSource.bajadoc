<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.videoStream.fox.BFoxVideoSource" name="BFoxVideoSource" packageName="com.tridium.videoDriver.videoStream.fox" public="true">
<description>
A BFoxVideoSource component is mounted dynamically as needed under a&#xa; BIVideoSource device in the station in order to peform video streaming&#xa; through Fox.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Oct 14, 2008</tag>
<extends>
<type class="javax.baja.sys.BVector"/>
</extends>
<implements>
<type class="com.tridium.videoDriver.videoStream.BIVideoSource"/>
</implements>
<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource() -->
<constructor name="BFoxVideoSource" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getVideoSourceParent() -->
<method name="getVideoSourceParent"  public="true">
<description>
Gets the real BIVideoSource for the particular driver. This is the&#xa; Niagara AX Nav parent of this particular BFoxVideoSource.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.BIVideoSource"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getPreferredCompression() -->
<method name="getPreferredCompression"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoCompressionEnum"/>
<description>
the video source parent&#x27;s preferred frame rate.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getPreferredFrameRate() -->
<method name="getPreferredFrameRate"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoFrameRateEnum"/>
<description>
the video source parent&#x27;s preferred frame rate.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getPreferredResolution() -->
<method name="getPreferredResolution"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BVideoResolutionEnum"/>
<description>
the video source parent&#x27;s preferred resolution.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.initPlaybackParams(com.tridium.videoDriver.videoStream.BPlaybackParams, com.tridium.videoDriver.videoStream.IVideoSession) -->
<method name="initPlaybackParams"  public="true">
<description>
Calls initPlaybackParams on the video source parent and passes in&#xa; the given parameters.&#xa; &#xa; See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<parameter name="playbackParams">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</parameter>
<parameter name="videoSession">
<type class="com.tridium.videoDriver.videoStream.IVideoSession"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.isFoxVideoStreamPreferred() -->
<method name="isFoxVideoStreamPreferred"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="boolean"/>
<description>
whether or not that video source parent indicates that a&#xa; fox video stream is preferred.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.isTimestampPreferred() -->
<method name="isTimestampPreferred"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="boolean"/>
<description>
whether or not the video source parent indicates that it prefers&#xa; a timestamp to be overlaid above the rendered video.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getPreferredBackgroundColor() -->
<method name="getPreferredBackgroundColor"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BSimple"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getPreferredAspectRatio() -->
<method name="getPreferredAspectRatio"  public="true">
<description/>
<return>
<type class="com.tridium.videoDriver.enums.BVideoAspectRatioEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.makeVideoDecoder(com.tridium.videoDriver.videoStream.BPlaybackParams) -->
<method name="makeVideoDecoder"  public="true">
<description>
Asks the video source parent to make a video decoder to decode&#xa; the video stream described by the given BPlaybackParams.&#xa; &#xa; See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<parameter name="playbackParams">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</parameter>
<return>
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
<description>
the IVideoDecoder as described.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.streamToDestination(com.tridium.videoDriver.videoStream.BPlaybackParams, com.tridium.videoDriver.videoStream.IVideoDestination) -->
<method name="streamToDestination"  public="true">
<description>
streamToDestination : client&#xa; &#xa; This method is called on the client-side to receive a video stream for&#xa; a particular video device. The video stream is sent from the video field&#xa; device to the station and then to the client.&#xa; &#xa; See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<parameter name="playbackParams">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</parameter>
<parameter name="videoDestination">
<type class="com.tridium.videoDriver.videoStream.IVideoDestination"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.supportsPlaybackControl() -->
<method name="supportsPlaybackControl"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="boolean"/>
<description>
whether or not the video source parent supports playback control.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getFoxVideoStreamSetting() -->
<method name="getFoxVideoStreamSetting"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
<description>
the video source parent&#x27;s video stream setting (yes/no/inherit)
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getInterframeTimeout() -->
<method name="getInterframeTimeout"  public="true">
<description>
See the Java doc for the corresponding method on the BIVideoSource interface.
</description>
<return>
<type class="javax.baja.sys.BRelTime"/>
<description>
the video source parent&#x27;s interframe timeout
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getNextVideoStreamId() -->
<method name="getNextVideoStreamId"  protected="true">
<description>
This method is called by the &lt;code&gt;<see ref="com.tridium.videoDriver.videoStream.fox.BFoxVideoSource#streamToDestination(com.tridium.videoDriver.videoStream.BPlaybackParams, com.tridium.videoDriver.videoStream.IVideoDestination)">#streamToDestination(BPlaybackParams, IVideoDestination)</see>&lt;/code&gt;&#xa; to get an id to uniquely identify the Fox video stream that is being established. This uniquely&#xa; identifies the video stream within the one particular client Workbench.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getFoxWorkbenchRemoteSessionId() -->
<method name="getFoxWorkbenchRemoteSessionId"  protected="true">
<description>
This method is intended to be called from the client-side Workbench VM.&#xa; &#xa; This gets an ID that identifies the connection between the current, running&#xa; instance of Workbench and the Station to which it is connected.  This number&#xa; is meaningful on the server-side station. This is a unique identifier that&#xa; can be used on the server-side station to identify this particular connection&#xa; between the Workbench and the station.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.getFoxWorkbenchRemoteSessionId(javax.baja.sys.BObject) -->
<method name="getFoxWorkbenchRemoteSessionId"  public="true" static="true">
<description>
Assuming this method is called on the client-side Workbench VM, this&#xa; gets a unique id that identifies the particular fox connection between&#xa; the station and the particular Workbench VM.
</description>
<parameter name="proxyFromStation">
<type class="javax.baja.sys.BObject"/>
<description>
a Workbench-side proxy reference to a BObject that&#xa;                         is mounted in the station
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
an ID that uniquely identifies the current connection between the&#xa; Workbench and Station. This is designed to be a unique integer from the&#xa; perspective of the station JVM.
</description>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.videoStreamIdMonitor -->
<field name="videoStreamIdMonitor"  protected="true" static="true">
<type class="java.lang.Object"/>
<description>
This object is used to prohibit two video streams from having the same&#xa; video stream id within a Workbench client.
</description>
</field>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.nextVideoStreamId -->
<field name="nextVideoStreamId"  protected="true" static="true">
<type class="int"/>
<description>
This int is used to hand out unique video stream id&#x27;s to new fox video&#xa; streams as they are established on the client Workbench side.
</description>
</field>

<!-- com.tridium.videoDriver.videoStream.fox.BFoxVideoSource.log -->
<field name="log"  protected="true" static="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
