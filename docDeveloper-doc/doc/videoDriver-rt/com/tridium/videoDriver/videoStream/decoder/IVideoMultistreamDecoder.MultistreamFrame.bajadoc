<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.videoStream.decoder.IVideoMultistreamDecoder$MultistreamFrame" name="IVideoMultistreamDecoder.MultistreamFrame" packageName="com.tridium.videoDriver.videoStream.decoder" public="true" static="true" innerClass="true">
<description>
MultistreamFrame extends VidFrame to allow videoCameras ords&#xa; to be added during  readFrameData() processing.
</description>
<extends>
<type class="com.tridium.videoDriver.videoStream.decoder.VidFrame"/>
</extends>
<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMultistreamDecoder.MultistreamFrame() -->
<constructor name="MultistreamFrame" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMultistreamDecoder.MultistreamFrame.getCoalesceKey() -->
<method name="getCoalesceKey"  public="true">
<description>
Override VidFrame ICoalesceable implementation to coalesce based on camara ords
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMultistreamDecoder.MultistreamFrame.videoCameras -->
<field name="videoCameras"  public="true">
<type class="javax.baja.naming.BOrdList"/>
<description>
This is a list of ords to video cameras to which this particular&#xa; frame image applies. Note that all of these cameras would be&#xa; Niagara AX driver devices that point to the same physical video&#xa; camera.
</description>
</field>

</class>
</bajadoc>
