<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.videoStream.decoder.IVideoMuxDecoder$MuxFrame" name="IVideoMuxDecoder.MuxFrame" packageName="com.tridium.videoDriver.videoStream.decoder" public="true" static="true" innerClass="true">
<description>
MuxFrame is returned by the nextMuxFrame method. It encapsulates&#xa; a video stream image, its time index, and a list of cameras (all&#xa; of which in Niagara would point to the same physical camera in&#xa; the real world). The image is the same image for each of the cameras&#xa; in the list of video cameras.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Sep 24, 2008</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMuxDecoder.MuxFrame() -->
<constructor name="MuxFrame" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMuxDecoder.MuxFrame.videoCameras -->
<field name="videoCameras"  public="true">
<type class="javax.baja.naming.BOrdList"/>
<description>
This is a list of ords to video cameras to which this particular&#xa; frame image applies. Note that all of these cameras would be&#xa; Niagara AX driver devices that point to the same physical video&#xa; camera.
</description>
</field>

<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMuxDecoder.MuxFrame.image -->
<field name="image"  public="true">
<type class="javax.baja.gx.BImage"/>
<description/>
</field>

<!-- com.tridium.videoDriver.videoStream.decoder.IVideoMuxDecoder.MuxFrame.timeIndex -->
<field name="timeIndex"  public="true">
<type class="javax.baja.sys.BAbsTime"/>
<description/>
</field>

</class>
</bajadoc>
