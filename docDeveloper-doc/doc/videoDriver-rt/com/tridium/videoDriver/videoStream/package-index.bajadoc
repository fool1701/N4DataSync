<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<package module="videoDriver" runtimeProfile="rt" name="com.tridium.videoDriver.videoStream">
<description/>
<class packageName="com.tridium.videoDriver.videoStream" name="BPlaybackParams"><description>This class is used to request video stream from a driver BIVideoSource component.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="HttpResponseHeaderUtil"><description>Converts the HTTP response header from the given HttpConnection into an instance&#xa; of BFacets whose facet keys are named the same as the names in the response&#xa; header and whose values are strings that are equal to the corresponding response&#xa; header values.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="HttpVideoStream"><description>This is a VideoStream that wraps a UrlConnection that presumably encapsulates&#xa; the response from a driver to request a video stream from its field-device-camera,&#xa; field-device-dvr, or field-device-video-server.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="VideoStream"><description>Driver components that implement BIVideoSource should return an instance&#xa; of this from the BIVideoSource.openVideoStream(String, BFacets) method.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="WaitForStopDecoding"><description>An instance of this class is passes to IVideoDecoder.stopDecoding&#xa; method.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="BIVideoMultistreamServer" category="interface"><description>BIVideoMultistreamServer allows a driver&#x27;s DVR or similar component to serve&#xa; a single video stream that contains video frames from more than one&#xa; video camera.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="BIVideoMuxServer" category="interface"><description>BIVideoMuxServer allows a driver&#x27;s DVR or similar component to serve&#xa; a single video stream that contains video frames from more than one&#xa; video camera.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="BIVideoSource" category="interface"><description>Driver camera classes implement this method if they display&#xa; video in the Niagara AX framework.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="IVideoDestination" category="interface"><description>The IVideoDestination is the opposite of the BIVideoSource.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="IVideoPlayback" category="interface"><description>Widgets that allow a video stream to be changed while being viewed implement&#xa; this interface.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="IVideoPlaybackSession" category="interface"><description>* This is created by the VideoPlaybackSession.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="IVideoSession" category="interface"><description>Instances of this class encapsulate the life cycle of a particular&#xa; video playback occurrence.</description></class>
<class packageName="com.tridium.videoDriver.videoStream" name="IVideoStream" category="interface"><description>This class encapsulates a video stream that streams the content of a single&#xa; video.</description></class>
</package>
</bajadoc>
