<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="rt" qualifiedName="com.tridium.videoDriver.event.BEventDetectionCtrlExt" name="BEventDetectionCtrlExt" packageName="com.tridium.videoDriver.event" public="true">
<description>
This point extension enables or disables the video event detection mechanism&#xa; in a video field-device for a video event control point. &#xa; &#xa; This point extension can be dragged out of the videoDriver palette and&#xa; dropped on any video driver event control point.&#xa; &#xa; Based on the value of this point extension&#x27;s Boolean Status property, this&#xa; asks the corresponding video driver to enable or disable the video detection&#xa; mechanism in the video field device for the particular video event on which&#xa; this point extension is dropped.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Aug 6, 2008</tag>
<extends>
<type class="javax.baja.control.BPointExtension"/>
</extends>
<property name="enableDetection" flags="s">
<type class="javax.baja.status.BStatusBoolean"/>
<description>
Slot for the &lt;code&gt;enableDetection&lt;/code&gt; property.&#xa; Allows event detection to be controlled via&#xa; wire sheet logic from a standard Niagara AX&#xa; boolean control point.
</description>
<tag name="@see">#getEnableDetection</tag>
<tag name="@see">#setEnableDetection</tag>
</property>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt() -->
<constructor name="BEventDetectionCtrlExt" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.getEnableDetection() -->
<method name="getEnableDetection"  public="true">
<description>
Get the &lt;code&gt;enableDetection&lt;/code&gt; property.&#xa; Allows event detection to be controlled via&#xa; wire sheet logic from a standard Niagara AX&#xa; boolean control point.
</description>
<tag name="@see">#enableDetection</tag>
<return>
<type class="javax.baja.status.BStatusBoolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.setEnableDetection(javax.baja.status.BStatusBoolean) -->
<method name="setEnableDetection"  public="true">
<description>
Set the &lt;code&gt;enableDetection&lt;/code&gt; property.&#xa; Allows event detection to be controlled via&#xa; wire sheet logic from a standard Niagara AX&#xa; boolean control point.
</description>
<tag name="@see">#enableDetection</tag>
<parameter name="v">
<type class="javax.baja.status.BStatusBoolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.onExecute(javax.baja.status.BStatusValue, javax.baja.sys.Context) -->
<method name="onExecute"  public="true">
<description>
Since this object is a BPointExtension, this method is automatically&#xa; called whenever there is a change to the &#x27;out&#x27; value of the parent&#xa; control point.&#xa; &#xa; This method checks the status of the &#x27;out&#x27; value of the parent control&#xa; point and detects if and when it status transitions from either down to ok&#xa; or disabled to ok. If either of these occur and if the point&#x27;s proxy ext&#xa; is configured to writeOnUp (for down to ok) or writeOnEnabled&#xa; (for disabled to ok) then this asks the video driver to enable or disable&#xa; the video event detection mechanism accordingly.
</description>
<parameter name="out">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description/>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.started() -->
<method name="started"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.atSteadyState() -->
<method name="atSteadyState"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<description>
The Niagara AX parent must be a control point and its proxy ext&#xa; must implement BIVideoEventDetection
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.eventDetectionControl(javax.baja.sys.Context) -->
<method name="eventDetectionControl"  protected="true">
<description>
This method asks the video driver to enable or disable event detection based on the current&#xa; value of the &#x27;enableDetection&#x27; property.&#xa; &#xa; This method is called by the &#x27;changed&#x27; method when the &#x27;enableDetection&#x27; property changes.&#xa; &#xa; This method is called by the &#x27;onExecute&#x27; method whenever it detects that the video event status&#xa; transitions from &#x27;down&#x27; to &#x27;ok&#x27; or from &#x27;disabled&#x27; to &#x27;ok&#x27; (if the parent point&#x27;s proxy ext&#x27;s&#xa; tuning policy wishes to write on up (down status to ok) or write on enabled (disabled status to&#xa; ok).&#xa; &#xa; This method is called by the &#x27;started&#x27; method if the parent point&#x27;s proxy ext&#x27;s tuning policy&#xa; wishes to write on start.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.enableDetection -->
<field name="enableDetection"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;enableDetection&lt;/code&gt; property.&#xa; Allows event detection to be controlled via&#xa; wire sheet logic from a standard Niagara AX&#xa; boolean control point.
</description>
<tag name="@see">#getEnableDetection</tag>
<tag name="@see">#setEnableDetection</tag>
</field>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.previousStatus -->
<field name="previousStatus"  protected="true">
<type class="javax.baja.status.BStatus"/>
<description>
This is the status of the out value from the most recent call to the&#xa; &lt;code&gt;<see ref="com.tridium.videoDriver.event.BEventDetectionCtrlExt#onExecute(javax.baja.status.BStatusValue, javax.baja.sys.Context)">#onExecute(BStatusValue, Context)</see>&lt;/code&gt; method.
</description>
</field>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.started -->
<field name="started"  protected="true">
<type class="boolean"/>
<description/>
</field>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.previousValue -->
<field name="previousValue"  protected="true">
<type class="boolean"/>
<description/>
</field>

<!-- com.tridium.videoDriver.event.BEventDetectionCtrlExt.starting -->
<field name="starting"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description/>
</field>

</class>
</bajadoc>
