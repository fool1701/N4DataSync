<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="seriesTransform" runtimeProfile="rt" qualifiedName="javax.baja.seriestransform.BSeriesTransformTable" name="BSeriesTransformTable" packageName="javax.baja.seriestransform" public="true" abstract="true">
<description>
The Series Transform table is the base &lt;code&gt;<see ref="javax.baja.collection.BITable">BITable</see>&lt;/code&gt; implementation for&#xa; all transform tables. The class is abstract with the intent that the&#xa; implementing class provides a specialized &lt;code&gt;<see ref="javax.baja.sys.Cursor">Cursor</see>&lt;/code&gt; class implementation&#xa; initialized from the cursor() method to perform the desired transformations.
</description>
<tag name="@author">J. Spangler</tag>
<tag name="@creation">Nov 16, 2010</tag>
<tag name="@version">$Revision$ Feb 1, 2012</tag>
<tag name="@since">Niagara 3.7</tag>
<extends>
<type class="javax.baja.sys.BObject"/>
</extends>
<implements>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<type class="javax.baja.sys.BComplex"/>
</args>
</parameterizedType>
</implements>
<!-- javax.baja.seriestransform.BSeriesTransformTable() -->
<constructor name="BSeriesTransformTable" public="true">
<description>
No Arg constructor for use by framework only.
</description>
</constructor>

<!-- javax.baja.seriestransform.BSeriesTransformTable(java.lang.String, javax.baja.seriestransform.graph.BSeriesSchema) -->
<constructor name="BSeriesTransformTable" public="true">
<parameter name="seriesName">
<type class="java.lang.String"/>
<description>
- String name of the series transform component. This name is&#xa;                   used for namespacing our series data to uniquely identify&#xa;                   our series data among all sets of series data.
</description>
</parameter>
<parameter name="schema">
<type class="javax.baja.seriestransform.graph.BSeriesSchema"/>
<description>
- &lt;code&gt;<see ref="javax.baja.seriestransform.graph.BSeriesSchema">BSeriesSchema</see>&lt;/code&gt; schema of the record objects our cursor&#xa;                   will be returning.
</description>
</parameter>
<description>
Constructor
</description>
</constructor>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getColumns() -->
<method name="getColumns"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.collection.ColumnList"/>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getTableFacets() -->
<method name="getTableFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.setFilter(javax.baja.nre.util.IFilter) -->
<method name="setFilter"  public="true" final="true">
<description>
Set the filter for this table.
</description>
<parameter name="filter">
<type class="javax.baja.nre.util.IFilter"/>
<description>
- &lt;code&gt;<see ref="javax.baja.nre.util.IFilter">IFilter</see>&lt;/code&gt;
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getFilter() -->
<method name="getFilter"  public="true" final="true">
<description>
Returns the filter set for this table.
</description>
<return>
<type class="javax.baja.nre.util.IFilter"/>
<description>
&lt;code&gt;<see ref="javax.baja.nre.util.IFilter">IFilter</see>&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getSeriesName() -->
<method name="getSeriesName"  public="true" final="true">
<description>
String name of the series. This is used to namespace series data. The&#xa; series name is usually the instance name of the &lt;code&gt;<see ref="javax.baja.seriestransform.graph.BGraphNode">BGraphNode</see>&lt;/code&gt;&#xa; component associated with this series table instance.
</description>
<return>
<type class="java.lang.String"/>
<description>
String
</description>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.getSchema() -->
<method name="getSchema"  public="true" final="true">
<description>
This method returns the &lt;code&gt;<see ref="javax.baja.seriestransform.graph.BSeriesSchema">BSeriesSchema</see>&lt;/code&gt; record schema for this&#xa; table. All records returned from the cursor associated with this table&#xa; will have the same properties as defined by this schema.
</description>
<return>
<type class="javax.baja.seriestransform.graph.BSeriesSchema"/>
<description>
&lt;code&gt;<see ref="javax.baja.seriestransform.graph.BSeriesSchema">BSeriesSchema</see>&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.seriestransform.BSeriesTransformTable.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
