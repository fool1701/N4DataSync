<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bql" runtimeProfile="rt" qualifiedName="javax.baja.bql.util.BExprComponent" name="BExprComponent" packageName="javax.baja.bql.util" public="true">
<description>
A generic BQL Expression Component.  Sets outputs based on the aliases&#xa; used in the expression query.  See &#xa; &lt;code&gt;<see ref="javax.baja.bql.util.BExprComponent#updateOutputs(javax.baja.collection.BITable&lt;?&gt;, javax.baja.sys.Context)">updateOutputs</see>&lt;/code&gt; for details.
</description>
<tag name="@author">Matthew Giannini</tag>
<tag name="@creation">Jun 23, 2010</tag>
<tag name="@since">Niagara 3.6</tag>
<extends>
<type class="javax.baja.bql.util.BAbstractExprComponent"/>
</extends>
<action name="resetConverters" flags="ah">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;resetConverters&lt;/code&gt; action.
</description>
<tag name="@see">#resetConverters()</tag>
</action>

<!-- javax.baja.bql.util.BExprComponent() -->
<constructor name="BExprComponent" public="true">
<description/>
</constructor>

<!-- javax.baja.bql.util.BExprComponent.resetConverters() -->
<method name="resetConverters"  public="true">
<description>
Invoke the &lt;code&gt;resetConverters&lt;/code&gt; action.
</description>
<tag name="@see">#resetConverters</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BExprComponent.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.bql.util.BExprComponent.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.bql.util.BExprComponent.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.bql.util.BExprComponent.updateOutputs(javax.baja.collection.BITable&lt;?&gt;, javax.baja.sys.Context) -->
<method name="updateOutputs"  protected="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
A generic implementation which attempts to set output slots based on&#xa; the expression aliases from the expression query. For example, suppose&#xa; &lt;code&gt;expr&lt;/code&gt; is the following:&#xa; &lt;p&gt;&#xa; &lt;code&gt;bool1 or bool2 as &#x27;outBool&#x27;, in1.value + in2.value as &#x27;sum&#x27;&lt;/code&gt;&#xa; &lt;p&gt;&#xa; This component will attempt to set the result of &lt;code&gt;(bool1 or bool2)&lt;/code&gt;&#xa; on a property slot named &lt;code&gt;outBool&lt;/code&gt;, and the result of &#xa; &lt;code&gt;(in1.value + in2.value)&lt;/code&gt; on a property slot named &lt;code&gt;sum&lt;/code&gt;.&#xa; &lt;p&gt;&#xa; If the type of the bql expression result doesn&#x27;t match the property, a best&#xa; effort is made to convert the result to a value of the same type as the&#xa; output property. &#xa; &lt;p&gt;&#xa; This component guarantees that every expression that can be matched to a&#xa; valid output property will be set when this method exits.  If there are&#xa; any errors, the last one will be thrown as an Exception.
</description>
<parameter name="result">
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
<description>
Thrown if any of the expression results could not be&#xa; set to a property. If there are multiple errors in setting the output,&#xa; only the last one will be reported.
</description>
</throws>
</method>

<!-- javax.baja.bql.util.BExprComponent.doResetConverters() -->
<method name="doResetConverters"  public="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BExprComponent.resetConverters -->
<field name="resetConverters"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;resetConverters&lt;/code&gt; action.
</description>
<tag name="@see">#resetConverters()</tag>
</field>

<!-- javax.baja.bql.util.BExprComponent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
