<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bql" runtimeProfile="rt" qualifiedName="javax.baja.bql.util.BAbstractExprComponent" name="BAbstractExprComponent" packageName="javax.baja.bql.util" public="true" abstract="true">
<description>
An abstract BQL Expression Component&#xa; &lt;p&gt;&#xa; Processes input Properties (marked with executeOnChange) using BQL Expressions to &#xa; update output Properties
</description>
<tag name="@author">Matthew Giannini</tag>
<tag name="@creation">Jun 23, 2010</tag>
<tag name="@since">Niagara 3.6</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.status.BIStatus"/>
</implements>
<property name="status" flags="tr">
<type class="javax.baja.status.BStatus"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</property>

<property name="faultCause" flags="tr">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</property>

<property name="executionDelay" flags="x">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;executionDelay&lt;/code&gt; property.&#xa; The delay in executing the Component
</description>
<tag name="@see">#getExecutionDelay</tag>
<tag name="@see">#setExecutionDelay</tag>
</property>

<property name="expr" flags="x">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;expr&lt;/code&gt; property.&#xa; A comma-separated list of expressions to evaluate against&#xa; this component.  The expression will be evaluated as a BQL&#xa; expression query.&#xa; &lt;p&gt;&#xa; bql:{getExpr()}
</description>
<tag name="@see">#getExpr</tag>
<tag name="@see">#setExpr</tag>
</property>

<action name="execute" flags="ah">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute()</tag>
</action>

<action name="rebuild" flags="ah">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;rebuild&lt;/code&gt; action.
</description>
<tag name="@see">#rebuild()</tag>
</action>

<!-- javax.baja.bql.util.BAbstractExprComponent() -->
<constructor name="BAbstractExprComponent" public="true">
<description/>
</constructor>

<!-- javax.baja.bql.util.BAbstractExprComponent.getStatus() -->
<method name="getStatus"  public="true">
<description>
Get the &lt;code&gt;status&lt;/code&gt; property.
</description>
<tag name="@see">#status</tag>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.setStatus(javax.baja.status.BStatus) -->
<method name="setStatus"  public="true">
<description>
Set the &lt;code&gt;status&lt;/code&gt; property.
</description>
<tag name="@see">#status</tag>
<parameter name="v">
<type class="javax.baja.status.BStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.getFaultCause() -->
<method name="getFaultCause"  public="true">
<description>
Get the &lt;code&gt;faultCause&lt;/code&gt; property.
</description>
<tag name="@see">#faultCause</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.setFaultCause(java.lang.String) -->
<method name="setFaultCause"  public="true">
<description>
Set the &lt;code&gt;faultCause&lt;/code&gt; property.
</description>
<tag name="@see">#faultCause</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.getExecutionDelay() -->
<method name="getExecutionDelay"  public="true">
<description>
Get the &lt;code&gt;executionDelay&lt;/code&gt; property.&#xa; The delay in executing the Component
</description>
<tag name="@see">#executionDelay</tag>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.setExecutionDelay(javax.baja.sys.BRelTime) -->
<method name="setExecutionDelay"  public="true">
<description>
Set the &lt;code&gt;executionDelay&lt;/code&gt; property.&#xa; The delay in executing the Component
</description>
<tag name="@see">#executionDelay</tag>
<parameter name="v">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.getExpr() -->
<method name="getExpr"  public="true">
<description>
Get the &lt;code&gt;expr&lt;/code&gt; property.&#xa; A comma-separated list of expressions to evaluate against&#xa; this component.  The expression will be evaluated as a BQL&#xa; expression query.&#xa; &lt;p&gt;&#xa; bql:{getExpr()}
</description>
<tag name="@see">#expr</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.setExpr(java.lang.String) -->
<method name="setExpr"  public="true">
<description>
Set the &lt;code&gt;expr&lt;/code&gt; property.&#xa; A comma-separated list of expressions to evaluate against&#xa; this component.  The expression will be evaluated as a BQL&#xa; expression query.&#xa; &lt;p&gt;&#xa; bql:{getExpr()}
</description>
<tag name="@see">#expr</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.execute() -->
<method name="execute"  public="true">
<description>
Invoke the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.rebuild() -->
<method name="rebuild"  public="true">
<description>
Invoke the &lt;code&gt;rebuild&lt;/code&gt; action.
</description>
<tag name="@see">#rebuild</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.doExecute(javax.baja.sys.Context) -->
<method name="doExecute"  public="true" final="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.doRebuild() -->
<method name="doRebuild"  public="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.updateOutputs(javax.baja.collection.BITable&lt;?&gt;, javax.baja.sys.Context) -->
<method name="updateOutputs"  protected="true" abstract="true">
<description>
Update any output Properties. Sub-classes must implement to set the output&#xa; properties that correspond to the expression results of the query.&#xa; &lt;p&gt;&#xa; Since the &lt;code&gt;expr&lt;/code&gt; is evaluated as a BQL expression query, the &lt;code&gt;result&lt;/code&gt; table will only have a single row where each column value maps to&#xa; the result of the corresponding expression in the expression query.
</description>
<parameter name="result">
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
<description>
The tabular result of the evaluated BQL Expression
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
Context from the output (can be null)
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
<description>
If the sub-class has any problem processing the result, it should&#xa;           throw an Exception. The status will be set to fault and the fault&#xa;           cause text will be updated.
</description>
</throws>
</method>

<!-- javax.baja.bql.util.BAbstractExprComponent.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.faultCause -->
<field name="faultCause"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.executionDelay -->
<field name="executionDelay"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;executionDelay&lt;/code&gt; property.&#xa; The delay in executing the Component
</description>
<tag name="@see">#getExecutionDelay</tag>
<tag name="@see">#setExecutionDelay</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.expr -->
<field name="expr"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;expr&lt;/code&gt; property.&#xa; A comma-separated list of expressions to evaluate against&#xa; this component.  The expression will be evaluated as a BQL&#xa; expression query.&#xa; &lt;p&gt;&#xa; bql:{getExpr()}
</description>
<tag name="@see">#getExpr</tag>
<tag name="@see">#setExpr</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.execute -->
<field name="execute"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute()</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.rebuild -->
<field name="rebuild"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;rebuild&lt;/code&gt; action.
</description>
<tag name="@see">#rebuild()</tag>
</field>

<!-- javax.baja.bql.util.BAbstractExprComponent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
