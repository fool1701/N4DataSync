<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devSerialDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator" name="BDdfSerialSitCommunicator" packageName="com.tridium.ddfSerial.comm.singleTransaction" public="true">
<description>
This communicator is designed for use with a classic master-slave protocol&#xa; (possibly with unsolicited messages).&#xa;&#xa; This uses a single transaction manager to enforce that at most one request&#xa; for serial data be outstanding on the field-bus at any given time.&#xa; &#xa; For more details, please see the Java Doc for com.tridium.ddf.comm.singleTransaction.BDdfSingleTransactionMgr
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="com.tridium.ddfSerial.comm.BDdfSerialCommunicator"/>
</extends>
<!-- com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator() -->
<constructor name="BDdfSerialSitCommunicator" public="true">
<description/>
</constructor>

<!-- com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator.getOutstandingRequest() -->
<method name="getOutstandingRequest"  public="true">
<description>
Descendant implementations of the BDdfReceiver typically call this if&#xa; they need to know the request that was recently transmitted and is awaiting&#xa; response.
</description>
<return>
<type class="com.tridium.ddf.comm.req.BIDdfRequest"/>
<description>
the BIDdfRequest that was last transmitted but no yet timed out, or null&#xa; if no message was last transmitted or if the last message that was transmitted&#xa; has already timed out.
</description>
</return>
</method>

<!-- com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator.transactionManager -->
<field name="transactionManager"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;transactionManager&lt;/code&gt; property.&#xa; Hooks up the ddf single transaction communicator with a ddf single transaction manager.
</description>
<tag name="@see">#getTransactionManager</tag>
<tag name="@see">#setTransactionManager</tag>
</field>

<!-- com.tridium.ddfSerial.comm.singleTransaction.BDdfSerialSitCommunicator.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
