<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devSerialDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfSerial.BDdfSerialMutNetwork" name="BDdfSerialMutNetwork" packageName="com.tridium.ddfSerial" public="true" abstract="true">
<description>
This communicator allows multiple outstanding requests on the serial port&#xa; at the same time. This accomodates serial/wireless radio protocols where&#xa; a wireless radio is connected to the Niagara AX station as a serial port.&#xa; &#xa; This uses a multiple transaction manager to allow a request for data&#xa; to be transmitted onto the field bus even though the data response may arrive&#xa; much later. In the mean time, the multiple transaction manager will allow&#xa; other requests to be transmitted onto the field-bus. The responses for those&#xa; requests likewise could arrive later after which even more requests can&#xa; be transmitted onto the field-bus.   &#xa; &#xa; This is a Niagara AX driver network that is designed for use with a&#xa; serial protocol that allows for the possibility of having mulitple outstanding&#xa; requests on the field-bus waiting for responses at any given time.&#xa; &#xa; This redefines the &#x22;communicator&#x22; property from BDdfCommNetwork to use&#xa; a BDdfSerialMutCommunicator.&#xa; &#xa; The acronynm &#x22;Mut&#x22; stands for &#x22;Multiple Transaction&#x22;.&#xa; &#xa; Your driver can extend this class, redefine the communicator property, and&#xa; specify a communicator for your driver that extends BDdfSerialMutCommunicator&#xa; and customizes (at the very least) the receiver.
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="com.tridium.ddfSerial.BDdfSerialNetwork"/>
</extends>
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;cast&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<!-- com.tridium.ddfSerial.BDdfSerialMutNetwork() -->
<constructor name="BDdfSerialMutNetwork" public="true">
<description/>
</constructor>

<!-- com.tridium.ddfSerial.BDdfSerialMutNetwork.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddfSerial.BDdfSerialMutNetwork.communicator -->
<field name="communicator"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;communicator&lt;/code&gt; property.&#xa; Uses a multiple-outstanding-transaction serial port communicator.&#xa; The BValues for this property must implement BIDdfCommunicator
</description>
<tag name="@see">#getCommunicator</tag>
<tag name="@see">#setCommunicator</tag>
</field>

<!-- com.tridium.ddfSerial.BDdfSerialMutNetwork.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
