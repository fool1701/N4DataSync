<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="wb" qualifiedName="javax.baja.driver.ui.history.ImportModel$ConfigColumn" name="ImportModel.ConfigColumn" packageName="javax.baja.driver.ui.history" public="true" static="true" innerClass="true">
<description/>
<extends>
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</extends>
<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn(java.lang.String, java.lang.String, int, javax.baja.sys.BValue) -->
<constructor name="ConfigColumn" public="true">
<parameter name="propName">
<type class="java.lang.String"/>
</parameter>
<parameter name="displayName">
<type class="java.lang.String"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<parameter name="defaultValue">
<type class="javax.baja.sys.BValue"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn.get(java.lang.Object) -->
<method name="get"  public="true">
<description>
Given a row, extract the column value.
</description>
<parameter name="row">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn.load(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="load"  public="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn.save(javax.baja.workbench.mgr.MgrEditRow, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="save"  public="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn.toEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor) -->
<method name="toEditor"  public="true">
<description>
During the user input phase of MgrEdit, each editable&#xa; column provides a widget for changing the cell of one&#xa; or more rows.  This method is called to return the&#xa; that editor widget.  If this column doesn&#x27;t support&#xa; concurrent editing of all the given rows then return null.
</description>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="currentEditor">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<return>
<type class="javax.baja.workbench.BWbEditor"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.driver.ui.history.ImportModel.ConfigColumn.fromEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor) -->
<method name="fromEditor"  public="true">
<description>
This method is called to store the value in the editor&#xa; back to the cells of this column for each of the specified&#xa; rows.  The widget passed with whatever widget was returned&#xa; by the toEditor method.
</description>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="widget">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
