<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="wb" qualifiedName="javax.baja.driver.ui.point.PointModel" name="PointModel" packageName="javax.baja.driver.ui.point" public="true">
<description>
PointModel is the MgrModel to be used for BPointManagers.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">15 Dec 03</tag>
<tag name="@version">$Revision: 24$ $Date: 6/30/09 11:10:23 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.workbench.mgr.folder.FolderModel"/>
</extends>
<!-- javax.baja.driver.ui.point.PointModel(javax.baja.driver.ui.point.BPointManager) -->
<constructor name="PointModel" public="true">
<parameter name="manager">
<type class="javax.baja.driver.ui.point.BPointManager"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.driver.ui.point.PointModel.getFolderType() -->
<method name="getFolderType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.getBaseNewType() -->
<method name="getBaseNewType"  public="true">
<description>
Get the base type supported by the new operation.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.getSubscribeDepth() -->
<method name="getSubscribeDepth"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.makeColumns() -->
<method name="makeColumns"  protected="true">
<description>
The default columns are name, status, and health.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.getIncludeTypes() -->
<method name="getIncludeTypes"  public="true">
<description>
Return control points and point folders
</description>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.accept(javax.baja.sys.BComponent) -->
<method name="accept"  public="true">
<description>
Accept only control points which have a proxy ext of the correct type.
</description>
<parameter name="c">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.load(javax.baja.sys.BComponent) -->
<method name="load"  public="true">
<description>
Run PointManager specific code, then call super.
</description>
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.newInstance(javax.baja.workbench.mgr.MgrTypeInfo) -->
<method name="newInstance"  public="true">
<description>
The default implementation of this method creates a new&#xa; BControlPoint instance from the specified type.  Then the  &#xa; proxyExt is set to a new instance based on the type returned&#xa; from &lt;code&gt;BPointDeviceExt.getProxyExtType()&lt;/code&gt;.
</description>
<parameter name="type">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</parameter>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.driver.ui.point.PointModel.getNewTypes() -->
<method name="getNewTypes"  public="true">
<description>
The default implementation returns all the standard &#xa; read and write point types.  Use the utility methods &#xa; &lt;code&gt;addXXXPointTypes()&lt;/code&gt; to build the MgrTypeInfo array.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.addPointTypes(javax.baja.registry.TypeInfo, java.util.List&lt;javax.baja.workbench.mgr.MgrTypeInfo&gt;, boolean) -->
<method name="addPointTypes"  public="true" static="true">
<description>
This method uses &lt;code&gt;addXXXPointTypes()&lt;/code&gt; based &#xa; on if the specified type implements IBoolean, INumeric, and &#xa; IEnum.  It is assumed that any type can be mapped to&#xa; a StringPoint.
</description>
<parameter name="type">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<parameter name="list">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</args>
</parameterizedType>
</parameter>
<parameter name="writable">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.addBooleanPointTypes(java.util.List&lt;javax.baja.workbench.mgr.MgrTypeInfo&gt;, boolean) -->
<method name="addBooleanPointTypes"  public="true" static="true">
<description>
Add the MgrTypeInfos to the list for the standard BooleanPoint types. &#xa; If writable is false do not add the writable point types.
</description>
<parameter name="list">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</args>
</parameterizedType>
</parameter>
<parameter name="writable">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.addNumericPointTypes(java.util.List&lt;javax.baja.workbench.mgr.MgrTypeInfo&gt;, boolean) -->
<method name="addNumericPointTypes"  public="true" static="true">
<description>
Add the MgrTypeInfos to the list for the standard NumericPoint types. &#xa; If writable is false do not add the writable point types.
</description>
<parameter name="list">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</args>
</parameterizedType>
</parameter>
<parameter name="writable">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.addEnumPointTypes(java.util.List&lt;javax.baja.workbench.mgr.MgrTypeInfo&gt;, boolean) -->
<method name="addEnumPointTypes"  public="true" static="true">
<description>
Add the MgrTypeInfos to the list for the standard EnumPoint types. &#xa; If writable is false do not add the writable point types.
</description>
<parameter name="list">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</args>
</parameterizedType>
</parameter>
<parameter name="writable">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.addStringPointTypes(java.util.List&lt;javax.baja.workbench.mgr.MgrTypeInfo&gt;, boolean) -->
<method name="addStringPointTypes"  public="true" static="true">
<description>
Add the MgrTypeInfos to the list for the standard StringPoint types. &#xa; If writable is false do not add the writable point types.
</description>
<parameter name="list">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</args>
</parameterizedType>
</parameter>
<parameter name="writable">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.mapPointFacets(javax.baja.workbench.mgr.MgrEditRow, javax.baja.workbench.mgr.MgrColumn, java.lang.Object) -->
<method name="mapPointFacets"  public="true" static="true">
<description>
Attempt to update the facets the specified column.  &#xa; Typically this is done for both point.facets and&#xa; proxyExt.deviceFacets.
</description>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<parameter name="col">
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</parameter>
<parameter name="source">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.mapPointFacets(javax.baja.sys.BFacets, java.lang.Object) -->
<method name="mapPointFacets"  public="true" static="true">
<description>
This is a utility method to map.
</description>
<parameter name="orig">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="source">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.driver.ui.point.PointModel.BOOLEAN_POINT -->
<field name="BOOLEAN_POINT"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.BOOLEAN_WRITABLE -->
<field name="BOOLEAN_WRITABLE"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.NUMERIC_POINT -->
<field name="NUMERIC_POINT"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.NUMERIC_WRITABLE -->
<field name="NUMERIC_WRITABLE"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.ENUM_POINT -->
<field name="ENUM_POINT"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.ENUM_WRITABLE -->
<field name="ENUM_WRITABLE"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.STRING_POINT -->
<field name="STRING_POINT"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

<!-- javax.baja.driver.ui.point.PointModel.STRING_WRITABLE -->
<field name="STRING_WRITABLE"  public="true" static="true" final="true">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
<description/>
</field>

</class>
</bajadoc>
