<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaScript" runtimeProfile="ux" qualifiedName="javax.baja.bajascript.BBajaScriptTypeExt" name="BBajaScriptTypeExt" packageName="javax.baja.bajascript" public="true" abstract="true">
<description>
&lt;p&gt;A BajaScript Type Extension is used to extend BajaScript&#x27;s own Type&#xa; system.&lt;/p&gt;&#xa;&#xa; &lt;p&gt;BajaScript has its own lazy loading Type system that associates Niagara&#xa; Types with JavaScript constructor functions. By extending this class and&#xa; implementing the &lt;code&gt;<see ref="javax.baja.bajascript.BBajaScriptTypeExt#getTypeExtJs(javax.baja.sys.Context)">#getTypeExtJs(Context)</see>&lt;/code&gt; method, a user can inject&#xa; their own JavaScript constructors into BajaScript&#x27;s Type system.&lt;/p&gt;
</description>
<tag name="@author">gjohnson on 27 Jan 2011</tag>
<tag name="@version">1</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.sys.BSingleton"/>
</extends>
<implements>
<type class="javax.baja.bajascript.BIBajaScriptTypeExt"/>
</implements>
<!-- javax.baja.bajascript.BBajaScriptTypeExt() -->
<constructor name="BBajaScriptTypeExt" protected="true">
<description/>
</constructor>

<!-- javax.baja.bajascript.BBajaScriptTypeExt.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.bajascript.BBajaScriptTypeExt.getClientEnv() -->
<method name="getClientEnv"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.box.BBoxClientEnv"/>
</return>
</method>

<!-- javax.baja.bajascript.BBajaScriptTypeExt.encodeToJson(javax.baja.bajascript.BIBajaScriptTypeExt, javax.baja.sys.Context) -->
<method name="encodeToJson"  public="true" static="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<tag name="@deprecated"/>
<tag name="@see">BIBajaScriptTypeExt#encodeToJson(Context)</tag>
<parameter name="typeExt">
<type class="javax.baja.bajascript.BIBajaScriptTypeExt"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="com.tridium.json.JSONObject"/>
</return>
</method>

<!-- javax.baja.bajascript.BBajaScriptTypeExt.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
