<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devHttpDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfHttp.comm.BDdfHttpTransmitter" name="BDdfHttpTransmitter" packageName="com.tridium.ddfHttp.comm" public="true">
<description>
This is the standard transmitter property that serves as the &#x27;transmitter&#x27;&#xa; for the BDdfHttpCommunicator.
</description>
<tag name="@author">Lenard Perkins</tag>
<tag name="@creation">01 Jan 08</tag>
<tag name="@version">$Revision$ $Date: 02/19/2009 3:42:00 PM$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="com.tridium.ddf.comm.defaultComm.BDdfTransmitter"/>
</extends>
<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter() -->
<constructor name="BDdfHttpTransmitter" public="true">
<description/>
</constructor>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.getHttpCommunicator() -->
<method name="getHttpCommunicator"  public="true">
<description/>
<return>
<type class="com.tridium.ddfHttp.comm.BDdfHttpCommunicator"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.makeHttpHelper() -->
<method name="makeHttpHelper"  protected="true">
<description>
This creates the DdfHttpHelper object that performs&#xa; the HTTP transmit on behalf of this object. The default&#xa; implementation should suffice. However, if a developer&#xa; ever encounters a scenario where he or she feels that&#xa; he or she needs to customize the HTTP details then he&#xa; or she may extend this and return an instance of his&#xa; or her own customized class that extends DdfHttpHelper.
</description>
<return>
<type class="com.tridium.ddfHttp.comm.DdfHttpHelper"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.getHttpHelper() -->
<method name="getHttpHelper"  protected="true">
<description/>
<return>
<type class="com.tridium.ddfHttp.comm.DdfHttpHelper"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.forceTransmit(com.tridium.ddf.comm.req.BIDdfRequest) -->
<method name="forceTransmit"  public="true">
<description>
Implements the &#x27;forceTransmit&#x27; method from BDdfCommunicator by&#xa; connecting to the URL whose ascii bytes are returned by the&#xa; &#x27;toByteArray&#x27; method of the given ddfRequest. The &#x27;toByteArray&#x27;&#xa; method may optionally add the text &#x27;POST &#x27; (that is, post&#xa; followed by a space) to the front of the ascii bytes that it&#xa; returns. If so, then any data after the optional &#x27;?&#x27; (question-&#xa; mark character) will be sent in the data portion as an HTTP&#xa; POST. Otherwise, any optional data after the optional &#x27;?&#x27; &#xa; (question-mark character) will be sent as part of the URI as&#xa; an HTTP GET.
</description>
<parameter name="ddfRequest">
<type class="com.tridium.ddf.comm.req.BIDdfRequest"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.stopTransmitter() -->
<method name="stopTransmitter"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.ddfHttpHelper -->
<field name="ddfHttpHelper"  protected="true">
<type class="com.tridium.ddfHttp.comm.DdfHttpHelper"/>
<description>
This is used for Java multi-thread synchronization between the Http transmitter&#xa; and the Http receiver. It also encapsulates that low-level details of Http&#xa; transmitting and receiving.
</description>
</field>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.AUTHORIZATION -->
<field name="AUTHORIZATION"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
This is placed in the Http Request Header as part of the authentication&#xa; process.
</description>
</field>

<!-- com.tridium.ddfHttp.comm.BDdfHttpTransmitter.BASIC -->
<field name="BASIC"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
This is placed in the Http Request Header as part of the authentication&#xa; process.
</description>
</field>

</class>
</bajadoc>
