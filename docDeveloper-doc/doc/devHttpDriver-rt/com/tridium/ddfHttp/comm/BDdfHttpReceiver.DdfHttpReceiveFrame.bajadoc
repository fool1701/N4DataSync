<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devHttpDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfHttp.comm.BDdfHttpReceiver$DdfHttpReceiveFrame" name="BDdfHttpReceiver.DdfHttpReceiveFrame" packageName="com.tridium.ddfHttp.comm" public="true" static="true" innerClass="true">
<description>
If descendants wish to perform advanced customization, they can gain&#xa; access to this class by calling the getInternalBuffer method on the&#xa; outer class. That will give them a direct reference to the internal&#xa; instance of this buffer that is maintained on the outer instance. By&#xa; gaining a direct reference in this fashion, the descendant can directly&#xa; add, remove, delete, etc. bytes directly from the internal buffer.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Mar 25, 2008</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.nre.util.ByteBuffer"/>
</extends>
<implements>
<type class="com.tridium.ddf.comm.IDdfDataFrame"/>
</implements>
<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame(com.tridium.ddfHttp.comm.BDdfHttpReceiver) -->
<constructor name="DdfHttpReceiveFrame" protected="true">
<parameter name="httpReceiver">
<type class="com.tridium.ddfHttp.comm.BDdfHttpReceiver"/>
</parameter>
<description>
Creates a DdfHttpReceiveFrame with an initial capacity of 1/2 K, which should be good enough&#xa; for most cases. Since this extends ByteBuffer, the internal byte array will automatically be&#xa; increased, however, if 1/2 K is not enough.
</description>
</constructor>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.getFrameBytes() -->
<method name="getFrameBytes"  public="true">
<description>
Returns a direct reference to the byte array buffer for this data frame.&#xa; &#xa; Note that not all bytes are necessarily valid. Please only access bytes from index zero&#xa; through the index that is returned by calling the &#x27;getFrameSize&#x27; method.
</description>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.getHttpException() -->
<method name="getHttpException"  public="true">
<description/>
<return>
<type class="javax.baja.net.HttpException"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.getFrameSize() -->
<method name="getFrameSize"  public="true">
<description>
Returns the number of valid bytes in this data frame.
</description>
<return>
<type class="int"/>
<description>
the number of valid bytes in this data frame.
</description>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.getFrameTag() -->
<method name="getFrameTag"  public="true">
<description>
Delegates to the &#x27;computeTag&#x27; method on the BDdfReceiver.
</description>
<return>
<type class="javax.baja.sys.BSimple"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.getFrameCopy() -->
<method name="getFrameCopy"  public="true">
<description>
Creates a byte-per-byte copy of this data frame.
</description>
<return>
<type class="com.tridium.ddf.comm.IDdfDataFrame"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.httpException -->
<field name="httpException"  public="true">
<type class="javax.baja.net.HttpException"/>
<description/>
</field>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.DdfHttpReceiveFrame.httpReceiver -->
<field name="httpReceiver"  protected="true" final="true">
<type class="com.tridium.ddfHttp.comm.BDdfHttpReceiver"/>
<description/>
</field>

</class>
</bajadoc>
