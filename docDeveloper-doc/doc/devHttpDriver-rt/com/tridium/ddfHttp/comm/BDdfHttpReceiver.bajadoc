<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devHttpDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfHttp.comm.BDdfHttpReceiver" name="BDdfHttpReceiver" packageName="com.tridium.ddfHttp.comm" public="true">
<description>
This is the standard receiver property that serves as the &#x27;receiver&#x27;&#xa; for the BDdfHttpCommunicator.
</description>
<tag name="@author">Lenard Perkins</tag>
<tag name="@creation">01 Jan 08</tag>
<tag name="@version">$Revision$ $Date: 02/19/2009 3:42:00 PM$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="com.tridium.ddf.comm.defaultComm.BDdfNullReceiver"/>
</extends>
<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver() -->
<constructor name="BDdfHttpReceiver" public="true">
<description>
Sets the default response timeout to 30 seconds.
</description>
</constructor>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.getHttpCommunicator() -->
<method name="getHttpCommunicator"  public="true">
<description/>
<return>
<type class="com.tridium.ddfHttp.comm.BDdfHttpCommunicator"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.doReceiveFrame() -->
<method name="doReceiveFrame"  protected="true">
<description>
This method must be implemented to recognize and receive a frame of data from the field-bus.&#xa; &#xa; If overridden then this method must block and only return once a frame of data is received.&#xa;&#xa; Hopefully, the default implementation of this method will suffice. It would allow the descendant&#xa; to simply implement the abstract isCompleteFrame and isStartOfFrame methods.
</description>
<return>
<type class="com.tridium.ddf.comm.IDdfDataFrame"/>
<description>
An object that implements the IDdfDataFrame interface that represents some data that was&#xa; just received from the field-bus.
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.resetReceiveBuffer() -->
<method name="resetReceiveBuffer"  protected="true">
<description>
The descendants may customize if they wish. Hopefully the default implementation will&#xa; suffice though.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.getInternalHttpBuffer() -->
<method name="getInternalHttpBuffer"  protected="true">
<description>
Returns the internal buffer for this object. Hopefully the default implementation will&#xa; suffice. That would make it easier for descendants. However, descendants may customize&#xa; this if they wish.
</description>
<return>
<type class="com.tridium.ddfHttp.comm.BDdfHttpReceiver$DdfHttpReceiveFrame"/>
<description/>
</return>
</method>

<!-- com.tridium.ddfHttp.comm.BDdfHttpReceiver.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
