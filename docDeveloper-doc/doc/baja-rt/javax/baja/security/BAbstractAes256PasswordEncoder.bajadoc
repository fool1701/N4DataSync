<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.BAbstractAes256PasswordEncoder" name="BAbstractAes256PasswordEncoder" packageName="javax.baja.security" public="true" abstract="true">
<description/>
<tag name="@author">Patrick sager</tag>
<tag name="@creation">1/3/2018</tag>
<tag name="@since">Niagara 4.6</tag>
<extends>
<type class="javax.baja.security.BReversiblePasswordEncoder"/>
</extends>
<!-- javax.baja.security.BAbstractAes256PasswordEncoder() -->
<constructor name="BAbstractAes256PasswordEncoder" public="true">
<description/>
</constructor>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.encode(com.tridium.nre.security.SecretBytes) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="passwordBytes">
<type class="com.tridium.nre.security.SecretBytes"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.getSecretBytes() -->
<method name="getSecretBytes"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="com.tridium.nre.security.SecretBytes"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.validate(com.tridium.nre.security.SecretBytes) -->
<method name="validate"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="secret">
<type class="com.tridium.nre.security.SecretBytes"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.transcode(java.lang.String, java.util.Optional&lt;com.tridium.nre.security.ISecretBytesSupplier&gt;) -->
<method name="transcode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="encodedValue">
<type class="java.lang.String"/>
</parameter>
<parameter name="key">
<parameterizedType class="java.util.Optional">
<args>
<type class="com.tridium.nre.security.ISecretBytesSupplier"/>
</args>
</parameterizedType>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.getKeyAlias() -->
<method name="getKeyAlias"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.getAlternateOwner() -->
<method name="getAlternateOwner"  public="true">
<description>
Get the alternate owner of this password encoder. Any caller with KeyRingPermission on the alias&#xa; of the alternate owner is allowed to decrypt the password even if they do not have the KeyRingPermission&#xa; for the alias that this password is encrypted with.
</description>
<tag name="@since">Niagara 4.6</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.getAlgorithmBundle() -->
<method name="getAlgorithmBundle"  protected="true" abstract="true">
<description/>
<return>
<type class="com.tridium.nre.security.EncryptionAlgorithmBundle"/>
</return>
</method>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.cipher -->
<field name="cipher"  protected="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.iv -->
<field name="iv"  protected="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.security.BAbstractAes256PasswordEncoder.keyAlias -->
<field name="keyAlias"  protected="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
