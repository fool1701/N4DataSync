<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.BX509Certificate" name="BX509Certificate" packageName="javax.baja.security" public="true" final="true">
<description>
BX509Certificate is a BSimple container for a standard X509Certificate.&#xa;&#xa; In at least one case (e.g. com.tridium.saml.idp.BStationServiceProvider#UNINITIALIZED,&#xa; as of Niagara 4.10u2) distinct instances of this class need to be maintained where&#xa; the private &#x22;cert&#x22; field is null.  Because of this restriction, &#x22;BSimple interning&#x22;&#xa; should not be used with this class.
</description>
<tag name="@author">Bill Smith on 1/13/2017</tag>
<tag name="@since">Niagara 4.5</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.security.BX509Certificate.make(java.security.cert.X509Certificate) -->
<method name="make"  public="true" static="true">
<description>
Creates a BX509Certificate from a supplied X509Certificate.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="cert">
<type class="java.security.cert.X509Certificate"/>
</parameter>
<return>
<type class="javax.baja.security.BX509Certificate"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Creates a BX509Certificate from a supplied PEM encoded certificate string.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="encoded">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.security.BX509Certificate"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.getX509Certificate() -->
<method name="getX509Certificate"  public="true">
<description>
Retrieves the contained X509 certificate or null.
</description>
<tag name="@since">Niagara 4.5</tag>
<return>
<type class="java.security.cert.X509Certificate"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.getUsername() -->
<method name="getUsername"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.extractUserName(java.security.cert.X509Certificate) -->
<method name="extractUserName"  public="true" static="true">
<description/>
<parameter name="cert">
<type class="java.security.cert.X509Certificate"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.isNull() -->
<method name="isNull"  public="true">
<description>
Is the contained X509 certificate null?
</description>
<tag name="@since">Niagara 4.9</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BX509Certificate is encoded as using &lt;code&gt;<see ref="java.io.DataOutput#writeUTF(java.lang.String)">java.io.DataOutput#writeUTF(java.lang.String)</see>&lt;/code&gt;.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="encoder">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BX509Certificate.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BX509Certificate is decoded using &lt;code&gt;<see ref="java.io.DataInput#readUTF()">java.io.DataInput#readUTF()</see>&lt;/code&gt;.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="decoder">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BX509Certificate.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns a string encoded representation of this BX509Certificate object.
</description>
<tag name="@since">Niagara 4.5</tag>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BX509Certificate.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns BX509Certificate object decoded from the provided string.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BX509Certificate.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BX509Certificate equality is based on the equality of the contained&#xa; certificate.
</description>
<tag name="@since">Niagara 4.5</tag>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BX509Certificate uses the hash code of the the contained certificate&#xa; or zero if null.
</description>
<tag name="@since">Niagara 4.5</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.getSubjectDn(java.lang.String, javax.baja.sys.Context) -->
<method name="getSubjectDn"  public="true" static="true" final="true">
<annotation><type class="javax.baja.rpc.NiagaraRpc"/>
<elementValue name="permissions">
<annotationValue kind="expr">
<expression>&#x22;unrestricted&#x22;</expression>
</annotationValue>
</elementValue>
<elementValue name="transports">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="annotation">
<annotation><type class="javax.baja.rpc.Transport"/>
<elementValue name="type">
<annotationValue kind="enum">
<enumField name="box"/>
<type class="javax.baja.rpc.TransportType"/>
</annotationValue>
</elementValue>
</annotation>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description/>
<parameter name="certificate">
<type class="java.lang.String"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="javax.baja.sys.LocalizableException"/>
</throws>
</method>

<!-- javax.baja.security.BX509Certificate.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.security.BX509Certificate.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.security.BX509Certificate"/>
<description/>
</field>

<!-- javax.baja.security.BX509Certificate.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
