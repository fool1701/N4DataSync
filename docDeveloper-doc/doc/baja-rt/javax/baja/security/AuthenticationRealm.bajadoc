<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.AuthenticationRealm" name="AuthenticationRealm" packageName="javax.baja.security" public="true" interface="true" abstract="true" category="interface">
<description>
AuthenticationRealm is implemented by objects which&#xa; throw AuthenticationException.  It gives the application&#xa; layer a chance to gather new credentials and store them&#xa; back to the realm for another shot.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">28 Jan 03</tag>
<tag name="@version">$Revision: 5$ $Date: 5/21/03 2:44:59 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.security.AuthenticationRealm.getAuthenticationRealmName() -->
<method name="getAuthenticationRealmName"  public="true" abstract="true">
<description>
Get a name for the space itself.  The value of this &#xa; method should be a universal identifier for the protection&#xa; space which makes sense to a user and may be used as &#xa; key for caching credentials.  Usually this should be&#xa; an absolute ord for the object which defines the realm.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.getAuthenticationScheme() -->
<method name="getAuthenticationScheme"  public="true" abstract="true">
<description>
Get a description of the authentication mechanism&#xa; being used.  For example if HTTP is it Basic or Digest.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.getAvailableAuthenticationSchemes() -->
<method name="getAvailableAuthenticationSchemes"  public="true" default="true">
<description>
Return an array of available authentication scheme names to choose from,&#xa; or null if scheme selection is not required.
</description>
<tag name="@since">Niagara 4.9</tag>
<return>
<type class="java.lang.String" dimension="1"/>
<description>
array of available authentication schemes
</description>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.getDefaultAuthenticationScheme() -->
<method name="getDefaultAuthenticationScheme"  public="true" default="true">
<description>
Return the name of the default authentication scheme, or null if scheme&#xa; selection is not required.
</description>
<tag name="@since">Niagara 4.9</tag>
<return>
<type class="java.lang.String"/>
<description>
name of the default authentication scheme
</description>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.makeCredentials() -->
<method name="makeCredentials"  public="true" abstract="true">
<description>
Make a default instance of the proper BICredentials&#xa; implementation to use for prompting the user.
</description>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.getCredentials() -->
<method name="getCredentials"  public="true" abstract="true">
<description>
Get the current credentials being used to log &#xa; into the authentication space.  If no credentials&#xa; have been set then return null.
</description>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
</method>

<!-- javax.baja.security.AuthenticationRealm.setCredentials(javax.baja.security.BICredentials) -->
<method name="setCredentials"  public="true" abstract="true">
<description>
Set the current credentials to use for the next&#xa; authentication attempt.
</description>
<parameter name="credentials">
<type class="javax.baja.security.BICredentials"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
