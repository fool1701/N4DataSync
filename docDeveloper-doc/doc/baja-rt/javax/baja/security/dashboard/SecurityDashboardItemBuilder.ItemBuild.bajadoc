<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.dashboard.SecurityDashboardItemBuilder$ItemBuild" name="SecurityDashboardItemBuilder.ItemBuild" packageName="javax.baja.security.dashboard" public="true" innerClass="true">
<description>
Builder to create a SecurityDashboardItem.
</description>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.security.dashboard.SecurityDashboardItemBuilder.ItemBuild.fromLexiconModule(java.lang.String) -->
<method name="fromLexiconModule"  public="true">
<description/>
<parameter name="lexModule">
<type class="java.lang.String"/>
<description>
optionally specify a lexicon module, if it differs from&#xa;                  the Type already provided to the item builder
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.SecurityDashboardItemBuilder$ItemBuild"/>
<description>
next step: specify summary
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.SecurityDashboardItemBuilder.ItemBuild.withSummary(java.lang.String, java.lang.Object...) -->
<method name="withSummary"  public="true" isVarargs="true">
<description/>
<parameter name="summaryKey">
<type class="java.lang.String"/>
<description>
summary lexicon key
</description>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
<description>
any arguments to pass to the lexicon. Can be any BSimple.&#xa;             Strings, ints, doubles, booleans, and Dates will be converted&#xa;             to their corresponding BSimple.
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.SecurityDashboardItemBuilder$ItemBuild"/>
<description>
next step: specify description
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.SecurityDashboardItemBuilder.ItemBuild.withSummary(javax.baja.security.dashboard.LexiconFormatInfo) -->
<method name="withSummary"  public="true">
<description/>
<parameter name="summary">
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
fully built-up LexiconFormatInfo, if you have it
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.SecurityDashboardItemBuilder$ItemBuild"/>
<description>
next step: specify description
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.SecurityDashboardItemBuilder.ItemBuild.withDescription(java.lang.String, java.lang.Object...) -->
<method name="withDescription"  public="true" isVarargs="true">
<description/>
<parameter name="descriptionKey">
<type class="java.lang.String"/>
<description>
description lexicon key
</description>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
<description>
any arguments to pass to the lexicon. Can be any BSimple.&#xa;             Strings, ints, doubles, booleans, and Dates will be converted&#xa;             to their corresponding BSimple.
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.SecurityDashboardItem"/>
<description>
the built dashboard item
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.SecurityDashboardItemBuilder.ItemBuild.withDescription(javax.baja.security.dashboard.LexiconFormatInfo) -->
<method name="withDescription"  public="true">
<description/>
<parameter name="description">
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
fully built-up LexiconFormatInfo, if you have it
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.SecurityDashboardItem"/>
<description>
the built dashboard item
</description>
</return>
</method>

</class>
</bajadoc>
