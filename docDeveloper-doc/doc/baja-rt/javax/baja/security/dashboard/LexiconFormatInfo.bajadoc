<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.dashboard.LexiconFormatInfo" name="LexiconFormatInfo" packageName="javax.baja.security.dashboard" public="true">
<description>
Collects the module name, lexicon key, and (optionally) format args to construct a localized&#xa; String.  Intended to support a bajaux views that can format each arg and then use the module&#xa; and lexicon key to create the entire message.
</description>
<tag name="@author">Eric Anderson</tag>
<tag name="@creation">2019-02-02</tag>
<tag name="@since">Niagara 4.8</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.security.dashboard.LexiconFormatInfo(java.lang.String, java.lang.String) -->
<constructor name="LexiconFormatInfo" protected="true">
<parameter name="moduleName">
<type class="java.lang.String"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName and key only; no format args.
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
<description>
name of the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName and key only; no format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(java.lang.String, java.lang.String, java.util.List&lt;? extends javax.baja.sys.BSimple&gt;) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and format args.
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
<description>
name of the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="formatArgs">
<parameterizedType class="java.util.List">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BSimple"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
<description>
args used to render the final localized message
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(java.lang.String, java.lang.String, javax.baja.sys.BSimple...) -->
<method name="make"  public="true" static="true" isVarargs="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and format args.
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
<description>
name of the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="formatArgs">
<type class="javax.baja.sys.BSimple" dimension="1"/>
<description>
args used to render the final localized message
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName and key only; no format args.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName and key only; no format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, java.util.List&lt;? extends javax.baja.sys.BSimple&gt;) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and format args.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="formatArgs">
<parameterizedType class="java.util.List">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BSimple"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
<description>
args used to render the final localized message
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, javax.baja.sys.BSimple...) -->
<method name="make"  public="true" static="true" isVarargs="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and format args.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="formatArgs">
<type class="javax.baja.sys.BSimple" dimension="1"/>
<description>
args used to render the final localized message
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, boolean) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and boolean format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="boolean"/>
<description>
boolean format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, double) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and double format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="double"/>
<description>
double format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, float) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and float format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="float"/>
<description>
float format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, int) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and int format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="int"/>
<description>
int format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, long) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and long format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="long"/>
<description>
long format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.make(javax.baja.sys.Type, java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Create a LexiconFormatInfo with a moduleName, key, and String format arg.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
used to derive the module that contains the lexicon
</description>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</parameter>
<parameter name="arg">
<type class="java.lang.String"/>
<description>
String format arg
</description>
</parameter>
<return>
<type class="javax.baja.security.dashboard.LexiconFormatInfo"/>
<description>
LexiconFormatInfo with a moduleName, key, and format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.getModuleName() -->
<method name="getModuleName"  public="true">
<description>
Get the name of the module that contains the lexicon used to render the localized text.
</description>
<return>
<type class="java.lang.String"/>
<description>
name of the module that contains the lexicon
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.getKey() -->
<method name="getKey"  public="true">
<description>
Get the lexicon key used to render the localized text.
</description>
<return>
<type class="java.lang.String"/>
<description>
lexicon key
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.getFormatArgs() -->
<method name="getFormatArgs"  public="true">
<description>
Get the format args used to render the final localized message.
</description>
<return>
<parameterizedType class="java.util.List">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BSimple"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
<description>
format args
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.toJSON() -->
<method name="toJSON"  public="true">
<description>
Create a JSONObject that represents this LexiconFormatInfo object.
</description>
<return>
<type class="com.tridium.json.JSONObject"/>
<description>
JSON for this LexiconFormatInfo object
</description>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.toString() -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.moduleName -->
<field name="moduleName"  protected="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.security.dashboard.LexiconFormatInfo.key -->
<field name="key"  protected="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
