<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.BIDeferOwnership" name="BIDeferOwnership" packageName="javax.baja.security" public="true" interface="true" abstract="true" category="interface">
<description>
BIDeferOwnership is a marker interface that BComplexes can implement to signify that any child&#xa; passwords should not be owned by that types module, but rather the module of the type of its parent.&#xa; This should be implemented by BComplexes that store passwords that are to be used by the parent.&#xa; See &lt;code&gt;<see ref="javax.baja.security.BUsernameAndPassword">BUsernameAndPassword</see>&lt;/code&gt;.
</description>
<tag name="@author">Patrick sager</tag>
<tag name="@creation">12/15/2017</tag>
<tag name="@since">Niagara 4.6</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- javax.baja.security.BIDeferOwnership.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
