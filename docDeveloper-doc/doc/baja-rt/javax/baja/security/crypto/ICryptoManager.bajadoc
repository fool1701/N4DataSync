<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.crypto.ICryptoManager" name="ICryptoManager" packageName="javax.baja.security.crypto" public="true" interface="true" abstract="true" category="interface">
<description>
ICrytptoManager is the type of object returned from &#xa; CryptoManagerFactory. The implementing instance is&#xa; matched with the calling environment: wbapplet, wb, station
</description>
<tag name="@author">$Author$</tag>
<tag name="@creation">29 June 2011</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.7</tag>
<!-- javax.baja.security.crypto.ICryptoManager.getUserTrustStore() -->
<method name="getUserTrustStore"  public="true" abstract="true">
<description/>
<return>
<type class="javax.baja.security.crypto.ITrustStore"/>
<description>
an reference to the user trust store
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getUserUntrustedStore() -->
<method name="getUserUntrustedStore"  public="true" abstract="true">
<description/>
<return>
<type class="javax.baja.security.crypto.ITrustStore"/>
<description>
a reference to the user untrusted store
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getSystemTrustStore() -->
<method name="getSystemTrustStore"  public="true" abstract="true">
<description/>
<return>
<type class="javax.baja.security.crypto.ITrustStore"/>
<description>
an reference to the system trust store
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getKeyStore() -->
<method name="getKeyStore"  public="true" abstract="true">
<description/>
<return>
<type class="javax.baja.security.crypto.IKeyStore"/>
<description>
a reference to the system key store
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getServerSocketFactory(javax.baja.security.crypto.BSslTlsEnum, boolean, java.lang.String) -->
<method name="getServerSocketFactory"  public="true" abstract="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<tag name="@deprecated">replaced by &lt;code&gt;<see ref="javax.baja.security.crypto.ICryptoManager#getServerSocketFactory(javax.baja.nre.security.ServerTlsParameters)">#getServerSocketFactory(ServerTlsParameters)</see>&lt;/code&gt;</tag>
<parameter name="type">
<type class="javax.baja.security.crypto.BSslTlsEnum"/>
<description>
supported tls versions (tlsv1, tlsv1.1, tlsv1.2)
</description>
</parameter>
<parameter name="clientAuth">
<type class="boolean"/>
<description>
currently unsupported
</description>
</parameter>
<parameter name="serverAlias">
<type class="java.lang.String"/>
<description>
the alias of the certificate to use for this socket factory
</description>
</parameter>
<return>
<type class="javax.net.ServerSocketFactory"/>
<description>
in instance of a server socket factory using the specified ssl type and certificate
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getServerSocketFactory(javax.baja.nre.security.ServerTlsParameters) -->
<method name="getServerSocketFactory"  public="true" default="true">
<description/>
<tag name="@since">Niagara 4.4u1</tag>
<parameter name="tlsParams">
<type class="javax.baja.nre.security.ServerTlsParameters"/>
<description>
parameters for establishing the tls connection
</description>
</parameter>
<return>
<type class="javax.net.ServerSocketFactory"/>
<description>
in instance of a server socket factory using the specified tls parameters
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getClientSocketFactory(javax.baja.security.crypto.BSslTlsEnum) -->
<method name="getClientSocketFactory"  public="true" abstract="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<tag name="@deprecated">replaced by &lt;code&gt;<see ref="javax.baja.security.crypto.ICryptoManager#getClientSocketFactory(javax.baja.nre.security.ClientTlsParameters)">#getClientSocketFactory(ClientTlsParameters)</see>&lt;/code&gt;</tag>
<parameter name="type">
<type class="javax.baja.security.crypto.BSslTlsEnum"/>
<description>
supported tls versions (tlsv1, tlsv1.1, tlsv1.2)
</description>
</parameter>
<return>
<type class="javax.net.SocketFactory"/>
<description>
an instance of a client socket factory using the specified ssl protocol type
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.security.crypto.ICryptoManager.getClientSocketFactory(javax.baja.nre.security.ClientTlsParameters) -->
<method name="getClientSocketFactory"  public="true" default="true">
<description/>
<tag name="@since">Niagara 4.4u1</tag>
<parameter name="tlsParams">
<type class="javax.baja.nre.security.ClientTlsParameters"/>
<description>
parameters for establishing the tls connection
</description>
</parameter>
<return>
<type class="javax.net.SocketFactory"/>
<description>
an instance of a client socket factory using the specified ssl protocol type
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

</class>
</bajadoc>
