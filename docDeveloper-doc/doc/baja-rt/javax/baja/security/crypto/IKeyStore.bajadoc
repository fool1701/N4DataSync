<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.crypto.IKeyStore" name="IKeyStore" packageName="javax.baja.security.crypto" public="true" interface="true" abstract="true" category="interface">
<description>
IKeyStore is the type of object returned from &#xa; a call to getTrustStore or getUserTrustStore from an&#xa; ICryptoManager.
</description>
<tag name="@see">java.security.KeyStore</tag>
<tag name="@author">$Author$</tag>
<tag name="@creation">29 June 2011</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.7</tag>
<implements>
<type class="javax.baja.security.crypto.ITrustStore"/>
</implements>
<!-- javax.baja.security.crypto.IKeyStore.getKey(java.lang.String, char[]) -->
<method name="getKey"  public="true" abstract="true">
<description>
Get the key stored for the specified alias
</description>
<parameter name="alias">
<type class="java.lang.String"/>
<description>
the alias to retrieve
</description>
</parameter>
<parameter name="password">
<type class="char" dimension="1"/>
<description>
the entry&#x27;s password
</description>
</parameter>
<return>
<type class="java.security.Key"/>
<description>
The key stored for the alias, or null if the alias does not exist&#xa;         or is not a key entry
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description>
if an error occurs retrieving the certificate
</description>
</throws>
</method>

<!-- javax.baja.security.crypto.IKeyStore.setKeyEntry(java.lang.String, byte[], java.security.cert.X509Certificate[]) -->
<method name="setKeyEntry"  public="true" abstract="true">
<description>
Store a key and certificate with the specified alias
</description>
<parameter name="alias">
<type class="java.lang.String"/>
<description>
the alias for the entry
</description>
</parameter>
<parameter name="key">
<type class="byte" dimension="1"/>
<description>
the key to set
</description>
</parameter>
<parameter name="chain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
<description>
the certificate chain to set
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
<description>
if an error occurs setting the key
</description>
</throws>
</method>

<!-- javax.baja.security.crypto.IKeyStore.setKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.X509Certificate[]) -->
<method name="setKeyEntry"  public="true" abstract="true">
<description>
Store a key and certificate with the specified alias
</description>
<parameter name="alias">
<type class="java.lang.String"/>
<description>
the alias for the entry
</description>
</parameter>
<parameter name="key">
<type class="java.security.Key"/>
<description>
the key to set
</description>
</parameter>
<parameter name="password">
<type class="char" dimension="1"/>
<description>
the password to protect the entry with
</description>
</parameter>
<parameter name="chain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
<description>
the certificate chain to set
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
<description>
if an error occurs setting the key
</description>
</throws>
</method>

</class>
</bajadoc>
