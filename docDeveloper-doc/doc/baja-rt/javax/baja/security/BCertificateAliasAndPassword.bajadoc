<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.BCertificateAliasAndPassword" name="BCertificateAliasAndPassword" packageName="javax.baja.security" public="true">
<description>
BCertificateAliasAndPassword holds a certificate alias and the BPassword for retrieving&#xa; it from the user key store.
</description>
<tag name="@author">Bill Smith on 2022-08-16</tag>
<tag name="@since">Niagara 4.13</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="javax.baja.security.BICredentials"/>
</implements>
<implements>
<type class="javax.baja.security.BIDeferOwnership"/>
</implements>
<property name="alias" flags="d">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;alias&lt;/code&gt; property.
</description>
<tag name="@see">#getAlias</tag>
<tag name="@see">#setAlias</tag>
</property>

<property name="password" flags="d">
<type class="javax.baja.security.BPassword"/>
<description>
Slot for the &lt;code&gt;password&lt;/code&gt; property.
</description>
<tag name="@see">#getPassword</tag>
<tag name="@see">#setPassword</tag>
</property>

<!-- javax.baja.security.BCertificateAliasAndPassword() -->
<constructor name="BCertificateAliasAndPassword" public="true">
<description/>
</constructor>

<!-- javax.baja.security.BCertificateAliasAndPassword(java.lang.String, javax.baja.security.BPassword) -->
<constructor name="BCertificateAliasAndPassword" public="true">
<parameter name="alias">
<type class="java.lang.String"/>
</parameter>
<parameter name="password">
<type class="javax.baja.security.BPassword"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.security.BCertificateAliasAndPassword.getAlias() -->
<method name="getAlias"  public="true">
<description>
Get the &lt;code&gt;alias&lt;/code&gt; property.
</description>
<tag name="@see">#alias</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.setAlias(java.lang.String) -->
<method name="setAlias"  public="true">
<description>
Set the &lt;code&gt;alias&lt;/code&gt; property.
</description>
<tag name="@see">#alias</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.getPassword() -->
<method name="getPassword"  public="true">
<description>
Get the &lt;code&gt;password&lt;/code&gt; property.
</description>
<tag name="@see">#password</tag>
<return>
<type class="javax.baja.security.BPassword"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.setPassword(javax.baja.security.BPassword) -->
<method name="setPassword"  public="true">
<description>
Set the &lt;code&gt;password&lt;/code&gt; property.
</description>
<tag name="@see">#password</tag>
<parameter name="v">
<type class="javax.baja.security.BPassword"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.resetAliasAndPassword() -->
<method name="resetAliasAndPassword"  public="true">
<description>
resets the alias and password to defaults
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.encodeCredentials(javax.baja.sys.Context) -->
<method name="encodeCredentials"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.decodeCredentials(byte[], javax.baja.sys.Context) -->
<method name="decodeCredentials"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="encoding">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.equivalent(java.lang.Object) -->
<method name="equivalent"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.isPasswordSet() -->
<method name="isPasswordSet"  public="true">
<description/>
<return>
<type class="boolean"/>
<description>
true if the password has been set to a non default value.
</description>
</return>
</method>

<!-- javax.baja.security.BCertificateAliasAndPassword.alias -->
<field name="alias"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;alias&lt;/code&gt; property.
</description>
<tag name="@see">#getAlias</tag>
<tag name="@see">#setAlias</tag>
</field>

<!-- javax.baja.security.BCertificateAliasAndPassword.password -->
<field name="password"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;password&lt;/code&gt; property.
</description>
<tag name="@see">#getPassword</tag>
<tag name="@see">#setPassword</tag>
</field>

<!-- javax.baja.security.BCertificateAliasAndPassword.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.security.BCertificateAliasAndPassword.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.security.BCertificateAliasAndPassword"/>
<description/>
</field>

</class>
</bajadoc>
