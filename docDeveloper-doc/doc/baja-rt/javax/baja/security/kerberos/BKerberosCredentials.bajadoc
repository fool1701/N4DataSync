<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.security.kerberos.BKerberosCredentials" name="BKerberosCredentials" packageName="javax.baja.security.kerberos" public="true">
<description/>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="javax.baja.security.BIUserCredentials"/>
</implements>
<!-- javax.baja.security.kerberos.BKerberosCredentials() -->
<constructor name="BKerberosCredentials" public="true">
<description/>
</constructor>

<!-- javax.baja.security.kerberos.BKerberosCredentials(org.ietf.jgss.GSSCredential) -->
<constructor name="BKerberosCredentials" public="true">
<parameter name="credentials">
<type class="org.ietf.jgss.GSSCredential"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.security.kerberos.BKerberosCredentials.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.getCredential() -->
<method name="getCredential"  public="true">
<description/>
<return>
<type class="org.ietf.jgss.GSSCredential"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.getUsername() -->
<method name="getUsername"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.getRealm() -->
<method name="getRealm"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.isExpired() -->
<method name="isExpired"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.destroyTicket() -->
<method name="destroyTicket"  public="true">
<description>
Destroys the sensitive information stored inside the Kerberos ticket.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.decodeCredentials(byte[], javax.baja.sys.Context) -->
<method name="decodeCredentials"  public="true">
<description>
Decode the credentials from a byte array generated&#xa; using encode().
</description>
<parameter name="encoding">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.security.BICredentials"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.encodeCredentials(javax.baja.sys.Context) -->
<method name="encodeCredentials"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.equivalent(java.lang.Object) -->
<method name="equivalent"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Two BKerberosCredentials objects are equivalent if they have the same class, and GSSCredentials.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.security.kerberos.BKerberosCredentials.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
