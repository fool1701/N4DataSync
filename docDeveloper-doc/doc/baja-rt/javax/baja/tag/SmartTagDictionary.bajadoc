<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.tag.SmartTagDictionary" name="SmartTagDictionary" packageName="javax.baja.tag" public="true" interface="true" abstract="true" category="interface">
<description>
A SmartTagDictionary is a TagDictionary that can provide additional tags for an Entity based on&#xa; retrievable information about the Entity.  Common information used to determine additional tags&#xa; are the Entity&#x27;s existing tags or the Entity&#x27;s type.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">2/13/14</tag>
<tag name="@since">Niagara 4.0</tag>
<implements>
<type class="javax.baja.tag.TagDictionary"/>
</implements>
<!-- javax.baja.tag.SmartTagDictionary.getImpliedTag(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedTag"  public="true" abstract="true">
<description>
Get an implied tag with the specified id for the specified entity, if one is implied. If&#xa; &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; is returned, it may mean a &lt;code&gt;<see ref="javax.baja.tag.TagInfo">TagInfo</see>&lt;/code&gt; is not implied on the&#xa; entity or that &lt;code&gt;<see ref="javax.baja.tag.TagInfo#getTag(javax.baja.tag.Entity)">TagInfo#getTag(Entity)</see>&lt;/code&gt; of an implied TagInfo returns null.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the tag to retrieve
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
entity to evaluate
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.Tag"/>
</args>
</parameterizedType>
<description>
an implied tag or &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; if the tag is not implied on the entity
</description>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.getImpliedTagInfo(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedTagInfo"  public="true" abstract="true">
<description>
Get a tag info for the specified entity if a tag with the specified ID is implied by this smart&#xa; tag dictionary on the entity. The tag info can later be used to make a tag for the entity.
</description>
<tag name="@since">Niagara 4.3</tag>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the tag to retrieve
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
entity to evaluate
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.TagInfo"/>
</args>
</parameterizedType>
<description>
a tag info or &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; if the tag is not implied on the entity
</description>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.addAllImpliedTags(javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Tag&gt;) -->
<method name="addAllImpliedTags"  public="true" abstract="true">
<description>
Add all of the tags implied by this dictionary to the specified collection of tags. Tags are&#xa; not added if &lt;code&gt;<see ref="javax.baja.tag.TagInfo#getTag(javax.baja.tag.Entity)">TagInfo#getTag(Entity)</see>&lt;/code&gt; of an implied TagInfo returns null.
</description>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
target entity for the tags.
</description>
</parameter>
<parameter name="tags">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Tag"/>
</args>
</parameterizedType>
<description>
collection of tags to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.getAllImpliedTags(javax.baja.tag.Entity) -->
<method name="getAllImpliedTags"  public="true" default="true">
<description>
Get the collection of all implied tags for the specified entity within this dictionary. The&#xa; collection will not include tags where &lt;code&gt;<see ref="javax.baja.tag.TagInfo#getTag(javax.baja.tag.Entity)">TagInfo#getTag(Entity)</see>&lt;/code&gt; of an implied TagInfo&#xa; returns null.
</description>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
The entity to evaluate.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Tag"/>
</args>
</parameterizedType>
<description>
a collection of tags implied on the entity
</description>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.getImpliedRelation(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedRelation"  public="true" abstract="true">
<description>
Get the first or only relation with the specified id with the specified entity as the source.&#xa; If &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; is returned, it may mean a &lt;code&gt;<see ref="javax.baja.tag.RelationInfo">RelationInfo</see>&lt;/code&gt; is not implied on&#xa; the entity or that &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an implied RelationInfo returns&#xa; Optional.empty().
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the relation.
</description>
</parameter>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The source entity for the relation.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
a single relation with the specified id or &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; if the relation&#xa; is not implied for the specified source.
</description>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.addAllImpliedRelations(javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Relation&gt;) -->
<method name="addAllImpliedRelations"  public="true" abstract="true">
<description>
Add all implied relations for the specified source entity to the collection of relations.&#xa; Relations are not added if &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an implied RelationInfo&#xa; returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The entity that is the source of the relation.
</description>
</parameter>
<parameter name="relations">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
The collection of relations to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.getAllImpliedRelations(javax.baja.tag.Entity) -->
<method name="getAllImpliedRelations"  public="true" default="true">
<description>
Get the collection of relations implied on the specified entity. The collection will not&#xa; include relations where &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an implied RelationInfo&#xa; returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The source entity of the relations.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
a collection of relations implied on the source
</description>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.addImpliedRelations(javax.baja.tag.Id, javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Relation&gt;) -->
<method name="addImpliedRelations"  public="true" abstract="true">
<description>
Add all implied relations with the specified id for the specified source entity to the&#xa; collection of relations. Relations are not added if &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of&#xa; an implied RelationInfo returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the relation.
</description>
</parameter>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The entity that is the source of the relation.
</description>
</parameter>
<parameter name="relations">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
The collection of relations to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tag.SmartTagDictionary.getImpliedRelations(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedRelations"  public="true" default="true">
<description>
Get the collection of relations with the specified id implied by the specified entity. The&#xa; collection will not include relations where &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an&#xa; implied RelationInfo returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the relation.
</description>
</parameter>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The entity that is the source of the relation.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
a collection of relations with the specified id implied on the source
</description>
</return>
</method>

</class>
</bajadoc>
