<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.tag.Tag" name="Tag" packageName="javax.baja.tag" public="true" final="true">
<description>
A Tag is an immutable (&lt;code&gt;<see ref="javax.baja.tag.Id">Id</see>&lt;/code&gt;, &lt;code&gt;<see ref="javax.baja.data.BIDataValue">BIDataValue</see>&lt;/code&gt;) pair.
</description>
<tag name="@author">&lt;a href=&#x22;mailto:mgiannini@tridium.com&#x22;&gt;Matthew Giannini&lt;/a&gt;</tag>
<tag name="@see">Taggable</tag>
<tag name="@see">Tags</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.tag.Tag(java.lang.String, javax.baja.data.BIDataValue) -->
<constructor name="Tag" public="true">
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.data.BIDataValue"/>
</parameter>
<description>
Equivalent to &lt;pre&gt;new Tag(Id.newId(qname), value)&lt;/pre&gt;
</description>
<tag name="@see">Id#newId</tag>
</constructor>

<!-- javax.baja.tag.Tag(javax.baja.tag.Id, javax.baja.data.BIDataValue) -->
<constructor name="Tag" public="true">
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
the id of the tag. May not by &lt;code&gt;null&lt;/code&gt;.
</description>
</parameter>
<parameter name="value">
<type class="javax.baja.data.BIDataValue"/>
<description>
the value of the tag. May not be &lt;code&gt;null&lt;/code&gt;.
</description>
</parameter>
<description>
Create a new tag with the given id and value.
</description>
</constructor>

<!-- javax.baja.tag.Tag.newTag(java.lang.String) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BMarker.MARKER)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, java.lang.String) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BString.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, int) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BInteger.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, float) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BFloat.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="float"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, long) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BLong.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="long"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, double) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BDouble.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="double"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.newTag(java.lang.String, boolean) -->
<method name="newTag"  public="true" static="true">
<description>
Equivalent to &lt;pre&gt;new Tag(qname, BBoolean.make(value)&lt;/pre&gt;
</description>
<parameter name="qname">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.tag.Tag"/>
</return>
</method>

<!-- javax.baja.tag.Tag.getId() -->
<method name="getId"  public="true">
<description>
Get the tag&#x27;s id.
</description>
<return>
<type class="javax.baja.tag.Id"/>
<description>
the tag&#x27;s id
</description>
</return>
</method>

<!-- javax.baja.tag.Tag.getValue() -->
<method name="getValue"  public="true">
<description>
Get the tag&#x27;s value.
</description>
<return>
<type class="javax.baja.data.BIDataValue"/>
<description>
the tag&#x27;s value
</description>
</return>
</method>

<!-- javax.baja.tag.Tag.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Two tags are equal &lt;i&gt;iff&lt;/i&gt; they have the same id and their values are equal.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
<description>
the object to test for equality
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if this tag is equal to the given object
</description>
</return>
</method>

<!-- javax.baja.tag.Tag.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

</class>
</bajadoc>
