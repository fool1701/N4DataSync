<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.tag.EntityWrapper" name="EntityWrapper" packageName="javax.baja.tag" public="true">
<description>
EntityWrapper wraps an Entity and a BFacets instance exposing both the entity&#x27;s tags&#xa; and the facets as tags.  In the case where there is an id collision between the entity&#xa; and the facets, the facets get higher precedence.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">3/25/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="javax.baja.tag.Entity"/>
</implements>
<!-- javax.baja.tag.EntityWrapper(javax.baja.tag.Entity, javax.baja.sys.BFacets) -->
<constructor name="EntityWrapper" public="true">
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.tag.EntityWrapper.getOrdToEntity() -->
<method name="getOrdToEntity"  public="true">
<description/>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.naming.BOrd"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.tag.EntityWrapper.tags() -->
<method name="tags"  public="true">
<description/>
<return>
<type class="javax.baja.tag.Tags"/>
</return>
</method>

<!-- javax.baja.tag.EntityWrapper.relations() -->
<method name="relations"  public="true">
<description/>
<return>
<type class="javax.baja.tag.Relations"/>
</return>
</method>

</class>
</bajadoc>
