<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.session.INiagaraSuperSession" name="INiagaraSuperSession" packageName="javax.baja.session" public="true" interface="true" abstract="true" category="interface">
<description>
Provides a public interface to methods in a Niagara&#xa; Super Session that need to be part of the public API.&#xa;&#xa; NOTE: While this interface is part of the public API,&#xa; it is subject to change and should only be implemented&#xa; by the &lt;code&gt;<see ref="com.tridium.session.NiagaraSuperSession">com.tridium.session.NiagaraSuperSession</see>&lt;/code&gt;&#xa; class.
</description>
<tag name="@author">Bill Smith on 5/5/2016</tag>
<!-- javax.baja.session.INiagaraSuperSession.getCsrfToken() -->
<method name="getCsrfToken"  public="true" abstract="true">
<description>
Returns a unique csrf token for this session
</description>
<return>
<type class="java.lang.String"/>
<description>
csrf token as a base64 string
</description>
</return>
</method>

<!-- javax.baja.session.INiagaraSuperSession.verifyCsrfToken(java.lang.String) -->
<method name="verifyCsrfToken"  public="true" abstract="true">
<description>
Compares the provided csrfToken with the current session&#xa; to see if it matches
</description>
<parameter name="csrfToken">
<type class="java.lang.String"/>
<description>
the csrf token to verify
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.session.CsrfException"/>
<description>
if token fails to validate
</description>
</throws>
</method>

</class>
</bajadoc>
