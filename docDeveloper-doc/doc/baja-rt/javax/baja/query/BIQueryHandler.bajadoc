<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.query.BIQueryHandler" name="BIQueryHandler" packageName="javax.baja.query" public="true" interface="true" abstract="true" category="interface">
<description>
A BIQueryHandler processes a query on a specific target scope.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">01/15/2014</tag>
<tag name="@since">Niagara 4.0</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- javax.baja.query.BIQueryHandler.canHandle(javax.baja.naming.OrdTarget, javax.baja.query.BQueryScheme) -->
<method name="canHandle"  public="true" abstract="true">
<description>
Determine whether this QueryHandler can handle a query&#xa; for the specified scope and scheme.
</description>
<parameter name="scope">
<type class="javax.baja.naming.OrdTarget"/>
<description>
A OrdTarget whose object specifies the scope&#xa;              of a query.
</description>
</parameter>
<parameter name="scheme">
<type class="javax.baja.query.BQueryScheme"/>
<description>
The scheme for the query that needs to be processed.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
boolean
</description>
</return>
</method>

<!-- javax.baja.query.BIQueryHandler.query(javax.baja.naming.OrdTarget, javax.baja.naming.OrdQuery) -->
<method name="query"  public="true" abstract="true">
<description>
Handle the specified query against the target scope.
</description>
<parameter name="scope">
<type class="javax.baja.naming.OrdTarget"/>
<description>
The scope of the query to be processed.  This represents&#xa;              the collection of objects that the query will be processed&#xa;              against.  In most cases, the scope object will either be&#xa;              a BISpace or a BISpaceNode.
</description>
</parameter>
<parameter name="query">
<type class="javax.baja.naming.OrdQuery"/>
<description>
The query to be processed.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.util.CloseableIterator">
<args>
<type class="javax.baja.tag.Entity"/>
</args>
</parameterizedType>
<description>
CloseableIterator
</description>
</return>
</method>

<!-- javax.baja.query.BIQueryHandler.validateQueryOrds(javax.baja.naming.BOrdList) -->
<method name="validateQueryOrds"  public="true" static="true">
<description>
Convenience method that can be called to perform default validation against&#xa; the given query ORDs. The validation ensures that only the &#x22;station&#x22;, &#x22;slot&#x22;,&#xa; &#x22;h&#x22;, &#x22;neql&#x22;, &#x22;bql&#x22;, &#x22;namespace&#x22;, &#x22;sys&#x22;, &#x22;nspace&#x22;, &#x22;virtual&#x22;, &#x22;single&#x22;, and&#xa; &#x22;hierarchy&#x22; ORD schemes are allowed to be present in the given query ORDs.
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="queryOrds">
<type class="javax.baja.naming.BOrdList"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.sys.LocalizableException"/>
<description>
If the validation fails, this exception is thrown&#xa; indicating the reason for the validation failure
</description>
</throws>
</method>

<!-- javax.baja.query.BIQueryHandler.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.query.BIQueryHandler.VALID_QUERY_ORD_SCHEMES -->
<field name="VALID_QUERY_ORD_SCHEMES"  public="true" static="true" final="true">
<parameterizedType class="java.util.Set">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
<description>
The default set of valid ORD schemes that can be used in a query ORD.
</description>
<tag name="@since">Niagara 4.4</tag>
</field>

<!-- javax.baja.query.BIQueryHandler.TRUSTED_QUERY_HANDLERS -->
<field name="TRUSTED_QUERY_HANDLERS"  public="true" static="true" final="true">
<parameterizedType class="java.util.Set">
<args>
<type class="javax.baja.util.BTypeSpec"/>
</args>
</parameterizedType>
<description>
The set of all query handlers trusted to do their own permission checking
</description>
<tag name="@since">Niagara 4.6</tag>
</field>

</class>
</bajadoc>
