<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.timezone.DstRule" name="DstRule" packageName="javax.baja.timezone" public="true" final="true">
<description>
DstRule is a rule for determining the start or end time for daylight&#xa; savings time in a timezone.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">09 Mar 2004</tag>
<tag name="@version">$Revision: 27$ $Date: 5/26/10 10:07:01 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.timezone.DstRule.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true" static="true">
<description>
Framework support only, this method should not be used by developers.
</description>
<parameter name="cmd">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeExact(javax.baja.sys.BTime, javax.baja.sys.BMonth, int) -->
<method name="makeExact"  public="true" static="true">
<description>
Create a rule for an exact day of the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day of the boundary.  This is&#xa;   expressed in wall time.
</description>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
<description>
The month of the boundary.
</description>
</parameter>
<parameter name="day">
<type class="int"/>
<description>
The day of the boundary.
</description>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeExact(javax.baja.sys.BTime, int, javax.baja.sys.BMonth, int) -->
<method name="makeExact"  public="true" static="true">
<description>
Create a rule for an exact day of the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day of the boundary.
</description>
</parameter>
<parameter name="timeMode">
<type class="int"/>
<description>
Indicates how the time is specified&#xa;   (WALL_TIME, STANDARD_TIME, or UTC_TIME).
</description>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
<description>
The month of the boundary.
</description>
</parameter>
<parameter name="day">
<type class="int"/>
<description>
The day of the boundary.
</description>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeWeekday(javax.baja.sys.BTime, int, javax.baja.sys.BWeekday, javax.baja.sys.BMonth) -->
<method name="makeWeekday"  public="true" static="true">
<description>
Create a rule for a specific weekday within a week in the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day of the boundary.  This is&#xa;   expressed in wall time.
</description>
</parameter>
<parameter name="week">
<type class="int"/>
<description>
The week within the month&#xa;  (FIRST, SECOND, THIRD, FOURTH, FIFTH, or LAST).
</description>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
<description>
The weekday of the boundary.
</description>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
<description>
The month of the boundary.
</description>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeWeekday(javax.baja.sys.BTime, int, int, javax.baja.sys.BWeekday, javax.baja.sys.BMonth) -->
<method name="makeWeekday"  public="true" static="true">
<description>
Create a rule for a specific weekday within a week in the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day of the boundary.
</description>
</parameter>
<parameter name="timeMode">
<type class="int"/>
<description>
Indicates how the time is specified&#xa;   (WALL_TIME, STANDARD_TIME, or UTC_TIME).
</description>
</parameter>
<parameter name="week">
<type class="int"/>
<description>
The week within the month&#xa;  (FIRST, SECOND, THIRD, FOURTH, FIFTH, or LAST).
</description>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
<description>
The weekday of the boundary.
</description>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
<description>
The month of the boundary.
</description>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeOnOrAfter(javax.baja.sys.BTime, javax.baja.sys.BMonth, int, javax.baja.sys.BWeekday) -->
<method name="makeOnOrAfter"  public="true" static="true">
<description>
Create a rule for a specific weekday on or after the specified day&#xa; of the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
</parameter>
<parameter name="day">
<type class="int"/>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeOnOrAfter(javax.baja.sys.BTime, int, javax.baja.sys.BMonth, int, javax.baja.sys.BWeekday) -->
<method name="makeOnOrAfter"  public="true" static="true">
<description>
Create a rule for a specific weekday on or before the specified day&#xa; of the month.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
</parameter>
<parameter name="timeMode">
<type class="int"/>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
</parameter>
<parameter name="day">
<type class="int"/>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeOnOrBefore(javax.baja.sys.BTime, javax.baja.sys.BMonth, int, javax.baja.sys.BWeekday) -->
<method name="makeOnOrBefore"  public="true" static="true">
<description/>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
</parameter>
<parameter name="day">
<type class="int"/>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.makeOnOrBefore(javax.baja.sys.BTime, int, javax.baja.sys.BMonth, int, javax.baja.sys.BWeekday) -->
<method name="makeOnOrBefore"  public="true" static="true">
<description/>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
</parameter>
<parameter name="timeMode">
<type class="int"/>
</parameter>
<parameter name="month">
<type class="javax.baja.sys.BMonth"/>
</parameter>
<parameter name="day">
<type class="int"/>
</parameter>
<parameter name="weekday">
<type class="javax.baja.sys.BWeekday"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getTime() -->
<method name="getTime"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getTimeMode() -->
<method name="getTimeMode"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getWeek() -->
<method name="getWeek"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getWeekday() -->
<method name="getWeekday"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BWeekday"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getMonth() -->
<method name="getMonth"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BMonth"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getDay() -->
<method name="getDay"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getDayMode() -->
<method name="getDayMode"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getUtcDayOfMonth(int, javax.baja.timezone.DstRule) -->
<method name="getUtcDayOfMonth"  public="true" static="true">
<description>
Retrieve the day (Day of Month 1, 2, 3) on which the provided&#xa; daylight saving rule &#x22;day mode&#x22; expression would evaluate to in the&#xa; UTC time zone. Not guaranteed to be the same day as if this&#xa; rule was evaluated in the local time zone, or if the &#x22;time mode&#x22;&#xa; expression associated with this rule caused the day of the month&#xa; to change when evaluated.&#xa;&#xa; For more accurate results, use the getTime() function
</description>
<tag name="@since">Niagara 4.0</tag>
<parameter name="year">
<type class="int"/>
<description>
The target year.
</description>
</parameter>
<parameter name="rule">
<type class="javax.baja.timezone.DstRule"/>
<description>
The rule to evaluate.
</description>
</parameter>
<return>
<type class="int"/>
<description>
Returns The day of the month for this rule in the specified year.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getTime(int, javax.baja.timezone.BTimeZone, int) -->
<method name="getTime"  public="true" final="true" synchronized="true">
<description>
Get the time specified by this rule in the specified year.&#xa; If this rule doesn&#x27;t specify a time, BAbsTime.NULL is returned.
</description>
<parameter name="year">
<type class="int"/>
<description>
The target year.
</description>
</parameter>
<parameter name="timeZone">
<type class="javax.baja.timezone.BTimeZone"/>
<description>
The time zone of the result.
</description>
</parameter>
<parameter name="boundary">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BAbsTime"/>
<description>
Returns the time for this rule in the specified year.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.getWallTimeRule(javax.baja.timezone.DstRule, int, javax.baja.timezone.BTimeZone) -->
<method name="getWallTimeRule"  public="true" static="true">
<description>
Convert the given rule to a wall-time based rule, or return null&#xa; if conversion is impossible.
</description>
<parameter name="rule">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<parameter name="boundary">
<type class="int"/>
</parameter>
<parameter name="tz">
<type class="javax.baja.timezone.BTimeZone"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.asWallTimeRule(int, javax.baja.timezone.BTimeZone) -->
<method name="asWallTimeRule"  public="true">
<description>
Convert this rule to a wall-time based rule, or return null&#xa; if conversion is impossible.
</description>
<parameter name="boundary">
<type class="int"/>
</parameter>
<parameter name="tz">
<type class="javax.baja.timezone.BTimeZone"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.asWeekdayRule(javax.baja.timezone.DstRule) -->
<method name="asWeekdayRule"  public="true" static="true">
<description>
If the given ON_OR_AFTER, ON_OR_BEFORE rule can be cleanly expressed as&#xa; WEEKDAY, then convert it for broader platform support
</description>
<parameter name="rule">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
<throws>
<type class="javax.baja.timezone.TimeZoneException"/>
</throws>
</method>

<!-- javax.baja.timezone.DstRule.equals(javax.baja.timezone.DstRule, javax.baja.timezone.DstRule) -->
<method name="equals"  public="true" static="true">
<description>
Compare two rules for equality.
</description>
<parameter name="r1">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<parameter name="r2">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if the rules have the exact same&#xa;   parameters.  Otherwise, returns false.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.isEquivalent(javax.baja.timezone.DstRule, javax.baja.timezone.DstRule, javax.baja.timezone.BTimeZone, int) -->
<method name="isEquivalent"  public="true" static="true">
<description>
Compare two rules for equivalence.
</description>
<parameter name="r1">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<parameter name="r2">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<parameter name="tz">
<type class="javax.baja.timezone.BTimeZone"/>
</parameter>
<parameter name="boundary">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if the rules will behave exactly&#xa; the same way.  Otherwise, returns false.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Compare this instance to the specified object for equality.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if o is a DstRule with the exact same&#xa;   parameters.  Otherwise, returns false.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.isEquivalent(javax.baja.timezone.DstRule, javax.baja.timezone.BTimeZone, int) -->
<method name="isEquivalent"  public="true">
<description>
Compare this instance to the specified object for equivalence.
</description>
<parameter name="o">
<type class="javax.baja.timezone.DstRule"/>
</parameter>
<parameter name="tz">
<type class="javax.baja.timezone.BTimeZone"/>
</parameter>
<parameter name="boundary">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if o is a DstRule with the exact same&#xa;   parameters.  Otherwise, returns false.
</description>
</return>
</method>

<!-- javax.baja.timezone.DstRule.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
Encode this instance to the specified output.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.timezone.DstRule.decode(java.io.DataInput) -->
<method name="decode"  public="true" static="true">
<description>
Decode an instance from ths specified input.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.timezone.DstRule.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Encode this instance to a string.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.timezone.DstRule.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true" static="true">
<description>
Decode an instance from the specified string.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.timezone.DstRule"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.timezone.DstRule.encodeDayMode(int) -->
<method name="encodeDayMode"  public="true" static="true">
<description>
Encode the day mode to a string.
</description>
<parameter name="dayMode">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.decodeDayMode(java.lang.String) -->
<method name="decodeDayMode"  public="true" static="true">
<description>
Decode the day mode from a string.
</description>
<parameter name="txt">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.encodeWeek(int) -->
<method name="encodeWeek"  public="true" static="true">
<description>
Encode the week to a string.
</description>
<parameter name="week">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.decodeWeek(java.lang.String) -->
<method name="decodeWeek"  public="true" static="true">
<description>
Decode the week from a string.
</description>
<parameter name="txt">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.encodeTimeMode(int) -->
<method name="encodeTimeMode"  public="true" static="true">
<description>
Encode the day mode to a string.
</description>
<parameter name="timeMode">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.decodeTimeMode(java.lang.String) -->
<method name="decodeTimeMode"  public="true" static="true">
<description>
Decode the time mode from a string.
</description>
<parameter name="txt">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.timezone.DstRule.UNDEFINED -->
<field name="UNDEFINED"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.WALL_TIME -->
<field name="WALL_TIME"  public="true" static="true" final="true">
<type class="short"/>
<description>
Indicates that the time of day is expressed in terms of the&#xa;      wall time.  That means that daylight savings time may be&#xa;      in effect.  For example, if start time is 2:00AM in wall time,&#xa;      then the start time is 2:00AM standard time.  If the end time&#xa;      is 2:00AM in wall time, then the end time is 2:00AM daylight&#xa;      savings time.
</description>
</field>

<!-- javax.baja.timezone.DstRule.STANDARD_TIME -->
<field name="STANDARD_TIME"  public="true" static="true" final="true">
<type class="short"/>
<description>
Indicates that the time of day is expressed in terms of standard&#xa;      time only, regardless of whether daylight savings time is in effect.
</description>
</field>

<!-- javax.baja.timezone.DstRule.UTC_TIME -->
<field name="UTC_TIME"  public="true" static="true" final="true">
<type class="short"/>
<description>
Indicates that the time of day is expressed in terms of UTC time.
</description>
</field>

<!-- javax.baja.timezone.DstRule.WEEKDAY -->
<field name="WEEKDAY"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.EXACT -->
<field name="EXACT"  public="true" static="true" final="true">
<type class="short"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.ON_OR_AFTER -->
<field name="ON_OR_AFTER"  public="true" static="true" final="true">
<type class="short"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.ON_OR_BEFORE -->
<field name="ON_OR_BEFORE"  public="true" static="true" final="true">
<type class="short"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.FIRST -->
<field name="FIRST"  public="true" static="true" final="true">
<type class="short"/>
<description>
The first week. (1-7)
</description>
</field>

<!-- javax.baja.timezone.DstRule.SECOND -->
<field name="SECOND"  public="true" static="true" final="true">
<type class="short"/>
<description>
The first week. (8-14)
</description>
</field>

<!-- javax.baja.timezone.DstRule.THIRD -->
<field name="THIRD"  public="true" static="true" final="true">
<type class="short"/>
<description>
The first week. (15-21)
</description>
</field>

<!-- javax.baja.timezone.DstRule.FOURTH -->
<field name="FOURTH"  public="true" static="true" final="true">
<type class="short"/>
<description>
The first week. (22-28)
</description>
</field>

<!-- javax.baja.timezone.DstRule.FIFTH -->
<field name="FIFTH"  public="true" static="true" final="true">
<type class="short"/>
<description>
The fifth week. (29-31)
</description>
</field>

<!-- javax.baja.timezone.DstRule.LAST -->
<field name="LAST"  public="true" static="true" final="true">
<type class="short"/>
<description>
The last week. (last 7 days of the month)
</description>
</field>

<!-- javax.baja.timezone.DstRule.START -->
<field name="START"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.timezone.DstRule.END -->
<field name="END"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

</class>
</bajadoc>
