<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.role.BRoleService" name="BRoleService" packageName="javax.baja.role" public="true">
<description>
BRoleService is the service used to manage &#xa; Security Roles.
</description>
<tag name="@author">Joseph Chandler</tag>
<tag name="@creation">30 Aug 14</tag>
<tag name="@version">4.0</tag>
<tag name="@since">Baja 4.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.sys.BIService"/>
</implements>
<implements>
<type class="javax.baja.role.BIRoleService"/>
</implements>
<implements>
<type class="javax.baja.util.BIRestrictedComponent"/>
</implements>
<property name="admin" flags="">
<type class="javax.baja.role.BAbstractRole"/>
<description>
Slot for the &lt;code&gt;admin&lt;/code&gt; property.&#xa; Predefined admin super user role.
</description>
<tag name="@see">#getAdmin</tag>
<tag name="@see">#setAdmin</tag>
</property>

<!-- javax.baja.role.BRoleService() -->
<constructor name="BRoleService" public="true">
<description/>
</constructor>

<!-- javax.baja.role.BRoleService.getAdmin() -->
<method name="getAdmin"  public="true">
<description>
Get the &lt;code&gt;admin&lt;/code&gt; property.&#xa; Predefined admin super user role.
</description>
<tag name="@see">#admin</tag>
<return>
<type class="javax.baja.role.BAbstractRole"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.setAdmin(javax.baja.role.BAbstractRole) -->
<method name="setAdmin"  public="true">
<description>
Set the &lt;code&gt;admin&lt;/code&gt; property.&#xa; Predefined admin super user role.
</description>
<tag name="@see">#admin</tag>
<parameter name="v">
<type class="javax.baja.role.BAbstractRole"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getService() -->
<method name="getService"  public="true" static="true">
<description>
Get the RoleService or throw ServiceNotFoundException.
</description>
<return>
<type class="javax.baja.role.BRoleService"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getServiceTypes() -->
<method name="getServiceTypes"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Register this component under &#x22;baja:RoleService&#x22;.
</description>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.serviceStarted() -->
<method name="serviceStarted"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Service start.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.role.BRoleService.serviceStopped() -->
<method name="serviceStopped"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Service stop.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.role.BRoleService.checkParentForRestrictedComponent(javax.baja.sys.BComponent, javax.baja.sys.Context) -->
<method name="checkParentForRestrictedComponent"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Only one allowed to live under the station&#x27;s BServiceContainer.&#xa; Only Super Users are allowed to add an instance of this type to the station.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.checkRemove(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="checkRemove"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.removed(javax.baja.sys.Property, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="removed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Remove deleted roles from all users
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description/>
</parameter>
<parameter name="oldValue">
<type class="javax.baja.sys.BValue"/>
<description/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.checkRename(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="checkRename"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="newName">
<type class="java.lang.String"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.checkAdd(java.lang.String, javax.baja.sys.BValue, int, javax.baja.sys.BFacets, javax.baja.sys.Context) -->
<method name="checkAdd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.renamed(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="renamed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rename the role in all users
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description/>
</parameter>
<parameter name="oldName">
<type class="java.lang.String"/>
<description/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.changedRole(javax.baja.role.BIRole, javax.baja.sys.Context) -->
<method name="changedRole"  public="true">
<description/>
<parameter name="role">
<type class="javax.baja.role.BIRole"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.clearPermissionsCache() -->
<method name="clearPermissionsCache"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getRole(java.lang.String) -->
<method name="getRole"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Locate a BIRole
</description>
<parameter name="roleIdentifier">
<type class="java.lang.String"/>
<description>
the identifier of the role being located. The supplied roleIdentifier MUST be an &lt;b&gt;escaped&lt;/b&gt; slot name.
</description>
</parameter>
<return>
<type class="javax.baja.role.BIRole"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getSourceIdentifier() -->
<method name="getSourceIdentifier"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.getRoleIds() -->
<method name="getRoleIds"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns the list of Role identifiers that this&#xa; role source can resolve.
</description>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
<description>
List of available roles The returned List will contain &lt;b&gt;escaped&lt;/b&gt; slot names.
</description>
</return>
</method>

<!-- javax.baja.role.BRoleService.getEnabledRoleIds() -->
<method name="getEnabledRoleIds"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns the list of enabled Role identifiers that this&#xa; role source can resolve.
</description>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
<description>
List of available roles. The returned List will contain &lt;b&gt;escaped&lt;/b&gt; slot names.
</description>
</return>
</method>

<!-- javax.baja.role.BRoleService.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.role.BRoleService.admin -->
<field name="admin"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;admin&lt;/code&gt; property.&#xa; Predefined admin super user role.
</description>
<tag name="@see">#getAdmin</tag>
<tag name="@see">#setAdmin</tag>
</field>

<!-- javax.baja.role.BRoleService.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.role.BRoleService.ADMIN_ROLE -->
<field name="ADMIN_ROLE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
