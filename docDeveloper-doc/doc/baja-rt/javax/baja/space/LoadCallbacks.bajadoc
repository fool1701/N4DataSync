<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.space.LoadCallbacks" name="LoadCallbacks" packageName="javax.baja.space" public="true">
<description>
LoadCallbacks provides a BComponentSpace the hooks to&#xa; lazy load components into its space as needed.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">23 Oct 01</tag>
<tag name="@version">$Revision: 8$ $Date: 12/20/06 4:50:40 PM EST$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.space.LoadCallbacks() -->
<constructor name="LoadCallbacks" public="true">
<description/>
</constructor>

<!-- javax.baja.space.LoadCallbacks.isLazyLoad() -->
<method name="isLazyLoad"  public="true">
<description>
Return true if this broker is supporting lazy load.  The&#xa; loadProperties() is only used if true is returned.  The&#xa; default implementation returns false.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.space.LoadCallbacks.loadSlots(javax.baja.sys.BComponent) -->
<method name="loadSlots"  public="true">
<description>
This is a hook for lazy loading all the dynamic slots &#xa; on the specified component.  It is invoked the first time &#xa; the BComplex.loadSlots() is called.  If the space is supporting &#xa; lazy load, then all the dynamic properties should be added &#xa; at this time.  This method is guaranteed to be called only &#xa; once per component instance.
</description>
<parameter name="c">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.space.LoadCallbacks.loadSlot(javax.baja.sys.BComponent, java.lang.String) -->
<method name="loadSlot"  public="true">
<description>
This is a hook for lazy loading a single dynamic slot &#xa; on the specified component (by slot name).  It is invoked during&#xa; slot path resolution.  If the space is supporting lazy load of&#xa; individual slots (ie. virtual spaces), then the dynamic property &#xa; specified by the given slot name should be added at this time.&#xa;&#xa; Returns the Slot loaded, or null if individual lazy loading is&#xa; not supported. If null is returned, try using loadSlots() instead.
</description>
<tag name="@since">Niagara 3.2</tag>
<parameter name="c">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="slotName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.Slot"/>
</return>
</method>

<!-- javax.baja.space.LoadCallbacks.newCopy(javax.baja.sys.BValue[], javax.baja.sys.CopyHints) -->
<method name="newCopy"  public="true">
<description>
This is a trap for BValue.newCopy().  If the space&#xa; doesn&#x27;t have its own cloning mechanism, then return null.&#xa; Otherwise the space should return a deep clone of the&#xa; specified values.&#xa; &lt;p&gt;&#xa; Default implementation returns null.
</description>
<parameter name="values">
<type class="javax.baja.sys.BValue" dimension="1"/>
</parameter>
<parameter name="hints">
<type class="javax.baja.sys.CopyHints"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue" dimension="1"/>
</return>
</method>

</class>
</bajadoc>
