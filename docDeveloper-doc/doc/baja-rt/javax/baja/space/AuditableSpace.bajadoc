<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.space.AuditableSpace" name="AuditableSpace" packageName="javax.baja.space" public="true" abstract="true" category="annotation">
<description>
AuditableSpace is a marker annotation to identify subclasses of &lt;code&gt;<see ref="javax.baja.space.BComponentSpace">BComponentSpace</see>&lt;/code&gt;&#xa; that are intended to be audited in &lt;code&gt;<see ref="com.tridium.sys.schema.ComplexSlotMap">com.tridium.sys.schema.ComplexSlotMap</see>&lt;/code&gt;.&#xa; A ComplexSlotMap whose space is a ComponentSpace TYPE or whose space is annotated&#xa; with this interface will allow audit(...) calls. Others will be ignored and logged.&#xa;&#xa; This annotation could be used for other purposes in the future, as long as they do&#xa; not conflict with its original intended purpose.  If its purpose is extended this&#xa; comment should be updated to reflect the changes.
</description>
<tag name="@author">Robert Staley on 03 Sept 2021</tag>
<tag name="@since">Niagara 4.12</tag>
<implements>
<type class="java.lang.annotation.Annotation"/>
</implements>
<annotation><type class="java.lang.annotation.Retention"/>
<elementValue name="value">
<annotationValue kind="enum">
<enumField name="RUNTIME"/>
<type class="java.lang.annotation.RetentionPolicy"/>
</annotationValue>
</elementValue>
</annotation>
<annotation><type class="java.lang.annotation.Target"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="enum">
<enumField name="TYPE"/>
<type class="java.lang.annotation.ElementType"/>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
</class>
</bajadoc>
