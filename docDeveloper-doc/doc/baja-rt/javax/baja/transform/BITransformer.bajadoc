<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.transform.BITransformer" name="BITransformer" packageName="javax.baja.transform" public="true" interface="true" abstract="true" category="interface">
<description>
A Transformer is essentially an object-to-InputStream mapping function. The&#xa; data coming out of the InputStream can be any format.&#xa; &lt;p&gt;&#xa; API Status: **Development**&#xa; &lt;p&gt;&#xa; Examples:&#xa; &lt;ul&gt;&#xa;   &lt;li&gt;Property Sheet to PDF&lt;/li&gt;&#xa;   &lt;li&gt;Chart to CSV&lt;/li&gt;&#xa;   &lt;li&gt;Text File to String&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@since">Niagara 4.8</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<typeParameters>
<typeVariable class="T">
<description>
the type of the object to be transformed
</description>
</typeVariable>
<typeVariable class="C">
<description>
the type of context supported by this transformer
</description>
<bounds>
<type class="javax.baja.sys.Context"/>
</bounds>
</typeVariable>
</typeParameters>
<!-- javax.baja.transform.BITransformer.getDisplayName(C) -->
<method name="getDisplayName"  public="true" abstract="true">
<description/>
<parameter name="cx">
<typeVariable class="C"/>
<description>
Context to be used for formatting or i18n. May be null.
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
A display name for this transformer.
</description>
</return>
</method>

<!-- javax.baja.transform.BITransformer.getIcon(C) -->
<method name="getIcon"  public="true" abstract="true">
<description/>
<parameter name="cx">
<typeVariable class="C"/>
<description>
Context to be used for formatting or i18n. May be null.
</description>
</parameter>
<return>
<type class="javax.baja.sys.BIcon"/>
<description>
An icon for this transformer.
</description>
</return>
</method>

<!-- javax.baja.transform.BITransformer.getMimeType() -->
<method name="getMimeType"  public="true" abstract="true">
<description/>
<return>
<type class="java.lang.String"/>
<description>
The MIME type of the data that will be output by this transformer.
</description>
</return>
</method>

<!-- javax.baja.transform.BITransformer.transform(T, C) -->
<method name="transform"  public="true" abstract="true">
<description/>
<parameter name="object">
<typeVariable class="T"/>
<description>
The object to transform
</description>
</parameter>
<parameter name="cx">
<typeVariable class="C"/>
</parameter>
<return>
<type class="java.io.InputStream"/>
<description>
The transformed data.
</description>
</return>
<throws>
<type class="java.io.IOException"/>
<description>
if the data could not be transformed
</description>
</throws>
</method>

<!-- javax.baja.transform.BITransformer.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
