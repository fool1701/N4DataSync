<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.user.BUserPrototypes" name="BUserPrototypes" packageName="javax.baja.user" public="true">
<description>
BUserPrototypes is the container for prototype users in&#xa; the user service.  The defaultUser defines the properties&#xa; for new users.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">16 Aug 2007</tag>
<tag name="@version">$Revision: 2$ $Date: 10/9/07 12:00:03 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.sys.IPropertyValidator"/>
</implements>
<property name="defaultPrototype" flags="">
<type class="javax.baja.user.BUser"/>
<description>
Slot for the &lt;code&gt;defaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#getDefaultPrototype</tag>
<tag name="@see">#setDefaultPrototype</tag>
</property>

<property name="alternateDefaultPrototype" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;alternateDefaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#getAlternateDefaultPrototype</tag>
<tag name="@see">#setAlternateDefaultPrototype</tag>
</property>

<topic name="userEvent" flags="">
<eventType>
<type class="javax.baja.user.BUserEvent"/>
</eventType><description>
Slot for the &lt;code&gt;userEvent&lt;/code&gt; topic.
</description>
<tag name="@see">#fireUserEvent</tag>
</topic>

<!-- javax.baja.user.BUserPrototypes() -->
<constructor name="BUserPrototypes" public="true">
<description/>
</constructor>

<!-- javax.baja.user.BUserPrototypes.getDefaultPrototype() -->
<method name="getDefaultPrototype"  public="true">
<description>
Get the &lt;code&gt;defaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#defaultPrototype</tag>
<return>
<type class="javax.baja.user.BUser"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.setDefaultPrototype(javax.baja.user.BUser) -->
<method name="setDefaultPrototype"  public="true">
<description>
Set the &lt;code&gt;defaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#defaultPrototype</tag>
<parameter name="v">
<type class="javax.baja.user.BUser"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getAlternateDefaultPrototype() -->
<method name="getAlternateDefaultPrototype"  public="true">
<description>
Get the &lt;code&gt;alternateDefaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#alternateDefaultPrototype</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.setAlternateDefaultPrototype(java.lang.String) -->
<method name="setAlternateDefaultPrototype"  public="true">
<description>
Set the &lt;code&gt;alternateDefaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#alternateDefaultPrototype</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.fireUserEvent(javax.baja.user.BUserEvent) -->
<method name="fireUserEvent"  public="true">
<description>
Fire an event for the &lt;code&gt;userEvent&lt;/code&gt; topic.
</description>
<tag name="@see">#userEvent</tag>
<parameter name="event">
<type class="javax.baja.user.BUserEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.makeDefaultPrototype() -->
<method name="makeDefaultPrototype"  public="true" static="true">
<description>
Create the default prototype.
</description>
<return>
<type class="javax.baja.user.BUser"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getPrototypeNames() -->
<method name="getPrototypeNames"  public="true">
<description>
Get the names of the prototypes not including the default user.
</description>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getPrototypes() -->
<method name="getPrototypes"  public="true">
<description>
get all children of type BUser or BUserPrototype
</description>
<return>
<type class="javax.baja.sys.BComponent" dimension="1"/>
<description>
array of prototypes
</description>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.getPropertyValidator(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="getPropertyValidator"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4U1</tag>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.sys.IPropertyValidator"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.validateSet(javax.baja.sys.Validatable, javax.baja.sys.Context) -->
<method name="validateSet"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4U1</tag>
<parameter name="validatable">
<type class="javax.baja.sys.Validatable"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.checkAdd(java.lang.String, javax.baja.sys.BValue, int, javax.baja.sys.BFacets, javax.baja.sys.Context) -->
<method name="checkAdd"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4U1</tag>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.checkRename(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="checkRename"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4U1</tag>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="newName">
<type class="java.lang.String"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.user.BUserPrototypes.started() -->
<method name="started"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.user.BUserPrototypes.defaultPrototype -->
<field name="defaultPrototype"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;defaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#getDefaultPrototype</tag>
<tag name="@see">#setDefaultPrototype</tag>
</field>

<!-- javax.baja.user.BUserPrototypes.alternateDefaultPrototype -->
<field name="alternateDefaultPrototype"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;alternateDefaultPrototype&lt;/code&gt; property.
</description>
<tag name="@see">#getAlternateDefaultPrototype</tag>
<tag name="@see">#setAlternateDefaultPrototype</tag>
</field>

<!-- javax.baja.user.BUserPrototypes.userEvent -->
<field name="userEvent"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;userEvent&lt;/code&gt; topic.
</description>
<tag name="@see">#fireUserEvent</tag>
</field>

<!-- javax.baja.user.BUserPrototypes.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
