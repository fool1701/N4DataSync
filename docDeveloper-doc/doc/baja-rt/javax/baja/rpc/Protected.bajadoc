<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.rpc.Protected" name="Protected" packageName="javax.baja.rpc" public="true" abstract="true" category="annotation">
<description>
A protected security target that must be resolved and checked before&#xa; a &lt;code&gt;<see ref="javax.baja.rpc.NiagaraRpc">NiagaraRpc</see>&lt;/code&gt; can be invoked.
</description>
<tag name="@see">NiagaraRpc</tag>
<tag name="@author">Gareth Johnson on 17/09/2015.</tag>
<tag name="@since">Niagara 4.1</tag>
<implements>
<type class="java.lang.annotation.Annotation"/>
</implements>
<!-- javax.baja.rpc.Protected.ord() -->
<annotationElement name="ord"  public="true">
<description>
The ORD to the security target to resolve. The ORD must resolve&#xa; to a single BIProtected instance.&#xa; For example, &#x27;service:baja:UserService&#x27;.
</description>
<return>
<type class="java.lang.String"/>
<description>
The ORD to the security target.
</description>
</return>
</annotationElement>

<!-- javax.baja.rpc.Protected.permissions() -->
<annotationElement name="permissions"  public="true">
<description>
The permissions necessary in order to invoke the RPC.&#xa; For example, admin read, write and invoke permissions would be &#x27;RWI&#x27;.&#xa; &lt;p&gt;&#xa; If no permissions are to be used, the user can use the &#x27;unrestricted&#x27; keyword.&#xa; &lt;/p&gt;
</description>
<tag name="@see">javax.baja.security.BPermissions</tag>
<return>
<type class="java.lang.String"/>
<description>
The permissions.
</description>
</return>
</annotationElement>

</class>
</bajadoc>
