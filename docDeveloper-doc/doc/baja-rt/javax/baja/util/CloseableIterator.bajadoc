<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.CloseableIterator" name="CloseableIterator" packageName="javax.baja.util" public="true" interface="true" abstract="true" category="interface">
<description>
An auto-closeable Iterator interface that is returned by BIQueryHandler.&#xa;&#xa; As documented for the &lt;code&gt;<see ref="java.lang.AutoCloseable#close()">AutoCloseable#close()</see>&lt;/code&gt; method that this&#xa; interface inherits, even though the close() method is declared to throw&#xa; &lt;code&gt;<see ref="java.lang.Exception">Exception</see>&lt;/code&gt;, implementers should throw more specific exceptions&#xa; (excluding &lt;code&gt;<see ref="java.lang.InterruptedException">InterruptedException</see>&lt;/code&gt;), or declare close() to throw no&#xa; exceptions at all. This is to prevent the possibility of throwing an&#xa; &lt;code&gt;<see ref="java.lang.InterruptedException">InterruptedException</see>&lt;/code&gt;, which causes compilation warnings and can lead&#xa; to undesirable side effects.&#xa;&#xa; In cases where the CloseableIterator interface class is used in a&#xa; try-with-resources block, assuming the underlying concrete implementation of&#xa; the iterator cannot throw &lt;code&gt;<see ref="java.lang.InterruptedException">InterruptedException</see>&lt;/code&gt;, it is ok to suppress&#xa; compilation warnings by adding the @SuppressWarnings(&#x22;try&#x22;) annotation to the&#xa; method.
</description>
<tag name="@author">Erik Test</tag>
<tag name="@creation">2/21/2017</tag>
<tag name="@since">Niagara 4.6</tag>
<implements>
<type class="java.lang.AutoCloseable"/>
</implements>
<implements>
<parameterizedType class="java.util.Iterator">
<args>
<typeVariable class="T"/>
</args>
</parameterizedType>
</implements>
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;try&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<typeParameters>
<typeVariable class="T">
</typeVariable>
</typeParameters>
</class>
</bajadoc>
