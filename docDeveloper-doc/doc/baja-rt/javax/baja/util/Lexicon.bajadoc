<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.Lexicon" name="Lexicon" packageName="javax.baja.util" public="true">
<description>
Lexicon is a map of name/value pairs for a specific locale.
</description>
<tag name="@author">Brian Frank on 23 Jan 02</tag>
<tag name="@version">$Revision: 18$ $Date: 7/7/2011 2:03:50 PM$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.util.Lexicon(javax.baja.sys.BModule, java.lang.String, java.lang.String, java.lang.String) -->
<constructor name="Lexicon" protected="true">
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="language">
<type class="java.lang.String"/>
</parameter>
<parameter name="country">
<type class="java.lang.String"/>
</parameter>
<parameter name="variant">
<type class="java.lang.String"/>
</parameter>
<description>
Construct and load the lexicon for the specified&#xa; module and lexicon locale identifiers.
</description>
</constructor>

<!-- javax.baja.util.Lexicon.make(javax.baja.sys.BModule, java.lang.String, java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and locale information.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="lang">
<type class="java.lang.String"/>
</parameter>
<parameter name="country">
<type class="java.lang.String"/>
</parameter>
<parameter name="variant">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(javax.baja.sys.BModule, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and language.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="lang">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.String, java.lang.String, java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and locale information.
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="lang">
<type class="java.lang.String"/>
</parameter>
<parameter name="country">
<type class="java.lang.String"/>
</parameter>
<parameter name="variant">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and language.
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="lang">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(javax.baja.sys.BModule, java.util.Locale) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and locale.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="locale">
<type class="java.util.Locale"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(javax.baja.sys.BModule, javax.baja.sys.Context) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and language&#xa; configured in the give Context.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.String, java.util.Locale) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and locale.
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="locale">
<type class="java.util.Locale"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.String, javax.baja.sys.Context) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module and language&#xa; configured in the give Context.
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for the specified module use Locale.getDefault().
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.make(java.lang.Class&lt;?&gt;) -->
<method name="make"  public="true" static="true">
<description>
Get the lexicon for Sys.getModuleForClass(cls) and Locale.getDefault().
</description>
<parameter name="cls">
<parameterizedType class="java.lang.Class">
<args>
<wildcardType class="?">
</wildcardType>
</args>
</parameterizedType>
</parameter>
<return>
<type class="javax.baja.util.Lexicon"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.removeUnderscore(java.lang.String) -->
<method name="removeUnderscore"  public="true" static="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;UnusedDeclaration&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.init(javax.baja.sys.BModule, java.lang.String, java.lang.String) -->
<method name="init"  protected="true">
<description>
Initializes the module and language Properties.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="language">
<type class="java.lang.String"/>
</parameter>
<parameter name="localeKey">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getModuleProperties() -->
<method name="getModuleProperties"  public="true">
<description>
Get an unsafe reference to the module properties.
</description>
<return>
<type class="java.util.Properties"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getLanguageProperties() -->
<method name="getLanguageProperties"  public="true">
<description>
Get an unsafe reference to the lang properties.
</description>
<return>
<type class="java.util.Properties"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.get(java.lang.String, java.lang.String) -->
<method name="get"  public="true">
<description>
Lookup the value for the specified key.  If the&#xa; key is not contained by the Lexicon then return&#xa; the def value.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.get(java.lang.String) -->
<method name="get"  public="true">
<description>
Lookup the value for the specified key, or return&#xa; null if the key is not contained by the Lexicon.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getText(java.lang.String) -->
<method name="getText"  public="true">
<description>
Get a text value from the lexicon.  If not&#xa; found then return the key as fallback value.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getText(java.lang.String, java.lang.Object...) -->
<method name="getText"  public="true" isVarargs="true">
<description>
Get a text value from the lexicon and format it using&#xa; a MessageFormat with the specified arguments.  If the&#xa; text is not found then return the key string.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getTextAsName(java.lang.String) -->
<method name="getTextAsName"  public="true">
<description>
This is &lt;code&gt;SlotPath.escape(getText(key))&lt;/code&gt;.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getHtmlSafe(java.lang.String) -->
<method name="getHtmlSafe"  public="true">
<description>
Lookup the value for the specified key, or return&#xa; null if the key is not contained by the Lexicon.
</description>
<parameter name="key">
<type class="java.lang.String"/>
<description>
- The lexicon key
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
- The safe lex value
</description>
</return>
</method>

<!-- javax.baja.util.Lexicon.getHtmlSafe(java.lang.String, java.lang.String) -->
<method name="getHtmlSafe"  public="true">
<description>
Lookup the value for the specified key, or return&#xa; passed in default value if the key is not contained by the Lexicon.
</description>
<parameter name="key">
<type class="java.lang.String"/>
<description>
- The lexicon key
</description>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
<description>
- Default value
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
- The safe lex value
</description>
</return>
</method>

<!-- javax.baja.util.Lexicon.getHtmlSafeText(java.lang.String) -->
<method name="getHtmlSafeText"  public="true">
<description>
Return escaped value of the key which is safe to display
</description>
<parameter name="key">
<type class="java.lang.String"/>
<description>
- The lexicon key
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
The safe String value
</description>
</return>
</method>

<!-- javax.baja.util.Lexicon.getHtmlSafeText(java.lang.String, java.lang.Object...) -->
<method name="getHtmlSafeText"  public="true" isVarargs="true">
<description>
Get a safe text value from the lexicon and format it using&#xa; a MessageFormat with the specified arguments.  If the&#xa; text is not found then return the key string.
</description>
<parameter name="key">
<type class="java.lang.String"/>
<description>
- The lexicon key
</description>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
<description>
- Array of formatting objects
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
The safe String value
</description>
</return>
</method>

<!-- javax.baja.util.Lexicon.toString() -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get string representation.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getInputStreamFromModule(javax.baja.sys.BModule, java.lang.String, boolean) -->
<method name="getInputStreamFromModule"  public="true" static="true">
<description>
Get an input stream from the default container module
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="localeKey">
<type class="java.lang.String"/>
</parameter>
<parameter name="isDefault">
<type class="boolean"/>
</parameter>
<return>
<type class="java.io.InputStream"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.util.Lexicon.getInputStreamsFromModule(javax.baja.sys.BModule, java.lang.String) -->
<method name="getInputStreamsFromModule"  public="true" static="true">
<description>
Get an input stream from alternate container modules
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="localeKey">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.io.InputStream" dimension="1"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.util.Lexicon.getInputStreamFromModule(javax.baja.registry.LexiconInfo) -->
<method name="getInputStreamFromModule"  public="true" static="true">
<description>
Get an input stream for the specified LexiconInfo.
</description>
<parameter name="li">
<type class="javax.baja.registry.LexiconInfo"/>
</parameter>
<return>
<type class="java.io.InputStream"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.util.Lexicon.getInputStream(javax.baja.sys.BModule, java.lang.String) -->
<method name="getInputStream"  public="true" static="true">
<description>
Get an input stream for the specified combo.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="localeKey">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.io.InputStream"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.util.Lexicon.getFileStore(javax.baja.sys.BModule, javax.baja.nre.platform.RuntimeProfile) -->
<method name="getFileStore"  protected="true" static="true">
<description>
Get a BIFileStore for the desired module and RuntimeProfile.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="profile">
<type class="javax.baja.nre.platform.RuntimeProfile"/>
</parameter>
<return>
<type class="javax.baja.file.BIFileStore"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.getExtendedFile(javax.baja.registry.LexiconInfo) -->
<method name="getExtendedFile"  protected="true" static="true">
<description>
Get a BIFile for the desired LexiconInfo
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="li">
<type class="javax.baja.registry.LexiconInfo"/>
</parameter>
<return>
<type class="javax.baja.file.BIFile"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.invalidateCache() -->
<method name="invalidateCache"  public="true" static="true">
<description>
Clear the existing lexicon cache.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.util.Lexicon.searchLexiconCache(java.lang.String) -->
<method name="searchLexiconCache"  public="true" static="true">
<description>
Search the current lexicon cache to find entries whose value matches&#xa; a given string. Return the target module, the property key, and the&#xa; lexicon container. Possible lexicon containers are the default module&#xa; (&lt;code&gt;module.lexicon&lt;/code&gt;), the Niagara default lexicon module&#xa; (&lt;code&gt;&amp;#x22;niagaraLexicon&amp;lt;Locale&amp;gt;&amp;#x22;&lt;/code&gt;), the&#xa; &lt;code&gt;!lexicon/&amp;lt;locale&amp;gt;/&amp;lt;module&amp;gt;.lexicon&lt;/code&gt; file, or a separate lexicon&#xa; module.
</description>
<parameter name="search">
<type class="java.lang.String"/>
</parameter>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="java.lang.String" dimension="1"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.util.Lexicon.LEXICON_HOME_PATH -->
<field name="LEXICON_HOME_PATH"  public="true" static="true" final="true">
<type class="javax.baja.file.FilePath"/>
<description>
Niagara&#x27;s default path for lexicons
</description>
</field>

<!-- javax.baja.util.Lexicon.module -->
<field name="module"  public="true" final="true">
<type class="javax.baja.sys.BModule"/>
<description>
Module of lexicon, this could be null if the module was not found
</description>
</field>

<!-- javax.baja.util.Lexicon.language -->
<field name="language"  public="true" final="true">
<type class="java.lang.String"/>
<description>
Language of lexicon
</description>
</field>

<!-- javax.baja.util.Lexicon.country -->
<field name="country"  public="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.util.Lexicon.variant -->
<field name="variant"  public="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
