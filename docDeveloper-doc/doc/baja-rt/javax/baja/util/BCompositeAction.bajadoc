<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.BCompositeAction" name="BCompositeAction" packageName="javax.baja.util" public="true">
<description>
BCompositeAction is an implementation of BAction&#xa; which maps to another action as the knob of a link.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">6 Aug 03</tag>
<tag name="@version">$Revision: 3$ $Date: 9/21/04 10:20:35 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BAction"/>
</extends>
<!-- javax.baja.util.BCompositeAction() -->
<constructor name="BCompositeAction" public="true">
<description/>
</constructor>

<!-- javax.baja.util.BCompositeAction.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.getMirror() -->
<method name="getMirror"  public="true">
<description>
If this action is linked to another action &#xa; via a knob, then return the mirror information.  &#xa; If not linked return null.
</description>
<return>
<type class="javax.baja.util.BCompositeAction$Mirror"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.getParameterType() -->
<method name="getParameterType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;getMirror().getParameterType()&lt;/code&gt;.&#xa; If no linked action return null.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.getParameterDefault() -->
<method name="getParameterDefault"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;getMirror().getParameterDefault()&lt;/code&gt;.&#xa; If no linked action return null.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.getFacets() -->
<method name="getFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the facets for the action or return BFacets.NULL.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.invoke(javax.baja.sys.BComponent, javax.baja.sys.BValue) -->
<method name="invoke"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return null.
</description>
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="arg">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.getReturnType() -->
<method name="getReturnType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return null.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.util.BCompositeAction.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
