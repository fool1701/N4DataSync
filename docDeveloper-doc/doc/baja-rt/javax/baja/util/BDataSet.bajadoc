<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.BDataSet" name="BDataSet" packageName="javax.baja.util" public="true" final="true">
<description>
A naive implementation of an immutable set of &lt;code&gt;<see ref="javax.baja.data.BIDataValue">BIDataValue</see>&lt;/code&gt;. It is strongly recommended&#xa; that this class not be used to store &#x22;large&#x22; sets of data values.
</description>
<tag name="@author">&lt;a href=&#x22;mailto:mgiannini@tridium.com&#x22;&gt;Matthew Giannini&lt;/a&gt;</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.util.BDataSet.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.make(javax.baja.data.BIDataValue...) -->
<method name="make"  public="true" static="true" isVarargs="true">
<description/>
<parameter name="values">
<type class="javax.baja.data.BIDataValue" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.util.BDataSet"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.make(java.util.Collection&lt;? extends javax.baja.data.BIDataValue&gt;) -->
<method name="make"  public="true" static="true">
<description/>
<parameter name="values">
<parameterizedType class="java.util.Collection">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.data.BIDataValue"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</parameter>
<return>
<type class="javax.baja.util.BDataSet"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.add(javax.baja.util.BDataSet) -->
<method name="add"  public="true">
<description/>
<parameter name="other">
<type class="javax.baja.util.BDataSet"/>
</parameter>
<return>
<type class="javax.baja.util.BDataSet"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.add(javax.baja.data.BIDataValue...) -->
<method name="add"  public="true" isVarargs="true">
<description/>
<parameter name="vals">
<type class="javax.baja.data.BIDataValue" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.util.BDataSet"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.remove(javax.baja.data.BIDataValue...) -->
<method name="remove"  public="true" isVarargs="true">
<description/>
<parameter name="vals">
<type class="javax.baja.data.BIDataValue" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.util.BDataSet"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.contains(javax.baja.data.BIDataValue) -->
<method name="contains"  public="true">
<description/>
<parameter name="value">
<type class="javax.baja.data.BIDataValue"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.size() -->
<method name="size"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.isEmpty() -->
<method name="isEmpty"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.asImmutableSet() -->
<method name="asImmutableSet"  public="true">
<description/>
<return>
<parameterizedType class="java.util.Set">
<args>
<type class="javax.baja.data.BIDataValue"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.util.BDataSet.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="encoder">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BDataSet.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="decoder">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BDataSet.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BDataSet.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BDataSet.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.util.BDataSet.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.util.BDataSet"/>
<description/>
</field>

<!-- javax.baja.util.BDataSet.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
