<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.LexiconText" name="LexiconText" packageName="javax.baja.util" public="true">
<description>
LexiconText is a place holder for a module name and &#xa; lexicon property name used to provide context sensitive &#xa; text.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">23 Jan 02</tag>
<tag name="@version">$Revision: 5$ $Date: 11/22/06 5:05:02 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.util.LexiconText(javax.baja.sys.BModule, java.lang.String) -->
<constructor name="LexiconText" protected="true">
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<description>
Construct for the speicifed module and key.
</description>
</constructor>

<!-- javax.baja.util.LexiconText.make(javax.baja.sys.Type, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Convenience for &lt;code&gt;make(typeInModule.getModule(), key)&lt;/code&gt;
</description>
<parameter name="typeInModule">
<type class="javax.baja.sys.Type"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.LexiconText"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.make(javax.baja.sys.BModule, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get a place holder for the specified module and key.
</description>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.LexiconText"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.make(java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Get a place holder for the specified module and key.
</description>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.util.LexiconText"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.get(javax.baja.sys.Context, java.lang.String) -->
<method name="get"  public="true">
<description>
Lookup the value for the specified key.  If the&#xa; key is not contained by the Lexicon then return &#xa; the def value.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.getText(javax.baja.sys.Context) -->
<method name="getText"  public="true">
<description>
Get a text value from the lexicon.  If not &#xa; found then return the key as fallback value.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.getText(javax.baja.sys.Context, java.lang.Object[]) -->
<method name="getText"  public="true">
<description>
Get a text value from the lexicon and format it using &#xa; a MessageFormat with the specified arguments.  If the &#xa; text is not found then return the key string.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.getHtmlSafeText(javax.baja.sys.Context) -->
<method name="getHtmlSafeText"  public="true">
<description>
Get an escape text value.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
The safe String value
</description>
</return>
</method>

<!-- javax.baja.util.LexiconText.getHtmlSafeText(javax.baja.sys.Context, java.lang.Object...) -->
<method name="getHtmlSafeText"  public="true" isVarargs="true">
<description>
Get an escape text value from the lexicon and format it using&#xa; a MessageFormat with the specified arguments.  If the&#xa; text is not found then return the escaped key string.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
The safe String value
</description>
</return>
</method>

<!-- javax.baja.util.LexiconText.toLocalizable(java.lang.Object...) -->
<method name="toLocalizable"  public="true" isVarargs="true">
<description>
Return this LexiconText as a Localizable
</description>
<tag name="@since">Niagara 4.1</tag>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.Localizable"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.toLocalizable(javax.baja.sys.Type, java.lang.String, java.lang.Object...) -->
<method name="toLocalizable"  public="true" static="true" isVarargs="true">
<description>
Return a localizable message with the given module name, lexicon key and lexicon args
</description>
<tag name="@since">Niagara 4.1</tag>
<parameter name="typeInModule">
<type class="javax.baja.sys.Type"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.Localizable"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.toLocalizable(javax.baja.sys.BModule, java.lang.String, java.lang.Object...) -->
<method name="toLocalizable"  public="true" static="true" isVarargs="true">
<description>
Return a localizable message with the given module name, lexicon key and lexicon args
</description>
<tag name="@since">Niagara 4.1</tag>
<parameter name="module">
<type class="javax.baja.sys.BModule"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.Localizable"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.toLocalizable(java.lang.String, java.lang.String, java.lang.Object...) -->
<method name="toLocalizable"  public="true" static="true" isVarargs="true">
<description>
Return a localizable message with the given module name, lexicon key and lexicon args
</description>
<tag name="@since">Niagara 4.1</tag>
<parameter name="module">
<type class="java.lang.String"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="args">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.Localizable"/>
</return>
</method>

<!-- javax.baja.util.LexiconText.module -->
<field name="module"  public="true" final="true">
<type class="javax.baja.sys.BModule"/>
<description>
Module
</description>
</field>

<!-- javax.baja.util.LexiconText.key -->
<field name="key"  public="true" final="true">
<type class="java.lang.String"/>
<description>
Key of text
</description>
</field>

</class>
</bajadoc>
