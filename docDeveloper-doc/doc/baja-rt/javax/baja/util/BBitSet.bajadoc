<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.util.BBitSet" name="BBitSet" packageName="javax.baja.util" public="true" final="true">
<description>
BBitSet is an array of bits.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">20 Aug 02</tag>
<tag name="@version">$Revision: 3$ $Date: 1/25/08 4:04:06 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.util.BBitSet.make(javax.baja.util.BBitSet, int, boolean) -->
<method name="make"  public="true" static="true">
<description>
Construct a new bitset by setting or clearing the specified bit.
</description>
<parameter name="orig">
<type class="javax.baja.util.BBitSet"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="state">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.util.BBitSet"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.getBit(int) -->
<method name="getBit"  public="true">
<description>
If the specified bit is set return true, &#xa; otherwise return false.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.hashCode() -->
<method name="hashCode"  public="true">
<description>
Hashcode for BBitSet is based on the algorthm&#xa; used by the JDK for java.lang.String and &#xa; java.rmi.MarshalledObject.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
BBitSet equality is based on equality of set bits.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
To string.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BBitSet is serialized using writeUTF().
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BBitSet.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BBitSet is unserialized using readUTF().
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BBitSet.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Encode to the string format which is a hex string of the bits.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Read the simple from its string format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.util.BBitSet.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.util.BBitSet.EMPTY -->
<field name="EMPTY"  public="true" static="true" final="true">
<type class="javax.baja.util.BBitSet"/>
<description>
The empty set has all bits cleared
</description>
</field>

<!-- javax.baja.util.BBitSet.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.util.BBitSet"/>
<description>
The default is EMPTY
</description>
</field>

<!-- javax.baja.util.BBitSet.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
