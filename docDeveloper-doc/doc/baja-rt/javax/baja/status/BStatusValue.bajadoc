<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.status.BStatusValue" name="BStatusValue" packageName="javax.baja.status" public="true" abstract="true">
<description>
BStatusValue is the base class for all status-value &#xa; pairs in the Baja control architecture.  The two most &#xa; common types are BStatusBoolean and BStatusNumeric which &#xa; model a binary and analog value respectively.
</description>
<tag name="@author">Dan Giorgis</tag>
<tag name="@creation">15 Nov 00</tag>
<tag name="@version">$Revision: 47$ $Date: 7/12/10 5:16:57 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="javax.baja.status.BIStatusValue"/>
</implements>
<property name="status" flags="r">
<type class="javax.baja.status.BStatus"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status property models the state of the&#xa; StatusValue using a consistent set of status flags&#xa; encapsulated by the BStatus class.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</property>

<!-- javax.baja.status.BStatusValue(javax.baja.status.BStatus) -->
<constructor name="BStatusValue" public="true">
<parameter name="status">
<type class="javax.baja.status.BStatus"/>
</parameter>
<description>
Constructor with status.
</description>
</constructor>

<!-- javax.baja.status.BStatusValue() -->
<constructor name="BStatusValue" public="true">
<description>
No argument constructor.
</description>
</constructor>

<!-- javax.baja.status.BStatusValue.getStatus() -->
<method name="getStatus"  public="true">
<description>
Get the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status property models the state of the&#xa; StatusValue using a consistent set of status flags&#xa; encapsulated by the BStatus class.
</description>
<tag name="@see">#status</tag>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatus(javax.baja.status.BStatus) -->
<method name="setStatus"  public="true">
<description>
Set the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status property models the state of the&#xa; StatusValue using a consistent set of status flags&#xa; encapsulated by the BStatus class.
</description>
<tag name="@see">#status</tag>
<parameter name="v">
<type class="javax.baja.status.BStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.make(javax.baja.sys.BObject) -->
<method name="make"  public="true" static="true">
<description>
Convenience for &lt;code&gt;make(obj, null)&lt;/code&gt;.
</description>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<return>
<type class="javax.baja.status.BIStatusValue"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.make(javax.baja.sys.BObject, javax.baja.sys.Context) -->
<method name="make"  public="true" static="true">
<description>
Attempt to map any BObject into a BIStatusValue.  If&#xa; the specified object is an instance of BIStatusValue&#xa; then just return it.  Otherwise attempt to coerce it&#xa; using BINumeric, BIBoolean, BIEnum, and BIStatus.
</description>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.status.BIStatusValue"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getValueValue() -->
<method name="getValueValue"  public="true" abstract="true">
<description>
Get the value as a BValue.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getValueProperty() -->
<method name="getValueProperty"  public="true" abstract="true">
<description>
Get the &#x22;value&#x22; property.
</description>
<return>
<type class="javax.baja.sys.Property"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setValueValue(javax.baja.sys.BValue) -->
<method name="setValueValue"  public="true">
<description>
Set the value as a BValue.
</description>
<parameter name="v">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusInAlarm(boolean) -->
<method name="setStatusInAlarm"  public="true">
<description>
Set or clear the alarm bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusFault(boolean) -->
<method name="setStatusFault"  public="true">
<description>
Set or clear the fault bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusOverridden(boolean) -->
<method name="setStatusOverridden"  public="true">
<description>
Set or clear the overridden bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusDisabled(boolean) -->
<method name="setStatusDisabled"  public="true">
<description>
Set or clear the disabled bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusNull(boolean) -->
<method name="setStatusNull"  public="true">
<description>
Set or clear the null bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusUnackedAlarm(boolean) -->
<method name="setStatusUnackedAlarm"  public="true">
<description>
Set or clear the unacked_alarm bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatusDown(boolean) -->
<method name="setStatusDown"  public="true">
<description>
Set or clear the down bit
</description>
<parameter name="x">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatus(int) -->
<method name="setStatus"  public="true">
<description>
Set the status bits.
</description>
<parameter name="bits">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.setStatus(java.lang.String, javax.baja.data.BIDataValue) -->
<method name="setStatus"  public="true">
<description>
Set the specified facet key/value pair in the status.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.data.BIDataValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getStatusValue() -->
<method name="getStatusValue"  public="true">
<description>
Return &lt;code&gt;this&lt;/code&gt;
</description>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getStatusValueFacets() -->
<method name="getStatusValueFacets"  public="true">
<description>
Return facets for this
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description>
Get the StatusValue as a String.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.valueToString(javax.baja.sys.Context) -->
<method name="valueToString"  public="true" abstract="true">
<description>
Get the value portion only of StatusValue as a String.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.getNvalue() -->
<method name="getNvalue"  public="true">
<description>
Return the value taking the Null Status into account&#xa; &lt;p&gt;&#xa; If the Status is null, the Property&#x27;s default value is returned.&#xa; If the Status is not null, the value is returned.
</description>
<tag name="@since">Niagara 3.6</tag>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.status.BStatusValue.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status property models the state of the&#xa; StatusValue using a consistent set of status flags&#xa; encapsulated by the BStatus class.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- javax.baja.status.BStatusValue.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
