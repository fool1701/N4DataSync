<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BEnum" name="BEnum" packageName="javax.baja.sys" public="true" abstract="true">
<description>
The BEnum is the abstract base class of BSimples which&#xa; have a discrete range of values represented by a BEnumRange.  &#xa; This includes BBoolean, BFrozenEnum, and BDynamicEnum.  An enum &#xa; is characterized by integer identifiers called &#x22;ordinals&#x22; and &#xa; string identifiers called &#x22;tags&#x22;.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">9 Jan 01</tag>
<tag name="@version">$Revision: 12$ $Date: 3/23/05 8:39:04 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<implements>
<type class="javax.baja.sys.BIEnum"/>
</implements>
<implements>
<type class="javax.baja.sys.BIComparable"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.sys.BEnum.getEnum() -->
<method name="getEnum"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BEnum"/>
<description>
this.
</description>
</return>
</method>

<!-- javax.baja.sys.BEnum.getEnumFacets() -->
<method name="getEnumFacets"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;BFacets.make(BFacets.RANGE, getRange())&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.compareTo(java.lang.Object) -->
<method name="compareTo"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Compare this instance to the specified BEnum instance.&#xa; BEnum uses the ordinal value as the basis for comparison.&#xa; Returns a negative integer, zero, or a positive integer as&#xa; the ordinal of this instance is less than, equal to, or&#xa; greater than the ordinal of specified instance.
</description>
<parameter name="x">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.isActive() -->
<method name="isActive"  public="true" abstract="true">
<description>
Return if this enum&#x27;s value is considered an &#xa; active state.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.getOrdinal() -->
<method name="getOrdinal"  public="true" abstract="true">
<description>
Every enum value has an ordinal value&#xa; represented as a 32 bit integer.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.getTag() -->
<method name="getTag"  public="true" abstract="true">
<description>
Get the String identifier of this enum value.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.getDisplayTag(javax.baja.sys.Context) -->
<method name="getDisplayTag"  public="true" abstract="true">
<description>
Get a user readable version of the tag identifier.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.getRange() -->
<method name="getRange"  public="true" abstract="true">
<description>
Get the range which encapsulates the list of &#xa; ordinal tag pairs for this enumeration.
</description>
<return>
<type class="javax.baja.sys.BEnumRange"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BEnum.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
