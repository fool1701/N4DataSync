<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BAction" name="BAction" packageName="javax.baja.sys" public="true" abstract="true">
<description>
The BAction is the object type used to add&#xa; new actions to a BComponent.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">28 Sept 00</tag>
<tag name="@version">$Revision: 14$ $Date: 3/28/05 9:23:09 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<!-- javax.baja.sys.BAction() -->
<constructor name="BAction" public="true">
<description/>
</constructor>

<!-- javax.baja.sys.BAction.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BAction.getParameterType() -->
<method name="getParameterType"  public="true" abstract="true">
<description>
Get the parameter type for the action, or&#xa; if the action takes no arguments return null.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BAction.getParameterDefault() -->
<method name="getParameterDefault"  public="true" abstract="true">
<description>
Get the default parameter to use for the &#xa; action, or null if the action takes no&#xa; arguments.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.sys.BAction.invoke(javax.baja.sys.BComponent, javax.baja.sys.BValue) -->
<method name="invoke"  public="true" abstract="true">
<description>
Invoke the action on the specified target with&#xa; given argument array.
</description>
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="arg">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.sys.BAction.getReturnType() -->
<method name="getReturnType"  public="true" abstract="true">
<description>
Get the return type for the action, or&#xa; null if the action doesn&#x27;t return a value.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BAction.getFacets() -->
<method name="getFacets"  public="true">
<description>
Get the facets for the action or return BFacets.NULL.&#xa; Default returns BFacets.NULL.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.sys.BAction.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.sys.BAction.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
