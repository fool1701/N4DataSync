<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BTime" name="BTime" packageName="javax.baja.sys" public="true" final="true">
<description>
BTime stores a time of day which is independent &#xa; of any date in the past or future.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">21 Feb 01</tag>
<tag name="@version">$Revision: 17$ $Date: 3/18/10 12:46:31 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<implements>
<type class="javax.baja.sys.BITime"/>
</implements>
<implements>
<type class="javax.baja.sys.BIComparable"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.sys.BTime.make(javax.baja.sys.BAbsTime) -->
<method name="make"  public="true" static="true">
<description>
Construct an instance which maps to time of day&#xa; of the specified BAbsTime.
</description>
<parameter name="absTime">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.sys.BTime.make(javax.baja.sys.BRelTime) -->
<method name="make"  public="true" static="true">
<description>
Constructs an instance representing the number of milliseconds&#xa; from midnight of the last partial day of the reltime.
</description>
<parameter name="relTime">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.sys.BTime.make(int, int, int) -->
<method name="make"  public="true" static="true">
<description>
Constructor for all fields defaulting millisecond to 0.
</description>
<parameter name="hour">
<type class="int"/>
</parameter>
<parameter name="min">
<type class="int"/>
</parameter>
<parameter name="sec">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.sys.BTime.make(int, int, int, int) -->
<method name="make"  public="true" static="true">
<description>
Constructor for all fields.
</description>
<parameter name="hour">
<type class="int"/>
</parameter>
<parameter name="min">
<type class="int"/>
</parameter>
<parameter name="sec">
<type class="int"/>
</parameter>
<parameter name="ms">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.sys.BTime.getHour() -->
<method name="getHour"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
<description>
The hour: 0-23.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.getMinute() -->
<method name="getMinute"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
<description>
The minute: 0-59.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.getSecond() -->
<method name="getSecond"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
<description>
The seconds: 0-59.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.getMillisecond() -->
<method name="getMillisecond"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
<description>
The millisecond: 0-999.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.getTimeOfDayMillis() -->
<method name="getTimeOfDayMillis"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Milliseconds since the start of the day.
</description>
<return>
<type class="long"/>
</return>
</method>

<!-- javax.baja.sys.BTime.add(javax.baja.sys.BRelTime) -->
<method name="add"  public="true" final="true">
<description>
Return a new time of day by adding the specified&#xa; duration.  If the result goes past midnight, then roll&#xa; into the next day.
</description>
<parameter name="duration">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.sys.BTime.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get a formatted string for the time.  Use the following context &#xa; facets to customize the format: SHOW_SECONDS, SHOW_MILLISECONDS, &#xa; and SHOW_TIMEZONE.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BTime.compareTo(java.lang.Object) -->
<method name="compareTo"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Compare to another BTime.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="int"/>
<description>
a negative integer, zero, or a &#xa;    positive integer as this object is less &#xa;    than, equal to, or greater than the &#xa;    specified object.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.isBefore(javax.baja.sys.BTime) -->
<method name="isBefore"  public="true">
<description/>
<parameter name="x">
<type class="javax.baja.sys.BTime"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the specified time is before this time.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.isAfter(javax.baja.sys.BTime) -->
<method name="isAfter"  public="true">
<description/>
<parameter name="x">
<type class="javax.baja.sys.BTime"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the specified time is after this time.
</description>
</return>
</method>

<!-- javax.baja.sys.BTime.hashCode() -->
<method name="hashCode"  public="true">
<description>
BTime hash code.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BTime.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Equals.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.sys.BTime.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BTime is serialized using: 1 byte hour, 1 byte&#xa; min, 1 byte sec, 2 bytes milliseconds.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BTime.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BTime is unserialized using: 1 byte hour, 1 byte&#xa; min, 1 byte sec, 2 bytes milliseconds.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BTime.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Write the simple in text format using the ISO 8601 &#xa; standard format of &#x22;hh:mm:ss.mmm&#x22;.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BTime.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Read the simple from text format conforming to &#xa; the ISO 8601 standard format of &#x22;hh:mm:ss.mmm&#x22;.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BTime.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.sys.BTime.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BTime.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.sys.BTime"/>
<description>
Get default BTime constant is midnight.
</description>
</field>

<!-- javax.baja.sys.BTime.MIDNIGHT -->
<field name="MIDNIGHT"  public="true" static="true" final="true">
<type class="javax.baja.sys.BTime"/>
<description/>
</field>

<!-- javax.baja.sys.BTime.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
