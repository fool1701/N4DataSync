<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.Context" name="Context" packageName="javax.baja.sys" public="true" interface="true" abstract="true" category="interface">
<description>
The Context interface is used in operations which&#xa; may perform differently depending on their context.&#xa; Examples include operations which may require auditing&#xa; or localization.
</description>
<tag name="@author">Brian Frank on 20 Feb 00</tag>
<tag name="@version">$Revision: 14$ $Date: 4/18/05 4:59:00 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.sys.Context.getBase() -->
<method name="getBase"  public="true" abstract="true">
<description>
If this Context wraps another Context, then return&#xa; the base Context.  Otherwise return null.
</description>
<return>
<type class="javax.baja.sys.Context"/>
</return>
</method>

<!-- javax.baja.sys.Context.getUser() -->
<method name="getUser"  public="true" abstract="true">
<description>
Get the user for the context of this operation,&#xa; or null if no user information is available.
</description>
<return>
<type class="javax.baja.user.BUser"/>
</return>
</method>

<!-- javax.baja.sys.Context.getFacets() -->
<method name="getFacets"  public="true" abstract="true">
<description>
Get the facets table.  This should never be null.&#xa; Return BFacets.DEFAULT if no facets are available.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.sys.Context.getFacet(java.lang.String) -->
<method name="getFacet"  public="true" abstract="true">
<description>
Get a facet value by name, or null.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- javax.baja.sys.Context.getLanguage() -->
<method name="getLanguage"  public="true" abstract="true">
<description>
Get the language code for the context operation.&#xa; This method should never return null.  As a default&#xa; return &lt;code&gt;<see ref="javax.baja.sys.Sys#getLanguage()">Sys#getLanguage()</see>&lt;/code&gt;.&#xa; &lt;p&gt;&#xa; Note that the returned language is not guaranteed to be in IETF format and&#xa; should not be naively passed to methods expecting such. See&#xa; &lt;code&gt;<see ref="javax.baja.sys.Context#getLanguageTag(javax.baja.sys.Context)">#getLanguageTag(Context)</see>&lt;/code&gt;.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.Context.getLanguageTag(javax.baja.sys.Context) -->
<method name="getLanguageTag"  public="true" static="true">
<description>
Return the IETF language tag that is the best match for the context&#x27;s&#xa; current locale. If the input Context or its language are null, this&#xa; defaults to using &lt;code&gt;<see ref="javax.baja.sys.Sys#getLanguage()">Sys#getLanguage()</see>&lt;/code&gt;.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
context to retrieve a language tag from
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
the IETF language tag that is the best match for the context&#x27;s&#xa; current locale. This can be passed to &lt;code&gt;Locale.forLanguageTag()&lt;/code&gt; and&#xa; similar methods.
</description>
</return>
</method>

<!-- javax.baja.sys.Context.getLanguageTag(java.lang.String) -->
<method name="getLanguageTag"  public="true" static="true">
<description>
Return the IETF language tag that is the best match for the given Niagara&#xa; language code. If the given language is null, defaults to using&#xa; &lt;code&gt;<see ref="javax.baja.sys.Sys#getLanguage()">Sys#getLanguage()</see>&lt;/code&gt;.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="language">
<type class="java.lang.String"/>
<description>
a language code in a format that Niagara understands,&#xa;                 e.g. &lt;code&gt;fr&lt;/code&gt; or &lt;code&gt;en_US&lt;/code&gt;
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
the IETF language tag that is the best match for the given language&#xa; code.
</description>
</return>
</method>

<!-- javax.baja.sys.Context.includes(javax.baja.sys.Context, javax.baja.sys.Context) -->
<method name="includes"  public="true" static="true">
<description>
Compares one context with another to determine if the context equals the other&#xa; or wraps the other.
</description>
<tag name="@since">Niagara 4.13</tag>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
the context being compared
</description>
</parameter>
<parameter name="other">
<type class="javax.baja.sys.Context"/>
<description>
the other context to compare
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true when context equals other or wraps other as a base
</description>
</return>
</method>

<!-- javax.baja.sys.Context.decoding -->
<field name="decoding"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when decoding&#xa; a component from a persistent data source (usually&#xa; a bog file).
</description>
</field>

<!-- javax.baja.sys.Context.copying -->
<field name="copying"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when copying&#xa; a component such as during newCopy() or copyFrom().
</description>
</field>

<!-- javax.baja.sys.Context.commit -->
<field name="commit"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when components&#xa; should commit the change instead of routing it to&#xa; their space.
</description>
</field>

<!-- javax.baja.sys.Context.skipValidate -->
<field name="skipValidate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed into a BComplex &lt;code&gt;set()&lt;/code&gt;&#xa; method when the &lt;code&gt;getPropertyValidator()&lt;/code&gt; callback on the BComplex&#xa; should be skipped entirely.  It indicates that property validation is not&#xa; necessary for a pending property change.  Note that it is only valid&#xa; in the current VM.  This means that if you use this context in a proxy&#xa; component space, it will not be used on the remote (master) component&#xa; space (validation may still occur on the remote VM).
</description>
<tag name="@since">Niagara 4.0</tag>
</field>

<!-- javax.baja.sys.Context.forceValidate -->
<field name="forceValidate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed into a BComplex &lt;code&gt;set()&lt;/code&gt;&#xa; method when the &lt;code&gt;getPropertyValidator()&lt;/code&gt; callback on the BComplex&#xa; should be called.  It indicates that property validation is&#xa; necessary for a pending property change.  Note that it is only valid&#xa; in the current VM.  This means that if you use this context in a proxy&#xa; component space, it will not be used on the remote (master) component&#xa; space.  However, this context simply forces validation to occur, but&#xa; there are other conditions that also cause validation to occur (see&#xa; method comments on &lt;code&gt;BComplex.getPropertyValidator()&lt;/code&gt;
</description>
<tag name="@since">Niagara 4.0</tag>
</field>

<!-- javax.baja.sys.Context.skipRemoveCheck -->
<field name="skipRemoveCheck"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when decoding&#xa; a component from a persistent data source (usually&#xa; a bog file).
</description>
<tag name="@since">Niagara 4.7</tag>
</field>

<!-- javax.baja.sys.Context.NULL -->
<field name="NULL"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context can be used instead of &lt;code&gt;null&lt;/code&gt; so that&#xa; the resulting code is more readable and strongly typed.
</description>
<tag name="@since">3.8</tag>
</field>

</class>
</bajadoc>
