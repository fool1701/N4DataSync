<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.Property" name="Property" packageName="javax.baja.sys" public="true" interface="true" abstract="true" category="interface">
<description>
Property defines a Slot which is a storage location&#xa; for a variable in a BComplex.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">24 Mar 00</tag>
<tag name="@version">$Revision: 20$ $Date: 1/26/06 9:40:19 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<implements>
<type class="javax.baja.sys.Slot"/>
</implements>
<!-- javax.baja.sys.Property.getType() -->
<method name="getType"  public="true" abstract="true">
<description>
Get the type of the property.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.Property.getTypeAccess() -->
<method name="getTypeAccess"  public="true" abstract="true">
<description>
Due to Java&#x27;s dual type system, some&#xa; primitive types are handled specially in &#xa; calls such as &lt;code&gt;BComplex.get()&lt;/code&gt; or&#xa; &lt;code&gt;BComplex.set()&lt;/code&gt;.  In order to facilate&#xa; special processing of these types, this method &#xa; provides a type code to indicate that a property&#xa; is one of the special types.
</description>
<return>
<type class="int"/>
<description>
the type access code which is one of &#xa;    &lt;code&gt;X_TYPE&lt;/code&gt; constants defined by&#xa;    the Slot interface.
</description>
</return>
</method>

<!-- javax.baja.sys.Property.isTypeFinal() -->
<method name="isTypeFinal"  public="true" abstract="true">
<description>
Return true if the property&#x27;s type is&#xa; a final class.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.sys.Property.getDefaultValue() -->
<method name="getDefaultValue"  public="true" abstract="true">
<description>
Get a copy of the default value for this property.&#xa; If this property is dynamic, then this is a&#xa; copy of the instance value.
</description>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.sys.Property.isEquivalentToDefaultValue(javax.baja.sys.BValue) -->
<method name="isEquivalentToDefaultValue"  public="true" abstract="true">
<description>
Return if the specified object is equal to&#xa; this object&#x27;s default value.
</description>
<parameter name="object">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

</class>
</bajadoc>
