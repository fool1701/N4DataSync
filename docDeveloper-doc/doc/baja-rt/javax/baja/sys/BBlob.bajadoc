<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BBlob" name="BBlob" packageName="javax.baja.sys" public="true" final="true">
<description>
The BBlob is the wrapper class for Java&#xa; raw byte array objects.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">1 Feb 00</tag>
<tag name="@version">$Revision: 22$ $Date: 1/6/04 1:57:06 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.sys.BBlob.make(byte[]) -->
<method name="make"  public="true" static="true">
<description>
Construct a new BBlob with given byte array.&#xa; The original byte array is copied into a safe&#xa; private array.
</description>
<parameter name="v">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.BBlob"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.make(byte[], int, int) -->
<method name="make"  public="true" static="true">
<description>
Construct a new BBlob with given byte array.&#xa; The original byte array is copied into a safe&#xa; private array.
</description>
<parameter name="v">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<parameter name="len">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BBlob"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.length() -->
<method name="length"  public="true">
<description>
Get the length of the byte array.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.byteAt(int) -->
<method name="byteAt"  public="true">
<description>
Get the byte at the specified index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="byte"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.copy(byte[]) -->
<method name="copy"  public="true">
<description>
Copy the value into the given buffer.  The specified&#xa; buffer must have a length equal to or greater than&#xa; this BBlob&#x27;s length.
</description>
<parameter name="buf">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.copyBytes(int, byte[], int, int) -->
<method name="copyBytes"  public="true">
<description>
Copy the value of this byte array into the given&#xa; buffer byte array.
</description>
<parameter name="start">
<type class="int"/>
<description>
the start index of this byte array
</description>
</parameter>
<parameter name="buf">
<type class="byte" dimension="1"/>
<description>
byte array to copy into
</description>
</parameter>
<parameter name="bufStart">
<type class="int"/>
<description>
start index of &lt;code&gt;buf&lt;/code&gt; to&#xa;    begin copying into
</description>
</parameter>
<parameter name="len">
<type class="int"/>
<description>
the number of bytes to copy
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.copyBytes() -->
<method name="copyBytes"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
<description>
a copy of the byte array value.
</description>
</return>
</method>

<!-- javax.baja.sys.BBlob.hashCode() -->
<method name="hashCode"  public="true">
<description>
Hashcode for BBlob is based on the algorithm&#xa; used by the JDK for java.lang.String and &#xa; java.rmi.MarshalledObject.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
All the bytes must be equal for BBlob equality.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.bytesEqual(byte[]) -->
<method name="bytesEqual"  public="true">
<description>
Compares the provided byte array to the contents of&#xa; the bblob object.
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="bytes">
<type class="byte" dimension="1"/>
<description>
to compare to blob content
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if they are the same, otherwise, false
</description>
</return>
</method>

<!-- javax.baja.sys.BBlob.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BBlob is serialized as:&#xa;  - 4 byte magic number 0xB10B &#xa;  - 4 byte length&#xa;  - byte array value
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BBlob.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BBlob is unserialized as 4 byte magic&#xa; number (0xB10BxBBBB), 4 byte length, and&#xa; byte array value.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BBlob.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Write the simple in text format using&#xa; Base 64 encoding.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BBlob.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Read the simple from text format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BBlob.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BBlob.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.sys.BBlob"/>
<description/>
</field>

<!-- javax.baja.sys.BBlob.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
