<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BSingleton" name="BSingleton" packageName="javax.baja.sys" public="true" abstract="true">
<description>
BSingleton is a BObject which allocates exactly one &#xa; instance per VM.  It provides a useful pattern for&#xa; typed libraries and factories.  BSingletons must &#xa; provide a static final called INSTANCE which declares&#xa; the singleton&#x27;s instance.  Subclasses should also&#xa; declare protected or private constructors to prevent&#xa; unwanted instances from being allocated.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">11 Dec 02</tag>
<tag name="@version">$Revision: 2$ $Date: 1/28/03 8:03:47 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BObject"/>
</extends>
<!-- javax.baja.sys.BSingleton() -->
<constructor name="BSingleton" protected="true">
<description>
Protected constructor.
</description>
</constructor>

<!-- javax.baja.sys.BSingleton.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BSingleton.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
