<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BLong" name="BLong" packageName="javax.baja.sys" public="true" final="true">
<description>
The BLong stores a Java long primitive.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">25 Apr 03</tag>
<tag name="@version">$Revision: 12$ $Date: 1/4/10 6:27:04 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BNumber"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.sys.BLong.make(long) -->
<method name="make"  public="true" static="true">
<description>
Factory method.
</description>
<parameter name="value">
<type class="long"/>
</parameter>
<return>
<type class="javax.baja.sys.BLong"/>
</return>
</method>

<!-- javax.baja.sys.BLong.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Factory method.
</description>
<parameter name="value">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BLong"/>
</return>
</method>

<!-- javax.baja.sys.BLong.getLong() -->
<method name="getLong"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="long"/>
<description>
the long value.
</description>
</return>
</method>

<!-- javax.baja.sys.BLong.getInt() -->
<method name="getInt"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
<description>
the long cast to a int.
</description>
</return>
</method>

<!-- javax.baja.sys.BLong.getFloat() -->
<method name="getFloat"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="float"/>
<description>
the long cast to a float.
</description>
</return>
</method>

<!-- javax.baja.sys.BLong.getDouble() -->
<method name="getDouble"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="double"/>
<description>
the long cast to a double.
</description>
</return>
</method>

<!-- javax.baja.sys.BLong.hashCode() -->
<method name="hashCode"  public="true">
<description>
BLong hash code is &lt;code&gt;(int)(value^(value()&amp;amp;gt;&amp;amp;gt;&amp;amp;gt;32))&lt;/code&gt;.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BLong.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
BLong equality is based on long value equality.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.sys.BLong.compareTo(java.lang.Object) -->
<method name="compareTo"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Compares this object with the specified object for&#xa; order. Returns a negative integer, zero, or a positive&#xa; integer as this object is less than, equal to, or greater&#xa; than the specified object.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BLong.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Route to &lt;code&gt;BLong.toString(long, Context)&lt;/code&gt;.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BLong.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BLong is serialized using writeLong().
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BLong.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BLong is unserialized using readLong().
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BLong.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Route to &lt;code&gt;BLong.encode(long)&lt;/code&gt;.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BLong.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Route to &lt;code&gt;BLong.decode(String)&lt;/code&gt;.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.sys.BLong.decode(java.lang.String) -->
<method name="decode"  public="true" static="true">
<description>
Parse the text format directly to a primitive long.  The&#xa; special string &#x22;min&#x22; maps to &lt;code&gt;Long.MIN_VALUE&lt;/code&gt;&#xa; and &#x22;max&#x22; to &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="long"/>
</return>
</method>

<!-- javax.baja.sys.BLong.encode(long) -->
<method name="encode"  public="true" static="true">
<description>
Encode the primitive long into a string.  If the long is&#xa; &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; then return &#x22;min&#x22; or if&#xa; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; return &#x22;max&#x22;.
</description>
<parameter name="x">
<type class="long"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BLong.toString(long, javax.baja.sys.Context) -->
<method name="toString"  public="true" static="true">
<description>
Format the long value as a String.
</description>
<parameter name="value">
<type class="long"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BLong.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BLong.MIN -->
<field name="MIN"  public="true" static="true" final="true">
<type class="javax.baja.sys.BLong"/>
<description>
Constant for Long.MIN_VALUE
</description>
</field>

<!-- javax.baja.sys.BLong.MAX -->
<field name="MAX"  public="true" static="true" final="true">
<type class="javax.baja.sys.BLong"/>
<description>
Constant for Long.MAX_VALUE
</description>
</field>

<!-- javax.baja.sys.BLong.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.sys.BLong"/>
<description>
The default constant is 0.
</description>
</field>

<!-- javax.baja.sys.BLong.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
