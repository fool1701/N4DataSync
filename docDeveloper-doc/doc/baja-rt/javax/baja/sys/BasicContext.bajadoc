<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BasicContext" name="BasicContext" packageName="javax.baja.sys" public="true">
<description>
BasicContext is a simple implementation of the &#xa; Context interface.
</description>
<tag name="@author">Brian Frank on 14 Feb 01</tag>
<tag name="@version">$Revision: 14$ $Date: 3/28/05 9:23:09 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="javax.baja.sys.Context"/>
</implements>
<!-- javax.baja.sys.BasicContext(javax.baja.user.BUser, javax.baja.sys.BFacets) -->
<constructor name="BasicContext" public="true">
<parameter name="user">
<type class="javax.baja.user.BUser"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<description>
Create a basic context with a the specified user and facets.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext(javax.baja.user.BUser) -->
<constructor name="BasicContext" public="true">
<parameter name="user">
<type class="javax.baja.user.BUser"/>
</parameter>
<description>
Create a basic context with specified user and BFacets.NULL.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext(javax.baja.user.BUser, java.lang.String) -->
<constructor name="BasicContext" public="true">
<parameter name="user">
<type class="javax.baja.user.BUser"/>
</parameter>
<parameter name="lang">
<type class="java.lang.String"/>
</parameter>
<description>
Create a basic context with specified user lang, and BFacets.NULL.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext(javax.baja.sys.Context) -->
<constructor name="BasicContext" public="true">
<parameter name="base">
<type class="javax.baja.sys.Context"/>
</parameter>
<description>
Create a basic context using information from another context.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext(javax.baja.sys.Context, javax.baja.sys.BFacets) -->
<constructor name="BasicContext" public="true">
<parameter name="base">
<type class="javax.baja.sys.Context"/>
</parameter>
<parameter name="additionalFacets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<description>
Create a basic context using information from another context.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext() -->
<constructor name="BasicContext" public="true">
<description>
Create a basic context with a null user and BFacets.NULL.
</description>
</constructor>

<!-- javax.baja.sys.BasicContext.getUser() -->
<method name="getUser"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the user for the context of this operation, &#xa; or null if no user information is available.
</description>
<return>
<type class="javax.baja.user.BUser"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.getFacets() -->
<method name="getFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the facets. This should never be null.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.getFacet(java.lang.String) -->
<method name="getFacet"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get a facet value by name.  The default &#xa; implementation routes to the facets instance.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.getLanguage() -->
<method name="getLanguage"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Default implementation is to return language &#xa; property from user or Sys.language() if there &#xa; is no user.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.getBase() -->
<method name="getBase"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If this Context wraps another Context, then return &#xa; the base Context.  Otherwise return null.
</description>
<return>
<type class="javax.baja.sys.Context"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.toString() -->
<method name="toString"  public="true">
<description>
To string.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.sys.BasicContext.base -->
<field name="base"  protected="true">
<type class="javax.baja.sys.Context"/>
<description/>
</field>

<!-- javax.baja.sys.BasicContext.user -->
<field name="user"  protected="true">
<type class="javax.baja.user.BUser"/>
<description/>
</field>

<!-- javax.baja.sys.BasicContext.facets -->
<field name="facets"  protected="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

<!-- javax.baja.sys.BasicContext.lang -->
<field name="lang"  protected="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
