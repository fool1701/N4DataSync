<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="baja" runtimeProfile="rt" qualifiedName="javax.baja.sys.BNumber" name="BNumber" packageName="javax.baja.sys" public="true" abstract="true">
<description>
The BNumber is the abstract super class of numeric&#xa; simples:  BInteger and BFloat.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">1 Feb 00</tag>
<tag name="@version">$Revision: 8$ $Date: 3/31/04 9:02:36 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<implements>
<type class="javax.baja.sys.BIComparable"/>
</implements>
<implements>
<type class="javax.baja.sys.BINumeric"/>
</implements>
<implements>
<type class="javax.baja.data.BIDataValue"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.sys.BNumber.getInt() -->
<method name="getInt"  public="true" abstract="true">
<description>
Get the number as an integer.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.getLong() -->
<method name="getLong"  public="true" abstract="true">
<description>
Get the number as a long.
</description>
<return>
<type class="long"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.getFloat() -->
<method name="getFloat"  public="true" abstract="true">
<description>
Get the number as an float.
</description>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.getDouble() -->
<method name="getDouble"  public="true" abstract="true">
<description>
Get the number as an double.
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.getNumeric() -->
<method name="getNumeric"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="double"/>
<description>
the value as double.
</description>
</return>
</method>

<!-- javax.baja.sys.BNumber.getNumericFacets() -->
<method name="getNumericFacets"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return BFacets.NULL.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.toDataValue() -->
<method name="toDataValue"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return this instance since it&#x27;s already a data value.
</description>
<return>
<type class="javax.baja.data.BIDataValue"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.sys.BNumber.cast(javax.baja.sys.BNumber, javax.baja.sys.Type) -->
<method name="cast"  public="true" static="true">
<description>
Converts this instance of a BNumber subclass to a&#xa; different BNumber subclass.&#xa;&#xa; This is a convenient method to convert between the different core&#xa; subclasses for BNumber such as BDouble, BInteger, BLong, and BFloat.
</description>
<tag name="@since">Niagara 4.10</tag>
<parameter name="number">
<type class="javax.baja.sys.BNumber"/>
<description>
the instance of BNumber to convert to the given type
</description>
</parameter>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
the type of BNumber to convert to
</description>
</parameter>
<return>
<type class="javax.baja.sys.BNumber"/>
<description>
BNumber
</description>
</return>
</method>

<!-- javax.baja.sys.BNumber.cast(double, javax.baja.sys.Type) -->
<method name="cast"  public="true" static="true">
<description>
Converts the provided double to a BNumber subclass.
</description>
<tag name="@since">Niagara 4.10</tag>
<parameter name="number">
<type class="double"/>
<description>
the double to turn into a BNumber
</description>
</parameter>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
<description>
the type of BNumber to convert to
</description>
</parameter>
<return>
<type class="javax.baja.sys.BNumber"/>
<description>
BNumber
</description>
</return>
</method>

<!-- javax.baja.sys.BNumber.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
