<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="pxEditor" runtimeProfile="wb" qualifiedName="javax.baja.px.editor.PxEditorController" name="PxEditorController" packageName="javax.baja.px.editor" public="true">
<description>
PxEditorController is the master controller for the PxEditor.
</description>
<tag name="@author">Mike Jarmy</tag>
<tag name="@creation">16 Aug 07</tag>
<tag name="@version">$Revision: 10$ $Date: 6/8/10 4:45:10 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.px.editor.PxEditorController(javax.baja.px.editor.BPxEditor) -->
<constructor name="PxEditorController" public="true">
<parameter name="editor">
<type class="javax.baja.px.editor.BPxEditor"/>
</parameter>
<description>
Construct a PxEditorController that uses the&#xa; WidgetFactories returned by getDefaultWidgetFactories()
</description>
</constructor>

<!-- javax.baja.px.editor.PxEditorController.getCellEditor(javax.baja.sys.BComponent, javax.baja.sys.Property) -->
<method name="getCellEditor"  public="true">
<description>
This callback is invoked by the PxEditor when it wants to create&#xa; a cell editor that is used in the PropertySheet sidebar.&#xa; Override this method to customize the creation of CellEditors.
</description>
<parameter name="component">
<type class="javax.baja.sys.BComponent"/>
<description>
the component that we need to provide a CellEditor for.
</description>
</parameter>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description>
the property on the component that we need to provide a CellEditor for.
</description>
</parameter>
<return>
<type class="javax.baja.workbench.celleditor.BWbCellEditor"/>
<description>
which cell editor to use in the PropertySheet PxSideBar&#xa; for the given component property.
</description>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getPopupMenu(javax.baja.px.editor.BIPxTransferWidget, javax.baja.ui.event.BMouseEvent) -->
<method name="getPopupMenu"  public="true">
<description>
This callback is invoked by a BIPxTransferWidget when it wants&#xa; to create the popup menu that is displayed when the user&#xa; right-clicks on selected widgets in the PxEditor.
</description>
<parameter name="transferWidget">
<type class="javax.baja.px.editor.BIPxTransferWidget"/>
<description>
the BIPxTransferWidget over which the popup request occured.
</description>
</parameter>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
<description>
the event which triggered the popup request.
</description>
</parameter>
<return>
<type class="javax.baja.ui.BMenu"/>
<description>
the popup menu to display when the user right-clicks on selected widgets&#xa; in the PxEditor. Return null to disable the popup menu.&#xa; The default implementation returns transferWidget.getDefaultPopupMenu(event).
</description>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.allowDrop(javax.baja.px.editor.BIPxTransferWidget, javax.baja.ui.transfer.TransferContext) -->
<method name="allowDrop"  public="true">
<description>
This callback is invoked by a BIPxTransferWidget when it wants&#xa; to know if it is ever OK for it to be dropped onto.
</description>
<parameter name="transferWidget">
<type class="javax.baja.px.editor.BIPxTransferWidget"/>
<description>
the BIPxTransferWidget over which the drag event occured.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
<description>
the context in which the drag event occured.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
whether it is ever OK to allow a drop onto the given BIPxTransferWidget.&#xa; The default implementation returns true.
</description>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getDoubleClickCommand(javax.baja.px.editor.BIPxTransferWidget, javax.baja.ui.event.BMouseEvent) -->
<method name="getDoubleClickCommand"  public="true">
<description>
This callback is invoked by a BIPxTransferWidget when it wants&#xa; to create the Command that is invoked when the user&#xa; double-clicks on selected widgets in the PxEditor.
</description>
<parameter name="transferWidget">
<type class="javax.baja.px.editor.BIPxTransferWidget"/>
<description>
the BIPxTransferWidget over which the double-click occured.
</description>
</parameter>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
<description>
the event which triggered the double-click.
</description>
</parameter>
<return>
<type class="javax.baja.ui.Command"/>
<description>
the Command to invoke when the user double-clicks on selected widgets&#xa; in the PxEditor. Return null to disable the double-click.&#xa; The default implementation returns a Command which brings up the &#x22;Edit Properites&#x22; dialog.
</description>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getDefaultWidgetFactories() -->
<method name="getDefaultWidgetFactories"  public="true" final="true">
<description>
Return an array of the following factories:&#xa; &lt;ol&gt;&#xa;   &lt;li&gt;LabelFactory&lt;/li&gt;&#xa;   &lt;li&gt;PictureFactory&lt;/li&gt;&#xa;   &lt;li&gt;WidgetCloningFactory&lt;/li&gt;&#xa;   &lt;li&gt;PxFileFactory&lt;/li&gt;&#xa;   &lt;li&gt;ImageFileFactory&lt;/li&gt;&#xa;   &lt;li&gt;JsFileFactory&lt;/li&gt;&#xa;   &lt;li&gt;AliasNavNodeFactory&lt;/li&gt;&#xa;   &lt;li&gt;NavNodeFactory&lt;/li&gt;&#xa; &lt;/ol&gt;
</description>
<return>
<type class="javax.baja.px.editor.factory.WidgetFactory" dimension="1"/>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getWidgetFactories() -->
<method name="getWidgetFactories"  public="true">
<description>
Get a list of the current WidgetFactories.
</description>
<return>
<type class="javax.baja.px.editor.factory.WidgetFactory" dimension="1"/>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.addWidgetFactory(javax.baja.px.editor.factory.WidgetFactory) -->
<method name="addWidgetFactory"  public="true">
<description>
Add a WidgetFactory to the controller.
</description>
<parameter name="factory">
<type class="javax.baja.px.editor.factory.WidgetFactory"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.removeWidgetFactory(javax.baja.px.editor.factory.WidgetFactory) -->
<method name="removeWidgetFactory"  public="true">
<description>
Remove a WidgetFactory from the controller.
</description>
<parameter name="factory">
<type class="javax.baja.px.editor.factory.WidgetFactory"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getWidgetInserter(javax.baja.px.editor.BIPxTransferWidget, javax.baja.sys.BObject[]) -->
<method name="getWidgetInserter"  public="true">
<description>
This callback is invoked from transferWidget.getInsertArtifact() and&#xa; transferWidget.getDropArtifact().&#xa; &lt;p&gt;&#xa; This callback makes a WidgetInserter for the given objects, by&#xa; traversing the WidgetFactory and finding the first factory which&#xa; can convert all the objects in the array.  This factory is&#xa; then used to create a WidgetInserter.&#xa; &lt;p&gt;&#xa; The behaviour of this callback can be customized by altering this&#xa; controller&#x27;s WidgetFactory collection.&#xa; &lt;p&gt;
</description>
<parameter name="transferWidget">
<type class="javax.baja.px.editor.BIPxTransferWidget"/>
<description>
the BIPxTransferWidget that is requesting&#xa; a WidgetInserter.
</description>
</parameter>
<parameter name="objects">
<type class="javax.baja.sys.BObject" dimension="1"/>
<description>
the objects that will be fed to a WidgetFactory.&#xa; If no suitable factory for the objects exists,&#xa; a BajaRuntimeException is thrown.
</description>
</parameter>
<return>
<type class="javax.baja.px.editor.factory.WidgetInserter"/>
<description>
a WidgetInserter, or null.
</description>
</return>
</method>

<!-- javax.baja.px.editor.PxEditorController.getPxEditor() -->
<method name="getPxEditor"  public="true">
<description/>
<return>
<type class="javax.baja.px.editor.BPxEditor"/>
</return>
</method>

</class>
</bajadoc>
