<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="batchJob" runtimeProfile="rt" qualifiedName="javax.baja.batchJob.IJobDispatcher" name="IJobDispatcher" packageName="javax.baja.batchJob" public="true" interface="true" abstract="true" category="interface">
<description>
Implementing classes define a means by which job execution&#xa; is controlled.
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">9 Jul 07</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.batchJob.IJobDispatcher.dispatch(javax.baja.job.BJob, javax.baja.sys.Context) -->
<method name="dispatch"  public="true" abstract="true">
<description>
Give the job to the dispatcher, to be submitted to the job service&#xa; some time in the future, according to the dispatcher&#x27;s policy.   The &#xa; job&#x27;s state will be unknown until it&#x27;s actually submitted to the &#xa; job service.
</description>
<parameter name="job">
<type class="javax.baja.job.BJob"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.batchJob.IJobDispatcher.cancel(javax.baja.job.BJob, javax.baja.sys.Context) -->
<method name="cancel"  public="true" abstract="true">
<description>
Cancel the job
</description>
<parameter name="job">
<type class="javax.baja.job.BJob"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
