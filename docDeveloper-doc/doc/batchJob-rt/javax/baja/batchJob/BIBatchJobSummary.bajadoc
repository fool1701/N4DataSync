<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="batchJob" runtimeProfile="rt" qualifiedName="javax.baja.batchJob.BIBatchJobSummary" name="BIBatchJobSummary" packageName="javax.baja.batchJob" public="true" interface="true" abstract="true" category="interface">
<description>
Summary information about a completed BBatchJob
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">05 February 2008</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.4</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- javax.baja.batchJob.BIBatchJobSummary.getJobType() -->
<method name="getJobType"  public="true" abstract="true">
<description>
Type of the job.
</description>
<return>
<type class="javax.baja.util.BTypeSpec"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getJobState() -->
<method name="getJobState"  public="true" abstract="true">
<description>
Execution state of the job.
</description>
<return>
<type class="javax.baja.job.BJobState"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getPrototypeOrd() -->
<method name="getPrototypeOrd"  public="true" abstract="true">
<description>
If the job was submitted by a BBatchJobPrototype, returns the prototype&#x27;s Ord,&#xa; otherwise returns BOrd.NULL.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getStartTime() -->
<method name="getStartTime"  public="true" abstract="true">
<description>
Time when the job started executing, using the caller&#x27;s time zone.
</description>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getLocalStartTime() -->
<method name="getLocalStartTime"  public="true" abstract="true">
<description>
Time when the job started executing, using the time zone effective where the job&#xa; executed.
</description>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getEndTime() -->
<method name="getEndTime"  public="true" abstract="true">
<description>
Time when the job finished executing.
</description>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getSubmitUser() -->
<method name="getSubmitUser"  public="true" abstract="true">
<description>
User who submitted the job.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getDisposed() -->
<method name="getDisposed"  public="true" abstract="true">
<description>
Return true if the job has been disposed and is awaiting cleanup.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.getJob(javax.baja.sys.BObject) -->
<method name="getJob"  public="true" abstract="true">
<description>
Return the job that this summary describes.
</description>
<parameter name="base">
<type class="javax.baja.sys.BObject"/>
<description>
Object on the supervisor station where the job executed.
</description>
</parameter>
<return>
<type class="javax.baja.batchJob.BBatchJob"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.updateJob(javax.baja.batchJob.BBatchJob) -->
<method name="updateJob"  public="true" abstract="true">
<description>
Update this summary using information from the given job.
</description>
<parameter name="job">
<type class="javax.baja.batchJob.BBatchJob"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.batchJob.BIBatchJobSummary.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.JOB_TYPE -->
<field name="JOB_TYPE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use JOB_TYPE as the name of the property&#xa; that getJobType() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.JOB_STATE -->
<field name="JOB_STATE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use JOB_STATE as the name of the property&#xa; that getJobState() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.PROTOTYPE_ORD -->
<field name="PROTOTYPE_ORD"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use PROTOTYPE_ORD as the name of the property&#xa; that getPrototypeOrd() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.START_TIME -->
<field name="START_TIME"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use START_TIME as the name of the property&#xa; that getStartTime() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.END_TIME -->
<field name="END_TIME"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use END_TIME as the name of the property&#xa; that getEndTime() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

<!-- javax.baja.batchJob.BIBatchJobSummary.SUBMIT_USER -->
<field name="SUBMIT_USER"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Implementing components/structs will use SUBMIT_USER as the name of the property&#xa; that getSubmitUser() returns the value for.&#xa; &#xa; The value of this constant can safely be used as a property name when building Predicate &#xa; objects for BIJobQueryManager.listJobSummaries().
</description>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, String propName, BSimple propValue, BObject base)</tag>
<tag name="@see">BIJobQueryManager#listJobSummaries(Type jobType, BExpression predicate, BObject base)</tag>
</field>

</class>
</bajadoc>
