<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="wb" qualifiedName="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton" name="BVideoPanTiltArrowButton" packageName="com.tridium.videoDriver.ui.camera" public="true">
<description>
This is a button with arrow hashes on it, as many as specified by&#xa; the &#x27;numArrows&#x27; property.&#xa; &#xa; This button also features a notion of direction, as specified by&#xa; the &#x27;direction property. The direction int corresponds to the numbers&#xa; on the standard keyboard&#x27;s keypad (1-3, 4, 6, 7-9).&#xa; &#xa; If the direction is diagonal (7,9,1,3) then this button appears as a&#xa; diamond. Otherwise, this button appears as a square.&#xa; &#xa; This is used on the BVidoePtxCtrlPanel widget.
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="com.tridium.videoDriver.ui.holdDownButton.BHoldDownButton"/>
</extends>
<property name="numArrows" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;numArrows&lt;/code&gt; property.&#xa; Specifies the number of arrows to draw
</description>
<tag name="@see">#getNumArrows</tag>
<tag name="@see">#setNumArrows</tag>
</property>

<property name="direction" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Specifies the direction of the arrow, based on&#xa; the numbers on a standard keyboard&#x27;s keypad.&#xa; (1-3, 4, 6, 7-9)
</description>
<tag name="@see">#getDirection</tag>
<tag name="@see">#setDirection</tag>
</property>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton() -->
<constructor name="BVideoPanTiltArrowButton" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton(com.tridium.videoDriver.ui.camera.BVideoPtzCtrlPanel, com.tridium.videoDriver.enums.BVideoPanTiltEnum, com.tridium.videoDriver.enums.BVideoPanTiltEnum, int, int) -->
<constructor name="BVideoPanTiltArrowButton" public="true">
<parameter name="mgr">
<type class="com.tridium.videoDriver.ui.camera.BVideoPtzCtrlPanel"/>
</parameter>
<parameter name="mousePressedEvt">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
</parameter>
<parameter name="mouseReleasedEvt">
<type class="com.tridium.videoDriver.enums.BVideoPanTiltEnum"/>
</parameter>
<parameter name="numArrows">
<type class="int"/>
</parameter>
<parameter name="direction">
<type class="int"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.getNumArrows() -->
<method name="getNumArrows"  public="true">
<description>
Get the &lt;code&gt;numArrows&lt;/code&gt; property.&#xa; Specifies the number of arrows to draw
</description>
<tag name="@see">#numArrows</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.setNumArrows(int) -->
<method name="setNumArrows"  public="true">
<description>
Set the &lt;code&gt;numArrows&lt;/code&gt; property.&#xa; Specifies the number of arrows to draw
</description>
<tag name="@see">#numArrows</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.getDirection() -->
<method name="getDirection"  public="true">
<description>
Get the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Specifies the direction of the arrow, based on&#xa; the numbers on a standard keyboard&#x27;s keypad.&#xa; (1-3, 4, 6, 7-9)
</description>
<tag name="@see">#direction</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.setDirection(int) -->
<method name="setDirection"  public="true">
<description>
Set the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Specifies the direction of the arrow, based on&#xa; the numbers on a standard keyboard&#x27;s keypad.&#xa; (1-3, 4, 6, 7-9)
</description>
<tag name="@see">#direction</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeMidpoint(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeMidpoint"  protected="true">
<description>
Computes algebraic midpoint.
</description>
<parameter name="p1">
<type class="javax.baja.gx.Point"/>
<description/>
</parameter>
<parameter name="p2">
<type class="javax.baja.gx.Point"/>
<description/>
</parameter>
<return>
<type class="javax.baja.gx.Point"/>
<description>
the algebraic midpoint between p1 and p2
</description>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeSlope(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeSlope"  protected="true">
<description>
Computes algebraic slope for line between the two given points.
</description>
<parameter name="p1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="p2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeB(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeB"  protected="true">
<description>
Computes algebraic y-intercept for the line between the two&#xa; given points.
</description>
<parameter name="p1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="p2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeB(double, javax.baja.gx.Point) -->
<method name="computeB"  protected="true">
<description>
Computes algebraic y-intercept for the line having the given&#xa; slope passing through the given point.
</description>
<parameter name="slope">
<type class="double"/>
</parameter>
<parameter name="p">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeDistance(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeDistance"  protected="true">
<description>
Computes the algebraic distance between the two given points.
</description>
<parameter name="p1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="p2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.drawArrowLine(javax.baja.gx.Graphics, javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="drawArrowLine"  protected="true">
<description>
Draws a line between the two given points...almost! Actually, this draws a line between the&#xa; two given poitns but leaves a little bit of blankspace on both sides of the two given points.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description>
the Gx graphics object.
</description>
</parameter>
<parameter name="arrowPoint1TooFar">
<type class="javax.baja.gx.Point"/>
<description>
the zoomOutRegion bounds of the line
</description>
</parameter>
<parameter name="arrowPoint2TooFar">
<type class="javax.baja.gx.Point"/>
<description>
the zoomInRegion bounds of the line
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.drawArrowHashes(javax.baja.gx.Graphics, com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.Line, com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.Line, com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.Line) -->
<method name="drawArrowHashes"  protected="true">
<description>
Draws two angeled lines for all of the arrows
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description>
the Gx graphics object
</description>
</parameter>
<parameter name="bisectDiamond">
<type class="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton$Line"/>
<description>
the imaginary line running down the center of the diamond, along which the arrows will be drawn
</description>
</parameter>
<parameter name="parallelLine1">
<type class="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton$Line"/>
<description>
the line closer to the bottom of the screen that runs parallel to the bisectDiamond line, along the edge of the diamond
</description>
</parameter>
<parameter name="parallelLine2">
<type class="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton$Line"/>
<description>
the line closer to the top of the screen that runs parllel to the bisectDiamondLine, along the edge of the diamond
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.drawArrowHashes(javax.baja.gx.Graphics, javax.baja.gx.Point, javax.baja.gx.Point, javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="drawArrowHashes"  protected="true">
<description>
Draws two angeled lines for all of the arrows
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description>
the Gx graphics object
</description>
</parameter>
<parameter name="leftOfDiamond">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="topOfDiamond">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="bottomOfDiamond">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="rightOfDiamond">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.isRightToLeft() -->
<method name="isRightToLeft"  protected="true">
<description/>
<return>
<type class="boolean"/>
<description>
true if direction is 7, 4, or 1 (or 8 for a special case to make zoomInRegion arrow opposite of zoomOutRegion arrow).
</description>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.isDiagonalArrow() -->
<method name="isDiagonalArrow"  protected="true">
<description/>
<return>
<type class="boolean"/>
<description>
true if direction is 7, 9, 1 or 3
</description>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.isHorizontalArrow() -->
<method name="isHorizontalArrow"  protected="true">
<description/>
<return>
<type class="boolean"/>
<description>
true if direction is 4 or 6
</description>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.isVerticalArrow() -->
<method name="isVerticalArrow"  protected="true">
<description/>
<return>
<type class="boolean"/>
<description>
true if direction is 8 or 2
</description>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.drawArrowLines(javax.baja.gx.Graphics, com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.Line, int) -->
<method name="drawArrowLines"  protected="true">
<description>
This function would draw the line portion of the arrows. However, the final implementation does not draw the lines,&#xa; only the hashes.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description/>
</parameter>
<parameter name="drawArrowsAlongThisLine">
<type class="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton$Line"/>
<description/>
</parameter>
<parameter name="numArrows">
<type class="int"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.drawArrows(javax.baja.gx.Graphics) -->
<method name="drawArrows"  protected="true">
<description>
Draws the arrows.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeStartArrowX(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeStartArrowX"  public="true">
<description>
Computes the starting x coordinate of a arrow to be drawn between the two given points. This&#xa; basically returns the x coordinate of the first given point plus a little bit more to&#xa; represent some empty space.&#xa; &#xa; This is used for diagonal or horizontal arrows.
</description>
<parameter name="arrowPointTooFar1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="arrowPointTooFar2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeStartArrowY(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeStartArrowY"  public="true">
<description>
Computes the starting y coordinate of a arrow to be drawn between the two given points. This&#xa; basically returns the y coordinate of the first given point plus a little bit more to&#xa; represent some empty space.&#xa; &#xa; This is used for verical arrows.
</description>
<parameter name="arrowPointTooFar1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="arrowPointTooFar2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeEndArrowX(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeEndArrowX"  public="true">
<description>
Computes the ending x coordinate of a arrow to be drawn between the two given points. This&#xa; basically returns the x coordinate of the second given point minus a little bit to&#xa; represent some empty space.&#xa; &#xa; This is used for diagonal or horizontal arrows.
</description>
<parameter name="arrowPointTooFar1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="arrowPointTooFar2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.computeEndArrowY(javax.baja.gx.Point, javax.baja.gx.Point) -->
<method name="computeEndArrowY"  public="true">
<description>
Computes the ending y coordinate of a arrow to be drawn between the two given points. This&#xa; basically returns the y coordinate of the secibd given point minus a little bit to&#xa; represent some empty space.&#xa; &#xa; This is used for verical arrows.
</description>
<parameter name="arrowPointTooFar1">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="arrowPointTooFar2">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.paintDiamondBackground(javax.baja.gx.Graphics) -->
<method name="paintDiamondBackground"  protected="true">
<description>
I know this code looks ugly but in my defense, I stole it from BAbstractButton&#xa; and simply modified it slightly to paint a diamond button.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.paintBackground(javax.baja.gx.Graphics) -->
<method name="paintBackground"  public="true">
<description>
Paints the background of the BVideoPanTiltArrowButton as a diamond if the direction is diagonal (7, 9, 1, or 3)&#xa; or calls super.paintBackground otherwise.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
Calls super.mousePressed event only if mouse coordinates are inside the diamond if the direction is diagonal (7, 9, 1, or 3)&#xa; or always calls super.mousePressed event if direction is not diagonal.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description>
Calls super.mouseReleased event only if mouse coordinates are inside the diamond if the direction is diagonal (7, 9, 1, or 3)&#xa; or always calls super.mouseReleased event if direction is not diagonal.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.isMouseInButton(javax.baja.ui.event.BMouseEvent) -->
<method name="isMouseInButton"  protected="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.numArrows -->
<field name="numArrows"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;numArrows&lt;/code&gt; property.&#xa; Specifies the number of arrows to draw
</description>
<tag name="@see">#getNumArrows</tag>
<tag name="@see">#setNumArrows</tag>
</field>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.direction -->
<field name="direction"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Specifies the direction of the arrow, based on&#xa; the numbers on a standard keyboard&#x27;s keypad.&#xa; (1-3, 4, 6, 7-9)
</description>
<tag name="@see">#getDirection</tag>
<tag name="@see">#setDirection</tag>
</field>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.noOffset -->
<field name="noOffset"  protected="true" static="true">
<type class="javax.baja.gx.Point"/>
<description>
This is the origin point if the diamond button is not pressed.
</description>
</field>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.pressedOffset -->
<field name="pressedOffset"  protected="true" static="true">
<type class="javax.baja.gx.Point"/>
<description>
This is the origin point if the diamond button is not pressed.
</description>
</field>

<!-- com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton.dbs -->
<field name="dbs"  protected="true">
<type class="com.tridium.videoDriver.ui.camera.BVideoPanTiltArrowButton$DiagonalButtonScheme"/>
<description>
The diamond button scheme follows the number, palladium button scheme.
</description>
</field>

</class>
</bajadoc>
