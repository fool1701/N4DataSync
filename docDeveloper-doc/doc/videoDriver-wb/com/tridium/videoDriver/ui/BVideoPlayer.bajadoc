<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="videoDriver" runtimeProfile="wb" qualifiedName="com.tridium.videoDriver.ui.BVideoPlayer" name="BVideoPlayer" packageName="com.tridium.videoDriver.ui" public="true">
<description>
This is the basic video player that is fundamental to all of the video&#xa; related views in the video driver framework. To display video from&#xa; a driver&#x27;s video camera, this widget is bound to the driver&#x27;s video&#xa; camera through a BVideoStreamBinding.
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="javax.baja.ui.transfer.BTransferWidget"/>
</extends>
<implements>
<type class="com.tridium.videoDriver.BIVideoPlayer"/>
</implements>
<property name="showTimeIndex" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;showTimeIndex&lt;/code&gt; property.&#xa; Indicates whether the time index for each video frame should&#xa; be displayed in the upper left-hand corner of the video player
</description>
<tag name="@see">#getShowTimeIndex</tag>
<tag name="@see">#setShowTimeIndex</tag>
</property>

<property name="throttleRefreshRate" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;throttleRefreshRate&lt;/code&gt; property.&#xa; The video player will not repaint itself any faster than this&#xa; value, regardless of whether it is being fed with a video&#xa; stream whose frame rate is faster.
</description>
<tag name="@see">#getThrottleRefreshRate</tag>
<tag name="@see">#setThrottleRefreshRate</tag>
</property>

<property name="videoStreamFox" flags="">
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
<description>
Slot for the &lt;code&gt;videoStreamFox&lt;/code&gt; property.&#xa; Indicates whether the stream should be forwarded through the station&#xa; to the player (no) or whether the player should attempt direct&#xa; communication to the field-device (no) to get the video stream.&#xa; If strict firewalls are in place then setting this value to yes&#xa; might help by allowing the station to communicate to the field-device&#xa; and forward the video stream to the player through the Niagara AX Fox&#xa; protocol (the same protocol used for all Workbench-to-Station comm).&#xa; This at least overcomes firewall issues on the Workbench side.&#xa;&#xa; A setting of inherit means that the setting on the video camera device&#xa; will be used.
</description>
<tag name="@see">#getVideoStreamFox</tag>
<tag name="@see">#setVideoStreamFox</tag>
</property>

<property name="backgroundColor" flags="">
<type class="javax.baja.gx.BColor"/>
<description>
Slot for the &lt;code&gt;backgroundColor&lt;/code&gt; property.
</description>
<tag name="@see">#getBackgroundColor</tag>
<tag name="@see">#setBackgroundColor</tag>
</property>

<property name="aspectRatio" flags="">
<type class="com.tridium.videoDriver.enums.BVideoAspectRatioEnum"/>
<description>
Slot for the &lt;code&gt;aspectRatio&lt;/code&gt; property.
</description>
<tag name="@see">#getAspectRatio</tag>
<tag name="@see">#setAspectRatio</tag>
</property>

<property name="resolution" flags="">
<type class="com.tridium.videoDriver.enums.BVideoResolutionEnum"/>
<description>
Slot for the &lt;code&gt;resolution&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getResolution</tag>
<tag name="@see">#setResolution</tag>
</property>

<property name="frameRate" flags="">
<type class="com.tridium.videoDriver.enums.BVideoFrameRateEnum"/>
<description>
Slot for the &lt;code&gt;frameRate&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getFrameRate</tag>
<tag name="@see">#setFrameRate</tag>
</property>

<property name="compression" flags="">
<type class="com.tridium.videoDriver.enums.BVideoCompressionEnum"/>
<description>
Slot for the &lt;code&gt;compression&lt;/code&gt; property.&#xa; This is the compression that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getCompression</tag>
<tag name="@see">#setCompression</tag>
</property>

<property name="streamFacets" flags="">
<type class="javax.baja.sys.BFacets"/>
<description>
Slot for the &lt;code&gt;streamFacets&lt;/code&gt; property.&#xa; This meta data is passed to the particular video driver. It exists to&#xa; provide flexibility and extensibility. It allows any unspecified data&#xa; values to be passed to the particulr video driver.
</description>
<tag name="@see">#getStreamFacets</tag>
<tag name="@see">#setStreamFacets</tag>
</property>

<action name="changePlaybackControl" flags="">
<parameter name="parameter">
<type class="com.tridium.videoDriver.camera.control.BPlaybackControlInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;changePlaybackControl&lt;/code&gt; action.
</description>
<tag name="@see">#changePlaybackControl(BPlaybackControlInfo parameter)</tag>
</action>

<topic name="reloadVideo" flags="">
<eventType>
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</eventType><description>
Slot for the &lt;code&gt;reloadVideo&lt;/code&gt; topic.
</description>
<tag name="@see">#fireReloadVideo</tag>
</topic>

<!-- com.tridium.videoDriver.ui.BVideoPlayer() -->
<constructor name="BVideoPlayer" public="true">
<description/>
</constructor>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getShowTimeIndex() -->
<method name="getShowTimeIndex"  public="true">
<description>
Get the &lt;code&gt;showTimeIndex&lt;/code&gt; property.&#xa; Indicates whether the time index for each video frame should&#xa; be displayed in the upper left-hand corner of the video player
</description>
<tag name="@see">#showTimeIndex</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setShowTimeIndex(boolean) -->
<method name="setShowTimeIndex"  public="true">
<description>
Set the &lt;code&gt;showTimeIndex&lt;/code&gt; property.&#xa; Indicates whether the time index for each video frame should&#xa; be displayed in the upper left-hand corner of the video player
</description>
<tag name="@see">#showTimeIndex</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getThrottleRefreshRate() -->
<method name="getThrottleRefreshRate"  public="true">
<description>
Get the &lt;code&gt;throttleRefreshRate&lt;/code&gt; property.&#xa; The video player will not repaint itself any faster than this&#xa; value, regardless of whether it is being fed with a video&#xa; stream whose frame rate is faster.
</description>
<tag name="@see">#throttleRefreshRate</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setThrottleRefreshRate(int) -->
<method name="setThrottleRefreshRate"  public="true">
<description>
Set the &lt;code&gt;throttleRefreshRate&lt;/code&gt; property.&#xa; The video player will not repaint itself any faster than this&#xa; value, regardless of whether it is being fed with a video&#xa; stream whose frame rate is faster.
</description>
<tag name="@see">#throttleRefreshRate</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getVideoStreamFox() -->
<method name="getVideoStreamFox"  public="true">
<description>
Get the &lt;code&gt;videoStreamFox&lt;/code&gt; property.&#xa; Indicates whether the stream should be forwarded through the station&#xa; to the player (no) or whether the player should attempt direct&#xa; communication to the field-device (no) to get the video stream.&#xa; If strict firewalls are in place then setting this value to yes&#xa; might help by allowing the station to communicate to the field-device&#xa; and forward the video stream to the player through the Niagara AX Fox&#xa; protocol (the same protocol used for all Workbench-to-Station comm).&#xa; This at least overcomes firewall issues on the Workbench side.&#xa;&#xa; A setting of inherit means that the setting on the video camera device&#xa; will be used.
</description>
<tag name="@see">#videoStreamFox</tag>
<return>
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setVideoStreamFox(com.tridium.videoDriver.enums.BFoxVideoStreamEnum) -->
<method name="setVideoStreamFox"  public="true">
<description>
Set the &lt;code&gt;videoStreamFox&lt;/code&gt; property.&#xa; Indicates whether the stream should be forwarded through the station&#xa; to the player (no) or whether the player should attempt direct&#xa; communication to the field-device (no) to get the video stream.&#xa; If strict firewalls are in place then setting this value to yes&#xa; might help by allowing the station to communicate to the field-device&#xa; and forward the video stream to the player through the Niagara AX Fox&#xa; protocol (the same protocol used for all Workbench-to-Station comm).&#xa; This at least overcomes firewall issues on the Workbench side.&#xa;&#xa; A setting of inherit means that the setting on the video camera device&#xa; will be used.
</description>
<tag name="@see">#videoStreamFox</tag>
<parameter name="v">
<type class="com.tridium.videoDriver.enums.BFoxVideoStreamEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getBackgroundColor() -->
<method name="getBackgroundColor"  public="true">
<description>
Get the &lt;code&gt;backgroundColor&lt;/code&gt; property.
</description>
<tag name="@see">#backgroundColor</tag>
<return>
<type class="javax.baja.gx.BColor"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setBackgroundColor(javax.baja.gx.BColor) -->
<method name="setBackgroundColor"  public="true">
<description>
Set the &lt;code&gt;backgroundColor&lt;/code&gt; property.
</description>
<tag name="@see">#backgroundColor</tag>
<parameter name="v">
<type class="javax.baja.gx.BColor"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getAspectRatio() -->
<method name="getAspectRatio"  public="true">
<description>
Get the &lt;code&gt;aspectRatio&lt;/code&gt; property.
</description>
<tag name="@see">#aspectRatio</tag>
<return>
<type class="com.tridium.videoDriver.enums.BVideoAspectRatioEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setAspectRatio(com.tridium.videoDriver.enums.BVideoAspectRatioEnum) -->
<method name="setAspectRatio"  public="true">
<description>
Set the &lt;code&gt;aspectRatio&lt;/code&gt; property.
</description>
<tag name="@see">#aspectRatio</tag>
<parameter name="v">
<type class="com.tridium.videoDriver.enums.BVideoAspectRatioEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getResolution() -->
<method name="getResolution"  public="true">
<description>
Get the &lt;code&gt;resolution&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#resolution</tag>
<return>
<type class="com.tridium.videoDriver.enums.BVideoResolutionEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setResolution(com.tridium.videoDriver.enums.BVideoResolutionEnum) -->
<method name="setResolution"  public="true">
<description>
Set the &lt;code&gt;resolution&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#resolution</tag>
<parameter name="v">
<type class="com.tridium.videoDriver.enums.BVideoResolutionEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getFrameRate() -->
<method name="getFrameRate"  public="true">
<description>
Get the &lt;code&gt;frameRate&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#frameRate</tag>
<return>
<type class="com.tridium.videoDriver.enums.BVideoFrameRateEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setFrameRate(com.tridium.videoDriver.enums.BVideoFrameRateEnum) -->
<method name="setFrameRate"  public="true">
<description>
Set the &lt;code&gt;frameRate&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#frameRate</tag>
<parameter name="v">
<type class="com.tridium.videoDriver.enums.BVideoFrameRateEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getCompression() -->
<method name="getCompression"  public="true">
<description>
Get the &lt;code&gt;compression&lt;/code&gt; property.&#xa; This is the compression that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#compression</tag>
<return>
<type class="com.tridium.videoDriver.enums.BVideoCompressionEnum"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setCompression(com.tridium.videoDriver.enums.BVideoCompressionEnum) -->
<method name="setCompression"  public="true">
<description>
Set the &lt;code&gt;compression&lt;/code&gt; property.&#xa; This is the compression that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#compression</tag>
<parameter name="v">
<type class="com.tridium.videoDriver.enums.BVideoCompressionEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getStreamFacets() -->
<method name="getStreamFacets"  public="true">
<description>
Get the &lt;code&gt;streamFacets&lt;/code&gt; property.&#xa; This meta data is passed to the particular video driver. It exists to&#xa; provide flexibility and extensibility. It allows any unspecified data&#xa; values to be passed to the particulr video driver.
</description>
<tag name="@see">#streamFacets</tag>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setStreamFacets(javax.baja.sys.BFacets) -->
<method name="setStreamFacets"  public="true">
<description>
Set the &lt;code&gt;streamFacets&lt;/code&gt; property.&#xa; This meta data is passed to the particular video driver. It exists to&#xa; provide flexibility and extensibility. It allows any unspecified data&#xa; values to be passed to the particulr video driver.
</description>
<tag name="@see">#streamFacets</tag>
<parameter name="v">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.changePlaybackControl(com.tridium.videoDriver.camera.control.BPlaybackControlInfo) -->
<method name="changePlaybackControl"  public="true">
<description>
Invoke the &lt;code&gt;changePlaybackControl&lt;/code&gt; action.
</description>
<tag name="@see">#changePlaybackControl</tag>
<parameter name="parameter">
<type class="com.tridium.videoDriver.camera.control.BPlaybackControlInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.fireReloadVideo(com.tridium.videoDriver.videoStream.BPlaybackParams) -->
<method name="fireReloadVideo"  public="true">
<description>
Fire an event for the &lt;code&gt;reloadVideo&lt;/code&gt; topic.
</description>
<tag name="@see">#reloadVideo</tag>
<parameter name="event">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setVideoDecoder(com.tridium.videoDriver.videoStream.decoder.IVideoDecoder) -->
<method name="setVideoDecoder"  public="true">
<description>
This method is called by the BVideoStreamBinding to associate&#xa; the video player to its video decoder.
</description>
<parameter name="videoDecoder">
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getVideoDecoder() -->
<method name="getVideoDecoder"  public="true">
<description>
This method is called to gain access to the video decoder that&#xa; is passed to the &lt;code&gt;<see ref="com.tridium.videoDriver.ui.BVideoPlayer#setVideoDecoder(com.tridium.videoDriver.videoStream.decoder.IVideoDecoder)">#setVideoDecoder(IVideoDecoder)</see>&lt;/code&gt; method.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.updateVideoFrame(com.tridium.videoDriver.videoStream.decoder.VidFrame) -->
<method name="updateVideoFrame"  public="true">
<description>
Gets the most recent image from the video decoder and if it differs&#xa; from the current image then this updates the graphical user interface.&#xa; &#xa; The video decoder that is associated with this video player widget&#xa; calls this method every time that the next frame is available from&#xa; the video steram.
</description>
<parameter name="vf">
<type class="com.tridium.videoDriver.videoStream.decoder.VidFrame"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getPlaybackParams() -->
<method name="getPlaybackParams"  public="true">
<description>
Returns the playback params that describes the video that this&#xa; video player widget is currently displaying. This structure&#xa; includes the resolution, framerate, video facets (with the&#xa; stream facets merged in), and the time index.
</description>
<return>
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getReloadVideoTopic() -->
<method name="getReloadVideoTopic"  public="true">
<description>
Gets the topic that the this component fires when it needs&#xa; to have the video stream re-established based on the current&#xa; play back parameters.
</description>
<return>
<type class="javax.baja.sys.Topic"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.doChangePlaybackControl(com.tridium.videoDriver.camera.control.BPlaybackControlInfo) -->
<method name="doChangePlaybackControl"  public="true">
<description>
Implements the &#x27;changePlaybackControl&#x27; action. This causes the video&#xa; stream to be changed. This is a some-what passive operation that works&#xa; by updating the internal playback parameters and then firing the&#xa; reloadVideo topic. The BVideoStreamBinding for this widget will detect&#xa; this, hook into the corresponding video driver, and re-establish the&#xa; video stream to this video camera.
</description>
<parameter name="playbackInfo">
<type class="com.tridium.videoDriver.camera.control.BPlaybackControlInfo"/>
<description>
a BPlaybackControlInfo structure specifying the&#xa; new playback type, playback speed, and time index.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.animate() -->
<method name="animate"  public="true">
<description>
This method is called every 100 milliseconds by a Baja UI&#xa; core thread.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
The BajaUI framework calls this method whenever it determines that this&#xa; widget needs to be painted or repainted.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintDefault(javax.baja.gx.Graphics) -->
<method name="paintDefault"  public="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintMostRecentImageTime(javax.baja.gx.Graphics) -->
<method name="paintMostRecentImageTime"  public="true">
<description>
Paints the time index that corresponds to the current video frame.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description>
the Baja UI / Baja Gx graphics object that was passed to the&#xa; paint method.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.receiveInputEvents() -->
<method name="receiveInputEvents"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintMessage(javax.baja.gx.Graphics) -->
<method name="paintMessage"  public="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintMessage(javax.baja.gx.Graphics, java.lang.String) -->
<method name="paintMessage"  public="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="message">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintMessage(javax.baja.gx.Graphics, java.lang.String, int, int, double, double, javax.baja.gx.BBrush, javax.baja.gx.BBrush) -->
<method name="paintMessage"  public="true" static="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="message">
<type class="java.lang.String"/>
</parameter>
<parameter name="fromLeft">
<type class="int"/>
</parameter>
<parameter name="fromBottom">
<type class="int"/>
</parameter>
<parameter name="playerWidth">
<type class="double"/>
</parameter>
<parameter name="playerHeight">
<type class="double"/>
</parameter>
<parameter name="background">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<parameter name="foreground">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.paintMostRecentImage(javax.baja.gx.Graphics) -->
<method name="paintMostRecentImage"  public="true">
<description>
Paints the most recent video frame on the screen
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.resetImage() -->
<method name="resetImage"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getMessage() -->
<method name="getMessage"  public="true">
<description>
Gets the message that is displayed at the bottom of the screen.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setMessage(java.lang.String) -->
<method name="setMessage"  public="true">
<description>
Sets the message that is displayed at the bottom of the screen.
</description>
<parameter name="message">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.mouseHover(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseHover"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getCameraDescription() -->
<method name="getCameraDescription"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setCameraDescription(java.lang.String) -->
<method name="setCameraDescription"  public="true">
<description/>
<parameter name="cameraDescription">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.startDrag(javax.baja.ui.event.BMouseEvent, javax.baja.ui.transfer.TransferContext, javax.baja.ui.transfer.DragRenderer) -->
<method name="startDrag"  public="true">
<description>
This method starts a drag operation within in the process. The most common way to start a drag&#xa; is the mouseDragStarted() callback. The startDrag() method should be passed the mouse operation&#xa; which started the drag as well as the data which will be transferred (usually created via&#xa; makeTransferContext()).&#xa; &lt;p&gt;&#xa; The DragRenderer passed to this method is used to paint an effect under the mouse cursor&#xa; representing the data being dragged.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
<description>
MouseEvent which originated the drag gesture.
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.ui.transfer.TransferContext"/>
<description>
The TransferContext which will be used during the drag operation. It is immaterial&#xa;          what action is specified as both the action and coordinate will be updated as the&#xa;          mouse is dragged over potential drop targets.
</description>
</parameter>
<parameter name="dragRenderer">
<type class="javax.baja.ui.transfer.DragRenderer"/>
<description>
Is used to visualize the data being dragged as the mouse is dragged around.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.startDrag(javax.baja.ui.event.BMouseEvent, javax.baja.ui.transfer.TransferEnvelope, javax.baja.ui.transfer.DragRenderer) -->
<method name="startDrag"  public="true">
<description>
Convenience for &lt;code&gt;startDrag(event, makeTransferContext(envelope), dragRenderer)&lt;/code&gt;
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="envelope">
<type class="javax.baja.ui.transfer.TransferEnvelope"/>
</parameter>
<parameter name="dragRenderer">
<type class="javax.baja.ui.transfer.DragRenderer"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.dragOver(javax.baja.ui.transfer.TransferContext) -->
<method name="dragOver"  public="true">
<description>
This is called when the cursor is dragged over this widget during a drag operation. The&#xa; TransferContext specifies the TransferEnvelope being dragged and the location of the mouse&#xa; cursor over this widget.&#xa; &lt;p&gt;&#xa; If this widget can accept a drop from the data specified in the given TransferContext then&#xa; return a mask of the available actions that may result. This mask should be a bitwise OR of the&#xa; TransferConst.ACTION_x constants. If the drop is not legal over this widget then return 0 to&#xa; indicate no legal actions. The default implementation returns 0.
</description>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.dragEnter(javax.baja.ui.transfer.TransferContext) -->
<method name="dragEnter"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.dragExit(javax.baja.ui.transfer.TransferContext) -->
<method name="dragExit"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.drop(javax.baja.ui.transfer.TransferContext) -->
<method name="drop"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setHostTransferWidget(javax.baja.ui.transfer.BTransferWidget) -->
<method name="setHostTransferWidget"  public="true">
<description/>
<parameter name="hostTransferWidget">
<type class="javax.baja.ui.transfer.BTransferWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getTransferData() -->
<method name="getTransferData"  public="true">
<description/>
<return>
<type class="javax.baja.ui.transfer.TransferEnvelope"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.insertTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="insertTransferData"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.removeTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="removeTransferData"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.setMultistreamPaneForView(com.tridium.videoDriver.ui.multistream.BVideoMultistreamPaneForView) -->
<method name="setMultistreamPaneForView"  public="true">
<description>
The logic or the BVideoMultistreamViewer is the only object that&#xa; calls this method.
</description>
<parameter name="videoMultistreamPane">
<type class="com.tridium.videoDriver.ui.multistream.BVideoMultistreamPaneForView"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getMultistreamPaneForView() -->
<method name="getMultistreamPaneForView"  public="true">
<description/>
<return>
<type class="com.tridium.videoDriver.ui.multistream.BVideoMultistreamPaneForView"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.showTimeIndex -->
<field name="showTimeIndex"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;showTimeIndex&lt;/code&gt; property.&#xa; Indicates whether the time index for each video frame should&#xa; be displayed in the upper left-hand corner of the video player
</description>
<tag name="@see">#getShowTimeIndex</tag>
<tag name="@see">#setShowTimeIndex</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.throttleRefreshRate -->
<field name="throttleRefreshRate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;throttleRefreshRate&lt;/code&gt; property.&#xa; The video player will not repaint itself any faster than this&#xa; value, regardless of whether it is being fed with a video&#xa; stream whose frame rate is faster.
</description>
<tag name="@see">#getThrottleRefreshRate</tag>
<tag name="@see">#setThrottleRefreshRate</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.videoStreamFox -->
<field name="videoStreamFox"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;videoStreamFox&lt;/code&gt; property.&#xa; Indicates whether the stream should be forwarded through the station&#xa; to the player (no) or whether the player should attempt direct&#xa; communication to the field-device (no) to get the video stream.&#xa; If strict firewalls are in place then setting this value to yes&#xa; might help by allowing the station to communicate to the field-device&#xa; and forward the video stream to the player through the Niagara AX Fox&#xa; protocol (the same protocol used for all Workbench-to-Station comm).&#xa; This at least overcomes firewall issues on the Workbench side.&#xa;&#xa; A setting of inherit means that the setting on the video camera device&#xa; will be used.
</description>
<tag name="@see">#getVideoStreamFox</tag>
<tag name="@see">#setVideoStreamFox</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.backgroundColor -->
<field name="backgroundColor"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;backgroundColor&lt;/code&gt; property.
</description>
<tag name="@see">#getBackgroundColor</tag>
<tag name="@see">#setBackgroundColor</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.aspectRatio -->
<field name="aspectRatio"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;aspectRatio&lt;/code&gt; property.
</description>
<tag name="@see">#getAspectRatio</tag>
<tag name="@see">#setAspectRatio</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.resolution -->
<field name="resolution"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;resolution&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getResolution</tag>
<tag name="@see">#setResolution</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.frameRate -->
<field name="frameRate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;frameRate&lt;/code&gt; property.&#xa; This is the resolution that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getFrameRate</tag>
<tag name="@see">#setFrameRate</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.compression -->
<field name="compression"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;compression&lt;/code&gt; property.&#xa; This is the compression that this widget will request from the particular&#xa; video driver.
</description>
<tag name="@see">#getCompression</tag>
<tag name="@see">#setCompression</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.streamFacets -->
<field name="streamFacets"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;streamFacets&lt;/code&gt; property.&#xa; This meta data is passed to the particular video driver. It exists to&#xa; provide flexibility and extensibility. It allows any unspecified data&#xa; values to be passed to the particulr video driver.
</description>
<tag name="@see">#getStreamFacets</tag>
<tag name="@see">#setStreamFacets</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.changePlaybackControl -->
<field name="changePlaybackControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;changePlaybackControl&lt;/code&gt; action.
</description>
<tag name="@see">#changePlaybackControl(BPlaybackControlInfo parameter)</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.reloadVideo -->
<field name="reloadVideo"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;reloadVideo&lt;/code&gt; topic.
</description>
<tag name="@see">#fireReloadVideo</tag>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.myId -->
<field name="myId"  public="true">
<type class="int"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.messageLabel -->
<field name="messageLabel"  protected="true" static="true">
<type class="javax.baja.ui.BLabel"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.messageLabelInsideBorder -->
<field name="messageLabelInsideBorder"  protected="true" static="true">
<type class="javax.baja.ui.pane.BBorderPane"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.timeIndexLabel -->
<field name="timeIndexLabel"  protected="true">
<type class="javax.baja.ui.BLabel"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.timeIndexLabelInsideBorder -->
<field name="timeIndexLabelInsideBorder"  protected="true">
<type class="javax.baja.ui.pane.BBorderPane"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.TIME_INDEX_TEXT_BRUSH -->
<field name="TIME_INDEX_TEXT_BRUSH"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.TIME_INDEX_BACKGROUND_BRUSH -->
<field name="TIME_INDEX_BACKGROUND_BRUSH"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.MESSAGE_TEXT_BRUSH -->
<field name="MESSAGE_TEXT_BRUSH"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.MESSAGE_BACKGROUND_BRUSH -->
<field name="MESSAGE_BACKGROUND_BRUSH"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.multistreamPaneForView -->
<field name="multistreamPaneForView"  protected="true">
<type class="com.tridium.videoDriver.ui.multistream.BVideoMultistreamPaneForView"/>
<description>
This is the value that was most recently passed to the&#xa; &lt;code&gt;<see ref="com.tridium.videoDriver.ui.BVideoPlayer#setMultistreamPaneForView(BVideoMultistreamPane)">#setMultistreamPaneForView(BVideoMultistreamPane)</see>&lt;/code&gt; method.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.hostTransferWidget -->
<field name="hostTransferWidget"  protected="true">
<type class="javax.baja.ui.transfer.BTransferWidget"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.icon -->
<field name="icon"  protected="true" static="true" final="true">
<type class="javax.baja.sys.BIcon"/>
<description>
This is the BIcon that is returned by the &lt;code&gt;<see ref="com.tridium.videoDriver.ui.BVideoPlayer#getIcon()">#getIcon()</see>&lt;/code&gt; method.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.playBackParams -->
<field name="playBackParams"  protected="true">
<type class="com.tridium.videoDriver.videoStream.BPlaybackParams"/>
<description>
This structure stores the current play back state of this video player.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.lastUpdateTicks -->
<field name="lastUpdateTicks"  protected="true">
<type class="long"/>
<description>
This is the internal tick count of the last time that this video player&#xa; updated the current frame. This is part of the throttle algorithm that&#xa; prevents the video player from updating any faster than the user-specified&#xa; value, even if the video stream provides a faster frame rate.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.videoDecoder -->
<field name="videoDecoder"  protected="true">
<type class="com.tridium.videoDriver.videoStream.decoder.IVideoDecoder"/>
<description>
This is the video decoder that is associated with this video player. The&#xa; video decoder object feeds this video player widget with video frames from&#xa; a video stream.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.message -->
<field name="message"  protected="true">
<type class="java.lang.String"/>
<description>
This message is displayed at the bottom of the screen.&#xa; It is intended to display something like, buffering...
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.cameraDescription -->
<field name="cameraDescription"  protected="true">
<type class="java.lang.String"/>
<description>
This camera description is placed in the status bar when the mouse&#xa; is over this widget.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.mostRecentImage -->
<field name="mostRecentImage"  protected="true">
<type class="javax.baja.gx.BImage"/>
<description>
Most recent image received from its video decoder.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.currentTimeIndex -->
<field name="currentTimeIndex"  protected="true">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Time index of the mostRecentImage
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.DISCONNECTED_IMAGE -->
<field name="DISCONNECTED_IMAGE"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description/>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.WIDEST_CONNECTING_MESSAGE -->
<field name="WIDEST_CONNECTING_MESSAGE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
This is used in the &#x27;paintMessage()&#x27; method to compute the font size during the &#x22;Connecting...&#x22; message.
</description>
</field>

<!-- com.tridium.videoDriver.ui.BVideoPlayer.TRIMMED_ESTABLISHING_CONNECTION_MESSAGE -->
<field name="TRIMMED_ESTABLISHING_CONNECTION_MESSAGE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
