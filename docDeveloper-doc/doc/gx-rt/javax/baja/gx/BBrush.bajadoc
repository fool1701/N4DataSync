<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="gx" runtimeProfile="rt" qualifiedName="javax.baja.gx.BBrush" name="BBrush" packageName="javax.baja.gx" public="true" final="true">
<description>
Brush encapsulates a type of &#x22;paint&#x22; used to fill a geometry.&#xa; &#xa; &lt;pre&gt;&#xa;  brush     := color | inverse | linearGradient | radialGradient | image&#xa;  color     := any BColor format &#xa;  inverse   := inverse( color )&#xa;  linearGradient := linearGradient ( [spread] [angle] stop* )&#xa;  radialGradient := radialGradient ( [spread] [center] [radius] [focal] stop* )&#xa;  image     := image ( source(ord) [tile] [halign] [valign] )&#xa;  spread    := spread( &amp;lt;pad | reflect | repeat&amp;gt; )&#xa;  angle     := angle( degrees )&#xa;  center    := c( offset , offset )&#xa;  radius    := r( offset )&#xa;  focal     := f( offset , offset )&#xa;  stop      := stop( offset color )&#xa;  offset    := double %              &#xa;  tile      := tile( &amp;lt;rue | false | x | y&amp;gt;  )&#xa;  valign    := valign( &amp;lt;top | center | bottom&amp;gt;  )&#xa;  halign    := halign( &amp;lt;left | center | right&amp;gt;  )&#xa;&#xa; Examples:&#xa;  #0ff&#xa;  linearGradient(stop(0% white) stop(100% black))&#xa;  linearGradient( angle(45) stop(0% #fff) stop(100% #0a3) )&#xa;  radialGradient( c(50%,50%) r(10%) f(20%,20%) spread(reflect) &#xa;                  stop(0% red) stop(100% blue) )&#xa;  image(source(module://icons/x16/object.png))&#xa;  image( source(module://icons/x16/object.png) tile(true) )&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">2 Apr 04</tag>
<tag name="@version">$Revision: 12$ $Date: 9/30/08 5:09:00 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.gx.BBrush.makeSolid(javax.baja.gx.BColor) -->
<method name="makeSolid"  public="true" static="true">
<description>
Make a solid color brush.
</description>
<parameter name="solid">
<type class="javax.baja.gx.BColor"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeInverse(javax.baja.gx.BColor) -->
<method name="makeInverse"  public="true" static="true">
<description>
Make a inverse (XOR) color brush.
</description>
<parameter name="inverse">
<type class="javax.baja.gx.BColor"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeLinearGradient(javax.baja.gx.BBrush.Stop[]) -->
<method name="makeLinearGradient"  public="true" static="true">
<description>
Make a linear gradient brush with default &#xa; pad spread and angle of 0 degrees.
</description>
<parameter name="stops">
<type class="javax.baja.gx.BBrush$Stop" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeLinearGradient(javax.baja.gx.BBrush.Stop[], int, double) -->
<method name="makeLinearGradient"  public="true" static="true">
<description>
Make a linear gradient brush.
</description>
<parameter name="stops">
<type class="javax.baja.gx.BBrush$Stop" dimension="1"/>
</parameter>
<parameter name="spread">
<type class="int"/>
</parameter>
<parameter name="angle">
<type class="double"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeRadialGradient(javax.baja.gx.BBrush.Stop[]) -->
<method name="makeRadialGradient"  public="true" static="true">
<description>
Make a radial gradient brush with default pad spread, &#xa; center 50% 50%, and radius of 50%.
</description>
<parameter name="stops">
<type class="javax.baja.gx.BBrush$Stop" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeRadialGradient(javax.baja.gx.BBrush.Stop[], int, javax.baja.gx.IPoint, double) -->
<method name="makeRadialGradient"  public="true" static="true">
<description>
Make a radial gradient brush which defaults focal to center.
</description>
<parameter name="stops">
<type class="javax.baja.gx.BBrush$Stop" dimension="1"/>
</parameter>
<parameter name="spread">
<type class="int"/>
</parameter>
<parameter name="center">
<type class="javax.baja.gx.IPoint"/>
</parameter>
<parameter name="radius">
<type class="double"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeRadialGradient(javax.baja.gx.BBrush.Stop[], int, javax.baja.gx.IPoint, double, javax.baja.gx.IPoint) -->
<method name="makeRadialGradient"  public="true" static="true">
<description>
Make a radial gradient brush.
</description>
<parameter name="stops">
<type class="javax.baja.gx.BBrush$Stop" dimension="1"/>
</parameter>
<parameter name="spread">
<type class="int"/>
</parameter>
<parameter name="center">
<type class="javax.baja.gx.IPoint"/>
</parameter>
<parameter name="radius">
<type class="double"/>
</parameter>
<parameter name="focal">
<type class="javax.baja.gx.IPoint"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeImage(javax.baja.gx.BImage, int, int, int) -->
<method name="makeImage"  public="true" static="true">
<description>
Make a image brush with image centered.
</description>
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="tile">
<type class="int"/>
</parameter>
<parameter name="halign">
<type class="int"/>
</parameter>
<parameter name="valign">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.makeImage(javax.baja.gx.BImage) -->
<method name="makeImage"  public="true" static="true">
<description>
Make a image brush with the image untiled and centered.
</description>
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Make from a string encoding.  See class header for format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.getPaint() -->
<method name="getPaint"  public="true">
<description>
Return the paint configuration of this brush.
</description>
<return>
<type class="javax.baja.gx.BBrush$Paint"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.isNull() -->
<method name="isNull"  public="true">
<description>
Return if this is the null brush.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.hashCode() -->
<method name="hashCode"  public="true">
<description>
BBrush hash code.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Return if the specified object is an equivalent BBrush.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
Serialized using writeUTF() of string encoding.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.gx.BBrush.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description>
Unserialized using readUTF() of string encoding.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.gx.BBrush.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Encode to string format.  See class header for format.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.gx.BBrush.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Encode from string format.  See class header for format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.gx.BBrush.stop(double, javax.baja.gx.BColor) -->
<method name="stop"  public="true" static="true">
<description>
Create a gradient stop with the specified offset and color.&#xa; The offset is a percentage of the shape being filled.
</description>
<parameter name="offset">
<type class="double"/>
</parameter>
<parameter name="color">
<type class="javax.baja.gx.BColor"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush$Stop"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<description>
Framework use only.
</description>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.gx.BBrush.PAD -->
<field name="PAD"  public="true" static="true" final="true">
<type class="int"/>
<description>
Gradient spread option
</description>
</field>

<!-- javax.baja.gx.BBrush.REFLECT -->
<field name="REFLECT"  public="true" static="true" final="true">
<type class="int"/>
<description>
Gradient spread option
</description>
</field>

<!-- javax.baja.gx.BBrush.REPEAT -->
<field name="REPEAT"  public="true" static="true" final="true">
<type class="int"/>
<description>
Gradient spread option
</description>
</field>

<!-- javax.baja.gx.BBrush.TILE_FALSE -->
<field name="TILE_FALSE"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image is not tiled
</description>
</field>

<!-- javax.baja.gx.BBrush.TILE_TRUE -->
<field name="TILE_TRUE"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image is tiled in both x and y directions
</description>
</field>

<!-- javax.baja.gx.BBrush.TILE_X -->
<field name="TILE_X"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image is tiled in x direction only
</description>
</field>

<!-- javax.baja.gx.BBrush.TILE_Y -->
<field name="TILE_Y"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image is tiled in y direction only
</description>
</field>

<!-- javax.baja.gx.BBrush.CENTER -->
<field name="CENTER"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image horizontal/vertial align in center
</description>
</field>

<!-- javax.baja.gx.BBrush.TOP -->
<field name="TOP"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image vertial align to top
</description>
</field>

<!-- javax.baja.gx.BBrush.BOTTOM -->
<field name="BOTTOM"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image vertial align to top
</description>
</field>

<!-- javax.baja.gx.BBrush.LEFT -->
<field name="LEFT"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image horizontal align to left
</description>
</field>

<!-- javax.baja.gx.BBrush.RIGHT -->
<field name="RIGHT"  public="true" static="true" final="true">
<type class="int"/>
<description>
Image vertial align to top
</description>
</field>

<!-- javax.baja.gx.BBrush.NULL -->
<field name="NULL"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description>
The null brush.
</description>
</field>

<!-- javax.baja.gx.BBrush.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.gx.BBrush"/>
<description>
The default brush is solid black.
</description>
</field>

<!-- javax.baja.gx.BBrush.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
