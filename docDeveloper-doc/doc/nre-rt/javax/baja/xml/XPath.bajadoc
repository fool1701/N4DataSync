<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.xml.XPath" name="XPath" packageName="javax.baja.xml" public="true">
<description>
XPath implements a (small) subset of the&#xa; &lt;a href=&#x22;https://www.w3.org/TR/xpath/&#x22;&gt;W3C XPath spec&lt;/a&gt;, providing an way&#xa; to select/match a subset of elements in an XML document. An XPath is&#xa; like an &#x22;XML regex&#x22;, that matches XML elements depending&#xa; on their contents and position in the document.&#xa; &lt;p&gt;&#xa; This XPath class allows matching elements by their name and/or attribute values.&#xa; It also supports an&#xa; equivalent to the &#x22;descendant-or-self::node()&#x22; (i.e. &#x22;//&#x22;&#xa; operator), allowing elements to be selected in a subtree, regardless of their depth.&#xa; &lt;p&gt;&#xa; Each portion of an XPath is represented by an XPathELem instance.&#xa; An XPath is constructed using a list of XPathElems, where each XPathElem&#xa; matches one or more parts of the XML document tree.&#xa; &lt;p&gt;&#xa; The easiest way to construct an XPath is to use the vararg constructor with&#xa; XPathElem instances. For example:&#xa; &lt;p&gt;&#xa; XPath path = new XPath(new XPathElem(&#x22;root&#x22;), new XPathElem(&#x22;a&#x22;));&#xa; &lt;p&gt;&#xa; Here are some W3C style XML paths that match elements in the document, and&#xa; the equivalent XPath construction.&#xa;&#xa; &lt;table summary=&#x22;Example XML paths and their XPath equivalents&#x22;&gt;&#xa; &lt;tr align=&#x22;left&#x22;&gt;&#xa; &lt;th align=&#x22;left&#x22; id=&#x22;predef_classes&#x22;&gt;Path&lt;/th&gt;&#xa; &lt;th align=&#x22;left&#x22; id=&#x22;predef_matches&#x22;&gt;XPath Equivalent&lt;/th&gt;&#xa; &lt;/tr&gt;&#xa; &lt;tr&gt;&#xa; &lt;td&gt;/root&lt;/td&gt;&#xa; &lt;td&gt;new XPath(new XPathElem(&#x22;root&#x22;))&lt;/td&gt;&#xa; &lt;/tr&gt;&#xa; &lt;tr&gt;&#xa; &lt;td&gt;/root/child&lt;/td&gt;&#xa; &lt;td&gt;new XPath(new XPathElem(&#x22;root&#x22;), new XPathElem(&#x22;child&#x22;))&lt;/td&gt;&#xa; &lt;/tr&gt;&#xa; &lt;tr&gt;&#xa; &lt;td&gt;//child&lt;/td&gt;&#xa; &lt;td&gt;new XPath(new XPathElem(&#x22;child&#x22;, true))&lt;/td&gt;&#xa; &lt;/tr&gt;&#xa; &lt;tr&gt;&#xa; &lt;td&gt;//child[@name=&#x22;foo&#x22;]&lt;/td&gt;&#xa; &lt;td&gt;new XPath(new XPathElem(&#x22;child&#x22;, true).withAttr(&#x22;name&#x22;, &#x22;foo&#x22;))&lt;/td&gt;&#xa; &lt;/tr&gt;&#xa; &lt;tr&gt;&#xa; &lt;td&gt;/root//child[@name=&#x22;foo&#x22; and @value=&#x22;bar&#x22;]&lt;/td&gt;&#xa; &lt;td&gt;new XPath(new XPathElem(&#x22;root&#x22;), new XPathElem(&#x22;child&#x22;,&#xa; true).withAttr(&#x22;name&#x22;, &#x22;foo&#x22;).withAttr(&#x22;value&#x22;, &#x22;bar&#x22;))&lt;/td&gt;&#xa; &lt;/tr&gt;&#xa; &lt;/table&gt;&#xa; &lt;p&gt;&#xa; &lt;p&gt;&#xa; Once an XPath has been constructed, &lt;code&gt;<see ref="javax.baja.xml.XPath#getMatcher(java.util.List&lt;javax.baja.xml.XElem&gt;)">XPath#getMatcher(List)</see>&lt;/code&gt; is called to&#xa; obtain an &lt;code&gt;<see ref="javax.baja.xml.XPathMatcher">XPathMatcher</see>&lt;/code&gt; instance. The XPathMatcher is used to determine&#xa; whether a given XElem matches the XPath.
</description>
<tag name="@author">Hugh Eaves</tag>
<tag name="@since">Niagara 4.6</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.xml.XPath(javax.baja.xml.XPath) -->
<constructor name="XPath" public="true">
<parameter name="path">
<type class="javax.baja.xml.XPath"/>
<description>
the path
</description>
</parameter>
<description>
Instantiates a new x path.
</description>
</constructor>

<!-- javax.baja.xml.XPath(java.util.List&lt;javax.baja.xml.XPathElem&gt;) -->
<constructor name="XPath" public="true">
<parameter name="pathElements">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.xml.XPathElem"/>
</args>
</parameterizedType>
<description>
the path
</description>
</parameter>
<description>
Instantiates a new x path.
</description>
</constructor>

<!-- javax.baja.xml.XPath(javax.baja.xml.XPathElem, javax.baja.xml.XPathElem...) -->
<constructor name="XPath" public="true" isVarargs="true">
<parameter name="pathElement">
<type class="javax.baja.xml.XPathElem"/>
</parameter>
<parameter name="pathElements">
<type class="javax.baja.xml.XPathElem" dimension="1"/>
<description>
the path elements
</description>
</parameter>
<description>
Instantiates a new x path.
</description>
</constructor>

<!-- javax.baja.xml.XPath.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.xml.XPath.getPathElements() -->
<method name="getPathElements"  public="true">
<description>
Gets the elements.
</description>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.xml.XPathElem"/>
</args>
</parameterizedType>
<description>
the elements
</description>
</return>
</method>

<!-- javax.baja.xml.XPath.getMatcher(javax.baja.xml.XElemLocation) -->
<method name="getMatcher"  public="true">
<description>
Gets an XPathMatcher for this XPath, to match against&#xa; the given XElemLocation.
</description>
<parameter name="location">
<type class="javax.baja.xml.XElemLocation"/>
<description/>
</parameter>
<return>
<type class="javax.baja.xml.XPathMatcher"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XPath.getMatcher(java.util.List&lt;javax.baja.xml.XElem&gt;) -->
<method name="getMatcher"  public="true">
<description>
Gets an XPathMatcher for this XPath, to match against&#xa; the location specified by the list of XElems.
</description>
<parameter name="locationElements">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.xml.XElem"/>
</args>
</parameterizedType>
<description/>
</parameter>
<return>
<type class="javax.baja.xml.XPathMatcher"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XPath.getMatcher() -->
<method name="getMatcher"  public="true">
<description>
Gets an XPathMatcher for this XPath, to match against&#xa; an empty XElemLocation.
</description>
<return>
<type class="javax.baja.xml.XPathMatcher"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XPath.size() -->
<method name="size"  public="true">
<description>
Returns the number of path elements in this XPath.
</description>
<return>
<type class="int"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XPath.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.xml.XPath.toString() -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

</class>
</bajadoc>
