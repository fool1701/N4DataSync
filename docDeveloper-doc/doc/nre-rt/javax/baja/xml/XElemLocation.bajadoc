<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.xml.XElemLocation" name="XElemLocation" packageName="javax.baja.xml" public="true">
<description>
An XElemLocation represents the location of a element in an XML document.&#xa; The location is specified as an ordered list of the elements that contain&#xa; the target element, starting with the root element, up to and including&#xa; the target element.
</description>
<tag name="@author">Hugh Eaves</tag>
<tag name="@since">Niagara 4.6</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.xml.XElemLocation() -->
<constructor name="XElemLocation" public="true">
<description>
Create an empty XElemLocation
</description>
</constructor>

<!-- javax.baja.xml.XElemLocation(java.util.List&lt;javax.baja.xml.XElem&gt;) -->
<constructor name="XElemLocation" public="true">
<parameter name="elements">
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.xml.XElem"/>
</args>
</parameterizedType>
<description/>
</parameter>
<description>
Create an XElemLocation using the provided list of elmements.
</description>
</constructor>

<!-- javax.baja.xml.XElemLocation(javax.baja.xml.XElem...) -->
<constructor name="XElemLocation" public="true" isVarargs="true">
<parameter name="elements">
<type class="javax.baja.xml.XElem" dimension="1"/>
<description/>
</parameter>
<description>
Create an XElemLocation using the provided array of elmements.
</description>
</constructor>

<!-- javax.baja.xml.XElemLocation.addElement(javax.baja.xml.XElem) -->
<method name="addElement"  public="true">
<description>
Add a new element to end of the list of XElems in the XElemLocation.
</description>
<parameter name="element">
<type class="javax.baja.xml.XElem"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.removeElement() -->
<method name="removeElement"  public="true">
<description>
Removes the XElem farthest from the root (i.e. the last element in the&#xa; XElemLocation)
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.size() -->
<method name="size"  public="true">
<description>
Returns the number of XElems in this XElemLocation
</description>
<return>
<type class="int"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.get(int) -->
<method name="get"  public="true">
<description>
Returns the XElem at the given index. Index must be in the range&#xa; 0 to size() -1, where 0 is the root element, and size() - 1 is&#xa; the leaf / target element.
</description>
<parameter name="index">
<type class="int"/>
<description>
The index of the XElem to return.
</description>
</parameter>
<return>
<type class="javax.baja.xml.XElem"/>
<description/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.clear() -->
<method name="clear"  public="true">
<description>
Remove all XElems from this location.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.addElementRemovalListener(java.util.function.Consumer&lt;javax.baja.xml.XElemLocation&gt;) -->
<method name="addElementRemovalListener"  public="true">
<description>
Add a listener that is called when an element is removed from this XElemLocation.
</description>
<parameter name="listener">
<parameterizedType class="java.util.function.Consumer">
<args>
<type class="javax.baja.xml.XElemLocation"/>
</args>
</parameterizedType>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.equals(java.lang.Object) -->
<method name="equals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.xml.XElemLocation.toString() -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

</class>
</bajadoc>
