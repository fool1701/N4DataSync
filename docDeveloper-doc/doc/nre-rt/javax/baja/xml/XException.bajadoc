<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.xml.XException" name="XException" packageName="javax.baja.xml" public="true" category="exception">
<description>
XException is used to indicate a problem parsing XML.
</description>
<tag name="@author">Brian Frank on 6 Apr 02</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.RuntimeException"/>
</extends>
<!-- javax.baja.xml.XException(java.lang.String, int, int, java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="line">
<type class="int"/>
<description>
line number
</description>
</parameter>
<parameter name="column">
<type class="int"/>
<description>
column number
</description>
</parameter>
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Construct using specified line and column.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, int, int) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="line">
<type class="int"/>
<description>
line number
</description>
</parameter>
<parameter name="column">
<type class="int"/>
<description>
column number
</description>
</parameter>
<description>
Construct using specified line and column.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, int, java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="line">
<type class="int"/>
<description>
line number
</description>
</parameter>
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Construct using specified line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, int) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="line">
<type class="int"/>
<description>
line number
</description>
</parameter>
<description>
Construct using specified line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, javax.baja.xml.XParser, java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="parser">
<type class="javax.baja.xml.XParser"/>
<description>
parser to get line and column from
</description>
</parameter>
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Construct using current line and column of parser.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, javax.baja.xml.XParser) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="parser">
<type class="javax.baja.xml.XParser"/>
<description>
parser to get line and column from
</description>
</parameter>
<description>
Construct using current line and column of parser.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, javax.baja.xml.XElem, java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="elem">
<type class="javax.baja.xml.XElem"/>
<description>
element to get line and column from
</description>
</parameter>
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Construct using element&#x27;s line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, javax.baja.xml.XElem) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="elem">
<type class="javax.baja.xml.XElem"/>
<description>
element to get line and column from
</description>
</parameter>
<description>
Construct using element&#x27;s line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String, java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Construct with no line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.String) -->
<constructor name="XException" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
<description>
exception message
</description>
</parameter>
<description>
Construct with no line number.
</description>
</constructor>

<!-- javax.baja.xml.XException(java.lang.Throwable) -->
<constructor name="XException" public="true">
<parameter name="cause">
<type class="java.lang.Throwable"/>
<description>
cause of this XException
</description>
</parameter>
<description>
Constructor with cause only.
</description>
</constructor>

<!-- javax.baja.xml.XException() -->
<constructor name="XException" public="true">
<description>
Default constructor.
</description>
</constructor>

<!-- javax.baja.xml.XException.line() -->
<method name="line"  public="true">
<description>
Get the line number of 0 if unknown.
</description>
<return>
<type class="int"/>
<description>
line number or 0
</description>
</return>
</method>

<!-- javax.baja.xml.XException.column() -->
<method name="column"  public="true">
<description>
Get the column number of 0 if unknown.
</description>
<return>
<type class="int"/>
<description>
column number or 0
</description>
</return>
</method>

<!-- javax.baja.xml.XException.getElem() -->
<method name="getElem"  public="true">
<description>
Return the XElem passed to the constructor or null.
</description>
<return>
<type class="javax.baja.xml.XElem"/>
<description>
Element causing exception, if available, or null
</description>
</return>
</method>

<!-- javax.baja.xml.XException.getCause() -->
<method name="getCause"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the nested exception for or return null if no&#xa; cause exception is provided.
</description>
<return>
<type class="java.lang.Throwable"/>
<description>
cause of this exception
</description>
</return>
</method>

<!-- javax.baja.xml.XException.format(java.lang.String, int, int) -->
<method name="format"  public="true" static="true">
<description>
Get the standard message format given a text message&#xa; and a line/column location.
</description>
<parameter name="msg">
<type class="java.lang.String"/>
<description>
base message
</description>
</parameter>
<parameter name="line">
<type class="int"/>
<description>
0 if unknown
</description>
</parameter>
<parameter name="col">
<type class="int"/>
<description>
0 if unknown
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
formatted message
</description>
</return>
</method>

</class>
</bajadoc>
