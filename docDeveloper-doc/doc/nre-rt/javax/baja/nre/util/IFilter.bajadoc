<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.nre.util.IFilter" name="IFilter" packageName="javax.baja.nre.util" public="true" interface="true" abstract="true" category="interface">
<description>
IFilter tests an object to determine if it meets some criteria.&#xa;&#xa; Note to developers: This class was written long before java.util.function&#xa; and lambdas became part of the Java language and API - even before generics&#xa; support. New API code shouldn&#x27;t use this interface, as&#xa; &lt;code&gt;<see ref="java.util.function.Predicate">java.util.function.Predicate</see>&lt;/code&gt; is more standard and more descriptive.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">12 Sep 2003</tag>
<tag name="@version">$Revision: 1$ $Date: 9/12/03 3:04:49 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.nre.util.IFilter.accept(java.lang.Object) -->
<method name="accept"  public="true" abstract="true">
<description>
Return true if object is accepted by this filter, false otherwise.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

</class>
</bajadoc>
