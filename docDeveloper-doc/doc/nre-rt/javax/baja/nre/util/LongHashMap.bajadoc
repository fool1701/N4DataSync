<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.nre.util.LongHashMap" name="LongHashMap" packageName="javax.baja.nre.util" public="true">
<description>
LongHashMap is an optimized hashtable for hashing objects &#xa; by a long key.  It removes the need to use wrapper &#xa; Long as with the standard collection classes.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">9 Mar 99</tag>
<tag name="@version">$Revision: 5$ $Date: 1/23/03 11:21:56 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.nre.util.LongHashMap() -->
<constructor name="LongHashMap" public="true">
<description>
Default constructor.
</description>
</constructor>

<!-- javax.baja.nre.util.LongHashMap(int) -->
<constructor name="LongHashMap" public="true">
<parameter name="initialCapacity">
<type class="int"/>
</parameter>
<description>
Constructor with initial capacity.
</description>
</constructor>

<!-- javax.baja.nre.util.LongHashMap(int, float) -->
<constructor name="LongHashMap" public="true">
<parameter name="initialCapacity">
<type class="int"/>
</parameter>
<parameter name="loadFactor">
<type class="float"/>
</parameter>
<description>
Constructor with initial capacity and load factor.
</description>
</constructor>

<!-- javax.baja.nre.util.LongHashMap.size() -->
<method name="size"  public="true">
<description/>
<return>
<type class="int"/>
<description>
the count of elements in the table.
</description>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.isEmpty() -->
<method name="isEmpty"  public="true">
<description/>
<return>
<type class="boolean"/>
<description>
if the table is empty.
</description>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.iterator() -->
<method name="iterator"  public="true">
<description/>
<return>
<type class="javax.baja.nre.util.LongHashMap$Iterator"/>
<description>
an iterator of the values for this table.
</description>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.get(long) -->
<method name="get"  public="true">
<description>
Get the object identified by the given long key.
</description>
<parameter name="key">
<type class="long"/>
</parameter>
<return>
<type class="java.lang.Object"/>
<description>
null if not in table.
</description>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.put(long, java.lang.Object) -->
<method name="put"  public="true">
<description>
Put the given object into the table keyed on the long.
</description>
<parameter name="key">
<type class="long"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
<description>
the previous value at this key,&#xa;    or null if it did not have one.
</description>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.remove(long) -->
<method name="remove"  public="true">
<description>
Remove the vaulue identified by the key.
</description>
<parameter name="key">
<type class="long"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.clear() -->
<method name="clear"  public="true">
<description>
Clear the hashtable of entries.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Return if the specified object another LongHashMap &#xa; with the exact same key-value pairs.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.clone() -->
<method name="clone"  public="true">
<description>
Clone the IntHashMap into a new instance.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.nre.util.LongHashMap.toArray(java.lang.Object[]) -->
<method name="toArray"  public="true">
<description>
Get an array containing all values in &#xa; hash table.
</description>
<parameter name="a">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

</class>
</bajadoc>
