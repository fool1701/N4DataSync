<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="nre" runtimeProfile="rt" qualifiedName="javax.baja.nre.security.SharedSecretKey" name="SharedSecretKey" packageName="javax.baja.nre.security" public="true" final="true">
<description>
This class encapsulates all the information of a shared secret&#xa; generated by a SessionKey, salt and iv.
</description>
<tag name="@author">Melanie Coggan</tag>
<tag name="@creation">2015-05-07</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="java.lang.AutoCloseable"/>
</implements>
<!-- javax.baja.nre.security.SharedSecretKey(java.lang.String, byte[], int) -->
<constructor name="SharedSecretKey" public="true">
<parameter name="name">
<type class="java.lang.String"/>
<description>
The name associated with the entity of this shared key
</description>
</parameter>
<parameter name="initializerKey">
<type class="byte" dimension="1"/>
<description>
The shared key used to generate the new key
</description>
</parameter>
<parameter name="keySize">
<type class="int"/>
<description>
the key size
</description>
</parameter>
<description>
Generates a new key from the supplied initializer key.
</description>
</constructor>

<!-- javax.baja.nre.security.SharedSecretKey(java.lang.String, byte[], int, java.lang.String) -->
<constructor name="SharedSecretKey" public="true">
<parameter name="name">
<type class="java.lang.String"/>
<description>
The name associated with the entity of this shared key
</description>
</parameter>
<parameter name="initializerKey">
<type class="byte" dimension="1"/>
<description>
The shared key used to generate the new key
</description>
</parameter>
<parameter name="keySize">
<type class="int"/>
<description>
the key size
</description>
</parameter>
<parameter name="aesTransformation">
<type class="java.lang.String"/>
<description>
the aes transformation to encrypt with
</description>
</parameter>
<description>
Generates a new key from the supplied initializer key.
</description>
<tag name="@since">Niagara 4.9</tag>
</constructor>

<!-- javax.baja.nre.security.SharedSecretKey(java.lang.String, byte[], byte[], byte[], int) -->
<constructor name="SharedSecretKey" public="true">
<parameter name="name">
<type class="java.lang.String"/>
<description>
The name associated with the entity of this shared key
</description>
</parameter>
<parameter name="initializerKey">
<type class="byte" dimension="1"/>
<description>
The shared key used to generate the new key
</description>
</parameter>
<parameter name="salt">
<type class="byte" dimension="1"/>
<description>
The salt used to generate the new key
</description>
</parameter>
<parameter name="iv">
<type class="byte" dimension="1"/>
<description>
The iv used to generate the verification message
</description>
</parameter>
<parameter name="keySize">
<type class="int"/>
</parameter>
<description>
Generates a new key from the supplied initializer key, salt and iv.
</description>
</constructor>

<!-- javax.baja.nre.security.SharedSecretKey(java.lang.String, byte[], byte[], byte[], int, java.lang.String) -->
<constructor name="SharedSecretKey" public="true">
<parameter name="name">
<type class="java.lang.String"/>
<description>
The name associated with the entity of this shared key
</description>
</parameter>
<parameter name="initializerKey">
<type class="byte" dimension="1"/>
<description>
The shared key used to generate the new key
</description>
</parameter>
<parameter name="salt">
<type class="byte" dimension="1"/>
<description>
The salt used to generate the new key
</description>
</parameter>
<parameter name="iv">
<type class="byte" dimension="1"/>
<description>
The iv used to generate the verification message
</description>
</parameter>
<parameter name="keySize">
<type class="int"/>
</parameter>
<parameter name="aesTransformation">
<type class="java.lang.String"/>
<description>
the aes transformation to encrypt with
</description>
</parameter>
<description>
Generates a new key from the supplied initializer key, salt and iv.
</description>
<tag name="@since">Niagara 4.9</tag>
</constructor>

<!-- javax.baja.nre.security.SharedSecretKey.getSalt() -->
<method name="getSalt"  public="true">
<description>
Returns the salt used to generate the shared key
</description>
<return>
<type class="byte" dimension="1"/>
<description>
A byte[] containing the salt used to generate the shared key
</description>
</return>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.getIV() -->
<method name="getIV"  public="true">
<description>
Returns the initialization vector used to generate the shared key
</description>
<return>
<type class="byte" dimension="1"/>
<description>
A byte[] containing the initialization vector used to generate the shared key
</description>
</return>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.getName() -->
<method name="getName"  public="true">
<description>
Returns the name associated with the user of this shared secret key
</description>
<return>
<type class="java.lang.String"/>
<description>
A String with the name.
</description>
</return>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.getVerificationMessage() -->
<method name="getVerificationMessage"  public="true">
<description>
Generates a byte[] message which can be used by another SharedSecretKey&#xa; to validate whether it shares the same key as this SharedSecretKey
</description>
<return>
<type class="byte" dimension="1"/>
<description>
A message used to validate that a different SharedSecretKey uses the same key.
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.validateVerificationMessage(byte[]) -->
<method name="validateVerificationMessage"  public="true">
<description>
Validates that the input &#x22;message&#x22; was generated using the same shared key, salt and&#xa; initialization vector is this SharedSecretKey
</description>
<parameter name="message">
<type class="byte" dimension="1"/>
<description>
The verification message
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
<description/>
</throws>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.encrypt(com.tridium.nre.security.SecretBytes) -->
<method name="encrypt"  public="true">
<description/>
<parameter name="value">
<type class="com.tridium.nre.security.SecretBytes"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.decrypt(byte[]) -->
<method name="decrypt"  public="true">
<description/>
<parameter name="cipher">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="com.tridium.nre.security.SecretBytes"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.decryptChars(byte[]) -->
<method name="decryptChars"  public="true">
<description/>
<parameter name="cipher">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="com.tridium.nre.security.SecretChars"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.nre.security.SharedSecretKey.close() -->
<method name="close"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
