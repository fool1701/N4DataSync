<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<module name="jsonToolkit" runtimeProfile="rt" bajaVersion="0" vendor="Tridium" vendorVersion="4.13.3.48">
<description>Utilities to help marshal niagara components to/from JSON</description>
<package name="com.tridiumx.jsonToolkit.exportMarker"/>
<package name="com.tridiumx.jsonToolkit.exportMarker.register"/>
<package name="com.tridiumx.jsonToolkit.exportMarker.filter"/>
<package name="com.tridiumx.jsonToolkit.proofOfConcept.tools"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.subscription"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.array"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.alarm.property"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.alarm"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.program"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.support"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.support.exporter"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.property"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.object"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.postprocess"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.relative"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.query"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.query.style"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.config.folder"/>
<package name="com.tridiumx.jsonToolkit.outbound.schema.config"/>
<package name="com.tridiumx.jsonToolkit.util"/>
<package name="com.tridiumx.jsonToolkit.util.format"/>
<package name="com.tridiumx.jsonToolkit.inbound"/>
<package name="com.tridiumx.jsonToolkit.inbound.handler"/>
<package name="com.tridiumx.jsonToolkit.inbound.handler.exportMarker"/>
<package name="com.tridiumx.jsonToolkit.inbound.selector"/>
<package name="com.tridiumx.jsonToolkit.inbound.routing"/>
<package name="com.tridiumx.jsonToolkit.inbound.routing.slot"/>
<package name="com.tridiumx.jsonToolkit.inbound.routing.ext"/>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="BAbstractExportMarkerFilter"><description>Contains properties common to all forms of filter accepting Export Marked&#xa; components for consideration.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.program" name="BAbstractInlineJsonWriter"><description>Allows the schema to defer control to a Program in the tree of Schema members, meaning the user can&#xa; do as they please to insert dynamic content in the Schema output.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing.slot" name="BAddSlotDetail"><description>Provides action arguments when adding a new slot to a Json Router.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing.slot" name="BAddSlotTypeEnum"><description>Types of slot that can be added to a Handler</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="BAlarmExportMarkerFilter"><description>Passes alarms to a JsonRecipient if they have an Export Marker on the source point, which has been &#x22;registered&#x22; in&#xa; the cloud recipient as indicated by the presence of an Id on the Export Marker.</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="BAlarmFilterMode"><description>Allows Alarm export marker filter behaviour selection&#xa;&#xa; Marked With Id: If the Source has an Export Marker present, _with Id set_&#xa; Marked: If the source has an Export Marker present&#xa; Pass All: All Alarms&#xa; Block All: No Alarms</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler" name="BAlarmUuidAckHandler"><description>BAlarmUuidAckHandler tries to acknowledge alarms in the stations alarmDb matching the&#xa; uuid(s) provided&#xa;&#xa; {user: &#x22;shaun&#x22;,alarms: [ &#x22;5cf9c8b2-1542-42ba-a1fd-5f753c777bc0&#x22; ]}&#xa;&#xa; **result** This topic report the results of alarm ack to allow logging or post process activity.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util.format" name="BBFormatErrorSubstituteValue"><description>BBFormatErrorSubstituteValue allows the user to select what should be inserted&#xa; in the JSON output if a BFormat fails to resolve against as object.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.alarm.property" name="BBFormatString"><description>&lt;p&gt;&#xa; BBFormatString Holds a format such as %alarmData.sourceName% which will be extracted from an&#xa; AlarmRecord passed in by the parent Alarm Recipient.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.relative" name="BBaseAndOutputPair"><description>Pojo which holds a pair of associated schema generations values:&#xa;&#xa; the output string&#xa; the base item which the schema was generated against</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.relative" name="BBaseQuery"><description>BaseQuery publishes base items to it&#x27;s parent relative schema so Json generation can begin.</description></class>
<class packageName="com.tridiumx.jsonToolkit.proofOfConcept.tools" name="BCoalescingActionDelay"><description>Allows no arg action invocations to be coalesced, by resetting the delay each time one arrives and&#xa; waiting until said delay expires before firing output topic.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BColumnArray"><description>A query result writer which renders the results as an array of arrays,&#xa; where each array contains the values for a given column.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BColumnArrayWithHeader"><description>A query result writer as per the &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.query.style.BColumnArray">BColumnArray</see>&lt;/code&gt; with the column&#xa;  name as the first entry in each array.</description></class>
<class packageName="com.tridiumx.jsonToolkit.proofOfConcept.tools" name="BCountBql"><description>Allows count(*) from a bql query to be exposed in a slot&#xa;&#xa; Useful for counting export markers and displaying on Px.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="BEngineCycleAlarmQueue"><description>A &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.util.BEngineCycleQueue">BEngineCycleQueue</see>&lt;/code&gt; for alarm records.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="BEngineCycleMessageQueue"><description>Useful when json may be generated very quickly to provide a buffer between the&#xa; data source and the destination control:ControlPoint to prevent any potential&#xa; discards within the same engine cycle.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="BEngineCyclePairQueue"><description>Useful when json may be generated very quickly to provide a buffer between the&#xa; data source and the destination control:ControlPoint to prevent any potential&#xa; discards within the same engine cycle.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="BEngineCycleQueue"><description>Useful when json may be generated very quickly to provide a buffer between the&#xa; data source and the destination control:ControlPoint to prevent any potential&#xa; discards within the same engine cycle.</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.register" name="BExportMarkerRegister"><description>Allows registration of export markers in the station to facilitate setpoint routing and export filtering of&#xa; export marked control points.</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="BHistoryExportMarkerFilter"><description>Does not support for history imported from another device, requires the use of another schema/query builder</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.alarm.property" name="BIJsonAlarmDataResolver" category="interface"><description>BIJsonAlarmDataResolver</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BIJsonArray" category="interface"><description>Interface for json array members underneath the schema</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BIJsonObject" category="interface"><description>Interface for json object members underneath the schema</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BIJsonProperty" category="interface"><description>Interface for all json schema properties (key/value pairs).</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BIJsonSchemaMember" category="interface"><description>Contract for all members of a json schema.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.postprocess" name="BIPostProcessor" category="interface"><description>Interface for components which handle the result of a json schema generation.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.program" name="BInlineJsonWriter"><description>Allows the schema to defer control to a Program in the tree of Schema members, meaning the user can&#xa; do as they please to insert dynamic content in the Schema output.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.alarm" name="BJsonAlarmRecipient"><description>The JsonAlarmRecipient exports alarms using the recipient&#x2019;s schema.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonArrayForEachSelector"><description>JSON selector which passes each value of a JSON array to it&#x27;s output&#xa; slots in sequence, with an intermediate delay.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing" name="BJsonArrayRouter"><description>Json Array Router is used to redirect each incoming array index to a new slot.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonAtArrayIndex"><description>Allows selection of Json array values by index.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonBooleanSelector"><description>Selectors that output a boolean as their result</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonContainsKey"><description>Returns a boolean if the specified key is present in the payload</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing" name="BJsonDemuxRouter"><description>Given input { name: &#x22;Bob&#x22;, age: 60, happy: true }</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler.exportMarker" name="BJsonExportDeregistrationHandler"><description>Allows the cloud platform to remove it&#x27;s identifier from export marked points,&#xa; effectively &#x22;unregistering&#x22; them.</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker" name="BJsonExportMarker"><description>This component in added to components which should be found via BQL and exported to a Relative Schema</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler.exportMarker" name="BJsonExportRegistrationHandler"><description>Allows the cloud (or other &#x22;external system&#x22;) target to assign it&#x27;s own&#xa; identifier or primary key to export marked points in the Niagara station&#xa; which can be used to locate them in future, or included in exports to that&#xa; cloud system.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler.exportMarker" name="BJsonExportSetpointHandler"><description>Export Setpoint Handler allows an external json message to change the value&#xa; of a Control Point.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support.exporter" name="BJsonExporter"><description>Json Exporter creates a file with the current output of the schema being viewed.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonFindAllSelector"><description>JSON selector which returns an array of all the values found in the routed&#xa; JSON string with matching key name.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler" name="BJsonHandler"><description>Handlers perform a specific task with the data routed/selected via the other inbound components.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound" name="BJsonInbound"><description>Base class for all incoming json routers/handlers/selectors etc</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonIndexOfKeySelector"><description>Selects the index of the given key within a json object.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonLengthSelector"></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing" name="BJsonMessageRouter"><description>The Json Message Router allows inbound messages to be transferred to an onward component&#xa; suitable for processing, or handling, the message.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonNumericSelector"><description>Numeric Selectors have a double out slot</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonPath"><description>Adds support for JsonPath so customers can more easily extract parts of a schema incoming.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing" name="BJsonRouter"><description>Base class for JSON message routers.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BJsonSchema"><description>Parent for all members which forms a tree of components to marshall a json string from niagara station&#xa; components and values.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.alarm.property" name="BJsonSchemaAlarmRecordProperty"><description>The &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.alarm.BJsonAlarmRecipient">com.tridiumx.jsonToolkit.outbound.schema.alarm.BJsonAlarmRecipient</see>&lt;/code&gt; schema supports alarm-related properties.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.array" name="BJsonSchemaArray"><description>A named array container for other &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.BJsonSchemaMember">BJsonSchemaMember</see>&lt;/code&gt; children.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaBooleanProperty"><description>A fixed boolean key / value json pair.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.array" name="BJsonSchemaBoundArray"><description>A json array which is bound by a ord to a target station component/slot&#xa; and whose internal values are the values of the slots inside that target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaBoundCsvProperty"><description>A json property (key/value pair) whose value is bound to a selected station component/slot ord target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BJsonSchemaBoundMember"></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.object" name="BJsonSchemaBoundObject"><description>A json object which is bound by an ord to a target station component/slot and whose internal key value pairs&#xa; are the slots inside that target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaBoundProperty"><description>A json property (key/value pair) whose value is bound to a selected station component/slot ord target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="BJsonSchemaBoundQueryResult"><description>Binding to the result of a specific query, the resulting columns/values are rendered&#xa; into the json schema according to the chosen json style.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BJsonSchemaBoundSlotsContainer"><description>A base class for a json container (object/array/csv string) which is bound by an ord to a target station component/slot&#xa; and whose internal content are the values of slots inside that ord target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config.folder" name="BJsonSchemaConfigFolder"><description>Root location for Schema config props</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaCountProperty"><description>A json key value pair where the value is an incrementing integer.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaCurrentTimeProperty"><description>BJsonSchemaCurrentTimeProperty&#xa;&#xa; For fixed time use a bound property.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config.folder" name="BJsonSchemaDebugFolder"><description>Contains metrics and historical debug tools</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaFacetList"><description>A list of name/value properties based upon selected facets found upon a binding target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaFacetProperty"><description>BJsonSchemaTagProperty allows a single Facet value from a bound component&#xa; to be inserted in the Schema output</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema" name="BJsonSchemaMember"></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaMetadataProperty"><description>A JSON property which uses a selected metadata field as the source&#xa; for the json value (instead of a slot value as per other bindings).</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaNameCasing"><description>Different available case options for the forming of json keys.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaNameSource"><description>Different available options for what name to use for json keys when bound to a station component.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaNameSpacing"><description>Different available options for dealing with spaces in the forming of json keys.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaNumericProperty"><description>A fixed numeric key / value json pair.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.object" name="BJsonSchemaObject"><description>A named object container for other &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.BJsonSchemaMember">BJsonSchemaMember</see>&lt;/code&gt; children.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config.folder" name="BJsonSchemaOverrideFolder"><description>Contains json type overrides</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaProperty"><description>Base class for fixed key / value json pair.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaPropertyList"><description>A list property name value pairs.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaPropertyNameSource"><description>Different available options for what name to use for json keys for pairs within a bound object.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="BJsonSchemaQuery"><description>A query and associated result columns which is executed on each generation of the json schema.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="BJsonSchemaQueryFolder"><description>BJsonSchemaQueryFolder introduces an icon and allows easier parent / child legality checks</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="BJsonSchemaService"><description>Service to define global / protected features for the json schemas.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaStringProperty"><description>A fixed string key / value json pair.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaTagList"><description>A list of name/value properties based upon selected tags found upon a binding target.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaTagProperty"><description>Allows a single tag value from the bound component to be inserted in the Schema&#xa; output.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaTuningPolicy"><description>Use conventional Framework construct for min/max write etc.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.property" name="BJsonSchemaUnixTimeProperty"><description>Outputs the current unix timestamp as a long numeric</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BJsonSchemaUpdateStrategy"><description>The different stratagem for defining when a json schema should update it&#x27;s output string.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonSelector"><description>Base class for all json inbound classes which take a payload, apply some selection criteria&#xa; and set the result in an out slot.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler" name="BJsonSetPointHandler"><description>Routes incoming setpoint values to control writable points.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonStringSelector"><description>Selectors that output a string or json array/object as their result</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.selector" name="BJsonSumSelector"></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BKeyValuePairObject"><description>A query result writer which renders an object containing each&#xa; row as a key value pair using the first 2 columns.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="BListOf"><description>This implements about half of the java List interface, storing values within an internal BVector, allowing persistence&#xa; of a collection of BValues, with list like behaviour such as get/set/remove by index.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BMetadataField"><description>Different metadata fields supported in json metadata bindings.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BNamedObjects"><description>A query result writer which renders an object containing a named object for each row.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BObjectsArray"><description>A query result writer which renders an array containing an object per row.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BQueryResultWriter"><description>Base class for all query result writers.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="BRelativeHistoryQuery"><description>Experimental extension to a schema history designed to work in relative&#xa; schemas only.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.relative" name="BRelativeJsonSchema"><description>BRelativeJsonSchema allows base objects to be passed down through the schema&#xa; members (typically by bql in the &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.relative.BBaseQuery">BBaseQuery</see>&lt;/code&gt; which can then be resolved&#xa; using relative ords like slot: or slot:../&#xa;&#xa; This concept should allow for greater scalability than regular JsonSchema,&#xa; and dynamic selection of data to export based on query result.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing.ext" name="BRouterExt"><description>Called by &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.inbound.BJsonInbound">BJsonInbound</see>&lt;/code&gt; to allow  extension of fixed exportMarker functionality,&#xa; subclasses are passed the incoming message to react to as they choose.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BRowArray"><description>A query result writer which renders each row of the result table as a&#xa; json array within a containing array.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BRowArrayWithHeader"><description>A query result writer as per the &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.query.style.BRowArray">BRowArray</see>&lt;/code&gt; with a header row&#xa; that includes the column names.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="BSMAExpirationMonitor"><description>Given the jsonToolkit&#x27;s requirement for active Maintenance (SMA) on&#xa; non demo licenses, this monitor increases notifications to the user as&#xa; expiration approaches.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="BSMAExpirationMonitorMode"><description>Allows user to select when alarms about SMA expiration are raised</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="BSchemaEvent"></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.postprocess" name="BSchemaHistoryDebug"><description>Util for seeing the history of output from a json schema.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="BSingleColumnArray"><description>A query result writer which renders the results of a query with one column only as a&#xa; single array.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.config" name="BSlotSelectionType"><description>The different options for which slots from the ord target&#xa; to include in a bound container such as a json object or array.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="BSubscriptionSlotBlacklist"><description>Global slot filter for subscription events.</description></class>
<class packageName="com.tridiumx.jsonToolkit.proofOfConcept.tools" name="BTwinnedMessageLogger"><description>Allows logging of inputA and inputB into the same history to give a sequenced&#xa; log of traffic to/from the toolkit:&#xa;&#xa; &lt; input   (inputA link)&#xa; &gt; output  (inputB link)</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.program" name="BTypeOverride"><description>At the core of the jsonToolkit is a method which maps &lt;code&gt;<see ref="javax.baja.sys.BObject">javax.baja.sys.BObject</see>&lt;/code&gt;&#xa; Types to Json.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="BindingSlotFilter"><description>A subscription filter which only matches if the event slot is the first slot in a component when walking up the&#xa; target ord of the bound member.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="ChildSlotRenamedFilter"><description>Subscription filter for property rename events.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing.slot" name="DynamicSlotUtil" category="interface"><description>Behaviours commons to Handler&#x27;s needing readOnly + Summary slots for&#xa; routing/demuxing of payloads</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="ExcludedJsonTypeException" category="exception"><description>Thrown when a BIUnlinkable or other such export prohibited type is encountered and filtered from the Schema output</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="ExportMarkerIdInvalidException" category="exception"><description>Indicates an empty export marker id (which can be a valid configuration)</description></class>
<class packageName="com.tridiumx.jsonToolkit.exportMarker.filter" name="ExportMarkerNotFoundException" category="exception"><description>If an object does not have an Export Marker</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="FilterResult" category="enum"><description>The different results for a subscription filter.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util.format" name="FormatResolveUtil"><description>FormatResolveUtil provides configurable error substitution for resolved BFormat text.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="JsonKeyExtractUtil" category="interface"><description>Utility class for reading keys from Json Input</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="JsonSchemaBuilder"><description>Utility builder class for creating a schema structure.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="JsonSchemaConfigException" category="exception"><description>Indicates incorrect layout/design of Schema Members</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="JsonSchemaNameUtil"><description>Singleton Utils methods for writing of name/value pair names in json schemas</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="JsonSchemaSecurity"><description>Security related logic for applying user permissions to ord targets / child of bound objects etc&#xa;&#xa; The approach to permissions checking is:&#xa;&#xa; Json schema will pass the context onto any ord resolution from bound members / queries&#xa;    If the action to generate json / run queries was run by a user the users context is applied&#xa;      If the user has changed since last time we clear caches throughout the schema to discard any data the new user might not have perms for&#xa;    If not triggered by a user we delegate to the &lt;code&gt;<see ref="com.tridiumx.jsonToolkit.outbound.schema.support.BJsonSchemaService">BJsonSchemaService</see>&lt;/code&gt; runAsUser to populate our context&#xa;      The service is &lt;code&gt;<see ref="javax.baja.security.BIProtected">javax.baja.security.BIProtected</see>&lt;/code&gt; to only live under services and no duplicates&#xa;      The runAsUser slot can not be edited by operators.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="JsonSchemaUtil"><description>Singleton Utils methods for json schemas including conversion from niagara type to json type.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="JsonStringUtil"><description>Utils for json string parsing</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="LicenseLimit" category="interface"><description>LicenseLimit</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="MissingJsonValueException" category="exception"><description>Exception when a mandatory json value is missing.</description></class>
<class packageName="com.tridiumx.jsonToolkit.util" name="ParentLegal"><description>ParentLegal utility encourages project to throw more meaningful exceptions&#xa; than the Framework versions.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="QueryFailException" category="exception"><description>Checked exception for when schema queries fail too execute or timeout.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="QueryFailReasons" category="enum"><description>Enumeration of the various ways query execution can fail.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="QueryResultHolder"><description>Cache of a bql/neql query result table.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query" name="QueryRunner"><description>Utility class for running schema queries.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.query.style" name="QueryStyleManager"><description>Maintains the list of registered query output style writers.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing.ext" name="RouterExtException" category="exception"><description>Exception type to be thrown by registration exportMarker utils ...</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.routing" name="RoutingFailedException" category="exception"><description>Routing failed for a given payload and reason.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="SchemaBoundMemberSubscriber"><description>A subscriber for a specific bound member.</description></class>
<class packageName="com.tridiumx.jsonToolkit.inbound.handler" name="SetpointValueRejectedException" category="exception"><description>Provides a basic means to test and report on writes from the platform which would exceed any&#xa; min/max facets present on the target point</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="SlotWhiteListFilter"><description>A subscription filter for when bound objects which specify a set of list of properties for json output.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="Subscription"><description>Immutable properties of a subscription to a binding target, along with event filtering logic.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="SubscriptionEventFilter" category="interface"><description>A filter for subscription events.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="SubscriptionEventHandler" category="interface"><description>Contract for handling subscription events in a schema.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.subscription" name="SubscriptionFactory"><description>A factory for constructing subscriptions based upon the binding type and target type.</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.relative" name="SubscriptionTable"><description>SubscriptionTable&#xa;&#xa; One of these exists per schema with relative support&#xa;&#xa; The table tracks 2 things:&#xa;&#xa; 1) A mapping between all bound member targets and the base query items they were resolved against&#xa;    This allows us to lookup the base item to pass through the schema when a subscription event occurs&#xa; 2) A mapping of all the subscribers created for the bound member bindings</description></class>
<class packageName="com.tridiumx.jsonToolkit.outbound.schema.support" name="UnsupportedConversionTypeException" category="exception"><description>Thrown when the route to convert a Java object to a BValue subclass (such that the framework can move it around)&#xa; is not known.</description></class>
</module>
</bajadoc>
