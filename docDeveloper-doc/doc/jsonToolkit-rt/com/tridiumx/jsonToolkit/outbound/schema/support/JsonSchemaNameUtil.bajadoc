<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="jsonToolkit" runtimeProfile="rt" qualifiedName="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil" name="JsonSchemaNameUtil" packageName="com.tridiumx.jsonToolkit.outbound.schema.support" public="true" final="true">
<description>
Singleton Utils methods for writing of name/value pair names in json schemas
</description>
<tag name="@author">Nick Dodd / Jason Woollard</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.writeKey(com.tridiumx.jsonToolkit.outbound.schema.BIJsonSchemaMember, com.tridium.json.JSONWriter, java.lang.String) -->
<method name="writeKey"  public="true" static="true">
<description>
Append a json key to the json stream while applying the schemas config for string naming / spacing
</description>
<parameter name="member">
<type class="com.tridiumx.jsonToolkit.outbound.schema.BIJsonSchemaMember"/>
<description>
the schema member which requests the write
</description>
</parameter>
<parameter name="json">
<type class="com.tridium.json.JSONWriter"/>
<description>
the json writer to append to
</description>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
<description>
the string key to append
</description>
</parameter>
<return>
<type class="com.tridium.json.JSONWriter"/>
<description>
the json writer that was aappended to
</description>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getJsonName(com.tridiumx.jsonToolkit.outbound.schema.BJsonSchemaBoundMember) -->
<method name="getJsonName"  public="true" static="true">
<description/>
<parameter name="member">
<type class="com.tridiumx.jsonToolkit.outbound.schema.BJsonSchemaBoundMember"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getNameOfTarget(javax.baja.naming.OrdTarget) -->
<method name="getNameOfTarget"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getNameOfTargetsParent(javax.baja.naming.OrdTarget) -->
<method name="getNameOfTargetsParent"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getDisplayNameOfTarget(javax.baja.naming.OrdTarget) -->
<method name="getDisplayNameOfTarget"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getTargetsPath(javax.baja.naming.OrdTarget) -->
<method name="getTargetsPath"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getNameOfNearest(javax.baja.naming.OrdTarget, javax.baja.sys.Type) -->
<method name="getNameOfNearest"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.getNearest(javax.baja.naming.OrdTarget, javax.baja.sys.Type) -->
<method name="getNearest"  public="true" static="true">
<description/>
<parameter name="ordTarget">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
</parameter>
<return>
<type class="javax.baja.sys.BComplex"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.applyNamingRules(com.tridiumx.jsonToolkit.outbound.schema.BIJsonSchemaMember, java.lang.String) -->
<method name="applyNamingRules"  public="true" static="true">
<description/>
<parameter name="member">
<type class="com.tridiumx.jsonToolkit.outbound.schema.BIJsonSchemaMember"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaNameUtil.logger -->
<field name="logger"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
