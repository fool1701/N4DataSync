<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="jsonToolkit" runtimeProfile="rt" qualifiedName="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder" name="JsonSchemaBuilder" packageName="com.tridiumx.jsonToolkit.outbound.schema.support" public="true">
<description>
Utility builder class for creating a schema structure.&#xa;&#xa; example usage:&#xa;&#xa; new JsonSchemaBuilder().&#xa;  .withRootObject()&#xa;  .withFixedStringProperty(&#x22;FixedString&#x22;, &#x22;I ain&#x27;t changing for toffee&#x22;)&#xa;  .withBoundProperty(&#x22;I have Spaces In My Name&#x22;, myOrd)&#xa;  .withFixedObject(&#x22;FixedObject&#x22;)&#xa;  .stepDown()&#xa;    .withBoundProperty(&#x22;NestedProperty&#x22;), myOtherOrd)&#xa;    .withBoundObject(&#x22;NestedObject&#x22;, anotherOrd)&#xa;  .stepUp()&#xa;  .build();
</description>
<tag name="@author">Nick Dodd</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder() -->
<constructor name="JsonSchemaBuilder" public="true">
<description/>
</constructor>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.relativeSchema() -->
<method name="relativeSchema"  public="true" static="true">
<description/>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.enabled(boolean) -->
<method name="enabled"  public="true">
<description/>
<parameter name="enabled">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withUpdateStrategy(com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaUpdateStrategy) -->
<method name="withUpdateStrategy"  public="true">
<description/>
<parameter name="updateStrategy">
<type class="com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaUpdateStrategy"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withNamingStrategy(com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameCasing, com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameSpacing) -->
<method name="withNamingStrategy"  public="true">
<description/>
<parameter name="casing">
<type class="com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameCasing"/>
</parameter>
<parameter name="spacing">
<type class="com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameSpacing"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withQueryInterval(javax.baja.sys.BRelTime) -->
<method name="withQueryInterval"  public="true">
<description/>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withRootObject() -->
<method name="withRootObject"  public="true">
<description/>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withRootArray() -->
<method name="withRootArray"  public="true">
<description/>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBoundObject(java.lang.String, javax.baja.naming.BOrd) -->
<method name="withBoundObject"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="bindTarget">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBoundProperty(java.lang.String, javax.baja.naming.BOrd) -->
<method name="withBoundProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="bindTarget">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBoundArray(java.lang.String, javax.baja.naming.BOrd) -->
<method name="withBoundArray"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="bindTarget">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBoundCsvProperty(java.lang.String, javax.baja.naming.BOrd) -->
<method name="withBoundCsvProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="bindTarget">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withNameSource(com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameSource) -->
<method name="withNameSource"  public="true">
<description/>
<parameter name="nameSource">
<type class="com.tridiumx.jsonToolkit.outbound.schema.config.BJsonSchemaNameSource"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withSlotSelection(com.tridiumx.jsonToolkit.outbound.schema.config.BSlotSelectionType) -->
<method name="withSlotSelection"  public="true">
<description/>
<parameter name="type">
<type class="com.tridiumx.jsonToolkit.outbound.schema.config.BSlotSelectionType"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withSlots(javax.baja.sys.Property[]) -->
<method name="withSlots"  public="true">
<description/>
<parameter name="selectedSlots">
<type class="javax.baja.sys.Property" dimension="1"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFixedObject(java.lang.String) -->
<method name="withFixedObject"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFixedArray(java.lang.String) -->
<method name="withFixedArray"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFixedStringProperty(java.lang.String, java.lang.String) -->
<method name="withFixedStringProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFixedNumericProperty(java.lang.String, javax.baja.sys.BNumber) -->
<method name="withFixedNumericProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BNumber"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFixedBooleanProperty(java.lang.String, java.lang.Boolean) -->
<method name="withFixedBooleanProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="java.lang.Boolean"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withQuery(java.lang.String, java.lang.String) -->
<method name="withQuery"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="queryString">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBoundQueryResult(java.lang.String, java.lang.String, javax.baja.util.BTypeSpec) -->
<method name="withBoundQueryResult"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="queryName">
<type class="java.lang.String"/>
</parameter>
<parameter name="styleType">
<type class="javax.baja.util.BTypeSpec"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBaseQuery(java.lang.String, boolean) -->
<method name="withBaseQuery"  public="true">
<description/>
<parameter name="queryString">
<type class="java.lang.String"/>
</parameter>
<parameter name="publishOnStart">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withBaseQuery(java.lang.String, boolean, javax.baja.sys.BRelTime) -->
<method name="withBaseQuery"  public="true">
<description/>
<parameter name="queryString">
<type class="java.lang.String"/>
</parameter>
<parameter name="publishOnStart">
<type class="boolean"/>
</parameter>
<parameter name="publishInterval">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withCountProperty(java.lang.String) -->
<method name="withCountProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withCurrentTimeProperty(java.lang.String) -->
<method name="withCurrentTimeProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFacetProperty(java.lang.String) -->
<method name="withFacetProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withTagProperty(java.lang.String) -->
<method name="withTagProperty"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withFacetList(java.lang.String) -->
<method name="withFacetList"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.withTagList(java.lang.String) -->
<method name="withTagList"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.stepDown() -->
<method name="stepDown"  public="true">
<description/>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.stepUp() -->
<method name="stepUp"  public="true">
<description/>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder"/>
</return>
</method>

<!-- com.tridiumx.jsonToolkit.outbound.schema.support.JsonSchemaBuilder.build() -->
<method name="build"  public="true">
<description>
NOTE - many errors such as duplicate slot names will not become apparent until the resultant schema is&#xa; added to a running component tree and the json string is generated.
</description>
<return>
<type class="com.tridiumx.jsonToolkit.outbound.schema.BJsonSchema"/>
<description>
the json schema
</description>
</return>
</method>

</class>
</bajadoc>
