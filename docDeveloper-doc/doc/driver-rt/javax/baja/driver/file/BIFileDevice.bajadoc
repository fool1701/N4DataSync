<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.file.BIFileDevice" name="BIFileDevice" packageName="javax.baja.driver.file" public="true" interface="true" abstract="true" category="interface">
<description>
BIFileDevice is the common interface that should be implemented&#xa; by a device that supports files (i.e. useful for file&#xa; synchronization, importing, exporting, etc).&#xa; It might commonly be implemented by&#xa; devices that have a file system, and you can resolve&#xa; files in the device&#x27;s system given relative Ords.
</description>
<tag name="@author">Scott Hoye</tag>
<tag name="@creation">15 May 06</tag>
<tag name="@version">$Revision: 1$ $Date: 5/16/06 12:40:34 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- javax.baja.driver.file.BIFileDevice.resolveFile(javax.baja.naming.BOrd) -->
<method name="resolveFile"  public="true" abstract="true">
<description>
Resolve a BIFile in this file device&#xa; given an Ord.  In many cases, the given Ord&#xa; may be relative to the device&#x27;s file system,&#xa; so the device must resolve the file and return&#xa; a BIFile instance.
</description>
<parameter name="ord">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="javax.baja.file.BIFile"/>
</return>
</method>

<!-- javax.baja.driver.file.BIFileDevice.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
