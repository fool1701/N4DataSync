<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.history.BHistoryDeviceExt" name="BHistoryDeviceExt" packageName="javax.baja.driver.history" public="true" abstract="true">
<description>
BHistoryDeviceExt is the base class for mapping historical&#xa; data in a device to Baja history databases.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">17 Oct 01</tag>
<tag name="@version">$Revision: 9$ $Date: 5/19/09 2:54:57 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.driver.util.BDescriptorDeviceExt"/>
</extends>
<implements>
<type class="javax.baja.driver.history.BIArchiveFolder"/>
</implements>
<!-- javax.baja.driver.history.BHistoryDeviceExt() -->
<constructor name="BHistoryDeviceExt" public="true">
<description/>
</constructor>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getImportDescriptorType() -->
<method name="getImportDescriptorType"  public="true">
<description>
Get the Type for import descriptors managed by this extension.&#xa; If null, then the extension does not support imports.
</description>
<return>
<type class="javax.baja.sys.Type"/>
<description>
Returns the protocol specific import descriptor type&#xa;   or null if this extension does not support history imports.
</description>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getExportDescriptorType() -->
<method name="getExportDescriptorType"  public="true">
<description>
Get the Type for export descriptors managed by this extension.&#xa; If null, then the extension does not support exports.
</description>
<return>
<type class="javax.baja.sys.Type"/>
<description>
Returns the protocol specific export descriptor type&#xa;   or null if this extension does not support history exports.
</description>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getDeviceExt() -->
<method name="getDeviceExt"  public="true">
<description>
Return this.
</description>
<tag name="@since">Niagara 3.5</tag>
<return>
<type class="javax.baja.driver.history.BHistoryDeviceExt"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getArchiveFolderType() -->
<method name="getArchiveFolderType"  public="true">
<description>
Get the type of ArchiveFolder for this driver.&#xa; The default implementation returns the generic&#xa; BArchiveFolder type.
</description>
<tag name="@since">Niagara 3.5</tag>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.supportsGenericArchiveFolder() -->
<method name="supportsGenericArchiveFolder"  public="true">
<description>
The BArchiveFolder implementation of BIArchiveFolder can be&#xa; generically used by all drivers if they don&#x27;t wish to create&#xa; their own subclasses of BIArchiveFolder.  In those cases, they may &#xa; wish to override this method in their BHistoryDeviceExt subclass to tell the&#xa; BArchiveFolder to take on the agents (ie. Manager view) of the&#xa; BHistoryDeviceExt subclass.  This can save the need for more BIArchiveFolder&#xa; subclasses for each driver, however the agents inherited must&#xa; be able to handle a BArchiveFolder target (ie. the Manager views&#xa; cannot assume the loadValue target is a BHistoryDeviceExt subclass,&#xa; they must be careful to resolve the BHistoryDeviceExt for all possible&#xa; cases).&#xa;&#xa; The default return value for this method is false, meaning that the&#xa; parent BHistoryDeviceExt&#x27;s agents won&#x27;t be inherited.  Subclasses&#xa; may wish to override this method to true if their manager views can&#xa; handle the generic BArchiveFolder case.
</description>
<tag name="@since">Niagara 3.5</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryDeviceExt.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
