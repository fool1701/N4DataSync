<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.history.BHistoryImport" name="BHistoryImport" packageName="javax.baja.driver.history" public="true" abstract="true">
<description>
BHistoryImport defines an archive action for transferring&#xa; one or more histories from a remote source to the local&#xa; destination.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">31 Mar 2003</tag>
<tag name="@version">$Revision: 14$ $Date: 11/3/09 4:41:52 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.driver.history.BArchiveDescriptor"/>
</extends>
<implements>
<type class="javax.baja.driver.history.BIHistoryPollable"/>
</implements>
<implements>
<type class="javax.baja.history.BIPollableHistorySource"/>
</implements>
<property name="onDemandPollEnabled" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;onDemandPollEnabled&lt;/code&gt; property.&#xa; Enables on demand polling for this history import.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#getOnDemandPollEnabled</tag>
<tag name="@see">#setOnDemandPollEnabled</tag>
</property>

<property name="onDemandPollFrequency" flags="">
<type class="javax.baja.driver.util.BPollFrequency"/>
<description>
Slot for the &lt;code&gt;onDemandPollFrequency&lt;/code&gt; property.&#xa; Poll frequency bucket, determines the polling rate.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#getOnDemandPollFrequency</tag>
<tag name="@see">#setOnDemandPollFrequency</tag>
</property>

<property name="configOverrides" flags="">
<type class="javax.baja.sys.BComponent"/>
<description>
Slot for the &lt;code&gt;configOverrides&lt;/code&gt; property.&#xa; Defines the configuration of the history that&#xa; is created at the destination as a set of&#xa; overrides from the default.
</description>
<tag name="@see">#getConfigOverrides</tag>
<tag name="@see">#setConfigOverrides</tag>
</property>

<!-- javax.baja.driver.history.BHistoryImport() -->
<constructor name="BHistoryImport" public="true">
<description/>
</constructor>

<!-- javax.baja.driver.history.BHistoryImport.getOnDemandPollEnabled() -->
<method name="getOnDemandPollEnabled"  public="true">
<description>
Get the &lt;code&gt;onDemandPollEnabled&lt;/code&gt; property.&#xa; Enables on demand polling for this history import.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#onDemandPollEnabled</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.setOnDemandPollEnabled(boolean) -->
<method name="setOnDemandPollEnabled"  public="true">
<description>
Set the &lt;code&gt;onDemandPollEnabled&lt;/code&gt; property.&#xa; Enables on demand polling for this history import.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#onDemandPollEnabled</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.getOnDemandPollFrequency() -->
<method name="getOnDemandPollFrequency"  public="true">
<description>
Get the &lt;code&gt;onDemandPollFrequency&lt;/code&gt; property.&#xa; Poll frequency bucket, determines the polling rate.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#onDemandPollFrequency</tag>
<return>
<type class="javax.baja.driver.util.BPollFrequency"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.setOnDemandPollFrequency(javax.baja.driver.util.BPollFrequency) -->
<method name="setOnDemandPollFrequency"  public="true">
<description>
Set the &lt;code&gt;onDemandPollFrequency&lt;/code&gt; property.&#xa; Poll frequency bucket, determines the polling rate.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#onDemandPollFrequency</tag>
<parameter name="v">
<type class="javax.baja.driver.util.BPollFrequency"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.getConfigOverrides() -->
<method name="getConfigOverrides"  public="true">
<description>
Get the &lt;code&gt;configOverrides&lt;/code&gt; property.&#xa; Defines the configuration of the history that&#xa; is created at the destination as a set of&#xa; overrides from the default.
</description>
<tag name="@see">#configOverrides</tag>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.setConfigOverrides(javax.baja.sys.BComponent) -->
<method name="setConfigOverrides"  public="true">
<description>
Set the &lt;code&gt;configOverrides&lt;/code&gt; property.&#xa; Defines the configuration of the history that&#xa; is created at the destination as a set of&#xa; overrides from the default.
</description>
<tag name="@see">#configOverrides</tag>
<parameter name="v">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<description>
The specified parent is only legal if it or one&#xa; of its ancestors is a IArchiveFolder that&#xa; supports import.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.makeLocalConfig(javax.baja.history.BHistoryConfig) -->
<method name="makeLocalConfig"  public="true">
<description>
Create a local history configuration based on the specified&#xa; remote configuration.
</description>
<parameter name="remoteConfig">
<type class="javax.baja.history.BHistoryConfig"/>
</parameter>
<return>
<type class="javax.baja.history.BHistoryConfig"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.unsubscribed() -->
<method name="unsubscribed"  public="true">
<description>
Unsubscribed causes unregistration from the history poll scheduler
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.poll() -->
<method name="poll"  public="true">
<description>
Callback when the history poll scheduler says its time to&#xa; poll the history.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.historyPollingEnabled() -->
<method name="historyPollingEnabled"  public="true">
<description>
Returns true if this object supports history polling (subscription), &#xa; or false if it does not (does not support subscription).
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.updateHistorySubscriptionCount(int) -->
<method name="updateHistorySubscriptionCount"  public="true">
<description>
This callback is made to cause the history subscription counter for this&#xa; history import to be incremented (positive change value) or decremented &#xa; (negative change value).  The returning value is the current history &#xa; subscription counter value after the increment/decrement &#xa; has been processed.
</description>
<tag name="@since">Niagara 3.4</tag>
<parameter name="change">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.getPollFrequency() -->
<method name="getPollFrequency"  public="true">
<description>
Get the configured poll frequency.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="javax.baja.driver.util.BPollFrequency"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<description>
Overridden to be sure to include spy info about the &#xa; history subscription status.
</description>
<tag name="@since">Niagara 3.4</tag>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.driver.history.BHistoryImport.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.driver.history.BHistoryImport.onDemandPollEnabled -->
<field name="onDemandPollEnabled"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;onDemandPollEnabled&lt;/code&gt; property.&#xa; Enables on demand polling for this history import.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#getOnDemandPollEnabled</tag>
<tag name="@see">#setOnDemandPollEnabled</tag>
</field>

<!-- javax.baja.driver.history.BHistoryImport.onDemandPollFrequency -->
<field name="onDemandPollFrequency"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;onDemandPollFrequency&lt;/code&gt; property.&#xa; Poll frequency bucket, determines the polling rate.
</description>
<tag name="@since">Niagara 3.4</tag>
<tag name="@see">#getOnDemandPollFrequency</tag>
<tag name="@see">#setOnDemandPollFrequency</tag>
</field>

<!-- javax.baja.driver.history.BHistoryImport.configOverrides -->
<field name="configOverrides"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;configOverrides&lt;/code&gt; property.&#xa; Defines the configuration of the history that&#xa; is created at the destination as a set of&#xa; overrides from the default.
</description>
<tag name="@see">#getConfigOverrides</tag>
<tag name="@see">#setConfigOverrides</tag>
</field>

<!-- javax.baja.driver.history.BHistoryImport.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.driver.history.BHistoryImport.asyncHistoryPoll -->
<field name="asyncHistoryPoll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when the execute&#xa; action is invoked due to an on-demand poll, and it should be&#xa; handled asynchronously.  In some special cases,&#xa; subclasses may want to handle the postExecute() differently&#xa; based on whether the execute() was called due to a normal archive,&#xa; or due to an on-demand poll.
</description>
<tag name="@since">Niagara 3.4</tag>
</field>

<!-- javax.baja.driver.history.BHistoryImport.syncHistoryPoll -->
<field name="syncHistoryPoll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This instance of context is passed when the execute&#xa; action is invoked due to a history subscribe, and it should be&#xa; handled synchronously.  In some special cases,&#xa; subclasses may want to handle the postExecute() differently&#xa; based on whether the execute() was called due to a normal archive,&#xa; or due to a history subscribe.
</description>
<tag name="@since">Niagara 3.4</tag>
</field>

</class>
</bajadoc>
