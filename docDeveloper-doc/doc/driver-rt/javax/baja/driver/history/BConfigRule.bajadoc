<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.history.BConfigRule" name="BConfigRule" packageName="javax.baja.driver.history" public="true">
<description>
BConfigRule is used to determine the overrides for&#xa; an existing history configuration.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">17 Apr 2003</tag>
<tag name="@version">$Revision: 3$ $Date: 11/3/09 4:41:05 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<property name="devicePattern" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;devicePattern&lt;/code&gt; property.&#xa; A pattern to match against the device&#xa; name for incoming histories.
</description>
<tag name="@see">#getDevicePattern</tag>
<tag name="@see">#setDevicePattern</tag>
</property>

<property name="historyNamePattern" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;historyNamePattern&lt;/code&gt; property.&#xa; A pattern to match against the history name&#xa; for incoming histories.
</description>
<tag name="@see">#getHistoryNamePattern</tag>
<tag name="@see">#setHistoryNamePattern</tag>
</property>

<!-- javax.baja.driver.history.BConfigRule() -->
<constructor name="BConfigRule" public="true">
<description/>
</constructor>

<!-- javax.baja.driver.history.BConfigRule.getDevicePattern() -->
<method name="getDevicePattern"  public="true">
<description>
Get the &lt;code&gt;devicePattern&lt;/code&gt; property.&#xa; A pattern to match against the device&#xa; name for incoming histories.
</description>
<tag name="@see">#devicePattern</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.setDevicePattern(java.lang.String) -->
<method name="setDevicePattern"  public="true">
<description>
Set the &lt;code&gt;devicePattern&lt;/code&gt; property.&#xa; A pattern to match against the device&#xa; name for incoming histories.
</description>
<tag name="@see">#devicePattern</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.getHistoryNamePattern() -->
<method name="getHistoryNamePattern"  public="true">
<description>
Get the &lt;code&gt;historyNamePattern&lt;/code&gt; property.&#xa; A pattern to match against the history name&#xa; for incoming histories.
</description>
<tag name="@see">#historyNamePattern</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.setHistoryNamePattern(java.lang.String) -->
<method name="setHistoryNamePattern"  public="true">
<description>
Set the &lt;code&gt;historyNamePattern&lt;/code&gt; property.&#xa; A pattern to match against the history name&#xa; for incoming histories.
</description>
<tag name="@see">#historyNamePattern</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.makeDefault() -->
<method name="makeDefault"  public="true" static="true">
<description/>
<return>
<type class="javax.baja.driver.history.BConfigRule"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.isMatch(javax.baja.history.BHistoryId) -->
<method name="isMatch"  public="true">
<description>
Does this rule match the specified id.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.makeConfig(javax.baja.history.BHistoryConfig) -->
<method name="makeConfig"  public="true">
<description/>
<parameter name="remoteConfig">
<type class="javax.baja.history.BHistoryConfig"/>
</parameter>
<return>
<type class="javax.baja.history.BHistoryConfig"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description>
Handle a property change.
</description>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="c">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.history.BConfigRule.devicePattern -->
<field name="devicePattern"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;devicePattern&lt;/code&gt; property.&#xa; A pattern to match against the device&#xa; name for incoming histories.
</description>
<tag name="@see">#getDevicePattern</tag>
<tag name="@see">#setDevicePattern</tag>
</field>

<!-- javax.baja.driver.history.BConfigRule.historyNamePattern -->
<field name="historyNamePattern"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;historyNamePattern&lt;/code&gt; property.&#xa; A pattern to match against the history name&#xa; for incoming histories.
</description>
<tag name="@see">#getHistoryNamePattern</tag>
<tag name="@see">#setHistoryNamePattern</tag>
</field>

<!-- javax.baja.driver.history.BConfigRule.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
