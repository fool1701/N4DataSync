<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.util.BAbstractDescriptor" name="BAbstractDescriptor" packageName="javax.baja.driver.util" public="true" abstract="true">
<description>
This abstract base class configures a trigger and provides execute action whose implementation&#xa; is to be handled by the subclasses. It also provides configuration for scheduling a regular task.&#xa;&#xa; The subclass needs to implement doExecute() and postExecute() methods. Subclasses are responsible&#xa; for calling the following lifecycle methods:&#xa; &lt;ul&gt;&#xa;   &lt;li&gt;executeInProgress() - must call when doExecute() is invoked&#xa;   &lt;li&gt;executeFail()&#xa;   &lt;li&gt;executeOk()&#xa;  &lt;br&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@author">Ashutosh Chaturvedi on 5/8/2019</tag>
<tag name="@since">Niagara 4.9</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.status.BIStatus"/>
</implements>
<property name="status" flags="rt">
<type class="javax.baja.status.BStatus"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status of this descriptor.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</property>

<property name="state" flags="r">
<type class="javax.baja.driver.util.BDescriptorState"/>
<description>
Slot for the &lt;code&gt;state&lt;/code&gt; property.&#xa; The current state of the work that is performed by this descriptor.
</description>
<tag name="@see">#getState</tag>
<tag name="@see">#setState</tag>
</property>

<property name="enabled" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;enabled&lt;/code&gt; property.&#xa; The enabled state of this descriptor.  If false, the&#xa; descriptor status will include &#x22;disabled&#x22;.  If true,&#xa; the disabled status is controlled by the parent.
</description>
<tag name="@see">#getEnabled</tag>
<tag name="@see">#setEnabled</tag>
</property>

<property name="executionTime" flags="">
<type class="javax.baja.control.trigger.BTimeTrigger"/>
<description>
Slot for the &lt;code&gt;executionTime&lt;/code&gt; property.&#xa; The execution time controls when the execute action will be invoked.
</description>
<tag name="@see">#getExecutionTime</tag>
<tag name="@see">#setExecutionTime</tag>
</property>

<property name="lastAttempt" flags="r">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;lastAttempt&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work was started.
</description>
<tag name="@see">#getLastAttempt</tag>
<tag name="@see">#setLastAttempt</tag>
</property>

<property name="lastSuccess" flags="r">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;lastSuccess&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work completed successfully.
</description>
<tag name="@see">#getLastSuccess</tag>
<tag name="@see">#setLastSuccess</tag>
</property>

<property name="lastFailure" flags="r">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;lastFailure&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work failed to complete successfully.
</description>
<tag name="@see">#getLastFailure</tag>
<tag name="@see">#setLastFailure</tag>
</property>

<property name="faultCause" flags="rt">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; This is a text message describing the reason for the fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</property>

<action name="execute" flags="a">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.&#xa; Execute the work that the descriptor is responsible for.
</description>
<tag name="@see">#execute()</tag>
</action>

<!-- javax.baja.driver.util.BAbstractDescriptor() -->
<constructor name="BAbstractDescriptor" public="true">
<description/>
</constructor>

<!-- javax.baja.driver.util.BAbstractDescriptor.getStatus() -->
<method name="getStatus"  public="true">
<description>
Get the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status of this descriptor.
</description>
<tag name="@see">#status</tag>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setStatus(javax.baja.status.BStatus) -->
<method name="setStatus"  public="true">
<description>
Set the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status of this descriptor.
</description>
<tag name="@see">#status</tag>
<parameter name="v">
<type class="javax.baja.status.BStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getState() -->
<method name="getState"  public="true">
<description>
Get the &lt;code&gt;state&lt;/code&gt; property.&#xa; The current state of the work that is performed by this descriptor.
</description>
<tag name="@see">#state</tag>
<return>
<type class="javax.baja.driver.util.BDescriptorState"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setState(javax.baja.driver.util.BDescriptorState) -->
<method name="setState"  public="true">
<description>
Set the &lt;code&gt;state&lt;/code&gt; property.&#xa; The current state of the work that is performed by this descriptor.
</description>
<tag name="@see">#state</tag>
<parameter name="v">
<type class="javax.baja.driver.util.BDescriptorState"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getEnabled() -->
<method name="getEnabled"  public="true">
<description>
Get the &lt;code&gt;enabled&lt;/code&gt; property.&#xa; The enabled state of this descriptor.  If false, the&#xa; descriptor status will include &#x22;disabled&#x22;.  If true,&#xa; the disabled status is controlled by the parent.
</description>
<tag name="@see">#enabled</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setEnabled(boolean) -->
<method name="setEnabled"  public="true">
<description>
Set the &lt;code&gt;enabled&lt;/code&gt; property.&#xa; The enabled state of this descriptor.  If false, the&#xa; descriptor status will include &#x22;disabled&#x22;.  If true,&#xa; the disabled status is controlled by the parent.
</description>
<tag name="@see">#enabled</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getExecutionTime() -->
<method name="getExecutionTime"  public="true">
<description>
Get the &lt;code&gt;executionTime&lt;/code&gt; property.&#xa; The execution time controls when the execute action will be invoked.
</description>
<tag name="@see">#executionTime</tag>
<return>
<type class="javax.baja.control.trigger.BTimeTrigger"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setExecutionTime(javax.baja.control.trigger.BTimeTrigger) -->
<method name="setExecutionTime"  public="true">
<description>
Set the &lt;code&gt;executionTime&lt;/code&gt; property.&#xa; The execution time controls when the execute action will be invoked.
</description>
<tag name="@see">#executionTime</tag>
<parameter name="v">
<type class="javax.baja.control.trigger.BTimeTrigger"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getLastAttempt() -->
<method name="getLastAttempt"  public="true">
<description>
Get the &lt;code&gt;lastAttempt&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work was started.
</description>
<tag name="@see">#lastAttempt</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setLastAttempt(javax.baja.sys.BAbsTime) -->
<method name="setLastAttempt"  public="true">
<description>
Set the &lt;code&gt;lastAttempt&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work was started.
</description>
<tag name="@see">#lastAttempt</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getLastSuccess() -->
<method name="getLastSuccess"  public="true">
<description>
Get the &lt;code&gt;lastSuccess&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work completed successfully.
</description>
<tag name="@see">#lastSuccess</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setLastSuccess(javax.baja.sys.BAbsTime) -->
<method name="setLastSuccess"  public="true">
<description>
Set the &lt;code&gt;lastSuccess&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work completed successfully.
</description>
<tag name="@see">#lastSuccess</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getLastFailure() -->
<method name="getLastFailure"  public="true">
<description>
Get the &lt;code&gt;lastFailure&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work failed to complete successfully.
</description>
<tag name="@see">#lastFailure</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setLastFailure(javax.baja.sys.BAbsTime) -->
<method name="setLastFailure"  public="true">
<description>
Set the &lt;code&gt;lastFailure&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work failed to complete successfully.
</description>
<tag name="@see">#lastFailure</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getFaultCause() -->
<method name="getFaultCause"  public="true">
<description>
Get the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; This is a text message describing the reason for the fault.
</description>
<tag name="@see">#faultCause</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.setFaultCause(java.lang.String) -->
<method name="setFaultCause"  public="true">
<description>
Set the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; This is a text message describing the reason for the fault.
</description>
<tag name="@see">#faultCause</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.execute() -->
<method name="execute"  public="true">
<description>
Invoke the &lt;code&gt;execute&lt;/code&gt; action.&#xa; Execute the work that the descriptor is responsible for.
</description>
<tag name="@see">#execute</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.executeOk() -->
<method name="executeOk"  public="true">
<description>
Called to indicate that the execute action completed&#xa; successfully.  This sets lastSuccess, clears the fault&#xa; cause, and sets the state to idle. This method also&#xa; updates the status by calling &lt;code&gt;updateStatus()&lt;/code&gt;
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.executeFail() -->
<method name="executeFail"  public="true">
<description>
See setExecuteFail(String)
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.executeFail(java.lang.String) -->
<method name="executeFail"  public="true">
<description>
Called to indicate that the execute action failed&#xa; to complete.  This sets the last failure time and message,&#xa; sets the fault cause, and sets the state&#xa; back to idle. This method also&#xa; updates the status by calling &lt;code&gt;updateStatus()&lt;/code&gt;
</description>
<parameter name="reason">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.executeFail(java.lang.Throwable) -->
<method name="executeFail"  public="true">
<description>
See setExecuteFail(String)
</description>
<parameter name="ex">
<type class="java.lang.Throwable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.executeInProgress() -->
<method name="executeInProgress"  public="true">
<description>
Called to indicate that the execute action is in progress.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.doExecute() -->
<method name="doExecute"  public="true" abstract="true">
<description>
Handle an invocation of the execute action with null context.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.isUnoperational() -->
<method name="isUnoperational"  public="true">
<description>
If true, execute should be short circuited.
</description>
<return>
<type class="boolean"/>
<description>
True if down, disabled
</description>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.isDown() -->
<method name="isDown"  public="true">
<description>
Return true if the status is down.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.isFault() -->
<method name="isFault"  public="true">
<description>
Return true if in fault.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.isDisabled() -->
<method name="isDisabled"  public="true">
<description>
Return true if disabled.&#xa; Is disabled if the user has manually&#xa; set the enabled property to false.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.updateStatus() -->
<method name="updateStatus"  public="true" abstract="true">
<description>
Convenience method to update the status of the instance.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.post(javax.baja.sys.Action, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="post"  public="true">
<description>
This post method includes special handling for the execute action.&#xa; A post of the execute action results in a call to&#xa; postExecute(Action, BValue, Context).  If this method is overridden&#xa; super.post(Action, BValue, Context) must be called.
</description>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<parameter name="arg">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.util.IFuture"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.postExecute(javax.baja.sys.Action, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="postExecute"  protected="true" abstract="true">
<description>
This post method includes special handling for the execute action.
</description>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<parameter name="arg">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.util.IFuture"/>
<description>
always return null
</description>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<description>
For internal framework use only.
</description>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.driver.util.BAbstractDescriptor.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; The status of this descriptor.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.state -->
<field name="state"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;state&lt;/code&gt; property.&#xa; The current state of the work that is performed by this descriptor.
</description>
<tag name="@see">#getState</tag>
<tag name="@see">#setState</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.enabled -->
<field name="enabled"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;enabled&lt;/code&gt; property.&#xa; The enabled state of this descriptor.  If false, the&#xa; descriptor status will include &#x22;disabled&#x22;.  If true,&#xa; the disabled status is controlled by the parent.
</description>
<tag name="@see">#getEnabled</tag>
<tag name="@see">#setEnabled</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.executionTime -->
<field name="executionTime"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;executionTime&lt;/code&gt; property.&#xa; The execution time controls when the execute action will be invoked.
</description>
<tag name="@see">#getExecutionTime</tag>
<tag name="@see">#setExecutionTime</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.lastAttempt -->
<field name="lastAttempt"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;lastAttempt&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work was started.
</description>
<tag name="@see">#getLastAttempt</tag>
<tag name="@see">#setLastAttempt</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.lastSuccess -->
<field name="lastSuccess"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;lastSuccess&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work completed successfully.
</description>
<tag name="@see">#getLastSuccess</tag>
<tag name="@see">#setLastSuccess</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.lastFailure -->
<field name="lastFailure"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;lastFailure&lt;/code&gt; property.&#xa; The last time that the descriptor&#x27;s work failed to complete successfully.
</description>
<tag name="@see">#getLastFailure</tag>
<tag name="@see">#setLastFailure</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.faultCause -->
<field name="faultCause"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; This is a text message describing the reason for the fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.execute -->
<field name="execute"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.&#xa; Execute the work that the descriptor is responsible for.
</description>
<tag name="@see">#execute()</tag>
</field>

<!-- javax.baja.driver.util.BAbstractDescriptor.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
