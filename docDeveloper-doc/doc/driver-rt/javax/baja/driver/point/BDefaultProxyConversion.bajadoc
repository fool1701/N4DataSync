<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="driver" runtimeProfile="rt" qualifiedName="javax.baja.driver.point.BDefaultProxyConversion" name="BDefaultProxyConversion" packageName="javax.baja.driver.point" public="true" final="true">
<description>
BDefaultProxyConversion is the standard conversion type used&#xa; by ProxyExts.  For StatusNumerics it provides a default&#xa; conversion based on &lt;code&gt;parentPoint.facets.units&lt;/code&gt; and&#xa; &lt;code&gt;deviceValueFacets.units&lt;/code&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@version">$Revision: 2$ $Date: 7/22/08 10:37:26 AM EDT$</tag>
<tag name="@creation">9 Feb 05</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.driver.point.BProxyConversion"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.driver.point.BDefaultProxyConversion.convertDeviceToProxy(javax.baja.driver.point.BProxyExt, javax.baja.status.BStatusValue, javax.baja.status.BStatusValue) -->
<method name="convertDeviceToProxy"  public="true">
<description>
Copy the deviceValue to the proxyValue.  The default&#xa; implementation performs a unit conversion if using&#xa; StatusNumeric and &lt;code&gt;parentPoint.facets.units&lt;/code&gt;&#xa; and &lt;code&gt;deviceValueFacets.units&lt;/code&gt; are non-null and&#xa; different.
</description>
<parameter name="ext">
<type class="javax.baja.driver.point.BProxyExt"/>
</parameter>
<parameter name="deviceValue">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<parameter name="proxyValue">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.convertProxyToDevice(javax.baja.driver.point.BProxyExt, javax.baja.status.BStatusValue, javax.baja.status.BStatusValue) -->
<method name="convertProxyToDevice"  public="true">
<description>
Copy the proxyValue to the deviceValue.   The default&#xa; implementation performs a unit conversion if using&#xa; StatusNumeric and &lt;code&gt;parentPoint.facets.units&lt;/code&gt;&#xa; and &lt;code&gt;deviceValueFacets.units&lt;/code&gt; are non-null and&#xa; different.
</description>
<parameter name="ext">
<type class="javax.baja.driver.point.BProxyExt"/>
</parameter>
<parameter name="proxyValue">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<parameter name="deviceValue">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description/>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.hashCode() -->
<method name="hashCode"  public="true">
<description>
The hashcode is always the same since this is a singleton.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.encodeToString() -->
<method name="encodeToString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.getType() -->
<method name="getType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.driver.point.BDefaultProxyConversion.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.driver.point.BDefaultProxyConversion"/>
<description>
This is the singleton instance.
</description>
</field>

<!-- javax.baja.driver.point.BDefaultProxyConversion.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
