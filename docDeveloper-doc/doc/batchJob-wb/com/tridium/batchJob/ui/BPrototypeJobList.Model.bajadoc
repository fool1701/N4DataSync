<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="batchJob" runtimeProfile="wb" qualifiedName="com.tridium.batchJob.ui.BPrototypeJobList$Model" name="BPrototypeJobList.Model" packageName="com.tridium.batchJob.ui" protected="true" innerClass="true">
<description/>
<extends>
<type class="javax.baja.ui.table.TableModel"/>
</extends>
<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model() -->
<constructor name="Model" public="true">
<description/>
</constructor>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.updateJob(javax.baja.batchJob.BBatchJob) -->
<method name="updateJob"  public="true" synchronized="true">
<description>
Update the stats for the given job if it&#x27;s in the model, or add it&#xa; to the model if it isn&#x27;t
</description>
<parameter name="job">
<type class="javax.baja.batchJob.BBatchJob"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.handleJobDisposed(javax.baja.sys.BAbsTime) -->
<method name="handleJobDisposed"  public="true" synchronized="true">
<description>
Remove a disposed job from the model
</description>
<parameter name="jobStart">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.dispose(int[]) -->
<method name="dispose"  public="true" synchronized="true">
<description>
Dispose of the jobs with the given indexes
</description>
<parameter name="rows">
<type class="int" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.cancel(int[]) -->
<method name="cancel"  public="true" synchronized="true">
<description/>
<parameter name="rows">
<type class="int" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.load(javax.baja.batchJob.BBatchJobPrototype) -->
<method name="load"  public="true" synchronized="true">
<description>
Load the model from the BJobService and filesystem
</description>
<parameter name="proto">
<type class="javax.baja.batchJob.BBatchJobPrototype"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.getRowCount() -->
<method name="getRowCount"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.getColumnCount() -->
<method name="getColumnCount"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.getColumnName(int) -->
<method name="getColumnName"  public="true">
<description/>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.getValueAt(int, int) -->
<method name="getValueAt"  public="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.summary(int) -->
<method name="summary"  public="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.batchJob.BIBatchJobSummary"/>
</return>
</method>

<!-- com.tridium.batchJob.ui.BPrototypeJobList.Model.getRowIcon(int) -->
<method name="getRowIcon"  public="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

</class>
</bajadoc>
