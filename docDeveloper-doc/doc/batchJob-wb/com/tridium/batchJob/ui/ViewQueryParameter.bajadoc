<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="batchJob" runtimeProfile="wb" qualifiedName="com.tridium.batchJob.ui.ViewQueryParameter" name="ViewQueryParameter" packageName="com.tridium.batchJob.ui" public="true">
<description>
Utility that can encode objects in a way that&#x27;s safe to include as&#xa; a parameter in a ViewQuery
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">15 Feb 2006</tag>
<tag name="@version">$Revision$ $Date$</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.batchJob.ui.ViewQueryParameter() -->
<constructor name="ViewQueryParameter" public="true">
<description/>
</constructor>

<!-- com.tridium.batchJob.ui.ViewQueryParameter.decode(java.lang.String) -->
<method name="decode"  public="true" static="true">
<description>
Decodes an object that was encoded with ViewQueryParameter.encode()
</description>
<parameter name="encoded">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.batchJob.ui.ViewQueryParameter.encode(javax.baja.io.BIEncodable) -->
<method name="encode"  public="true" static="true">
<description>
Encodes an object into a string thats acceptable for use as&#xa; a ViewQuery parameter
</description>
<parameter name="value">
<type class="javax.baja.io.BIEncodable"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

</class>
</bajadoc>
