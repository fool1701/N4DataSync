<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.BDdfNetwork" name="BDdfNetwork" packageName="com.tridium.ddf" public="true" abstract="true">
<description>
Subclassing this class makes it easy for drivers add a network to the Niagara AX framework.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Oct 9, 2006</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.driver.loadable.BLoadableNetwork"/>
</extends>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<implements>
<type class="javax.baja.sys.BIService"/>
</implements>
<property name="tuningPolicies" flags="">
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
<description>
Slot for the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#getTuningPolicies</tag>
<tag name="@see">#setTuningPolicies</tag>
</property>

<property name="backgroundProcessor" flags="">
<type class="com.tridium.ddf.BDdfWorker"/>
<description>
Slot for the &lt;code&gt;backgroundProcessor&lt;/code&gt; property.&#xa; This is a general queue and thread combo that&#xa; Is used to perform work in the background of&#xa; The station
</description>
<tag name="@see">#getBackgroundProcessor</tag>
<tag name="@see">#setBackgroundProcessor</tag>
</property>

<!-- com.tridium.ddf.BDdfNetwork() -->
<constructor name="BDdfNetwork" public="true">
<description/>
</constructor>

<!-- com.tridium.ddf.BDdfNetwork.getTuningPolicies() -->
<method name="getTuningPolicies"  public="true">
<description>
Get the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#tuningPolicies</tag>
<return>
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.setTuningPolicies(javax.baja.driver.point.BTuningPolicyMap) -->
<method name="setTuningPolicies"  public="true">
<description>
Set the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#tuningPolicies</tag>
<parameter name="v">
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.getBackgroundProcessor() -->
<method name="getBackgroundProcessor"  public="true">
<description>
Get the &lt;code&gt;backgroundProcessor&lt;/code&gt; property.&#xa; This is a general queue and thread combo that&#xa; Is used to perform work in the background of&#xa; The station
</description>
<tag name="@see">#backgroundProcessor</tag>
<return>
<type class="com.tridium.ddf.BDdfWorker"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.setBackgroundProcessor(com.tridium.ddf.BDdfWorker) -->
<method name="setBackgroundProcessor"  public="true">
<description>
Set the &lt;code&gt;backgroundProcessor&lt;/code&gt; property.&#xa; This is a general queue and thread combo that&#xa; Is used to perform work in the background of&#xa; The station
</description>
<tag name="@see">#backgroundProcessor</tag>
<parameter name="v">
<type class="com.tridium.ddf.BDdfWorker"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.postAsync(java.lang.Runnable) -->
<method name="postAsync"  public="true">
<description>
This provides a reasonable default implementation of the &#x27;postAsync&#x27;&#xa; method, which is required by the ancestor class BLoadableNetwork.&#xa; &#xa; This places the the given Runnable on the background processor.
</description>
<parameter name="r">
<type class="java.lang.Runnable"/>
</parameter>
<return>
<type class="javax.baja.util.IFuture"/>
<description>
null always
</description>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<description>
Gets the agent list.  Adds BDdfDeviceManager as &#x22;Your Driver Device Manager&#x22; if one&#xa; not already registered.
</description>
<tag name="@see">DdfAgentInfo.getAgentsHelp</tag>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.getServiceTypes() -->
<method name="getServiceTypes"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfNetwork.serviceStarted() -->
<method name="serviceStarted"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.BDdfNetwork.serviceStopped() -->
<method name="serviceStopped"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.BDdfNetwork.tuningPolicies -->
<field name="tuningPolicies"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#getTuningPolicies</tag>
<tag name="@see">#setTuningPolicies</tag>
</field>

<!-- com.tridium.ddf.BDdfNetwork.backgroundProcessor -->
<field name="backgroundProcessor"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;backgroundProcessor&lt;/code&gt; property.&#xa; This is a general queue and thread combo that&#xa; Is used to perform work in the background of&#xa; The station
</description>
<tag name="@see">#getBackgroundProcessor</tag>
<tag name="@see">#setBackgroundProcessor</tag>
</field>

<!-- com.tridium.ddf.BDdfNetwork.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
