<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.BDdfDevice" name="BDdfDevice" packageName="com.tridium.ddf" public="true" abstract="true">
<description>
BDdfDevice&#xa;&#xa; If this device has its own dedicated BDdfCommunicator then you should simply indicate this by&#xa; making it implement the interface BIDdfCommunicating.
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Oct 9, 2006</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.driver.loadable.BLoadableDevice"/>
</extends>
<implements>
<type class="com.tridium.ddf.comm.req.IDdfPingable"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<property name="communicator" flags="h">
<type class="javax.baja.sys.BValue"/>
<description>
Slot for the &lt;code&gt;communicator&lt;/code&gt; property.&#xa; This driver uses the communicator from the network to communicate on behalf of this&#xa; Device. The network must extend BDdfCommNetwork in order for this to work.&#xa; The BValues for this property must implement BIDdfCommunicator&#xa; This property is hidden because the default, null communicator acts as a pass-&#xa; thru communicator and sends all communications to the communicator that is on&#xa; the driver network.
</description>
<tag name="@see">#getCommunicator</tag>
<tag name="@see">#setCommunicator</tag>
</property>

<property name="deviceId" flags="">
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
<description>
Slot for the &lt;code&gt;deviceId&lt;/code&gt; property.&#xa; Descendants should override this property and define it with a default value&#xa; That extends BDdfIdParams. This is the device&#x27;s address on the field bus.
</description>
<tag name="@see">#getDeviceId</tag>
<tag name="@see">#setDeviceId</tag>
</property>

<property name="pingParameters" flags="">
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
<description>
Slot for the &lt;code&gt;pingParameters&lt;/code&gt; property.&#xa; This should encapsulate any extra information necessary to ping the particular device.&#xa; The default value needs to implement BIDdfPingParams so that the ddf&#xa; Can automatically ping the device.
</description>
<tag name="@see">#getPingParameters</tag>
<tag name="@see">#setPingParameters</tag>
</property>

<!-- com.tridium.ddf.BDdfDevice() -->
<constructor name="BDdfDevice" public="true">
<description/>
</constructor>

<!-- com.tridium.ddf.BDdfDevice.getCommunicator() -->
<method name="getCommunicator"  public="true">
<description>
Get the &lt;code&gt;communicator&lt;/code&gt; property.&#xa; This driver uses the communicator from the network to communicate on behalf of this&#xa; Device. The network must extend BDdfCommNetwork in order for this to work.&#xa; The BValues for this property must implement BIDdfCommunicator&#xa; This property is hidden because the default, null communicator acts as a pass-&#xa; thru communicator and sends all communications to the communicator that is on&#xa; the driver network.
</description>
<tag name="@see">#communicator</tag>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.setCommunicator(javax.baja.sys.BValue) -->
<method name="setCommunicator"  public="true">
<description>
Set the &lt;code&gt;communicator&lt;/code&gt; property.&#xa; This driver uses the communicator from the network to communicate on behalf of this&#xa; Device. The network must extend BDdfCommNetwork in order for this to work.&#xa; The BValues for this property must implement BIDdfCommunicator&#xa; This property is hidden because the default, null communicator acts as a pass-&#xa; thru communicator and sends all communications to the communicator that is on&#xa; the driver network.
</description>
<tag name="@see">#communicator</tag>
<parameter name="v">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getDeviceId() -->
<method name="getDeviceId"  public="true">
<description>
Get the &lt;code&gt;deviceId&lt;/code&gt; property.&#xa; Descendants should override this property and define it with a default value&#xa; That extends BDdfIdParams. This is the device&#x27;s address on the field bus.
</description>
<tag name="@see">#deviceId</tag>
<return>
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.setDeviceId(com.tridium.ddf.identify.BDdfIdParams) -->
<method name="setDeviceId"  public="true">
<description>
Set the &lt;code&gt;deviceId&lt;/code&gt; property.&#xa; Descendants should override this property and define it with a default value&#xa; That extends BDdfIdParams. This is the device&#x27;s address on the field bus.
</description>
<tag name="@see">#deviceId</tag>
<parameter name="v">
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getPingParameters() -->
<method name="getPingParameters"  public="true">
<description>
Get the &lt;code&gt;pingParameters&lt;/code&gt; property.&#xa; This should encapsulate any extra information necessary to ping the particular device.&#xa; The default value needs to implement BIDdfPingParams so that the ddf&#xa; Can automatically ping the device.
</description>
<tag name="@see">#pingParameters</tag>
<return>
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.setPingParameters(com.tridium.ddf.identify.BDdfIdParams) -->
<method name="setPingParameters"  public="true">
<description>
Set the &lt;code&gt;pingParameters&lt;/code&gt; property.&#xa; This should encapsulate any extra information necessary to ping the particular device.&#xa; The default value needs to implement BIDdfPingParams so that the ddf&#xa; Can automatically ping the device.
</description>
<tag name="@see">#pingParameters</tag>
<parameter name="v">
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getNetworkType() -->
<method name="getNetworkType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getDdfCommunicator() -->
<method name="getDdfCommunicator"  public="true">
<description>
Returns the value in the communicator slot casted as a BIDdfCommunicator.&#xa;&#xa;  Developers are encouraged to override the communicator property as an easier&#xa;  means of defining the ddf communicator than overridding this method.
</description>
<return>
<type class="com.tridium.ddf.comm.BIDdfCommunicator"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.getDdfPingRequestType() -->
<method name="getDdfPingRequestType"  public="true">
<description>
Determines which type of request should best ping this device.&#xa;&#xa; The default behavior should be sufficient. It calls getDeviceId,&#xa; casts the result to BIDdfPingParams, and then returns whatever the&#xa; device id&#x27;s getDdfPingRequestType method returns. If the&#xa; getDdfPingRequestType method returns null then this calls pingFail.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.makePingRequest() -->
<method name="makePingRequest"  public="true">
<description>
The &#x27;doPing&#x27; method calls this method to instantiate an instance&#xa; of the driver&#x27;s ping request for this device.&#xa;&#xa; This is accomplished as follows&#xa; 1.) Calls &#x27;getDdfPingRequestType()&#x27;&#xa; 2.) Instantiates the resulting type to get a BIDdfPingRequest object.&#xa; 3.) Initializes the responseTimeout and remainingRetryCount on the&#xa;     BIDdfPingRequestObject&#xa; 4.) Sets the deviceId on the BIDdfPingRequest equal to a copy of the&#xa;     deviceId for this device.&#xa; 5.) Sets the pingParameters on the the BIDdfPingRequest equal to a&#xa;     copy of the pingParameters for this device.
</description>
<return>
<type class="com.tridium.ddf.comm.req.BIDdfPingRequest"/>
<description>
an instance of the driver&#x27;s ping request for this device, as described.
</description>
</return>
</method>

<!-- com.tridium.ddf.BDdfDevice.doPing() -->
<method name="doPing"  public="true">
<description>
This is the default implementation of the &#x27;ping&#x27; action. This is a one-size-fits-all&#xa; implementation of the &#x27;ping&#x27; method that should suffice for most, if not all, drivers.&#xa;&#xa; This does the following:&#xa; 1.) Calls &#x27;makePingRequest&#x27; to construct the appropriate instance of the driver&#x27;s&#xa;     ping request.&#xa; 2.) Adds this device and all other devices under the same network with the equivalent&#xa;     deviceId to the pingableSource array of the ping request.&#xa; 3.) Calls &#x27;communicateSync&#x27; and passes in the pingRequest. This blocks the ping thread&#xa;     until the response is received or timesout. The developer driver framework automatically&#xa;     calls pingOk() or pingFail() on this device if a response is received or times out.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.BDdfDevice.communicator -->
<field name="communicator"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;communicator&lt;/code&gt; property.&#xa; This driver uses the communicator from the network to communicate on behalf of this&#xa; Device. The network must extend BDdfCommNetwork in order for this to work.&#xa; The BValues for this property must implement BIDdfCommunicator&#xa; This property is hidden because the default, null communicator acts as a pass-&#xa; thru communicator and sends all communications to the communicator that is on&#xa; the driver network.
</description>
<tag name="@see">#getCommunicator</tag>
<tag name="@see">#setCommunicator</tag>
</field>

<!-- com.tridium.ddf.BDdfDevice.deviceId -->
<field name="deviceId"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;deviceId&lt;/code&gt; property.&#xa; Descendants should override this property and define it with a default value&#xa; That extends BDdfIdParams. This is the device&#x27;s address on the field bus.
</description>
<tag name="@see">#getDeviceId</tag>
<tag name="@see">#setDeviceId</tag>
</field>

<!-- com.tridium.ddf.BDdfDevice.pingParameters -->
<field name="pingParameters"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;pingParameters&lt;/code&gt; property.&#xa; This should encapsulate any extra information necessary to ping the particular device.&#xa; The default value needs to implement BIDdfPingParams so that the ddf&#xa; Can automatically ping the device.
</description>
<tag name="@see">#getPingParameters</tag>
<tag name="@see">#setPingParameters</tag>
</field>

<!-- com.tridium.ddf.BDdfDevice.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
