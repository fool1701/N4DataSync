<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<package module="devDriver" runtimeProfile="rt" name="com.tridium.ddf.discover">
<description/>
<class packageName="com.tridium.ddf.discover" name="BDdfDeviceDiscoveryLeaf"><description>This is the default implementation of BIDdfDeviceDiscoveryLeaf.</description></class>
<class packageName="com.tridium.ddf.discover" name="BDdfDiscoveryGroup"><description>This is the default implementation of BIDdfDiscoveryGroup</description></class>
<class packageName="com.tridium.ddf.discover" name="BDdfDiscoveryJob"><description>Discovery objects by default are placed as Niagara AX children directly&#xa; under this.</description></class>
<class packageName="com.tridium.ddf.discover" name="BDdfDiscoveryLeaf"><description>Discovery leaves appear in the discovery list on the&#xa; Ddf Device Manager or Ddf PointManager.</description></class>
<class packageName="com.tridium.ddf.discover" name="BDdfDiscoveryPreferences"><description>Niagara AX Manager Views can prompt the user for a customized&#xa; instance of this class to prompt the end user for discovery&#xa; preferences.</description></class>
<class packageName="com.tridium.ddf.discover" name="BDdfPointDiscoveryLeaf"><description>Driver developers should extend this class and redefine the&#xa; default values of the pointId, readParameters, and writeParameters&#xa; and make them return instances that are the same type as those on&#xa; their driver&#x27;s proxy ext.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfDeviceDiscoveryLeaf" category="interface"><description>BIDdfDeviceDiscoveryLeaf objects define both, the deviceId and pingParameters&#xa; of a device.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfDiscoveryGroup" category="interface"><description>Ddf discovery groups appear in the discovery list of&#xa; the Ddf Device Manager or Ddf Point Manager.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfDiscoveryHost" category="interface"><description>Parent components built on the ddf that&#xa; have a user interface manager associated with them (the&#xa; Ddf Device Manager and Ddf Point Manager are examples&#xa; of user interface managers) and whose user interface&#xa; managers providessupport for a discovery (in other words,&#xa; a &#x22;Discover&#x22; button) should implement this interface.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfDiscoveryLeaf" category="interface"><description>Discovery leaves appear in the discovery list on the&#xa; Ddf Device Manager or Ddf Point Manager.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfDiscoveryObject" category="interface"><description>This is the common ancestor of the Niagara AX types that appear&#xa; in the discovery list of the Ddf Device Manager and Ddf Point&#xa; Manager.</description></class>
<class packageName="com.tridium.ddf.discover" name="BIDdfPointDiscoveryLeaf" category="interface"><description>Discovery leaves that appear in the Ddf Point Manager should&#xa; implement this interface.</description></class>
<class packageName="com.tridium.ddf.discover" name="IDdfDiscoverer" category="interface"><description>The &#x27;ddf auto discovery job&#x27; passes an instance of this class&#xa; to each discovery request just after instantiating each&#xa; discovery request.</description></class>
</package>
</bajadoc>
