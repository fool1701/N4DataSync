<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.IDdfFacetConst" name="IDdfFacetConst" packageName="com.tridium.ddf" public="true" interface="true" abstract="true" category="interface">
<description>
These constants help driver developers when declaring&#xa; properties in slotomatic statements to customize the&#xa; developer device manager and developer point manager.&#xa; &#xa; Most, if not all, classes in this framework implement&#xa; this interface and therefore inherit these attributes
</description>
<tag name="@author">lperkins</tag>
<!-- com.tridium.ddf.IDdfFacetConst.CONTEXT_POINT_MANAGER -->
<field name="CONTEXT_POINT_MANAGER"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context is passed to the &#x27;isExisting&#x27; method of the pointId,&#xa; readParameters, and/or writeParameters structures on a proxy ext&#xa; to determine if it is an existing database representation of the&#xa; discovery object.&#xa; &#xa; This constant does not have anything to do with facets but was thrown&#xa; in with this class as a convenience since just about all classes in&#xa; the developer driver framework already implement this interface to inherit&#xa; its static fields.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.CONTEXT_DEVICE_MANAGER -->
<field name="CONTEXT_DEVICE_MANAGER"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context is passed to the &#x27;isExisting&#x27; method of the deviceId,&#xa; and/or pingParameters structures on a proxy ext&#xa; to determine if it is an existing database representation of the&#xa; discovery object.&#xa; &#xa; This constant does not have anything to do with facets but was thrown&#xa; in with this class as a convenience since just about all classes in&#xa; the developer driver framework already implement this interface to inherit&#xa; its static fields.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.CONTEXT_DISCOVERING_DEVICES -->
<field name="CONTEXT_DISCOVERING_DEVICES"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context is returned from the IDdfDiscoverer.getDiscoverContext()&#xa; method (for Ddf Device Mgr discovery). This is part of the BDdfAutoDiscoveryJob.&#xa; &#xa; It is part of the mechanism that provides a developer&#x27;s device discovery request&#xa; with access back into the discovery job.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.CONTEXT_DISCOVERING_POINTS -->
<field name="CONTEXT_DISCOVERING_POINTS"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context is returned from the IDdfDiscoverer.getDiscoverContext()&#xa; method (for Ddf Point Mgr discovery). This is part of the BDdfAutoDiscoveryJob.&#xa; &#xa; It is part of the mechanism that provides a developer&#x27;s device discovery request&#xa; with access back into the discovery job.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.KEY_MGR_NOT_IN_DIALOG -->
<field name="KEY_MGR_NOT_IN_DIALOG"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.MGR_NOT_IN_DIALOG -->
<field name="MGR_NOT_IN_DIALOG"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description>
The MGR_NOT_IN_DIALOG facet causes a point that is in the developer device or point manager to not&#xa; be present in the edit dialog that appears when a database row is double clicked or when a&#xa; new database component is added to the station.&#xa; &#xa; The developer manager only checks properties that are flavors of BSimple for this facet. Therefore,&#xa; adding this facet to properties that are not BSimples will have no effect.&#xa; &#xa; Please note that the property must also include the MGR_INCLUDE facet for the developer manager to even&#xa; consider this facet.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.KEY_MGR_OPTIONAL_IN_TABLE -->
<field name="KEY_MGR_OPTIONAL_IN_TABLE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.MGR_OPTIONAL_IN_TABLE -->
<field name="MGR_OPTIONAL_IN_TABLE"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description>
The MGR_OPTIONAL_IN_TABLE facet causes the developer device or point manager to not include a property&#xa; in the main database table, however, the property will appear in a list of optional columns that&#xa; the user can choose to add to the database table if he or she wishes. &#xa; &#xa; The developer manager only checks properties that are flavors of BSimple for this facet. Therefore,&#xa; adding this facet to properties that are not BSimples will have no effect.&#xa; &#xa; Please note that the property must also include the MGR_INCLUDE facet for the developer manager to even&#xa; consider this facet.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.KEY_MGR_INCLUDE -->
<field name="KEY_MGR_INCLUDE"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.MGR_INCLUDE -->
<field name="MGR_INCLUDE"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description>
The MGR_INCLUDE facet causes the developer device or point manager to:&#xa; 1.) If the property is a flavor of BSimple then the property will appear in the manager&#x27;s&#xa; database table and possibly the manager&#x27;s edit dialog. The exact behavior will be governed&#xa; by the presence of the MGR_NOT_IN_DIALOG, MGR_OPTIONAL_IN_TABLE, AND MGR_READONLY facets.&#xa; &#xa; 2.) If the property is a flavor of BComplex then the manager will recurse below the complex&#xa; in search of BSimples with the MGR_INCLUDE facet (as described in line item 1).
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.KEY_MGR_READONLY -->
<field name="KEY_MGR_READONLY"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.MGR_READONLY -->
<field name="MGR_READONLY"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description>
The MGR_READONLY facet causes the developer device or point manager to render the property as&#xa; read-only (grayed-out) in the manager&#x27;s edit-dialog.&#xa; &#xa; Please note that if a property is flagged as MGR_NOT_IN_DIALOG then the developer manager will&#xa; not include the property in the edit dialog. Therefore, combining MGR_NOT_IN_DIALOG with&#xa; MGR_READONLY causes the MGR_READONLY to have no effect.&#xa; &#xa; The developer manager only checks properties that are flavors of BSimple for this facet. Therefore,&#xa; adding this facet to properties that are not BSimples will have no effect.&#xa; &#xa; Please note that the property must also include the MGR_INCLUDE facet for the developer manager to even&#xa; consider this facet.
</description>
</field>

<!-- com.tridium.ddf.IDdfFacetConst.KEY_MGR_NAME -->
<field name="KEY_MGR_NAME"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
