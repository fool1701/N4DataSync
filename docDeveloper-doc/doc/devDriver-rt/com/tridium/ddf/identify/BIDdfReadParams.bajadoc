<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.identify.BIDdfReadParams" name="BIDdfReadParams" packageName="com.tridium.ddf.identify" public="true" interface="true" abstract="true" category="interface">
<description>
This is fundamental to developer driver framework&#x27;s auto-poll and auto-discovery&#xa; features.&#xa;&#xa; The driver developer should:&#xa;&#xa; 1.) Define a class that extends BDdfIdParams and implements this interface&#xa; (or that extends the corresponding BDdfReadParams for convenience).&#xa;&#xa; 2.) Define a proxy ext class that extends BDdfProxyExt, if a suitable&#xa; one is not already defined.&#xa;&#xa; 3.) Define a request class that extends BDdfRequest and implements&#xa; BIDdfReadRequest (or that extends BDdfReadRequest for convenience).&#xa;&#xa; 4.) Re-define the readParameters property on the request created in step&#xa; three and make the default value be an instance of the class that&#xa; implements this interface.&#xa;&#xa; 5.) Re-define the readParameters property on the proxy ext created in step&#xa; two and make the default value be an instance of the class that&#xa; implements this interface.&#xa;&#xa; =========================================================&#xa; To read the value of a control point in a device in a&#xa; driver that is built on the ddf, the&#xa; ddf:&#xa;&#xa; 1.)Calls getReadParameters on the proxy extension.&#xa; (getReadParameters returns an instance of this interface)&#xa;&#xa; 2.)Calls getReadRequestType on the instance of this&#xa; interface that it received in step 1.&#xa;&#xa; 3.)Instantiates an instance of the read request class&#xa; that corresponds to the read request type that the&#xa; ddf received in step 2.&#xa;&#xa; 4.)Calls setReadParameters on the read request and passes&#xa; in a copy of what it received back in step 1.&#xa;&#xa; 5.)Calls setPointId on the read request and passes in a&#xa; copy of the BDdfIdParams object that the proxy&#x27;s&#xa; getPointId method returns.&#xa;&#xa; 6.)Calls setDeviceId on the read request and passes in a&#xa; copy of the BDdfIdParams object that the proxy&#x27;s&#xa; device&#x27;s getDeviceId method returns.
</description>
<tag name="@author">lperkins</tag>
<tag name="@see">BDdfReadParams</tag>
<tag name="@see">com.tridium.ddf.comm.req.BDdfReadRequest</tag>
<tag name="@see">com.tridium.ddf.comm.req.BIDdfReadRequest</tag>
<tag name="@see">com.tridium.ddf.point.BDdfProxyExt</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.identify.BIDdfReadParams.getReadRequestType() -->
<method name="getReadRequestType"  public="true" abstract="true">
<description>
The implementing class needs to return the type that represents&#xa; the ddf read requests from the driver whose requestId can&#xa; be an instance of the implementing class.&#xa;&#xa; This is fundamental to developer driver framework&#x27;s auto-poll feature.
</description>
<return>
<type class="javax.baja.sys.Type"/>
<description>
review method description.
</description>
</return>
</method>

<!-- com.tridium.ddf.identify.BIDdfReadParams.getReadRequestTypes() -->
<method name="getReadRequestTypes"  public="true" abstract="true">
<description>
The implementing class needs to return one or more Types that&#xa; represent the ddf read requests from the driver whose requestId can&#xa; be an instance of the implementing class.&#xa;&#xa; We recommend that you return an array of size one with the one item&#xa; being the same type as the return of the getDdfReadRequestType method.&#xa;&#xa; This is fundamental to developer driver framework&#x27;s auto-discovery feature.
</description>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
<description>
review method description.
</description>
</return>
</method>

<!-- com.tridium.ddf.identify.BIDdfReadParams.groupWith(com.tridium.ddf.identify.BIDdfReadParams) -->
<method name="groupWith"  public="true" abstract="true">
<description>
The developer needs to implement this method and return true if&#xa; the given instance of BIDdfReadParams would read the same exact&#xa; item or items as the current instance of BIDdfReadParams. This&#xa; allows the ddf to &#x27;poll&#x27; multiple points from the same driver&#xa; protocol request in one communication transaction.
</description>
<parameter name="anotherProxyReadParams">
<type class="com.tridium.ddf.identify.BIDdfReadParams"/>
<description/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the given BIDdfReadParams represents the same&#xa; communication transaction as the current instance of BIDdfReadParams.
</description>
</return>
</method>

<!-- com.tridium.ddf.identify.BIDdfReadParams.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
