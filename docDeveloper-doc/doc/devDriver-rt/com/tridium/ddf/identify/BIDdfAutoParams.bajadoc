<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.identify.BIDdfAutoParams" name="BIDdfAutoParams" packageName="com.tridium.ddf.identify" public="true" interface="true" abstract="true" category="interface">
<description>
This is fundamental to developer driver framework&#x27;s automatic implementation of&#xa; the point-auto features (this is when an end-use right-clicks a&#xa; driver&#x27;s control point with proxy ext and chooses auto or emergency&#xa; auto, when the point does not have a fall-back value or any other logic&#xa; linked to its priority input properties.&#xa;&#xa; Implementing this interface is only necessary if your driver requires&#xa; special requests be sent when the host control system (Niagara AX)&#xa; relinquishes its control over a point. The majority of protocols that&#xa; we have encountered do not require this!&#xa;&#xa; To take advantage of the developer driver framework&#x27;s automatic implementation of the&#xa; point-auto feature, the driver developer should:&#xa;&#xa; 1.) Define a class that extends BDdfIdParams and implements this interface. If you&#xa; defined a class that implements BIDdfWriteParams then you should consider using&#xa; that class but then make it implement this interface too.&#xa;&#xa; 2.) Define a proxy ext class that extends BDdfProxyExt, if a suitable&#xa; one is not already defined. It is certainly valid to re-use a proxy ext&#xa; class created to take advantage of the corresponding BIDdfReadParams. And&#xa; it is highly encouraged to re-use the proxy ext class created to take&#xa; advantage of the corresponding BIDdfWriteParams interface.&#xa;&#xa; 3.) Define a request class that extends BDdfRequest and implements&#xa; BIDdfWriteRequest (or that extends BDdfWriteRequest for convenience). Note,&#xa; this is not a typographical error. The automatic point-auto feature also&#xa; uses special subclasses of BIDdfWriteRequest.&#xa;&#xa; 4.) Re-define the writeParameters property on the request created in step&#xa; three and make the default value be an instance of the class that&#xa; implements this interface.&#xa;&#xa; 5.) Re-define the writeParameters property on the proxy ext created in step&#xa; two and make the default value be an instance of the class that&#xa; implements this interface. Please note that if you already followed the&#xa; steps outlined for BIDdfWriteParams then you have already done this step.&#xa; =========================================================&#xa; To auto (relinquish control of) a control point in a device in a&#xa; driver that is built on the ddf, the&#xa; ddf:&#xa;&#xa; 1.)Calls getWriteParameters on the proxy extension.&#xa; (if getWriteParameters returns something that implements this&#xa; interface, then the ddf proceeds to the next&#xa; steps, otherwise, the developer driver framework does not perform any&#xa; special driver communication to auto (relinquish control of) a&#xa; control point.&#xa;&#xa; 2.)Calls getDdfAutoRequestType() on the instance of this&#xa; interface that it received in step 1. The Type needs to&#xa; be a class that implements BIDdfWriteRequest, even this&#xa; it is really an &#x27;auto&#x27; request. The ddf&#xa; considers the &#x27;auto&#x27; request to be a special case of a&#xa; &#x27;write&#x27; requests.&#xa;&#xa; 3.)Instantiates an instance of the special write request class&#xa; that corresponds to the special write request type that the&#xa; ddf received in step 2.&#xa;&#xa; 4.)Calls setWriteParameters on the special write request&#xa; (for auto&#x27;ing) and passes in a copy of what it received back&#xa; in step 1.&#xa;&#xa; 5.)Calls setPointId on the special, write request (for auto&#x27;ing)&#xa;  and passes in a copy of the BDdfIdParams object that the proxy&#x27;s&#xa; getPointId method returns.&#xa;&#xa; 6.)Calls setDeviceId on the special, write request (for auto&#x27;ing)&#xa; and passes in a copy of the BDdfIdParams object that the proxy&#x27;s&#xa; device&#x27;s getDeviceId method returns.
</description>
<tag name="@author">lperkins</tag>
<tag name="@see">com.tridium.ddf.comm.req.BDdfWriteRequest</tag>
<tag name="@see">com.tridium.ddf.comm.req.BIDdfWriteRequest</tag>
<tag name="@see">com.tridium.ddf.point.BDdfProxyExt</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.identify.BIDdfAutoParams.getAutoRequestType() -->
<method name="getAutoRequestType"  public="true" abstract="true">
<description>
The implementing class needs to return the Type that&#xa; represents the ddf write requests used whenever a point is &#x22;auto&#x27;ed&#x22;&#xa; in Niagara from the driver whose writeParameters can be an instance of&#xa; this class.&#xa;&#xa; This is fundamental to developer driver framework&#x27;s automatic processing of the point-&#xa; auto feature.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.identify.BIDdfAutoParams.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
