<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.poll.BDdfPollGroup" name="BDdfPollGroup" packageName="com.tridium.ddf.poll" public="true">
<description>
The BDdfPollGroup objects poll on behalf of a group of related BIDdfPollable objects that can&#xa; be retrieved in the response to a single, ddf poll request.&#xa;&#xa; This class provides reasonable default behavior, therefore, extending it is not necessary and discouraged.&#xa;&#xa; Each BIDdfPollable should make its getDdfReadRequestType return the corresponding Niagara AX type&#xa; of the class that implements BIDdfReadRequest and is designed to request the data for the particular&#xa; BIDdfPollable.  All BIDdfPollable values that share the same BIDdfReadableRequest instance should return&#xa; the same ddf poll group code Object from their getDdfPollGroupCode method.&#xa;&#xa; By default, BDdfProxyExt provides sufficient default behavior and overrides these methods&#xa; accordingly. The easiest way to take advantage of this class is simply by extending BProxyExt&#xa; and properly defining the readParameters and pointId properties. All proxies under a device&#xa; with the equivalent readParameters structure will be assigned to the same, single, BDdfPollGroup.
</description>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<implements>
<type class="javax.baja.driver.util.BIPollable"/>
</implements>
<!-- com.tridium.ddf.poll.BDdfPollGroup() -->
<constructor name="BDdfPollGroup" public="true">
<description>
Niagara AX generally requires an empty constructor.
</description>
</constructor>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readFail(java.lang.String) -->
<method name="readFail"  public="true">
<description/>
<parameter name="reason">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readOk(javax.baja.status.BStatusValue) -->
<method name="readOk"  public="true">
<description/>
<parameter name="out">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getPollables() -->
<method name="getPollables"  protected="true" final="true">
<description>
The descendant class may call this method to get a list of the&#xa; ddf pollables related to this poll group.
</description>
<return>
<type class="com.tridium.ddf.poll.BIDdfPollable" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getSubscribedPollables() -->
<method name="getSubscribedPollables"  protected="true" final="true">
<description>
The descendant class may call this method to get a list of the&#xa; ddf pollables for this poll group that are presently subscribed for&#xa; polling.
</description>
<return>
<type class="com.tridium.ddf.poll.BIDdfPollable" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.registerPollable(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="registerPollable"  protected="true">
<description>
Registers a ddf pollbable to this group so that it can subscribe and&#xa; unsubscribe from the group as necessary. The poll group will be registered&#xa; to the poll scheduler whenever at least one of its registered BIDdfPollables&#xa; is subscribed.&#xa;&#xa; This method is called from public static &#x22;register&#x22; method which all&#xa; BIDdfPollables should call from their Niagara-AX &#x22;started&#x22; call-back.
</description>
<parameter name="ddfPollable">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.unregisterPollable(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="unregisterPollable"  protected="true">
<description>
Completely removes a ddf pollable value from a group.&#xa;&#xa; If the given ddfPollable was the last ddfPollable registered to this group then&#xa; the group itself will unsubsribe from the poll scheduler&#xa;&#xa; This method is called by the public static unregister method, which&#xa; BIDdfPollables should call from their &#x27;stopped&#x27; method.
</description>
<parameter name="ddfPollable">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readSubscribed(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="readSubscribed"  protected="true">
<description>
This call-back is made when the point enters a subscribed&#xa; state based on the current status and tuning.  The driver&#xa; should register for changes or begin polling.  Any IO should&#xa; be done asynchronously on another thread - never block the&#xa; calling thread.  The result of reads should be to call the&#xa; readOk() or readFail() method.
</description>
<parameter name="ddfPollable">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readUnsubscribed(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="readUnsubscribed"  protected="true">
<description>
This call-back is made when the point exits the subscribed&#xa; state based on the current status and tuning.  The driver&#xa; should unregister for changes of cease polling.  Any IO should&#xa; be done asynchronously on another thread - never block the&#xa; calling thread.
</description>
<parameter name="ddfPollable">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getDefaultPollable() -->
<method name="getDefaultPollable"  protected="true">
<description>
This method is used internally to delegate some of the default&#xa; behavior to a default instance of the BIDdfPollable
</description>
<return>
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
<description/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getPollFrequency() -->
<method name="getPollFrequency"  public="true">
<description>
Loops through all BIDdfPollables and returns the fastest poll frequency&#xa; Among them
</description>
<return>
<type class="javax.baja.driver.util.BPollFrequency"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.makePollRequest() -->
<method name="makePollRequest"  public="true">
<description>
The descendant class should construct a DdfReadRequestUtil to help the ddf communicator&#xa; perform field-bus communication to poll this group of BIDdfPollables. It should call&#xa; the getDdfPollables method&#xa; and update each registered BIDdfPollable with the new data.
</description>
<return>
<type class="com.tridium.ddf.comm.req.BIDdfReadRequest"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getDdfCommunicator() -->
<method name="getDdfCommunicator"  public="true">
<description/>
<return>
<type class="com.tridium.ddf.comm.BIDdfCommunicator"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getPollGroupCode() -->
<method name="getPollGroupCode"  public="true">
<description/>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getReadRequestType() -->
<method name="getReadRequestType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readSubscribed(com.tridium.ddf.poll.BIDdfPollable, javax.baja.sys.Context) -->
<method name="readSubscribed"  public="true" static="true">
<description>
Ddf pollable values in the ddf need to call this method from their own&#xa; Niagara AX subscribed and/or readSubscribed call-back and pass themselves in, along with&#xa; the Context that Niagara AX passed to them.
</description>
<parameter name="valueToBePolled">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.readUnsubscribed(com.tridium.ddf.poll.BIDdfPollable, javax.baja.sys.Context) -->
<method name="readUnsubscribed"  public="true" static="true">
<description>
Ddf pollable values in the ddf need to call this method from their own&#xa; Niagara AX unsubscribed and/or readUnsubscried call-back and pass themselves in, along with&#xa; the Context that Niagara AX passed to them.
</description>
<parameter name="ddfValueToBePolled">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.register(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="register"  public="true" static="true">
<description>
Ddf pollable values in the ddf need to call this method from their own&#xa; Niagara AX server-side started callback.
</description>
<parameter name="valueToBePolled">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.unregister(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="unregister"  public="true" static="true">
<description>
Ddf pollable values in the ddf need to call this method from their own&#xa; Niagara AX server-side stopped callback..
</description>
<parameter name="ddfValueToBePolled">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.getPollGroup(com.tridium.ddf.poll.BIDdfPollable) -->
<method name="getPollGroup"  protected="true" static="true">
<description>
This method returns an instance of BDdfPollGroup for the given&#xa; BIDdfPollable. Only one instance of a BDdfPollGroup will exist for&#xa; all BIDdfPollables that return the same, ddf poll group code. If that one&#xa; instance does not yet exist, one will be created, hashed, and returned. Otherwise&#xa; the one instance will be retrieved from a table and returned.&#xa;&#xa; This static method can be used as a public lookup to retrieve the instance of&#xa; BDdfPollGroup that is related to the given ddfPollable, regardless of what driver that&#xa; ddfPollable is in and regardless of the ultimate BDdfPollGroup type.
</description>
<parameter name="ddfPollable">
<type class="com.tridium.ddf.poll.BIDdfPollable"/>
</parameter>
<return>
<type class="com.tridium.ddf.poll.BDdfPollGroup"/>
</return>
</method>

<!-- com.tridium.ddf.poll.BDdfPollGroup.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
