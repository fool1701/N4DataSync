<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.comm.BIDdfCommunicator" name="BIDdfCommunicator" packageName="com.tridium.ddf.comm" public="true" interface="true" abstract="true" category="interface">
<description>
The BIDdfCommunicator is fundamtental to the developer driver framework.&#xa; It combines the transmitter, receiver, transaction manager, poll&#xa; scheduler, and unsolicited receive handler for a field-bus.&#xa; &#xa; Instead of implementing this directly, there are a wealth of implementations that can be extends.&#xa; These are in the packages:&#xa; &lt;OL&gt;&#xa;   &lt;LI&gt;com.tridium.ddf.comm.defaultComm&#xa;   &lt;LI&gt;com.tridium.ddf.comm.multipleTransaction&#xa;   &lt;LI&gt;com.tridium.ddf.comm.singleTransaction&#xa; &lt;/OL&gt;&#xa; In additon, there reasonable serial versions of these in the devSerialDriver module.&#xa; &#xa; There are reasonable Tcp/Ip versions of these in the devTcpDriver module.
</description>
<tag name="@author">lperkins</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.comm.BIDdfCommunicator.communicate(com.tridium.ddf.comm.req.BIDdfRequest) -->
<method name="communicate"  public="true" abstract="true">
<description>
The implementing object should transmit this BIDdfRequest object. Then depending on the&#xa; BIDdfRequest type, the object should make the proper arrangements for the BIDdfRequest&#xa; object&#x27;s processReceive methods to be called for incoming frames that match up to the &#xa; request.
</description>
<parameter name="ddfRequest">
<type class="com.tridium.ddf.comm.req.BIDdfRequest"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getDdfTransmitter() -->
<method name="getDdfTransmitter"  public="true" abstract="true">
<description>
The BIDdfCommunicator uses the BIDdfTransmitter to transmit the byte&#xa; array representation of the BIDdfRequests.
</description>
<return>
<type class="com.tridium.ddf.comm.BIDdfTransmitter"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getDdfReceiver() -->
<method name="getDdfReceiver"  public="true" abstract="true">
<description>
The BIDdfCommunicator uses the BIDdfReceiver to receive data frames&#xa; (glorified byte arrays) from the field-bus.
</description>
<return>
<type class="com.tridium.ddf.comm.BIDdfReceiver"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getDdfTransactionMgr() -->
<method name="getDdfTransactionMgr"  public="true" abstract="true">
<description>
The BIDdfCommunicator uses the BIDdfTransactionMgr to match received&#xa; data from to previously transmitted requests or to the BIDdfUnsolicitedMgr.
</description>
<return>
<type class="com.tridium.ddf.comm.BIDdfTransactionMgr"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getLog() -->
<method name="getLog"  public="true" abstract="true">
<description>
The BIDdfCommunicator sends Trace information, errors, and other messages&#xa; to this Log.
</description>
<return>
<type class="javax.baja.log.Log"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getDdfPollScheduler() -->
<method name="getDdfPollScheduler"  public="true" abstract="true">
<description>
The BIDdfCommunicator places poll groups (of IDdfReadables -- proxies) into&#xa; the BIDdfPollScheduler for periodic updates.
</description>
<return>
<type class="com.tridium.ddf.poll.BIDdfPollScheduler"/>
</return>
<throws>
<type class="java.lang.IllegalAccessException"/>
<description>
if the BIDdfCommunicator does not fundamentally&#xa; feature a developer poll scheduler.
</description>
</throws>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.getDdfUnsolicitedMgr() -->
<method name="getDdfUnsolicitedMgr"  public="true" abstract="true">
<description>
The BIDdfCommunicator&#x27;s transaction manager sends data frames that it receives,&#xa; but cannot match to previously transmitted responses, to the BIDdfUnsolicitedMgr.
</description>
<return>
<type class="com.tridium.ddf.comm.BIDdfUnsolicitedMgr"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.stopCommunicating() -->
<method name="stopCommunicating"  public="true" abstract="true">
<description>
This method is called to disable communications.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.startCommunicating() -->
<method name="startCommunicating"  public="true" abstract="true">
<description>
This method is called to enable communications.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.comm.BIDdfCommunicator.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
