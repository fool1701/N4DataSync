<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.comm.defaultComm.BDdfReceiver$DdfReceiveFrame" name="BDdfReceiver.DdfReceiveFrame" packageName="com.tridium.ddf.comm.defaultComm" protected="true" innerClass="true">
<description>
DdfReceiveFrame is the class of the IDdfDataFrame object that is returned by&#xa; the default implementation of the safeDdfReceiveFrame method on the outer&#xa; instance.&#xa;&#xa; If descendants wish to perform advanced customization, they can gain&#xa; access to this class by calling the getInternalBuffer method on the&#xa; outer class. That will give them a direct reference to the internal&#xa; instance of this buffer that is maintained on the outer instance. By&#xa; gaining a direct reference in this fashion, the descendant can directly&#xa; add, remove, delete, etc. bytes directly from the internal buffer.&#xa;&#xa; However, descendants that can make full use of overriding the isStartOfFrame,&#xa; isCompleteFrame, and checkFrame method should hopefully not need to access&#xa; the inner instance (&#x22;the internal buffer&#x22;) of this class directly. It&#xa; should be much easier to just override the methods that provide hints&#xa; as to the driver&#x27;s framing (isStartOfFrame, etc).
</description>
<tag name="@author">lperkins</tag>
<tag name="@creation">Oct 17, 2006</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.nre.util.ByteBuffer"/>
</extends>
<implements>
<type class="com.tridium.ddf.comm.IDdfDataFrame"/>
</implements>
<!-- com.tridium.ddf.comm.defaultComm.BDdfReceiver.DdfReceiveFrame.getFrameBytes() -->
<method name="getFrameBytes"  public="true">
<description>
Returns a direct reference to the byte array buffer for this data frame.&#xa;&#xa; Note that not all bytes are necessarily valid. Please only access bytes&#xa; from index zero through the index that is returned by calling the&#xa; &#x27;getFrameSize&#x27; method.
</description>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.comm.defaultComm.BDdfReceiver.DdfReceiveFrame.getFrameSize() -->
<method name="getFrameSize"  public="true">
<description>
Returns the number of valid bytes in this data frame.
</description>
<return>
<type class="int"/>
<description>
the number of valid bytes in this data frame.
</description>
</return>
</method>

<!-- com.tridium.ddf.comm.defaultComm.BDdfReceiver.DdfReceiveFrame.getFrameTag() -->
<method name="getFrameTag"  public="true">
<description>
Delegates to the &#x27;computeTag&#x27; method on the BDdfReceiver.
</description>
<return>
<type class="javax.baja.sys.BSimple"/>
</return>
</method>

<!-- com.tridium.ddf.comm.defaultComm.BDdfReceiver.DdfReceiveFrame.getFrameCopy() -->
<method name="getFrameCopy"  public="true">
<description>
Creates a byte-per-byte copy of this data frame.
</description>
<return>
<type class="com.tridium.ddf.comm.IDdfDataFrame"/>
</return>
</method>

</class>
</bajadoc>
