<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddf.comm.req.BIDdfDiscoverRequest" name="BIDdfDiscoverRequest" packageName="com.tridium.ddf.comm.req" public="true" interface="true" abstract="true" category="interface">
<description>
Requests such as ping requests and read requests should consider&#xa; implementing this interface as well. This is a fundamental part&#xa; of the auto-discovery feature.&#xa;&#xa; When the end user clicks the &#x22;Discover&#x22; button:&#xa;&#xa; 1. The Developer Driver Manager view will kick off a BDdfAutoDiscoveryJob in the station.&#xa; 2. The job will be passed an instance of BDdfAutoDiscoveryPreferences.&#xa; 3. The job will loop from the BDdfAutoDiscoveryPreferences.getMin to its .getMax&#xa; 4. The job will place an instance of this interface onto the ddf communicator.&#xa; 5. &lt;b&gt;The type of the instance placed on the communicator will be&#xa;    BDdfDiscoveryPreferences.getMin().getDdfDiscoverRequestType(). It will pass&#xa;    the incremental discoveryParameters (as it the auto discovery job loops&#xa;    from BDdfAutoDiscoveryPreferences.getMin to its .getMax) and the deviceId &#xa;    to the instance.&lt;/b&gt;
</description>
<tag name="@author">lperkins</tag>
<implements>
<type class="com.tridium.ddf.comm.req.BIDdfRequest"/>
</implements>
<!-- com.tridium.ddf.comm.req.BIDdfDiscoverRequest.getDiscoverParameters() -->
<method name="getDiscoverParameters"  public="true" abstract="true">
<description>
Gets the discover parameters, these identify&#xa; extra information the particular request needs&#xa; in order to construct its byte array, etc.
</description>
<return>
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</return>
</method>

<!-- com.tridium.ddf.comm.req.BIDdfDiscoverRequest.setDiscoverParameters(com.tridium.ddf.identify.BDdfIdParams) -->
<method name="setDiscoverParameters"  public="true" abstract="true">
<description>
Sets the discover parameters, these identify&#xa; extra information the particular request needs&#xa; in order to construct its byte array, etc.
</description>
<parameter name="discoverParams">
<type class="com.tridium.ddf.identify.BDdfIdParams"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.comm.req.BIDdfDiscoverRequest.setDiscoverer(com.tridium.ddf.discover.IDdfDiscoverer) -->
<method name="setDiscoverer"  public="true" abstract="true">
<description>
This passes an instance of &lt;i&gt;IDdfDiscoverer&lt;/i&gt; to the request. The&#xa; implementing class may use the &lt;i&gt;IDdfdiscoverer&lt;/I&gt; to gain access&#xa; to the BJob that is performing the discovery. This is an advanced&#xa; feature. Not all drivers will need to use this feature.&#xa; &#xa; In any event, regardless of whether the developer wishes to use the&#xa; given instance of IDdfDiscoverer, it is essential that the implementing&#xa; class store the reference away and return the same reference from the&#xa; &lt;i&gt;getDiscoverer&lt;/i&gt; method.
</description>
<parameter name="discoverer">
<type class="com.tridium.ddf.discover.IDdfDiscoverer"/>
<description>
This passes an instance of &lt;i&gt;IDdfDiscoverer&lt;/i&gt; to the request. The&#xa; implementing class may use the &lt;i&gt;IDdfdiscoverer&lt;/I&gt; to gain access&#xa; to the BJob that is performing the discovery. This is an advanced&#xa; feature. Not all drivers will need to use this feature. In any event, regardless of&#xa; whether the developer wishes to use the given instance of IDdfDiscoverer, it is&#xa; essential that the implementing class store the reference away and return the same&#xa; reference from the &lt;i&gt;getDiscoverer&lt;/i&gt; method.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.comm.req.BIDdfDiscoverRequest.getDiscoverer() -->
<method name="getDiscoverer"  public="true" abstract="true">
<description>
It is very important that the implementing class simply return the&#xa; IDdfDiscoverer that was most recently passed to the &lt;i&gt;setDiscoverer&lt;/i&gt;&#xa; method.
</description>
<return>
<type class="com.tridium.ddf.discover.IDdfDiscoverer"/>
<description>
It is very important that the implementing class simply return the&#xa; IDdfDiscoverer that was most recently passed to the &lt;i&gt;setDiscoverer&lt;/i&gt;&#xa; method.
</description>
</return>
</method>

<!-- com.tridium.ddf.comm.req.BIDdfDiscoverRequest.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
