<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.AddressManager" name="AddressManager" packageName="javax.baja.lonworks" public="true" interface="true" abstract="true" category="interface">
<description>
AddressManager interfaces defines the api to allow&#xa; managing the assignment and validation of channel ids&#xa; and subnet/node addresses for LonDevices.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">19 Feb 02</tag>
<tag name="@version">$Revision: 14$ $Date: 10/17/00 12:47:14 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<!-- javax.baja.lonworks.AddressManager.registerLonDevice(javax.baja.lonworks.BLonDevice) -->
<method name="registerLonDevice"  public="true" abstract="true">
<description>
Register the device. Called by BLonDevice when&#xa; started.
</description>
<parameter name="dev">
<type class="javax.baja.lonworks.BLonDevice"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.unregisterLonDevice(javax.baja.lonworks.BLonDevice) -->
<method name="unregisterLonDevice"  public="true" abstract="true">
<description>
Unregister the device. Called by BLonDevice when&#xa; stopped.
</description>
<parameter name="dev">
<type class="javax.baja.lonworks.BLonDevice"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.deviceDataChanged(javax.baja.lonworks.datatypes.BDeviceData, javax.baja.sys.Context) -->
<method name="deviceDataChanged"  public="true" abstract="true">
<description>
Callback to indicate that essential device data, such&#xa;  as addressing, has changed.
</description>
<parameter name="dd">
<type class="javax.baja.lonworks.datatypes.BDeviceData"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getDeviceList(boolean) -->
<method name="getDeviceList"  public="true" abstract="true">
<description>
Get a list of all &lt;code&gt;BLonDevice&lt;/code&gt; instances that &#xa; are registered with this BLonNetwork excluding the localDevice.
</description>
<parameter name="includeLocal">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.lonworks.BLonDevice" dimension="1"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getDeviceByName(java.lang.String) -->
<method name="getDeviceByName"  public="true" abstract="true">
<description>
Return the &lt;code&gt;BLonDevice&lt;/code&gt; with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.lonworks.BLonDevice"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getDeviceByAddress(javax.baja.lonworks.datatypes.BSubnetNode) -->
<method name="getDeviceByAddress"  public="true" abstract="true">
<description>
Return the &lt;code&gt;BLonDevice&lt;/code&gt; with the specified &#xa; &lt;code&gt;BSubnetNode&lt;/code&gt; address.
</description>
<parameter name="addr">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</parameter>
<return>
<type class="javax.baja.lonworks.BLonDevice"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getDeviceByAddress(javax.baja.lonworks.datatypes.BNeuronId) -->
<method name="getDeviceByAddress"  public="true" abstract="true">
<description>
Return the &lt;code&gt;BLonDevice&lt;/code&gt; with the specified &#xa; &lt;code&gt;BNeuronId&lt;/code&gt; address.
</description>
<parameter name="addr">
<type class="javax.baja.lonworks.datatypes.BNeuronId"/>
</parameter>
<return>
<type class="javax.baja.lonworks.BLonDevice"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getRouterByAddress(javax.baja.lonworks.datatypes.BSubnetNode) -->
<method name="getRouterByAddress"  public="true" abstract="true">
<description>
Return the &lt;code&gt;BLonRouter&lt;/code&gt; with the specified &#xa; &lt;code&gt;BSubnetNode&lt;/code&gt; address.
</description>
<parameter name="addr">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</parameter>
<return>
<type class="com.tridium.lonworks.BLonRouter"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getRouterByAddress(javax.baja.lonworks.datatypes.BNeuronId) -->
<method name="getRouterByAddress"  public="true" abstract="true">
<description>
Return the &lt;code&gt;BLonRouter&lt;/code&gt; with the specified &#xa; &lt;code&gt;BNeuronId&lt;/code&gt; address.
</description>
<parameter name="nid">
<type class="javax.baja.lonworks.datatypes.BNeuronId"/>
</parameter>
<return>
<type class="com.tridium.lonworks.BLonRouter"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.newAddress(javax.baja.lonworks.BLonDevice, int, int, int) -->
<method name="newAddress"  public="true" abstract="true">
<description>
Assign the a new address to the specified device.&#xa;  Return string describing error condition or null if &#xa;  address changed.
</description>
<parameter name="dev">
<type class="javax.baja.lonworks.BLonDevice"/>
</parameter>
<parameter name="chan">
<type class="int"/>
</parameter>
<parameter name="subnet">
<type class="int"/>
</parameter>
<parameter name="node">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BString"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getLocalDevice() -->
<method name="getLocalDevice"  public="true" abstract="true">
<description>
Convenience method to obtain access to local device object.
</description>
<return>
<type class="javax.baja.lonworks.BLocalLonDevice"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.getRouterList() -->
<method name="getRouterList"  public="true" abstract="true">
<description/>
<return>
<type class="com.tridium.lonworks.BLonRouter" dimension="1"/>
</return>
</method>

<!-- javax.baja.lonworks.AddressManager.noDeviceChange -->
<field name="noDeviceChange"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
Context to pass when changing deviceData without firing a&#xa;  a BLonNetwork.deviceChange.  This should be used when there &#xa;  are multiple changes to make in sequence and table update &#xa;  is only desired on last change. &#xa;  &lt;p&gt;&#xa;  This will also block any update to the physical device.
</description>
</field>

</class>
</bajadoc>
