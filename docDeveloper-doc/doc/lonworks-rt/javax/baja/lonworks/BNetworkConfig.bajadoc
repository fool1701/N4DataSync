<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.BNetworkConfig" name="BNetworkConfig" packageName="javax.baja.lonworks" public="true">
<description>
BNetworkConfig represents a single nci in a LonDevice. It&#xa;  provides specific support for runtime updates and&#xa;  contains data needed to support network managment.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision: 4$ $Date: 10/18/01 2:56:44 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.BLonComponent"/>
</extends>
<implements>
<type class="javax.baja.lonworks.BINetworkVariable"/>
</implements>
<property name="ncProps" flags="">
<type class="javax.baja.lonworks.datatypes.BNcProps"/>
<description>
Slot for the &lt;code&gt;ncProps&lt;/code&gt; property.&#xa; Properties needed to manage the nci.
</description>
<tag name="@see">#getNcProps</tag>
<tag name="@see">#setNcProps</tag>
</property>

<property name="nvConfigData" flags="">
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
<description>
Slot for the &lt;code&gt;nvConfigData&lt;/code&gt; property.&#xa; Shadows data in the devices nv config table.
</description>
<tag name="@see">#getNvConfigData</tag>
<tag name="@see">#setNvConfigData</tag>
</property>

<topic name="receivedUpdate" flags="">
<eventType>
<type class="javax.baja.sys.BValue"/>
</eventType><description>
Slot for the &lt;code&gt;receivedUpdate&lt;/code&gt; topic.&#xa; Fired in receiveUpdate after all elements updated.&#xa; Added in 3.6.27 and 3.5.35
</description>
<tag name="@see">#fireReceivedUpdate</tag>
</topic>

<!-- javax.baja.lonworks.BNetworkConfig() -->
<constructor name="BNetworkConfig" public="true">
<description>
No arg constructor
</description>
</constructor>

<!-- javax.baja.lonworks.BNetworkConfig(int, int, int, javax.baja.lonworks.datatypes.BModifyFlags, javax.baja.lonworks.enums.BLonConfigScope, java.lang.String, float[]) -->
<constructor name="BNetworkConfig" public="true">
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<parameter name="snvtType">
<type class="int"/>
</parameter>
<parameter name="configIndex">
<type class="int"/>
</parameter>
<parameter name="modifyFlag">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</parameter>
<parameter name="scope">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</parameter>
<parameter name="select">
<type class="java.lang.String"/>
</parameter>
<parameter name="init">
<type class="float" dimension="1"/>
</parameter>
<description>
constructor
</description>
</constructor>

<!-- javax.baja.lonworks.BNetworkConfig(int, int, int, javax.baja.lonworks.datatypes.BModifyFlags, javax.baja.lonworks.enums.BLonConfigScope, java.lang.String) -->
<constructor name="BNetworkConfig" public="true">
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<parameter name="snvtType">
<type class="int"/>
</parameter>
<parameter name="configIndex">
<type class="int"/>
</parameter>
<parameter name="modifyFlag">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</parameter>
<parameter name="scope">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</parameter>
<parameter name="select">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.lonworks.BNetworkConfig(int, javax.baja.lonworks.londata.BLonData, int, javax.baja.lonworks.datatypes.BModifyFlags, javax.baja.lonworks.enums.BLonConfigScope, java.lang.String) -->
<constructor name="BNetworkConfig" public="true">
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<parameter name="data">
<type class="javax.baja.lonworks.londata.BLonData"/>
</parameter>
<parameter name="configIndex">
<type class="int"/>
</parameter>
<parameter name="modifyFlag">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</parameter>
<parameter name="scope">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</parameter>
<parameter name="select">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.lonworks.BNetworkConfig.getNcProps() -->
<method name="getNcProps"  public="true">
<description>
Get the &lt;code&gt;ncProps&lt;/code&gt; property.&#xa; Properties needed to manage the nci.
</description>
<tag name="@see">#ncProps</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BNcProps"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.setNcProps(javax.baja.lonworks.datatypes.BNcProps) -->
<method name="setNcProps"  public="true">
<description>
Set the &lt;code&gt;ncProps&lt;/code&gt; property.&#xa; Properties needed to manage the nci.
</description>
<tag name="@see">#ncProps</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BNcProps"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.getNvConfigData() -->
<method name="getNvConfigData"  public="true">
<description>
Get the &lt;code&gt;nvConfigData&lt;/code&gt; property.&#xa; Shadows data in the devices nv config table.
</description>
<tag name="@see">#nvConfigData</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.setNvConfigData(javax.baja.lonworks.datatypes.BNvConfigData) -->
<method name="setNvConfigData"  public="true">
<description>
Set the &lt;code&gt;nvConfigData&lt;/code&gt; property.&#xa; Shadows data in the devices nv config table.
</description>
<tag name="@see">#nvConfigData</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.fireReceivedUpdate(javax.baja.sys.BValue) -->
<method name="fireReceivedUpdate"  public="true">
<description>
Fire an event for the &lt;code&gt;receivedUpdate&lt;/code&gt; topic.&#xa; Fired in receiveUpdate after all elements updated.&#xa; Added in 3.6.27 and 3.5.35
</description>
<tag name="@see">#receivedUpdate</tag>
<parameter name="event">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.isNetworkConfig() -->
<method name="isNetworkConfig"  public="true">
<description/>
<return>
<type class="boolean"/>
<description>
always true
</description>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.getNvIndex() -->
<method name="getNvIndex"  public="true">
<description>
Get the index of this nci in the lonworks device.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.setNvIndex(int) -->
<method name="setNvIndex"  public="true">
<description>
Set the index of this nv in the lonworks device.
</description>
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.getSnvtType() -->
<method name="getSnvtType"  public="true">
<description>
Get the snvt type. If not a snvt return 0.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.setUnbound() -->
<method name="setUnbound"  public="true">
<description>
Set nv to unbound state - this should modif nv&#x27;s config data and&#xa; other type specific elements.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.receiveUpdate(byte[]) -->
<method name="receiveUpdate"  public="true">
<description/>
<parameter name="nvData">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.lonComponentStarted() -->
<method name="lonComponentStarted"  public="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.isForeignPersistent() -->
<method name="isForeignPersistent"  public="true">
<description>
Does this component represent data stored persistently in the device.&#xa; &lt;p&gt;
</description>
<return>
<type class="boolean"/>
<description>
Returns true.
</description>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.isWriteable() -->
<method name="isWriteable"  public="true">
<description>
Does this component represent a writable value in device.&#xa; &lt;p&gt;
</description>
<return>
<type class="boolean"/>
<description>
false if the MfgOnly modifyFlag is true else returns true.
</description>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.dataChanged(javax.baja.sys.Context) -->
<method name="dataChanged"  protected="true">
<description>
Respond to property changes.&lt;p&gt; If the prop=data and&#xa; the context!=BLonNetwork.lonNoWrite then update the nci&#xa; data in the device.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.doForceRead() -->
<method name="doForceRead"  public="true">
<description>
Read data from device.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.doForceWrite() -->
<method name="doForceWrite"  public="true">
<description>
Write data to device.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.lonComponentSubscribed() -->
<method name="lonComponentSubscribed"  protected="true">
<description>
Callback to indicate LonComponent transition from 0 to 1 subscriber.&#xa;  If deviceSpecific facet set call forceRead()
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.lonworks.BNetworkConfig.ncProps -->
<field name="ncProps"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;ncProps&lt;/code&gt; property.&#xa; Properties needed to manage the nci.
</description>
<tag name="@see">#getNcProps</tag>
<tag name="@see">#setNcProps</tag>
</field>

<!-- javax.baja.lonworks.BNetworkConfig.nvConfigData -->
<field name="nvConfigData"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;nvConfigData&lt;/code&gt; property.&#xa; Shadows data in the devices nv config table.
</description>
<tag name="@see">#getNvConfigData</tag>
<tag name="@see">#setNvConfigData</tag>
</field>

<!-- javax.baja.lonworks.BNetworkConfig.receivedUpdate -->
<field name="receivedUpdate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;receivedUpdate&lt;/code&gt; topic.&#xa; Fired in receiveUpdate after all elements updated.&#xa; Added in 3.6.27 and 3.5.35
</description>
<tag name="@see">#fireReceivedUpdate</tag>
</field>

<!-- javax.baja.lonworks.BNetworkConfig.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
