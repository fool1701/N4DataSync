<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.datatypes.BNvConfigData" name="BNvConfigData" packageName="javax.baja.lonworks.datatypes" public="true">
<description>
This class file represents the network variable data &#xa;  described in Appendix A.4.1: Neuron Chip Data Structures &#xa;  in the Neuron Chip Data Book.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Jan 01</tag>
<tag name="@version">$Revision: 2$ $Date: 9/18/01 9:50:15 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<property name="priority" flags="dr">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;priority&lt;/code&gt; property.&#xa; Flag to indicate if nv uses priority messaging.
</description>
<tag name="@see">#getPriority</tag>
<tag name="@see">#setPriority</tag>
</property>

<property name="direction" flags="r">
<type class="javax.baja.lonworks.enums.BLonNvDirection"/>
<description>
Slot for the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Flag to indicate if nv is input or output.
</description>
<tag name="@see">#getDirection</tag>
<tag name="@see">#setDirection</tag>
</property>

<property name="selector" flags="dr">
<type class="int"/>
<description>
Slot for the &lt;code&gt;selector&lt;/code&gt; property.&#xa; Selector used to bind nvs.
</description>
<tag name="@see">#getSelector</tag>
<tag name="@see">#setSelector</tag>
</property>

<property name="turnAround" flags="dr">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;turnAround&lt;/code&gt; property.&#xa; Flag to indicate if this is a turnaround nv.
</description>
<tag name="@see">#getTurnAround</tag>
<tag name="@see">#setTurnAround</tag>
</property>

<property name="serviceType" flags="r">
<type class="javax.baja.lonworks.enums.BLonServiceType"/>
<description>
Slot for the &lt;code&gt;serviceType&lt;/code&gt; property.&#xa; Service type used for updates if nv is bound.
</description>
<tag name="@see">#getServiceType</tag>
<tag name="@see">#setServiceType</tag>
</property>

<property name="authenticated" flags="dr">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;authenticated&lt;/code&gt; property.&#xa; Flag to indicate if this nv will use authenticated&#xa; updates if it is bound.
</description>
<tag name="@see">#getAuthenticated</tag>
<tag name="@see">#setAuthenticated</tag>
</property>

<property name="addrIndex" flags="dr">
<type class="int"/>
<description>
Slot for the &lt;code&gt;addrIndex&lt;/code&gt; property.&#xa; Index in address table for implicit addressing of&#xa; nv updates. Valid values of 0-14 if configured&#xa; or -1 if not configured. In devices supporting extended&#xa; address table valid values are 0 - 65534
</description>
<tag name="@see">#getAddrIndex</tag>
<tag name="@see">#setAddrIndex</tag>
</property>

<!-- javax.baja.lonworks.datatypes.BNvConfigData() -->
<constructor name="BNvConfigData" public="true">
<description/>
</constructor>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getPriority() -->
<method name="getPriority"  public="true">
<description>
Get the &lt;code&gt;priority&lt;/code&gt; property.&#xa; Flag to indicate if nv uses priority messaging.
</description>
<tag name="@see">#priority</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setPriority(boolean) -->
<method name="setPriority"  public="true">
<description>
Set the &lt;code&gt;priority&lt;/code&gt; property.&#xa; Flag to indicate if nv uses priority messaging.
</description>
<tag name="@see">#priority</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getDirection() -->
<method name="getDirection"  public="true">
<description>
Get the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Flag to indicate if nv is input or output.
</description>
<tag name="@see">#direction</tag>
<return>
<type class="javax.baja.lonworks.enums.BLonNvDirection"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setDirection(javax.baja.lonworks.enums.BLonNvDirection) -->
<method name="setDirection"  public="true">
<description>
Set the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Flag to indicate if nv is input or output.
</description>
<tag name="@see">#direction</tag>
<parameter name="v">
<type class="javax.baja.lonworks.enums.BLonNvDirection"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getSelector() -->
<method name="getSelector"  public="true">
<description>
Get the &lt;code&gt;selector&lt;/code&gt; property.&#xa; Selector used to bind nvs.
</description>
<tag name="@see">#selector</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setSelector(int) -->
<method name="setSelector"  public="true">
<description>
Set the &lt;code&gt;selector&lt;/code&gt; property.&#xa; Selector used to bind nvs.
</description>
<tag name="@see">#selector</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getTurnAround() -->
<method name="getTurnAround"  public="true">
<description>
Get the &lt;code&gt;turnAround&lt;/code&gt; property.&#xa; Flag to indicate if this is a turnaround nv.
</description>
<tag name="@see">#turnAround</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setTurnAround(boolean) -->
<method name="setTurnAround"  public="true">
<description>
Set the &lt;code&gt;turnAround&lt;/code&gt; property.&#xa; Flag to indicate if this is a turnaround nv.
</description>
<tag name="@see">#turnAround</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getServiceType() -->
<method name="getServiceType"  public="true">
<description>
Get the &lt;code&gt;serviceType&lt;/code&gt; property.&#xa; Service type used for updates if nv is bound.
</description>
<tag name="@see">#serviceType</tag>
<return>
<type class="javax.baja.lonworks.enums.BLonServiceType"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setServiceType(javax.baja.lonworks.enums.BLonServiceType) -->
<method name="setServiceType"  public="true">
<description>
Set the &lt;code&gt;serviceType&lt;/code&gt; property.&#xa; Service type used for updates if nv is bound.
</description>
<tag name="@see">#serviceType</tag>
<parameter name="v">
<type class="javax.baja.lonworks.enums.BLonServiceType"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getAuthenticated() -->
<method name="getAuthenticated"  public="true">
<description>
Get the &lt;code&gt;authenticated&lt;/code&gt; property.&#xa; Flag to indicate if this nv will use authenticated&#xa; updates if it is bound.
</description>
<tag name="@see">#authenticated</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setAuthenticated(boolean) -->
<method name="setAuthenticated"  public="true">
<description>
Set the &lt;code&gt;authenticated&lt;/code&gt; property.&#xa; Flag to indicate if this nv will use authenticated&#xa; updates if it is bound.
</description>
<tag name="@see">#authenticated</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getAddrIndex() -->
<method name="getAddrIndex"  public="true">
<description>
Get the &lt;code&gt;addrIndex&lt;/code&gt; property.&#xa; Index in address table for implicit addressing of&#xa; nv updates. Valid values of 0-14 if configured&#xa; or -1 if not configured. In devices supporting extended&#xa; address table valid values are 0 - 65534
</description>
<tag name="@see">#addrIndex</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setAddrIndex(int) -->
<method name="setAddrIndex"  public="true">
<description>
Set the &lt;code&gt;addrIndex&lt;/code&gt; property.&#xa; Index in address table for implicit addressing of&#xa; nv updates. Valid values of 0-14 if configured&#xa; or -1 if not configured. In devices supporting extended&#xa; address table valid values are 0 - 65534
</description>
<tag name="@see">#addrIndex</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.isAlias() -->
<method name="isAlias"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.writeNetworkBytes(javax.baja.lonworks.io.LonOutputStream) -->
<method name="writeNetworkBytes"  public="true">
<description>
Write a network byte image of this NvConfig to a&#xa;  LonOutputStream.
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.fromInputStream(javax.baja.lonworks.io.LonInputStream) -->
<method name="fromInputStream"  public="true">
<description>
Extract the Nv Config Response data from&#xa;  the LonInputStream
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.isInput() -->
<method name="isInput"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.isOutput() -->
<method name="isOutput"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.isBoundNv() -->
<method name="isBoundNv"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.setUnbound(int) -->
<method name="setUnbound"  public="true">
<description>
Set nv to unbound state
</description>
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="c">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.getWriteServiceType() -->
<method name="getWriteServiceType"  public="true">
<description>
Get serviceType suitable for nv writes. This will filter serviceType&#xa; to change BLonServiceType.request to BLonServiceType.acked.
</description>
<return>
<type class="javax.baja.lonworks.enums.BLonServiceType"/>
<description>
one of BLonServiceType.acked,unacked,unackedRpt
</description>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.DEFAULT_ADDR_INDEX -->
<field name="DEFAULT_ADDR_INDEX"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.priority -->
<field name="priority"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;priority&lt;/code&gt; property.&#xa; Flag to indicate if nv uses priority messaging.
</description>
<tag name="@see">#getPriority</tag>
<tag name="@see">#setPriority</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.direction -->
<field name="direction"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;direction&lt;/code&gt; property.&#xa; Flag to indicate if nv is input or output.
</description>
<tag name="@see">#getDirection</tag>
<tag name="@see">#setDirection</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.selector -->
<field name="selector"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;selector&lt;/code&gt; property.&#xa; Selector used to bind nvs.
</description>
<tag name="@see">#getSelector</tag>
<tag name="@see">#setSelector</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.turnAround -->
<field name="turnAround"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;turnAround&lt;/code&gt; property.&#xa; Flag to indicate if this is a turnaround nv.
</description>
<tag name="@see">#getTurnAround</tag>
<tag name="@see">#setTurnAround</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.serviceType -->
<field name="serviceType"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;serviceType&lt;/code&gt; property.&#xa; Service type used for updates if nv is bound.
</description>
<tag name="@see">#getServiceType</tag>
<tag name="@see">#setServiceType</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.authenticated -->
<field name="authenticated"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;authenticated&lt;/code&gt; property.&#xa; Flag to indicate if this nv will use authenticated&#xa; updates if it is bound.
</description>
<tag name="@see">#getAuthenticated</tag>
<tag name="@see">#setAuthenticated</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.addrIndex -->
<field name="addrIndex"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;addrIndex&lt;/code&gt; property.&#xa; Index in address table for implicit addressing of&#xa; nv updates. Valid values of 0-14 if configured&#xa; or -1 if not configured. In devices supporting extended&#xa; address table valid values are 0 - 65534
</description>
<tag name="@see">#getAddrIndex</tag>
<tag name="@see">#setAddrIndex</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.UNBOUND_NV_BASE_SELECTOR -->
<field name="UNBOUND_NV_BASE_SELECTOR"  public="true" static="true" final="true">
<type class="int"/>
<description>
Value of base unbound selector.  Unbound selector&#xa;  for specific nv is UNBOUND_NV_BASE_SELECTOR - nvIndex
</description>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.MAX_BOUND_SELECTOR -->
<field name="MAX_BOUND_SELECTOR"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.UNUSED_ADDR_INDEX -->
<field name="UNUSED_ADDR_INDEX"  public="true" static="true" final="true">
<type class="int"/>
<description>
Default value for address index.
</description>
</field>

<!-- javax.baja.lonworks.datatypes.BNvConfigData.UNUSED_EXT_ADDR_INDEX -->
<field name="UNUSED_EXT_ADDR_INDEX"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

</class>
</bajadoc>
