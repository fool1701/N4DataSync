<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.datatypes.BExtAddressEntry" name="BExtAddressEntry" packageName="javax.baja.lonworks.datatypes" public="true" final="true">
<description>
BExtAddressEntry contains the data in a single address entry in a lonworks&#xa; device address table. See CEA-709.1-B A.29 (p.387)&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">12 Dec 06</tag>
<tag name="@version">$Revision: 3$ $Date: 9/28/01 10:20:36 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<implements>
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(byte[]) -->
<method name="make"  public="true" static="true">
<description>
Factory method for creating address entry &#xa; from a byte array.
</description>
<parameter name="b">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(javax.baja.lonworks.enums.BAddressType, int, int, int, int) -->
<method name="make"  public="true" static="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<parameter name="addressType">
<type class="javax.baja.lonworks.enums.BAddressType"/>
</parameter>
<parameter name="size">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="memberOrNode">
<type class="int"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(javax.baja.lonworks.enums.BAddressType, int, int, int, int, int) -->
<method name="make"  public="true" static="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<parameter name="addressType">
<type class="javax.baja.lonworks.enums.BAddressType"/>
</parameter>
<parameter name="size">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="memberOrNode">
<type class="int"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<parameter name="domain">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(javax.baja.lonworks.enums.BAddressType, int, int, int, int, int, com.tridium.lonworks.datatypes.BLinkDescriptor) -->
<method name="make"  public="true" static="true">
<description>
Create a BAddressEntry with the specified elements.
</description>
<parameter name="addressType">
<type class="javax.baja.lonworks.enums.BAddressType"/>
</parameter>
<parameter name="size">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="memberOrNode">
<type class="int"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<parameter name="domain">
<type class="int"/>
</parameter>
<parameter name="desc">
<type class="com.tridium.lonworks.datatypes.BLinkDescriptor"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(javax.baja.lonworks.enums.BAddressType, int, int, int, int, int, javax.baja.lonworks.enums.BLonRepeatTimer, int, javax.baja.lonworks.enums.BLonReceiveTimer, javax.baja.lonworks.enums.BLonRepeatTimer) -->
<method name="make"  public="true" static="true">
<description/>
<parameter name="addressType">
<type class="javax.baja.lonworks.enums.BAddressType"/>
</parameter>
<parameter name="size">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="memberOrNode">
<type class="int"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<parameter name="domain">
<type class="int"/>
</parameter>
<parameter name="rptTmr">
<type class="javax.baja.lonworks.enums.BLonRepeatTimer"/>
</parameter>
<parameter name="retries">
<type class="int"/>
</parameter>
<parameter name="rcvTmr">
<type class="javax.baja.lonworks.enums.BLonReceiveTimer"/>
</parameter>
<parameter name="txTmr">
<type class="javax.baja.lonworks.enums.BLonRepeatTimer"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.makeSubnetNodeEntry(javax.baja.lonworks.datatypes.BSubnetNode, int) -->
<method name="makeSubnetNodeEntry"  public="true" static="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<parameter name="sn">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.makeSubnetNodeEntry(javax.baja.lonworks.datatypes.BSubnetNode, int, int, com.tridium.lonworks.datatypes.BLinkDescriptor) -->
<method name="makeSubnetNodeEntry"  public="true" static="true">
<description/>
<parameter name="sn">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</parameter>
<parameter name="descriptor">
<type class="int"/>
</parameter>
<parameter name="domainNdx">
<type class="int"/>
</parameter>
<parameter name="desc">
<type class="com.tridium.lonworks.datatypes.BLinkDescriptor"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.make(javax.baja.lonworks.datatypes.BIAddressEntry) -->
<method name="make"  public="true" static="true">
<description/>
<parameter name="ie">
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getAddressType() -->
<method name="getAddressType"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.enums.BAddressType"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.isGroupAddress() -->
<method name="isGroupAddress"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.isSubnetNodeAddress() -->
<method name="isSubnetNodeAddress"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.isTurnAroundAddress() -->
<method name="isTurnAroundAddress"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getSize() -->
<method name="getSize"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getGroupOrSubnet() -->
<method name="getGroupOrSubnet"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getMemberOrNode() -->
<method name="getMemberOrNode"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getDomain() -->
<method name="getDomain"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getRepeatTimer() -->
<method name="getRepeatTimer"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.enums.BLonRepeatTimer"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getRetries() -->
<method name="getRetries"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getReceiveTimer() -->
<method name="getReceiveTimer"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.enums.BLonReceiveTimer"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getTransmitTimer() -->
<method name="getTransmitTimer"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.enums.BLonRepeatTimer"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getDescriptor() -->
<method name="getDescriptor"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.isExtended() -->
<method name="isExtended"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getSubnetNodeAddress() -->
<method name="getSubnetNodeAddress"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.getRawAddress() -->
<method name="getRawAddress"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Test if the obj is equal in value to this BExtAddressEntry.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.isSameAddress(javax.baja.lonworks.datatypes.BIAddressEntry) -->
<method name="isSameAddress"  public="true">
<description/>
<parameter name="iae">
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Write the primitive in String format.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from String format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Write BExtAddressEntry byte representation to the specified&#xa;  output stream.
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BExtAddressEntry"/>
<description>
Default BExtAddressEntry.
</description>
</field>

<!-- javax.baja.lonworks.datatypes.BExtAddressEntry.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
