<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.datatypes.BDeviceData" name="BDeviceData" packageName="javax.baja.lonworks.datatypes" public="true">
<description>
This class file contains the data needed to represent a specific&#xa; neuron chip including state information and configurable data in the&#xa; neuron tables as described in the Appendix A: Neuron Chip Data&#xa; Structures in the Neuron Chip Data Book.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision: 2$ $Date: 9/18/01 9:49:36 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<property name="neuronId" flags="d">
<type class="javax.baja.lonworks.datatypes.BNeuronId"/>
<description>
Slot for the &lt;code&gt;neuronId&lt;/code&gt; property.&#xa; unique 6 byte identifier of Neuron Chip
</description>
<tag name="@see">#getNeuronId</tag>
<tag name="@see">#setNeuronId</tag>
</property>

<property name="programId" flags="s">
<type class="javax.baja.lonworks.datatypes.BProgramId"/>
<description>
Slot for the &lt;code&gt;programId&lt;/code&gt; property.&#xa; 8 byte program identifier supplied by device manufacturer
</description>
<tag name="@see">#getProgramId</tag>
<tag name="@see">#setProgramId</tag>
</property>

<property name="nodeState" flags="d">
<type class="javax.baja.lonworks.enums.BLonNodeState"/>
<description>
Slot for the &lt;code&gt;nodeState&lt;/code&gt; property.&#xa; the current configured state of the lon device
</description>
<tag name="@see">#getNodeState</tag>
<tag name="@see">#setNodeState</tag>
</property>

<property name="subnetNodeId" flags="dr">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
<description>
Slot for the &lt;code&gt;subnetNodeId&lt;/code&gt; property.&#xa; subnet node address of this lon device
</description>
<tag name="@see">#getSubnetNodeId</tag>
<tag name="@see">#setSubnetNodeId</tag>
</property>

<property name="location" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;location&lt;/code&gt; property.&#xa; optional location string supplied by user
</description>
<tag name="@see">#getLocation</tag>
<tag name="@see">#setLocation</tag>
</property>

<property name="authenticate" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;authenticate&lt;/code&gt; property.&#xa; flag indicating that authentication is enabled in device
</description>
<tag name="@see">#getAuthenticate</tag>
<tag name="@see">#setAuthenticate</tag>
</property>

<property name="channelId" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;channelId&lt;/code&gt; property.&#xa; channel identifier assigned to this device
</description>
<tag name="@see">#getChannelId</tag>
<tag name="@see">#setChannelId</tag>
</property>

<property name="workingDomain" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;workingDomain&lt;/code&gt; property.&#xa; the domain table index containing the working domain
</description>
<tag name="@see">#getWorkingDomain</tag>
<tag name="@see">#setWorkingDomain</tag>
</property>

<property name="bindingII" flags="r">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;bindingII&lt;/code&gt; property.&#xa; flag indicating if the device uses new binding constraints.
</description>
<tag name="@see">#getBindingII</tag>
<tag name="@see">#setBindingII</tag>
</property>

<property name="hosted" flags="r">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;hosted&lt;/code&gt; property.&#xa; flag indicating if the device is a hosted node
</description>
<tag name="@see">#getHosted</tag>
<tag name="@see">#setHosted</tag>
</property>

<property name="twoDomains" flags="r">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;twoDomains&lt;/code&gt; property.&#xa; flag indicating if the devices&#x27; domain table has two entries
</description>
<tag name="@see">#getTwoDomains</tag>
<tag name="@see">#setTwoDomains</tag>
</property>

<property name="msgTagCount" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;msgTagCount&lt;/code&gt; property.&#xa; the number of message tags used by the device
</description>
<tag name="@see">#getMsgTagCount</tag>
<tag name="@see">#setMsgTagCount</tag>
</property>

<property name="addressCount" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;addressCount&lt;/code&gt; property.&#xa; the number of entries in this devices&#x27; address table
</description>
<tag name="@see">#getAddressCount</tag>
<tag name="@see">#setAddressCount</tag>
</property>

<property name="addressTable" flags="dr">
<type class="javax.baja.lonworks.datatypes.BAddressTable"/>
<description>
Slot for the &lt;code&gt;addressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#getAddressTable</tag>
<tag name="@see">#setAddressTable</tag>
</property>

<property name="extAddressTable" flags="h">
<type class="javax.baja.lonworks.datatypes.BExtAddressTable"/>
<description>
Slot for the &lt;code&gt;extAddressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#getExtAddressTable</tag>
<tag name="@see">#setExtAddressTable</tag>
</property>

<property name="prioritySlot" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;prioritySlot&lt;/code&gt; property.
</description>
<tag name="@see">#getPrioritySlot</tag>
<tag name="@see">#setPrioritySlot</tag>
</property>

<property name="aliasTable" flags="r">
<type class="javax.baja.lonworks.datatypes.BAliasTable"/>
<description>
Slot for the &lt;code&gt;aliasTable&lt;/code&gt; property.&#xa; the number of network variable aliases supported on the device
</description>
<tag name="@see">#getAliasTable</tag>
<tag name="@see">#setAliasTable</tag>
</property>

<property name="selfDoc" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; selfdocumentation string
</description>
<tag name="@see">#getSelfDoc</tag>
<tag name="@see">#setSelfDoc</tag>
</property>

<property name="hasNodeObject" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;hasNodeObject&lt;/code&gt; property.&#xa; flag indicating if devices has a node object
</description>
<tag name="@see">#getHasNodeObject</tag>
<tag name="@see">#setHasNodeObject</tag>
</property>

<property name="freezeChannelPriorities" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;freezeChannelPriorities&lt;/code&gt; property.
</description>
<tag name="@see">#getFreezeChannelPriorities</tag>
<tag name="@see">#setFreezeChannelPriorities</tag>
</property>

<property name="lastHash" flags="hrdt">
<type class="int"/>
<description>
Slot for the &lt;code&gt;lastHash&lt;/code&gt; property.
</description>
<tag name="@see">#getLastHash</tag>
<tag name="@see">#setLastHash</tag>
</property>

<property name="facets" flags="">
<type class="javax.baja.sys.BFacets"/>
<description>
Slot for the &lt;code&gt;facets&lt;/code&gt; property.&#xa; Facets used to configure network management operations.&#xa; delayToReset - mSec delay inserted before reset during commissioning&#xa; delayToHardOffline - mSec delay inserted before setting to hardOffline during commissioning&#xa; minNvUpdateInterMsgDelay - minimum delay between nv updates to device&#xa; disableSetOfflineInBind - do not set device offline when modifying address table during a bind operation
</description>
<tag name="@see">#getFacets</tag>
<tag name="@see">#setFacets</tag>
</property>

<!-- javax.baja.lonworks.datatypes.BDeviceData() -->
<constructor name="BDeviceData" public="true">
<description/>
</constructor>

<!-- javax.baja.lonworks.datatypes.BDeviceData(javax.baja.lonworks.datatypes.BProgramId) -->
<constructor name="BDeviceData" public="true">
<parameter name="pid">
<type class="javax.baja.lonworks.datatypes.BProgramId"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.lonworks.datatypes.BDeviceData(javax.baja.lonworks.datatypes.BProgramId, boolean, boolean, boolean, int, int, int, boolean) -->
<constructor name="BDeviceData" public="true">
<parameter name="pid">
<type class="javax.baja.lonworks.datatypes.BProgramId"/>
</parameter>
<parameter name="bindingII">
<type class="boolean"/>
</parameter>
<parameter name="hosted">
<type class="boolean"/>
</parameter>
<parameter name="twoDomains">
<type class="boolean"/>
</parameter>
<parameter name="msgTagCount">
<type class="int"/>
</parameter>
<parameter name="addressCount">
<type class="int"/>
</parameter>
<parameter name="aliasCount">
<type class="int"/>
</parameter>
<parameter name="hasNodeObject">
<type class="boolean"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getNeuronId() -->
<method name="getNeuronId"  public="true">
<description>
Get the &lt;code&gt;neuronId&lt;/code&gt; property.&#xa; unique 6 byte identifier of Neuron Chip
</description>
<tag name="@see">#neuronId</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BNeuronId"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setNeuronId(javax.baja.lonworks.datatypes.BNeuronId) -->
<method name="setNeuronId"  public="true">
<description>
Set the &lt;code&gt;neuronId&lt;/code&gt; property.&#xa; unique 6 byte identifier of Neuron Chip
</description>
<tag name="@see">#neuronId</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BNeuronId"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getProgramId() -->
<method name="getProgramId"  public="true">
<description>
Get the &lt;code&gt;programId&lt;/code&gt; property.&#xa; 8 byte program identifier supplied by device manufacturer
</description>
<tag name="@see">#programId</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BProgramId"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setProgramId(javax.baja.lonworks.datatypes.BProgramId) -->
<method name="setProgramId"  public="true">
<description>
Set the &lt;code&gt;programId&lt;/code&gt; property.&#xa; 8 byte program identifier supplied by device manufacturer
</description>
<tag name="@see">#programId</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BProgramId"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getNodeState() -->
<method name="getNodeState"  public="true">
<description>
Get the &lt;code&gt;nodeState&lt;/code&gt; property.&#xa; the current configured state of the lon device
</description>
<tag name="@see">#nodeState</tag>
<return>
<type class="javax.baja.lonworks.enums.BLonNodeState"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setNodeState(javax.baja.lonworks.enums.BLonNodeState) -->
<method name="setNodeState"  public="true">
<description>
Set the &lt;code&gt;nodeState&lt;/code&gt; property.&#xa; the current configured state of the lon device
</description>
<tag name="@see">#nodeState</tag>
<parameter name="v">
<type class="javax.baja.lonworks.enums.BLonNodeState"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getSubnetNodeId() -->
<method name="getSubnetNodeId"  public="true">
<description>
Get the &lt;code&gt;subnetNodeId&lt;/code&gt; property.&#xa; subnet node address of this lon device
</description>
<tag name="@see">#subnetNodeId</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setSubnetNodeId(javax.baja.lonworks.datatypes.BSubnetNode) -->
<method name="setSubnetNodeId"  public="true">
<description>
Set the &lt;code&gt;subnetNodeId&lt;/code&gt; property.&#xa; subnet node address of this lon device
</description>
<tag name="@see">#subnetNodeId</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BSubnetNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getLocation() -->
<method name="getLocation"  public="true">
<description>
Get the &lt;code&gt;location&lt;/code&gt; property.&#xa; optional location string supplied by user
</description>
<tag name="@see">#location</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setLocation(java.lang.String) -->
<method name="setLocation"  public="true">
<description>
Set the &lt;code&gt;location&lt;/code&gt; property.&#xa; optional location string supplied by user
</description>
<tag name="@see">#location</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getAuthenticate() -->
<method name="getAuthenticate"  public="true">
<description>
Get the &lt;code&gt;authenticate&lt;/code&gt; property.&#xa; flag indicating that authentication is enabled in device
</description>
<tag name="@see">#authenticate</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAuthenticate(boolean) -->
<method name="setAuthenticate"  public="true">
<description>
Set the &lt;code&gt;authenticate&lt;/code&gt; property.&#xa; flag indicating that authentication is enabled in device
</description>
<tag name="@see">#authenticate</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getChannelId() -->
<method name="getChannelId"  public="true">
<description>
Get the &lt;code&gt;channelId&lt;/code&gt; property.&#xa; channel identifier assigned to this device
</description>
<tag name="@see">#channelId</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setChannelId(int) -->
<method name="setChannelId"  public="true">
<description>
Set the &lt;code&gt;channelId&lt;/code&gt; property.&#xa; channel identifier assigned to this device
</description>
<tag name="@see">#channelId</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getWorkingDomain() -->
<method name="getWorkingDomain"  public="true">
<description>
Get the &lt;code&gt;workingDomain&lt;/code&gt; property.&#xa; the domain table index containing the working domain
</description>
<tag name="@see">#workingDomain</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setWorkingDomain(int) -->
<method name="setWorkingDomain"  public="true">
<description>
Set the &lt;code&gt;workingDomain&lt;/code&gt; property.&#xa; the domain table index containing the working domain
</description>
<tag name="@see">#workingDomain</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getBindingII() -->
<method name="getBindingII"  public="true">
<description>
Get the &lt;code&gt;bindingII&lt;/code&gt; property.&#xa; flag indicating if the device uses new binding constraints.
</description>
<tag name="@see">#bindingII</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setBindingII(boolean) -->
<method name="setBindingII"  public="true">
<description>
Set the &lt;code&gt;bindingII&lt;/code&gt; property.&#xa; flag indicating if the device uses new binding constraints.
</description>
<tag name="@see">#bindingII</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getHosted() -->
<method name="getHosted"  public="true">
<description>
Get the &lt;code&gt;hosted&lt;/code&gt; property.&#xa; flag indicating if the device is a hosted node
</description>
<tag name="@see">#hosted</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setHosted(boolean) -->
<method name="setHosted"  public="true">
<description>
Set the &lt;code&gt;hosted&lt;/code&gt; property.&#xa; flag indicating if the device is a hosted node
</description>
<tag name="@see">#hosted</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getTwoDomains() -->
<method name="getTwoDomains"  public="true">
<description>
Get the &lt;code&gt;twoDomains&lt;/code&gt; property.&#xa; flag indicating if the devices&#x27; domain table has two entries
</description>
<tag name="@see">#twoDomains</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setTwoDomains(boolean) -->
<method name="setTwoDomains"  public="true">
<description>
Set the &lt;code&gt;twoDomains&lt;/code&gt; property.&#xa; flag indicating if the devices&#x27; domain table has two entries
</description>
<tag name="@see">#twoDomains</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getMsgTagCount() -->
<method name="getMsgTagCount"  public="true">
<description>
Get the &lt;code&gt;msgTagCount&lt;/code&gt; property.&#xa; the number of message tags used by the device
</description>
<tag name="@see">#msgTagCount</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setMsgTagCount(int) -->
<method name="setMsgTagCount"  public="true">
<description>
Set the &lt;code&gt;msgTagCount&lt;/code&gt; property.&#xa; the number of message tags used by the device
</description>
<tag name="@see">#msgTagCount</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getAddressCount() -->
<method name="getAddressCount"  public="true">
<description>
Get the &lt;code&gt;addressCount&lt;/code&gt; property.&#xa; the number of entries in this devices&#x27; address table
</description>
<tag name="@see">#addressCount</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAddressCount(int) -->
<method name="setAddressCount"  public="true">
<description>
Set the &lt;code&gt;addressCount&lt;/code&gt; property.&#xa; the number of entries in this devices&#x27; address table
</description>
<tag name="@see">#addressCount</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getAddressTable() -->
<method name="getAddressTable"  public="true">
<description>
Get the &lt;code&gt;addressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#addressTable</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BAddressTable"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAddressTable(javax.baja.lonworks.datatypes.BAddressTable) -->
<method name="setAddressTable"  public="true">
<description>
Set the &lt;code&gt;addressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#addressTable</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BAddressTable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getExtAddressTable() -->
<method name="getExtAddressTable"  public="true">
<description>
Get the &lt;code&gt;extAddressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#extAddressTable</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BExtAddressTable"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setExtAddressTable(javax.baja.lonworks.datatypes.BExtAddressTable) -->
<method name="setExtAddressTable"  public="true">
<description>
Set the &lt;code&gt;extAddressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#extAddressTable</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BExtAddressTable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getPrioritySlot() -->
<method name="getPrioritySlot"  public="true">
<description>
Get the &lt;code&gt;prioritySlot&lt;/code&gt; property.
</description>
<tag name="@see">#prioritySlot</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setPrioritySlot(int) -->
<method name="setPrioritySlot"  public="true">
<description>
Set the &lt;code&gt;prioritySlot&lt;/code&gt; property.
</description>
<tag name="@see">#prioritySlot</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getAliasTable() -->
<method name="getAliasTable"  public="true">
<description>
Get the &lt;code&gt;aliasTable&lt;/code&gt; property.&#xa; the number of network variable aliases supported on the device
</description>
<tag name="@see">#aliasTable</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BAliasTable"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAliasTable(javax.baja.lonworks.datatypes.BAliasTable) -->
<method name="setAliasTable"  public="true">
<description>
Set the &lt;code&gt;aliasTable&lt;/code&gt; property.&#xa; the number of network variable aliases supported on the device
</description>
<tag name="@see">#aliasTable</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BAliasTable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getSelfDoc() -->
<method name="getSelfDoc"  public="true">
<description>
Get the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; selfdocumentation string
</description>
<tag name="@see">#selfDoc</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setSelfDoc(java.lang.String) -->
<method name="setSelfDoc"  public="true">
<description>
Set the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; selfdocumentation string
</description>
<tag name="@see">#selfDoc</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getHasNodeObject() -->
<method name="getHasNodeObject"  public="true">
<description>
Get the &lt;code&gt;hasNodeObject&lt;/code&gt; property.&#xa; flag indicating if devices has a node object
</description>
<tag name="@see">#hasNodeObject</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setHasNodeObject(boolean) -->
<method name="setHasNodeObject"  public="true">
<description>
Set the &lt;code&gt;hasNodeObject&lt;/code&gt; property.&#xa; flag indicating if devices has a node object
</description>
<tag name="@see">#hasNodeObject</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getFreezeChannelPriorities() -->
<method name="getFreezeChannelPriorities"  public="true">
<description>
Get the &lt;code&gt;freezeChannelPriorities&lt;/code&gt; property.
</description>
<tag name="@see">#freezeChannelPriorities</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setFreezeChannelPriorities(boolean) -->
<method name="setFreezeChannelPriorities"  public="true">
<description>
Set the &lt;code&gt;freezeChannelPriorities&lt;/code&gt; property.
</description>
<tag name="@see">#freezeChannelPriorities</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getLastHash() -->
<method name="getLastHash"  public="true">
<description>
Get the &lt;code&gt;lastHash&lt;/code&gt; property.
</description>
<tag name="@see">#lastHash</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setLastHash(int) -->
<method name="setLastHash"  public="true">
<description>
Set the &lt;code&gt;lastHash&lt;/code&gt; property.
</description>
<tag name="@see">#lastHash</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getFacets() -->
<method name="getFacets"  public="true">
<description>
Get the &lt;code&gt;facets&lt;/code&gt; property.&#xa; Facets used to configure network management operations.&#xa; delayToReset - mSec delay inserted before reset during commissioning&#xa; delayToHardOffline - mSec delay inserted before setting to hardOffline during commissioning&#xa; minNvUpdateInterMsgDelay - minimum delay between nv updates to device&#xa; disableSetOfflineInBind - do not set device offline when modifying address table during a bind operation
</description>
<tag name="@see">#facets</tag>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setFacets(javax.baja.sys.BFacets) -->
<method name="setFacets"  public="true">
<description>
Set the &lt;code&gt;facets&lt;/code&gt; property.&#xa; Facets used to configure network management operations.&#xa; delayToReset - mSec delay inserted before reset during commissioning&#xa; delayToHardOffline - mSec delay inserted before setting to hardOffline during commissioning&#xa; minNvUpdateInterMsgDelay - minimum delay between nv updates to device&#xa; disableSetOfflineInBind - do not set device offline when modifying address table during a bind operation
</description>
<tag name="@see">#facets</tag>
<parameter name="v">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setPickle(java.lang.Object) -->
<method name="setPickle"  public="true">
<description>
For internal use only
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getPickle() -->
<method name="getPickle"  public="true">
<description>
For internal use only
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.isExtended() -->
<method name="isExtended"  public="true">
<description>
Does this device use extended device tables and implement extended network&#xa;  management messages.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.clearAddressTable() -->
<method name="clearAddressTable"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getAddressEntry(int) -->
<method name="getAddressEntry"  public="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAddressEntry(int, javax.baja.lonworks.datatypes.BIAddressEntry) -->
<method name="setAddressEntry"  public="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="e">
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.setAddressEntry(int, javax.baja.lonworks.datatypes.BIAddressEntry, javax.baja.sys.Context) -->
<method name="setAddressEntry"  public="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="e">
<type class="javax.baja.lonworks.datatypes.BIAddressEntry"/>
</parameter>
<parameter name="c">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BDeviceData.neuronId -->
<field name="neuronId"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;neuronId&lt;/code&gt; property.&#xa; unique 6 byte identifier of Neuron Chip
</description>
<tag name="@see">#getNeuronId</tag>
<tag name="@see">#setNeuronId</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.programId -->
<field name="programId"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;programId&lt;/code&gt; property.&#xa; 8 byte program identifier supplied by device manufacturer
</description>
<tag name="@see">#getProgramId</tag>
<tag name="@see">#setProgramId</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.nodeState -->
<field name="nodeState"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;nodeState&lt;/code&gt; property.&#xa; the current configured state of the lon device
</description>
<tag name="@see">#getNodeState</tag>
<tag name="@see">#setNodeState</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.subnetNodeId -->
<field name="subnetNodeId"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;subnetNodeId&lt;/code&gt; property.&#xa; subnet node address of this lon device
</description>
<tag name="@see">#getSubnetNodeId</tag>
<tag name="@see">#setSubnetNodeId</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.location -->
<field name="location"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;location&lt;/code&gt; property.&#xa; optional location string supplied by user
</description>
<tag name="@see">#getLocation</tag>
<tag name="@see">#setLocation</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.authenticate -->
<field name="authenticate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;authenticate&lt;/code&gt; property.&#xa; flag indicating that authentication is enabled in device
</description>
<tag name="@see">#getAuthenticate</tag>
<tag name="@see">#setAuthenticate</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.channelId -->
<field name="channelId"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;channelId&lt;/code&gt; property.&#xa; channel identifier assigned to this device
</description>
<tag name="@see">#getChannelId</tag>
<tag name="@see">#setChannelId</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.workingDomain -->
<field name="workingDomain"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;workingDomain&lt;/code&gt; property.&#xa; the domain table index containing the working domain
</description>
<tag name="@see">#getWorkingDomain</tag>
<tag name="@see">#setWorkingDomain</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.bindingII -->
<field name="bindingII"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;bindingII&lt;/code&gt; property.&#xa; flag indicating if the device uses new binding constraints.
</description>
<tag name="@see">#getBindingII</tag>
<tag name="@see">#setBindingII</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.hosted -->
<field name="hosted"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hosted&lt;/code&gt; property.&#xa; flag indicating if the device is a hosted node
</description>
<tag name="@see">#getHosted</tag>
<tag name="@see">#setHosted</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.twoDomains -->
<field name="twoDomains"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;twoDomains&lt;/code&gt; property.&#xa; flag indicating if the devices&#x27; domain table has two entries
</description>
<tag name="@see">#getTwoDomains</tag>
<tag name="@see">#setTwoDomains</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.msgTagCount -->
<field name="msgTagCount"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;msgTagCount&lt;/code&gt; property.&#xa; the number of message tags used by the device
</description>
<tag name="@see">#getMsgTagCount</tag>
<tag name="@see">#setMsgTagCount</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.addressCount -->
<field name="addressCount"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;addressCount&lt;/code&gt; property.&#xa; the number of entries in this devices&#x27; address table
</description>
<tag name="@see">#getAddressCount</tag>
<tag name="@see">#setAddressCount</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.addressTable -->
<field name="addressTable"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;addressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#getAddressTable</tag>
<tag name="@see">#setAddressTable</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.extAddressTable -->
<field name="extAddressTable"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;extAddressTable&lt;/code&gt; property.&#xa; the devices&#x27; address table
</description>
<tag name="@see">#getExtAddressTable</tag>
<tag name="@see">#setExtAddressTable</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.prioritySlot -->
<field name="prioritySlot"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;prioritySlot&lt;/code&gt; property.
</description>
<tag name="@see">#getPrioritySlot</tag>
<tag name="@see">#setPrioritySlot</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.aliasTable -->
<field name="aliasTable"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;aliasTable&lt;/code&gt; property.&#xa; the number of network variable aliases supported on the device
</description>
<tag name="@see">#getAliasTable</tag>
<tag name="@see">#setAliasTable</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.selfDoc -->
<field name="selfDoc"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; selfdocumentation string
</description>
<tag name="@see">#getSelfDoc</tag>
<tag name="@see">#setSelfDoc</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.hasNodeObject -->
<field name="hasNodeObject"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hasNodeObject&lt;/code&gt; property.&#xa; flag indicating if devices has a node object
</description>
<tag name="@see">#getHasNodeObject</tag>
<tag name="@see">#setHasNodeObject</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.freezeChannelPriorities -->
<field name="freezeChannelPriorities"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;freezeChannelPriorities&lt;/code&gt; property.
</description>
<tag name="@see">#getFreezeChannelPriorities</tag>
<tag name="@see">#setFreezeChannelPriorities</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.lastHash -->
<field name="lastHash"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;lastHash&lt;/code&gt; property.
</description>
<tag name="@see">#getLastHash</tag>
<tag name="@see">#setLastHash</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.facets -->
<field name="facets"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;facets&lt;/code&gt; property.&#xa; Facets used to configure network management operations.&#xa; delayToReset - mSec delay inserted before reset during commissioning&#xa; delayToHardOffline - mSec delay inserted before setting to hardOffline during commissioning&#xa; minNvUpdateInterMsgDelay - minimum delay between nv updates to device&#xa; disableSetOfflineInBind - do not set device offline when modifying address table during a bind operation
</description>
<tag name="@see">#getFacets</tag>
<tag name="@see">#setFacets</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BDeviceData.importChanges -->
<field name="importChanges"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description/>
</field>

</class>
</bajadoc>
