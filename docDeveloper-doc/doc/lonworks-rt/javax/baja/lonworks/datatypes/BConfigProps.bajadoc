<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.datatypes.BConfigProps" name="BConfigProps" packageName="javax.baja.lonworks.datatypes" public="true">
<description>
This class file ???.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision: 2$ $Date: 9/18/01 9:49:26 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<property name="configIndex" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;configIndex&lt;/code&gt; property.&#xa; Scpt/Ucpt integer identifier
</description>
<tag name="@see">#getConfigIndex</tag>
<tag name="@see">#setConfigIndex</tag>
</property>

<property name="offset" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;offset&lt;/code&gt; property.&#xa; offset in config parameter value file
</description>
<tag name="@see">#getOffset</tag>
<tag name="@see">#setOffset</tag>
</property>

<property name="length" flags="r">
<type class="int"/>
<description>
Slot for the &lt;code&gt;length&lt;/code&gt; property.&#xa; length of config parameter value
</description>
<tag name="@see">#getLength</tag>
<tag name="@see">#setLength</tag>
</property>

<property name="mfgDefined" flags="r">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;mfgDefined&lt;/code&gt; property.&#xa; false if parameter is Scpt, true if Ucpt
</description>
<tag name="@see">#getMfgDefined</tag>
<tag name="@see">#setMfgDefined</tag>
</property>

<property name="modifyFlag" flags="r">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description>
Slot for the &lt;code&gt;modifyFlag&lt;/code&gt; property.&#xa; indicates conditions for modifying this config property
</description>
<tag name="@see">#getModifyFlag</tag>
<tag name="@see">#setModifyFlag</tag>
</property>

<property name="scope" flags="r">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
<description>
Slot for the &lt;code&gt;scope&lt;/code&gt; property.&#xa; Indicates scope of config parameter 0 node, 1 object, 2 nv
</description>
<tag name="@see">#getScope</tag>
<tag name="@see">#setScope</tag>
</property>

<property name="select" flags="r">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;select&lt;/code&gt; property.&#xa; list of objects/nvs controled by config parameter
</description>
<tag name="@see">#getSelect</tag>
<tag name="@see">#setSelect</tag>
</property>

<!-- javax.baja.lonworks.datatypes.BConfigProps() -->
<constructor name="BConfigProps" public="true">
<description>
No arg constructor
</description>
</constructor>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getConfigIndex() -->
<method name="getConfigIndex"  public="true">
<description>
Get the &lt;code&gt;configIndex&lt;/code&gt; property.&#xa; Scpt/Ucpt integer identifier
</description>
<tag name="@see">#configIndex</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setConfigIndex(int) -->
<method name="setConfigIndex"  public="true">
<description>
Set the &lt;code&gt;configIndex&lt;/code&gt; property.&#xa; Scpt/Ucpt integer identifier
</description>
<tag name="@see">#configIndex</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getOffset() -->
<method name="getOffset"  public="true">
<description>
Get the &lt;code&gt;offset&lt;/code&gt; property.&#xa; offset in config parameter value file
</description>
<tag name="@see">#offset</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setOffset(int) -->
<method name="setOffset"  public="true">
<description>
Set the &lt;code&gt;offset&lt;/code&gt; property.&#xa; offset in config parameter value file
</description>
<tag name="@see">#offset</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getLength() -->
<method name="getLength"  public="true">
<description>
Get the &lt;code&gt;length&lt;/code&gt; property.&#xa; length of config parameter value
</description>
<tag name="@see">#length</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setLength(int) -->
<method name="setLength"  public="true">
<description>
Set the &lt;code&gt;length&lt;/code&gt; property.&#xa; length of config parameter value
</description>
<tag name="@see">#length</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getMfgDefined() -->
<method name="getMfgDefined"  public="true">
<description>
Get the &lt;code&gt;mfgDefined&lt;/code&gt; property.&#xa; false if parameter is Scpt, true if Ucpt
</description>
<tag name="@see">#mfgDefined</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setMfgDefined(boolean) -->
<method name="setMfgDefined"  public="true">
<description>
Set the &lt;code&gt;mfgDefined&lt;/code&gt; property.&#xa; false if parameter is Scpt, true if Ucpt
</description>
<tag name="@see">#mfgDefined</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getModifyFlag() -->
<method name="getModifyFlag"  public="true">
<description>
Get the &lt;code&gt;modifyFlag&lt;/code&gt; property.&#xa; indicates conditions for modifying this config property
</description>
<tag name="@see">#modifyFlag</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setModifyFlag(javax.baja.lonworks.datatypes.BModifyFlags) -->
<method name="setModifyFlag"  public="true">
<description>
Set the &lt;code&gt;modifyFlag&lt;/code&gt; property.&#xa; indicates conditions for modifying this config property
</description>
<tag name="@see">#modifyFlag</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getScope() -->
<method name="getScope"  public="true">
<description>
Get the &lt;code&gt;scope&lt;/code&gt; property.&#xa; Indicates scope of config parameter 0 node, 1 object, 2 nv
</description>
<tag name="@see">#scope</tag>
<return>
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setScope(javax.baja.lonworks.enums.BLonConfigScope) -->
<method name="setScope"  public="true">
<description>
Set the &lt;code&gt;scope&lt;/code&gt; property.&#xa; Indicates scope of config parameter 0 node, 1 object, 2 nv
</description>
<tag name="@see">#scope</tag>
<parameter name="v">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getSelect() -->
<method name="getSelect"  public="true">
<description>
Get the &lt;code&gt;select&lt;/code&gt; property.&#xa; list of objects/nvs controled by config parameter
</description>
<tag name="@see">#select</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.setSelect(java.lang.String) -->
<method name="setSelect"  public="true">
<description>
Set the &lt;code&gt;select&lt;/code&gt; property.&#xa; list of objects/nvs controled by config parameter
</description>
<tag name="@see">#select</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="c">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BConfigProps.configIndex -->
<field name="configIndex"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;configIndex&lt;/code&gt; property.&#xa; Scpt/Ucpt integer identifier
</description>
<tag name="@see">#getConfigIndex</tag>
<tag name="@see">#setConfigIndex</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.offset -->
<field name="offset"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;offset&lt;/code&gt; property.&#xa; offset in config parameter value file
</description>
<tag name="@see">#getOffset</tag>
<tag name="@see">#setOffset</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.length -->
<field name="length"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;length&lt;/code&gt; property.&#xa; length of config parameter value
</description>
<tag name="@see">#getLength</tag>
<tag name="@see">#setLength</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.mfgDefined -->
<field name="mfgDefined"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;mfgDefined&lt;/code&gt; property.&#xa; false if parameter is Scpt, true if Ucpt
</description>
<tag name="@see">#getMfgDefined</tag>
<tag name="@see">#setMfgDefined</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.modifyFlag -->
<field name="modifyFlag"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;modifyFlag&lt;/code&gt; property.&#xa; indicates conditions for modifying this config property
</description>
<tag name="@see">#getModifyFlag</tag>
<tag name="@see">#setModifyFlag</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.scope -->
<field name="scope"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;scope&lt;/code&gt; property.&#xa; Indicates scope of config parameter 0 node, 1 object, 2 nv
</description>
<tag name="@see">#getScope</tag>
<tag name="@see">#setScope</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.select -->
<field name="select"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;select&lt;/code&gt; property.&#xa; list of objects/nvs controled by config parameter
</description>
<tag name="@see">#getSelect</tag>
<tag name="@see">#setSelect</tag>
</field>

<!-- javax.baja.lonworks.datatypes.BConfigProps.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
