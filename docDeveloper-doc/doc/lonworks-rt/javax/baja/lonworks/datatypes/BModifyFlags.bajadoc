<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.datatypes.BModifyFlags" name="BModifyFlags" packageName="javax.baja.lonworks.datatypes" public="true" final="true">
<description>
BModifyFlags defines qualifiers for configuration&#xa; data in nci&#x27;s and config properties.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">15 Jan 01</tag>
<tag name="@version">$Revision: 2$ $Date: 10/12/01 9:43:21 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.lonworks.datatypes.BModifyFlags.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.make(boolean, boolean, boolean, boolean, boolean, boolean) -->
<method name="make"  public="true" static="true">
<description>
Create a BModifyFlags with the given value.
</description>
<parameter name="readWrite">
<type class="boolean"/>
</parameter>
<parameter name="mfgOnly">
<type class="boolean"/>
</parameter>
<parameter name="reset">
<type class="boolean"/>
</parameter>
<parameter name="constant">
<type class="boolean"/>
</parameter>
<parameter name="offline">
<type class="boolean"/>
</parameter>
<parameter name="disabled">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.fromFlags(int) -->
<method name="fromFlags"  public="true" static="true">
<description>
Create a BModifyFlags with the given value.
</description>
<parameter name="flags">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Test if the obj is equal in value to this BModifyFlags.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
Encode BModifyFlags using a binary format.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description>
Decode BModifyFlags using the same binary format&#xa; that was written using encode, and return the new &#xa; instance.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Write the primitive in String format.&#xa;      readWrite &#xa;      mfgOnly&#xa;      reset&#xa;      constant&#xa;      offline&#xa;      objectDisabl
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from String format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isReadWrite() -->
<method name="isReadWrite"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isMfgOnly() -->
<method name="isMfgOnly"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isReset() -->
<method name="isReset"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isConst() -->
<method name="isConst"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isOffline() -->
<method name="isOffline"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.isDisabled() -->
<method name="isDisabled"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description>
The default.
</description>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.MFG_ONLY -->
<field name="MFG_ONLY"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.MUST_RESET -->
<field name="MUST_RESET"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.CONSTANT -->
<field name="CONSTANT"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.MOD_OFFLINE -->
<field name="MOD_OFFLINE"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.MOD_DISABLED -->
<field name="MOD_DISABLED"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.mfgOnly -->
<field name="mfgOnly"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.mustReset -->
<field name="mustReset"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.constant -->
<field name="constant"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.modOffline -->
<field name="modOffline"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description/>
</field>

<!-- javax.baja.lonworks.datatypes.BModifyFlags.modDisabled -->
<field name="modDisabled"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
<description/>
</field>

</class>
</bajadoc>
