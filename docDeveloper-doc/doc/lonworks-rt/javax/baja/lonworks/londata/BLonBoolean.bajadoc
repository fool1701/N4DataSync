<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.londata.BLonBoolean" name="BLonBoolean" packageName="javax.baja.lonworks.londata" public="true" final="true">
<description>
BLonBoolean extends BLonPrimitive to&#xa; represent a boolean element in a lonworks&#xa; nv, nci, or config data structure.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">29 May 01</tag>
<tag name="@version">$Revision: 9$ $Date: 9/28/01 10:20:39 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</extends>
<implements>
<type class="javax.baja.sys.BIBoolean"/>
</implements>
<implements>
<type class="javax.baja.sys.BIEnum"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.lonworks.londata.BLonBoolean.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.make(boolean) -->
<method name="make"  public="true" static="true">
<description>
Factory method for creating neuron id &#xa; from a byte array.
</description>
<parameter name="b">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonBoolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Test if the obj is equal in value to this BLonBoolean.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Encode a boolean primitive value to its&#xa; text format &#x22;true&#x22; or &#x22;false&#x22;.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from text format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.booleanFromString(java.lang.String) -->
<method name="booleanFromString"  public="true" static="true">
<description>
Decode text format directly to a boolean primitive.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
BLonString is encoded as using writeUTF().
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description>
BLonString is decoded using readUTF().
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.toOutputStream(javax.baja.lonworks.io.LonOutputStream, javax.baja.lonworks.londata.BLonElementQualifiers) -->
<method name="toOutputStream"  public="true">
<description>
Converts data to network byte format
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<parameter name="e">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.fromInputStream(javax.baja.lonworks.io.LonInputStream, javax.baja.lonworks.londata.BLonElementQualifiers) -->
<method name="fromInputStream"  public="true">
<description>
Translates from network bytes. Sets the&#xa;  value of the object to the state represented&#xa;  by the given bytes.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<parameter name="e">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getDataAsDouble() -->
<method name="getDataAsDouble"  public="true">
<description>
Get the value of this element as a &lt;code&gt;float&lt;/code&gt;. &#xa; If true then return 1.0 else return 0.0.
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.makeFromDouble(double, javax.baja.lonworks.londata.BLonElementQualifiers) -->
<method name="makeFromDouble"  public="true">
<description>
Create a BLonBoolean from a &lt;code&gt;float&lt;/code&gt;.   &#xa; If &lt;code&gt;floatValue&amp;gt;0.0&lt;/code&gt; set value to true else false.
</description>
<parameter name="floatValue">
<type class="double"/>
</parameter>
<parameter name="e">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getDataAsBoolean() -->
<method name="getDataAsBoolean"  public="true">
<description>
Get the value of this element as a &lt;code&gt;boolean&lt;/code&gt;.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.makeFromBoolean(boolean) -->
<method name="makeFromBoolean"  public="true">
<description>
Create a BLonBoolean from a &lt;code&gt;boolean&lt;/code&gt;.
</description>
<parameter name="boolValue">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getDataAsString() -->
<method name="getDataAsString"  public="true">
<description>
Get the value of this element as a &lt;code&gt;String&lt;/code&gt;.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.makeFromString(java.lang.String) -->
<method name="makeFromString"  public="true">
<description>
Create a BLonBoolean from a &lt;code&gt;String&lt;/code&gt;. If stringValue&#xa;  is not a valid boolean then do not modify this element.
</description>
<parameter name="stringValue">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getBoolean() -->
<method name="getBoolean"  public="true">
<description>
Get the boolean value.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getBooleanFacets() -->
<method name="getBooleanFacets"  public="true">
<description>
Facets not accessible - return BFacets.NULL.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getEnum() -->
<method name="getEnum"  public="true">
<description>
Get the enum value.
</description>
<return>
<type class="javax.baja.sys.BEnum"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.getEnumFacets() -->
<method name="getEnumFacets"  public="true">
<description>
Facets not accessible - return BFacets.NULL.
</description>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonBoolean.TRUE -->
<field name="TRUE"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonBoolean"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonBoolean.FALSE -->
<field name="FALSE"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonBoolean"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonBoolean.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonBoolean"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonBoolean.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
