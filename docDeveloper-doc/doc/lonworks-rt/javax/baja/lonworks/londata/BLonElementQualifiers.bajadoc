<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.londata.BLonElementQualifiers" name="BLonElementQualifiers" packageName="javax.baja.lonworks.londata" public="true" final="true">
<description>
The BLonElementQualifiers defines qualifiers for a data&#xa; element within an nv, nci, of config property. &#xa; It specifies resolution and offset, min,max and invalid values,&#xa; and byte and bit position of the element.  Element qualifiers  &#xa; are needed to convert controller byte data from/to &#xa; linkable baja data elements. &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">5 Jan 01</tag>
<tag name="@version">$Revision: 5$ $Date: 9/18/01 9:49:38 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.make(javax.baja.lonworks.enums.BLonElementType, int) -->
<method name="make"  public="true" static="true">
<description>
Create a BLonElementQualifiers with the given elemType and length.
</description>
<parameter name="elemtype">
<type class="javax.baja.lonworks.enums.BLonElementType"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.make(javax.baja.lonworks.enums.BLonElementType, boolean, float, boolean, float, float, float, boolean, int, int, boolean, float, int) -->
<method name="make"  public="true" static="true">
<description>
Create a BLonElementQualifiers with the given qualifiers.
</description>
<parameter name="elemtype">
<type class="javax.baja.lonworks.enums.BLonElementType"/>
</parameter>
<parameter name="hasMinimum">
<type class="boolean"/>
</parameter>
<parameter name="minimum">
<type class="float"/>
</parameter>
<parameter name="hasMaximum">
<type class="boolean"/>
</parameter>
<parameter name="maximum">
<type class="float"/>
</parameter>
<parameter name="resolution">
<type class="float"/>
</parameter>
<parameter name="offset">
<type class="float"/>
</parameter>
<parameter name="hasOffset">
<type class="boolean"/>
</parameter>
<parameter name="byteOffset">
<type class="int"/>
</parameter>
<parameter name="bitOffset">
<type class="int"/>
</parameter>
<parameter name="hasInvalid">
<type class="boolean"/>
</parameter>
<parameter name="invalidValue">
<type class="float"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.make(javax.baja.lonworks.enums.BLonElementType, boolean, java.lang.Number, boolean, java.lang.Number, float, float, boolean, int, int, boolean, java.lang.Number, int) -->
<method name="make"  public="true" static="true">
<description>
Create a BLonElementQualifiers with the given qualifiers.
</description>
<tag name="@since">Niagara 3.8.26</tag>
<parameter name="elemtype">
<type class="javax.baja.lonworks.enums.BLonElementType"/>
</parameter>
<parameter name="hasMinimum">
<type class="boolean"/>
</parameter>
<parameter name="minimum">
<type class="java.lang.Number"/>
</parameter>
<parameter name="hasMaximum">
<type class="boolean"/>
</parameter>
<parameter name="maximum">
<type class="java.lang.Number"/>
</parameter>
<parameter name="resolution">
<type class="float"/>
</parameter>
<parameter name="offset">
<type class="float"/>
</parameter>
<parameter name="hasOffset">
<type class="boolean"/>
</parameter>
<parameter name="byteOffset">
<type class="int"/>
</parameter>
<parameter name="bitOffset">
<type class="int"/>
</parameter>
<parameter name="hasInvalid">
<type class="boolean"/>
</parameter>
<parameter name="invalidValue">
<type class="java.lang.Number"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.make(javax.baja.lonworks.enums.BLonElementType, float, float, float, float) -->
<method name="make"  public="true" static="true">
<description/>
<parameter name="elemtype">
<type class="javax.baja.lonworks.enums.BLonElementType"/>
</parameter>
<parameter name="minimum">
<type class="float"/>
</parameter>
<parameter name="maximum">
<type class="float"/>
</parameter>
<parameter name="resolution">
<type class="float"/>
</parameter>
<parameter name="invalidValue">
<type class="float"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Test if the obj is equal in value to this BLonElementQualifiers.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.canCopyFrom(java.lang.Object) -->
<method name="canCopyFrom"  public="true">
<description>
Test if the obj is equal in value to this BLonElementQualifiers.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getDataByteLength() -->
<method name="getDataByteLength"  public="true">
<description/>
<return>
<type class="int"/>
<description>
the length of qualified data element in bytes. If bit field return 0.
</description>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
Serialized.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description>
Unserialized.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Write the primitive in String format.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from String format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getElemtype() -->
<method name="getElemtype"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.enums.BLonElementType"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getResolution() -->
<method name="getResolution"  public="true">
<description/>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getOffset() -->
<method name="getOffset"  public="true">
<description/>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getByteOffset() -->
<method name="getByteOffset"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getBitOffset() -->
<method name="getBitOffset"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getSize() -->
<method name="getSize"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getLength() -->
<method name="getLength"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.hasOffset() -->
<method name="hasOffset"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.hasMinimum() -->
<method name="hasMinimum"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMinimum() -->
<method name="getMinimum"  public="true">
<description/>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMinimumD() -->
<method name="getMinimumD"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMinimumN() -->
<method name="getMinimumN"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="java.lang.Number"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.hasMaximum() -->
<method name="hasMaximum"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMaximum() -->
<method name="getMaximum"  public="true">
<description/>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMaximumD() -->
<method name="getMaximumD"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getMaximumN() -->
<method name="getMaximumN"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="java.lang.Number"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.hasInvalidValue() -->
<method name="hasInvalidValue"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getInvalidValue() -->
<method name="getInvalidValue"  public="true">
<description/>
<return>
<type class="float"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getInvalidValueL() -->
<method name="getInvalidValueL"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="long"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.getInvalidValueN() -->
<method name="getInvalidValueN"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<return>
<type class="java.lang.Number"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.isInvalid(long) -->
<method name="isInvalid"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<parameter name="lval">
<type class="long"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.isInvalid(float) -->
<method name="isInvalid"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<parameter name="fval">
<type class="float"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.isInvalid(double) -->
<method name="isInvalid"  public="true">
<description/>
<tag name="@since">Niagara 3.8.26</tag>
<parameter name="dval">
<type class="double"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description>
The default.
</description>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.NONE -->
<field name="NONE"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.ENUM -->
<field name="ENUM"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.BOOLEAN -->
<field name="BOOLEAN"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.SIGNED_LONG1 -->
<field name="SIGNED_LONG1"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.UNSIGNED_LONG1 -->
<field name="UNSIGNED_LONG1"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.S32 -->
<field name="S32"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.U8 -->
<field name="U8"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.U16 -->
<field name="U16"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.HOUR -->
<field name="HOUR"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

<!-- javax.baja.lonworks.londata.BLonElementQualifiers.MINUTE -->
<field name="MINUTE"  public="true" static="true" final="true">
<type class="javax.baja.lonworks.londata.BLonElementQualifiers"/>
<description/>
</field>

</class>
</bajadoc>
