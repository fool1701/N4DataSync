<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.londata.BLonDataUnion" name="BLonDataUnion" packageName="javax.baja.lonworks.londata" public="true">
<description>
The BLonDataUnion contains support for BLonData which&#xa; has a union in its type definition. &#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">5 May 01</tag>
<tag name="@version">$Revision: 8$ $Date: 9/28/01 10:20:42 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.londata.BLonData"/>
</extends>
<property name="unionQuals" flags="h">
<type class="javax.baja.lonworks.datatypes.BUnionQualifiers"/>
<description>
Slot for the &lt;code&gt;unionQuals&lt;/code&gt; property.
</description>
<tag name="@see">#getUnionQuals</tag>
<tag name="@see">#setUnionQuals</tag>
</property>

<!-- javax.baja.lonworks.londata.BLonDataUnion() -->
<constructor name="BLonDataUnion" public="true">
<description/>
</constructor>

<!-- javax.baja.lonworks.londata.BLonDataUnion.getUnionQuals() -->
<method name="getUnionQuals"  public="true">
<description>
Get the &lt;code&gt;unionQuals&lt;/code&gt; property.
</description>
<tag name="@see">#unionQuals</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BUnionQualifiers"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.setUnionQuals(javax.baja.lonworks.datatypes.BUnionQualifiers) -->
<method name="setUnionQuals"  public="true">
<description>
Set the &lt;code&gt;unionQuals&lt;/code&gt; property.
</description>
<tag name="@see">#unionQuals</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BUnionQualifiers"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.hasEquivalentElements(javax.baja.lonworks.londata.BLonData) -->
<method name="hasEquivalentElements"  public="true">
<description>
Verify that the specified lonData has the same set of primitive&#xa;  data elements by type, qualifiers, and name. Will recurse  into&#xa;  nested datatypes.
</description>
<parameter name="ld">
<type class="javax.baja.lonworks.londata.BLonData"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.isUnion() -->
<method name="isUnion"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.getActiveProperties() -->
<method name="getActiveProperties"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Property" dimension="1"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.getActiveProperties(javax.baja.sys.BObject) -->
<method name="getActiveProperties"  public="true">
<description/>
<parameter name="condVal">
<type class="javax.baja.sys.BObject"/>
</parameter>
<return>
<type class="javax.baja.sys.Property" dimension="1"/>
</return>
</method>

<!-- javax.baja.lonworks.londata.BLonDataUnion.unionQuals -->
<field name="unionQuals"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;unionQuals&lt;/code&gt; property.
</description>
<tag name="@see">#getUnionQuals</tag>
<tag name="@see">#setUnionQuals</tag>
</field>

<!-- javax.baja.lonworks.londata.BLonDataUnion.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
