<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.BConfigParameter" name="BConfigParameter" packageName="javax.baja.lonworks" public="true">
<description>
BConfigParameter represents a single config parameter&#xa;  in a LonDevice. It provides specific support for runtime&#xa;  updates.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision: 4$ $Date: 10/18/01 2:56:39 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.BLonComponent"/>
</extends>
<property name="configProps" flags="">
<type class="javax.baja.lonworks.datatypes.BConfigProps"/>
<description>
Slot for the &lt;code&gt;configProps&lt;/code&gt; property.&#xa; Properties needed to access config parameter in device.
</description>
<tag name="@see">#getConfigProps</tag>
<tag name="@see">#setConfigProps</tag>
</property>

<!-- javax.baja.lonworks.BConfigParameter() -->
<constructor name="BConfigParameter" public="true">
<description>
No arg constructor
</description>
</constructor>

<!-- javax.baja.lonworks.BConfigParameter(javax.baja.lonworks.londata.BLonData, int, int, javax.baja.lonworks.datatypes.BModifyFlags, javax.baja.lonworks.enums.BLonConfigScope, java.lang.String) -->
<constructor name="BConfigParameter" public="true">
<parameter name="data">
<type class="javax.baja.lonworks.londata.BLonData"/>
</parameter>
<parameter name="offset">
<type class="int"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<parameter name="modifyFlag">
<type class="javax.baja.lonworks.datatypes.BModifyFlags"/>
</parameter>
<parameter name="scope">
<type class="javax.baja.lonworks.enums.BLonConfigScope"/>
</parameter>
<parameter name="select">
<type class="java.lang.String"/>
</parameter>
<description>
No arg constructor
</description>
</constructor>

<!-- javax.baja.lonworks.BConfigParameter.getConfigProps() -->
<method name="getConfigProps"  public="true">
<description>
Get the &lt;code&gt;configProps&lt;/code&gt; property.&#xa; Properties needed to access config parameter in device.
</description>
<tag name="@see">#configProps</tag>
<return>
<type class="javax.baja.lonworks.datatypes.BConfigProps"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.setConfigProps(javax.baja.lonworks.datatypes.BConfigProps) -->
<method name="setConfigProps"  public="true">
<description>
Set the &lt;code&gt;configProps&lt;/code&gt; property.&#xa; Properties needed to access config parameter in device.
</description>
<tag name="@see">#configProps</tag>
<parameter name="v">
<type class="javax.baja.lonworks.datatypes.BConfigProps"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.isConfigParameter() -->
<method name="isConfigParameter"  public="true">
<description/>
<return>
<type class="boolean"/>
<description>
always true
</description>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.isForeignPersistent() -->
<method name="isForeignPersistent"  public="true">
<description>
Does this component represent data stored persistently in the device.&#xa; &lt;p&gt;
</description>
<return>
<type class="boolean"/>
<description>
always true.
</description>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.isWriteable() -->
<method name="isWriteable"  public="true">
<description>
Does this component represent a writable value in device.&#xa; &lt;p&gt;
</description>
<return>
<type class="boolean"/>
<description>
false if the MfgOnly modifyFlag is true else returns true.
</description>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.dataChanged(javax.baja.sys.Context) -->
<method name="dataChanged"  protected="true">
<description>
Respond to data changes.&lt;p&gt; If the context!=BLonNetwork.lonNoWrite&#xa; and the device is running then update the cp data in the device.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.doForceWrite() -->
<method name="doForceWrite"  public="true">
<description>
Write data to device. If readOnly, mfgOnly data throw runtime exception.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.doForceRead() -->
<method name="doForceRead"  public="true">
<description>
Read data from device.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.lonComponentSubscribed() -->
<method name="lonComponentSubscribed"  protected="true">
<description>
Callback to indicate LonComponent transition from 0 to 1 subscriber.&#xa;  If deviceSpecific facet set call forceRead()
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.lonworks.BConfigParameter.configProps -->
<field name="configProps"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;configProps&lt;/code&gt; property.&#xa; Properties needed to access config parameter in device.
</description>
<tag name="@see">#getConfigProps</tag>
<tag name="@see">#setConfigProps</tag>
</field>

<!-- javax.baja.lonworks.BConfigParameter.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
