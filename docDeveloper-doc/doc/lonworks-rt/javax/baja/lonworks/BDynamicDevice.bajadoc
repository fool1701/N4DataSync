<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.BDynamicDevice" name="BDynamicDevice" packageName="javax.baja.lonworks" public="true">
<description>
BDynamicDevice adds support to BLonDevice for dynamically create&#xa; components from the devices self documentation or an xml file.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">22 June 01</tag>
<tag name="@version">$Revision: 5$ $Date: 10/18/01 2:56:40 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.BLonDevice"/>
</extends>
<property name="xmlFile" flags="r">
<type class="javax.baja.naming.BOrd"/>
<description>
Slot for the &lt;code&gt;xmlFile&lt;/code&gt; property.&#xa; The name of xml file used by importXml action.
</description>
<tag name="@see">#getXmlFile</tag>
<tag name="@see">#setXmlFile</tag>
</property>

<action name="learnNv" flags="h">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;learnNv&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv()</tag>
</action>

<action name="learnNv_" flags="">
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLearnNvParameters"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
<description>
Slot for the &lt;code&gt;learnNv_&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv_(BLearnNvParameters parameter)</tag>
</action>

<action name="trim" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;trim&lt;/code&gt; action.&#xa; Remove unlinked/unproxied nvs
</description>
<tag name="@see">#trim()</tag>
</action>

<action name="importXml" flags="h">
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BImportParameters"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;importXml&lt;/code&gt; action.
</description>
<tag name="@see">#importXml(BImportParameters parameter)</tag>
</action>

<topic name="dynamicOpComplete" flags="">
<eventType>
<type class="javax.baja.sys.BValue"/>
</eventType><description>
Slot for the &lt;code&gt;dynamicOpComplete&lt;/code&gt; topic.
</description>
<tag name="@see">#fireDynamicOpComplete</tag>
</topic>

<!-- javax.baja.lonworks.BDynamicDevice() -->
<constructor name="BDynamicDevice" public="true">
<description/>
</constructor>

<!-- javax.baja.lonworks.BDynamicDevice.getXmlFile() -->
<method name="getXmlFile"  public="true">
<description>
Get the &lt;code&gt;xmlFile&lt;/code&gt; property.&#xa; The name of xml file used by importXml action.
</description>
<tag name="@see">#xmlFile</tag>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.setXmlFile(javax.baja.naming.BOrd) -->
<method name="setXmlFile"  public="true">
<description>
Set the &lt;code&gt;xmlFile&lt;/code&gt; property.&#xa; The name of xml file used by importXml action.
</description>
<tag name="@see">#xmlFile</tag>
<parameter name="v">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.learnNv() -->
<method name="learnNv"  public="true">
<description>
Invoke the &lt;code&gt;learnNv&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.learnNv_(javax.baja.lonworks.datatypes.BLearnNvParameters) -->
<method name="learnNv_"  public="true">
<description>
Invoke the &lt;code&gt;learnNv_&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv_</tag>
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLearnNvParameters"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.trim() -->
<method name="trim"  public="true">
<description>
Invoke the &lt;code&gt;trim&lt;/code&gt; action.&#xa; Remove unlinked/unproxied nvs
</description>
<tag name="@see">#trim</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.importXml(javax.baja.lonworks.datatypes.BImportParameters) -->
<method name="importXml"  public="true">
<description>
Invoke the &lt;code&gt;importXml&lt;/code&gt; action.
</description>
<tag name="@see">#importXml</tag>
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BImportParameters"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.fireDynamicOpComplete(javax.baja.sys.BValue) -->
<method name="fireDynamicOpComplete"  public="true">
<description>
Fire an event for the &lt;code&gt;dynamicOpComplete&lt;/code&gt; topic.
</description>
<tag name="@see">#dynamicOpComplete</tag>
<parameter name="event">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.started() -->
<method name="started"  public="true">
<description>
If there is a non-null xmlFile and no nvs then importXml.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.getActionParameterDefault(javax.baja.sys.Action) -->
<method name="getActionParameterDefault"  public="true">
<description>
Overridden here to provide the default value for the&#xa; learnNv action.
</description>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doLearnNv() -->
<method name="doLearnNv"  public="true">
<description>
DEPRECATED
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doLearnNv_(javax.baja.lonworks.datatypes.BLearnNvParameters) -->
<method name="doLearnNv_"  public="true">
<description>
Build database representation from devices self documentation. &#xa; Use user specified parameters
</description>
<parameter name="param">
<type class="javax.baja.lonworks.datatypes.BLearnNvParameters"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doImportXml(javax.baja.lonworks.datatypes.BImportParameters) -->
<method name="doImportXml"  public="true">
<description>
Read the xml file and update device components.  Add nvs,&#xa; ncis, cps and mtags as needed.
</description>
<parameter name="param">
<type class="javax.baja.lonworks.datatypes.BImportParameters"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doImportXml(javax.baja.lonworks.datatypes.BImportParameters, java.util.logging.Logger) -->
<method name="doImportXml"  public="true" final="true">
<description>
Allows specification of log when importing an unmounted DynamicDevice.
</description>
<parameter name="param">
<type class="javax.baja.lonworks.datatypes.BImportParameters"/>
</parameter>
<parameter name="log">
<type class="java.util.logging.Logger"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doExportXml() -->
<method name="doExportXml"  public="true">
<description>
Not currently implemented.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.doTrim() -->
<method name="doTrim"  public="true" final="true">
<description>
Remove all nvs that do not have a proxy, are not linked and are not bound.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BDynamicDevice.xmlFile -->
<field name="xmlFile"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;xmlFile&lt;/code&gt; property.&#xa; The name of xml file used by importXml action.
</description>
<tag name="@see">#getXmlFile</tag>
<tag name="@see">#setXmlFile</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.learnNv -->
<field name="learnNv"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;learnNv&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv()</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.learnNv_ -->
<field name="learnNv_"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;learnNv_&lt;/code&gt; action.&#xa; Create/update components from device self documentation
</description>
<tag name="@see">#learnNv_(BLearnNvParameters parameter)</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.trim -->
<field name="trim"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;trim&lt;/code&gt; action.&#xa; Remove unlinked/unproxied nvs
</description>
<tag name="@see">#trim()</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.importXml -->
<field name="importXml"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;importXml&lt;/code&gt; action.
</description>
<tag name="@see">#importXml(BImportParameters parameter)</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.dynamicOpComplete -->
<field name="dynamicOpComplete"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;dynamicOpComplete&lt;/code&gt; topic.
</description>
<tag name="@see">#fireDynamicOpComplete</tag>
</field>

<!-- javax.baja.lonworks.BDynamicDevice.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
