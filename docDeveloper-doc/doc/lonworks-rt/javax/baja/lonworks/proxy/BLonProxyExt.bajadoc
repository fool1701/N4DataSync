<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.proxy.BLonProxyExt" name="BLonProxyExt" packageName="javax.baja.lonworks.proxy" public="true" abstract="true">
<description>
BLonProxyExt is the superclass for Lonworks&#xa; proxy point extentions. There is an associated lonworks&#xa; proxy extension for &lt;code&gt;BNumericPoint, BBooleanPoint&#xa; BDynamicEnum and BStringPoint&lt;/code&gt;.&lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">19 Dec 01</tag>
<tag name="@version">$Revision: 4$ $Date: 10/18/01 2:56:42 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.driver.point.BProxyExt"/>
</extends>
<property name="targetComp" flags="s">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;targetComp&lt;/code&gt; property.&#xa; Pathname for target BLonData relative to device
</description>
<tag name="@see">#getTargetComp</tag>
<tag name="@see">#setTargetComp</tag>
</property>

<property name="targetName" flags="s">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;targetName&lt;/code&gt; property.&#xa; Name of BLonPrimitive this proxy targets
</description>
<tag name="@see">#getTargetName</tag>
<tag name="@see">#setTargetName</tag>
</property>

<property name="linkType" flags="">
<type class="javax.baja.lonworks.enums.BLonLinkType"/>
<description>
Slot for the &lt;code&gt;linkType&lt;/code&gt; property.
</description>
<tag name="@see">#getLinkType</tag>
<tag name="@see">#setLinkType</tag>
</property>

<property name="priority" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;priority&lt;/code&gt; property.
</description>
<tag name="@see">#getPriority</tag>
<tag name="@see">#setPriority</tag>
</property>

<!-- javax.baja.lonworks.proxy.BLonProxyExt() -->
<constructor name="BLonProxyExt" public="true">
<description>
Empty constructor.
</description>
</constructor>

<!-- javax.baja.lonworks.proxy.BLonProxyExt(javax.baja.naming.OrdTarget) -->
<constructor name="BLonProxyExt" public="true">
<parameter name="ordTgt">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<description>
Create a BLonProxyExt with the specified proxyLink.
</description>
</constructor>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getTargetComp() -->
<method name="getTargetComp"  public="true">
<description>
Get the &lt;code&gt;targetComp&lt;/code&gt; property.&#xa; Pathname for target BLonData relative to device
</description>
<tag name="@see">#targetComp</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.setTargetComp(java.lang.String) -->
<method name="setTargetComp"  public="true">
<description>
Set the &lt;code&gt;targetComp&lt;/code&gt; property.&#xa; Pathname for target BLonData relative to device
</description>
<tag name="@see">#targetComp</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getTargetName() -->
<method name="getTargetName"  public="true">
<description>
Get the &lt;code&gt;targetName&lt;/code&gt; property.&#xa; Name of BLonPrimitive this proxy targets
</description>
<tag name="@see">#targetName</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.setTargetName(java.lang.String) -->
<method name="setTargetName"  public="true">
<description>
Set the &lt;code&gt;targetName&lt;/code&gt; property.&#xa; Name of BLonPrimitive this proxy targets
</description>
<tag name="@see">#targetName</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getLinkType() -->
<method name="getLinkType"  public="true">
<description>
Get the &lt;code&gt;linkType&lt;/code&gt; property.
</description>
<tag name="@see">#linkType</tag>
<return>
<type class="javax.baja.lonworks.enums.BLonLinkType"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.setLinkType(javax.baja.lonworks.enums.BLonLinkType) -->
<method name="setLinkType"  public="true">
<description>
Set the &lt;code&gt;linkType&lt;/code&gt; property.
</description>
<tag name="@see">#linkType</tag>
<parameter name="v">
<type class="javax.baja.lonworks.enums.BLonLinkType"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getPriority() -->
<method name="getPriority"  public="true">
<description>
Get the &lt;code&gt;priority&lt;/code&gt; property.
</description>
<tag name="@see">#priority</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.setPriority(boolean) -->
<method name="setPriority"  public="true">
<description>
Set the &lt;code&gt;priority&lt;/code&gt; property.
</description>
<tag name="@see">#priority</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getDeviceExtType() -->
<method name="getDeviceExtType"  public="true">
<description>
Get the parent PointDeviceExt type this proxy&#xa; extension belongs under (and by deduction which&#xa; device and network).
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getMode() -->
<method name="getMode"  public="true">
<description>
Return if this proxy point is readonly, readWrite or writeonly.
</description>
<return>
<type class="javax.baja.driver.point.BReadWriteMode"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.readSubscribed(javax.baja.sys.Context) -->
<method name="readSubscribed"  public="true" final="true">
<description>
This callback is invoked when the point&#x27;s&#xa; subscription count is incremented to non-zero&#xa; and isOutOfService() returns false.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.readUnsubscribed(javax.baja.sys.Context) -->
<method name="readUnsubscribed"  public="true" final="true">
<description>
This callback is invoked when the point&#x27;s subscription&#xa; count returns to zero and isOutOfService() returns false.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.write(javax.baja.sys.Context) -->
<method name="write"  public="true">
<description>
This callback is made when a write is desired based on the&#xa; current status and tuning.  The value to write is the current&#xa; value of the writeValue property.  Processing is done on the&#xa; BLonNetwork proxyQueue worker.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.forceUpdate() -->
<method name="forceUpdate"  public="true" final="true">
<description>
For internal use.  Push control point writeValue to the &#xa; target with BLonNetwork.noWrite context.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.started() -->
<method name="started"  public="true" final="true">
<description>
Resolve proxy link and register with data component if needed.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.extStarted() -->
<method name="extStarted"  protected="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.stopped() -->
<method name="stopped"  public="true" final="true">
<description>
Unregister proxy with data component if needed.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.isReadWriteProxy() -->
<method name="isReadWriteProxy"  public="true">
<description>
Override to return false. This will force update of&#xa; deviceValue from executeValue after successful writes.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description>
If change to proxyLink or target resolve new proxy link and&#xa; register with data component
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getLonComponent() -->
<method name="getLonComponent"  public="true">
<description>
Get the BLonComponent containing the data element this proxy&#xa; is linked to.
</description>
<return>
<type class="javax.baja.lonworks.BLonComponent"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.renew() -->
<method name="renew"  public="true">
<description>
Resolve proxy link.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.renew(boolean) -->
<method name="renew"  public="true">
<description/>
<parameter name="updateFacets">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.deviceFacetsChanged() -->
<method name="deviceFacetsChanged"  protected="true">
<description>
Override point for subclasses to set the Control Point and ProxyExt facets&#xa; from the device facets which may have changed.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getDataPoint() -->
<method name="getDataPoint"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.londata.BLonData"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getPrimitiveValue(javax.baja.status.BStatusValue) -->
<method name="getPrimitiveValue"  protected="true" abstract="true">
<description>
Override point for subclasses to convert BStatusValue to&#xa; the appropriate BLonPrimitive type.
</description>
<parameter name="value">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getStatusValue() -->
<method name="getStatusValue"  public="true" final="true">
<description>
Return data point value as BStatusValue.
</description>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getTarget() -->
<method name="getTarget"  protected="true" final="true">
<description/>
<return>
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.getStatusValue(javax.baja.lonworks.londata.BLonPrimitive) -->
<method name="getStatusValue"  public="true" abstract="true">
<description>
Override point for subclasses to convert data point value to&#xa; the appropriate BStatusValue type.
</description>
<parameter name="newValue">
<type class="javax.baja.lonworks.londata.BLonPrimitive"/>
</parameter>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description>
Override toString to return targetComp and targetName.
</description>
<parameter name="c">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<description/>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.targetComp -->
<field name="targetComp"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;targetComp&lt;/code&gt; property.&#xa; Pathname for target BLonData relative to device
</description>
<tag name="@see">#getTargetComp</tag>
<tag name="@see">#setTargetComp</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.targetName -->
<field name="targetName"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;targetName&lt;/code&gt; property.&#xa; Name of BLonPrimitive this proxy targets
</description>
<tag name="@see">#getTargetName</tag>
<tag name="@see">#setTargetName</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.linkType -->
<field name="linkType"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;linkType&lt;/code&gt; property.
</description>
<tag name="@see">#getLinkType</tag>
<tag name="@see">#setLinkType</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.priority -->
<field name="priority"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;priority&lt;/code&gt; property.
</description>
<tag name="@see">#getPriority</tag>
<tag name="@see">#setPriority</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.tuningPolicyName -->
<field name="tuningPolicyName"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tuningPolicyName&lt;/code&gt; property.&#xa; Override ProxyExt default tuning policy to disable all writes that are not change driven
</description>
<tag name="@see">#getTuningPolicyName</tag>
<tag name="@see">#setTuningPolicyName</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; Override ProxyExt default status to clear stale state.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.deviceFacets -->
<field name="deviceFacets"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;deviceFacets&lt;/code&gt; property.&#xa; Override ProxyExt default flags to hide from user
</description>
<tag name="@see">#getDeviceFacets</tag>
<tag name="@see">#setDeviceFacets</tag>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.datPnt -->
<field name="datPnt"  protected="true">
<type class="javax.baja.lonworks.londata.BLonData"/>
<description/>
</field>

<!-- javax.baja.lonworks.proxy.BLonProxyExt.targetProp -->
<field name="targetProp"  protected="true">
<type class="javax.baja.sys.Property"/>
<description/>
</field>

</class>
</bajadoc>
