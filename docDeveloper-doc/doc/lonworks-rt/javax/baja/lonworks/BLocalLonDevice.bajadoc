<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="javax.baja.lonworks.BLocalLonDevice" name="BLocalLonDevice" packageName="javax.baja.lonworks" public="true">
<description>
BLocalLonDevice represents the local interface to the lonworks&#xa; fieldbus.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">06 Dec 00</tag>
<tag name="@version">$Revision: 3$ $Date: 10/18/01 2:56:40 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.BLonDevice"/>
</extends>
<property name="externalConfig" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;externalConfig&lt;/code&gt; property.&#xa; If true the local interface will be managed externally.
</description>
<tag name="@see">#getExternalConfig</tag>
<tag name="@see">#setExternalConfig</tag>
</property>

<property name="selfDoc" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; Self documentation string.
</description>
<tag name="@see">#getSelfDoc</tag>
<tag name="@see">#setSelfDoc</tag>
</property>

<action name="servicePin" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;servicePin&lt;/code&gt; action.&#xa; Send service pin message from local interface
</description>
<tag name="@see">#servicePin()</tag>
</action>

<action name="importXml" flags="h">
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLocalImportXmlParameter"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;importXml&lt;/code&gt; action.&#xa; Import nvis, nvos and ncis from lonXml file.
</description>
<tag name="@see">#importXml(BLocalImportXmlParameter parameter)</tag>
</action>

<action name="extractXif" flags="h">
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLocalExtractXifParameter"/>
</parameter>
<return>
<type class="javax.baja.sys.BString"/>
</return>
<description>
Slot for the &lt;code&gt;extractXif&lt;/code&gt; action.&#xa; Create an xif file representation of the local device.
</description>
<tag name="@see">#extractXif(BLocalExtractXifParameter parameter)</tag>
</action>

<topic name="wink" flags="">
<eventType>
<type class="javax.baja.sys.BValue"/>
</eventType><description>
Slot for the &lt;code&gt;wink&lt;/code&gt; topic.&#xa; Wink command received by station
</description>
<tag name="@see">#fireWink</tag>
</topic>

<!-- javax.baja.lonworks.BLocalLonDevice() -->
<constructor name="BLocalLonDevice" public="true">
<description/>
</constructor>

<!-- javax.baja.lonworks.BLocalLonDevice.getExternalConfig() -->
<method name="getExternalConfig"  public="true">
<description>
Get the &lt;code&gt;externalConfig&lt;/code&gt; property.&#xa; If true the local interface will be managed externally.
</description>
<tag name="@see">#externalConfig</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.setExternalConfig(boolean) -->
<method name="setExternalConfig"  public="true">
<description>
Set the &lt;code&gt;externalConfig&lt;/code&gt; property.&#xa; If true the local interface will be managed externally.
</description>
<tag name="@see">#externalConfig</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.getSelfDoc() -->
<method name="getSelfDoc"  public="true">
<description>
Get the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; Self documentation string.
</description>
<tag name="@see">#selfDoc</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.setSelfDoc(java.lang.String) -->
<method name="setSelfDoc"  public="true">
<description>
Set the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; Self documentation string.
</description>
<tag name="@see">#selfDoc</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.servicePin() -->
<method name="servicePin"  public="true">
<description>
Invoke the &lt;code&gt;servicePin&lt;/code&gt; action.&#xa; Send service pin message from local interface
</description>
<tag name="@see">#servicePin</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.importXml(javax.baja.lonworks.datatypes.BLocalImportXmlParameter) -->
<method name="importXml"  public="true">
<description>
Invoke the &lt;code&gt;importXml&lt;/code&gt; action.&#xa; Import nvis, nvos and ncis from lonXml file.
</description>
<tag name="@see">#importXml</tag>
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLocalImportXmlParameter"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.extractXif(javax.baja.lonworks.datatypes.BLocalExtractXifParameter) -->
<method name="extractXif"  public="true">
<description>
Invoke the &lt;code&gt;extractXif&lt;/code&gt; action.&#xa; Create an xif file representation of the local device.
</description>
<tag name="@see">#extractXif</tag>
<parameter name="parameter">
<type class="javax.baja.lonworks.datatypes.BLocalExtractXifParameter"/>
</parameter>
<return>
<type class="javax.baja.sys.BString"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.fireWink(javax.baja.sys.BValue) -->
<method name="fireWink"  public="true">
<description>
Fire an event for the &lt;code&gt;wink&lt;/code&gt; topic.&#xa; Wink command received by station
</description>
<tag name="@see">#wink</tag>
<parameter name="event">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.receiveNvUpdate(int, com.tridium.lonworks.netmessages.UnprocessedNV) -->
<method name="receiveNvUpdate"  public="true" final="true">
<description>
Receive nvUpdate.  If selector matches localNv/Nci then receive&#xa; update and return true. Otherwise return false.
</description>
<parameter name="sel">
<type class="int"/>
</parameter>
<parameter name="msg">
<type class="com.tridium.lonworks.netmessages.UnprocessedNV"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.programIdChanges() -->
<method name="programIdChanges"  public="true" final="true">
<description>
Returns true to indicates that programId may be changed &#xa; during commissioning.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.isLocal() -->
<method name="isLocal"  public="true" final="true">
<description>
Is this the local lonDivice. &#xa;  &lt;p&gt;
</description>
<return>
<type class="boolean"/>
<description>
Always return true.
</description>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.doPing() -->
<method name="doPing"  public="true">
<description>
Use ping to check for changes to device data if externalConfig is set true
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<description>
Override to remove NvManager and NcManager.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.started() -->
<method name="started"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.forceStart() -->
<method name="forceStart"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.lonDeviceInit() -->
<method name="lonDeviceInit"  protected="true">
<description>
Make sure the local Neuron settings match DeviceData.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.deviceDataChanged(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="deviceDataChanged"  public="true">
<description>
Receive notification of change to device data. Update local interface for&#xa; subnetNode address, domainId, authenticationKey,  changes. &#xa; &lt;p&gt;If context is AddressManager.noDeviceChange then don&#x27;t update interface.
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description>
Override for changed().
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.doServicePin() -->
<method name="doServicePin"  public="true" final="true">
<description>
Implement servicePin action.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.getIcon() -->
<method name="getIcon"  public="true" final="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true">
<description/>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.removed(javax.baja.sys.Property, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="removed"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.checkAdd(java.lang.String, javax.baja.sys.BValue, int, javax.baja.sys.BFacets, javax.baja.sys.Context) -->
<method name="checkAdd"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.lonDeviceAtSteadyState() -->
<method name="lonDeviceAtSteadyState"  protected="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.renamed(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="renamed"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="oldName">
<type class="java.lang.String"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.nvChanged(javax.baja.lonworks.BINetworkVariable) -->
<method name="nvChanged"  public="true">
<description>
For internal use.  Callback for LocalNvi/Nvo/Nci to indicated need to update&#xa; local device self documentation.
</description>
<parameter name="inv">
<type class="javax.baja.lonworks.BINetworkVariable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.getSnvtInfo() -->
<method name="getSnvtInfo"  public="true" final="true">
<description>
Access the SnvtInfo for this LocalLonDevice.  Create new instance if needed.
</description>
<return>
<type class="com.tridium.lonworks.local.SnvtInfo"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.doImportXml(javax.baja.lonworks.datatypes.BLocalImportXmlParameter) -->
<method name="doImportXml"  public="true">
<description/>
<parameter name="p">
<type class="javax.baja.lonworks.datatypes.BLocalImportXmlParameter"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.doExtractXif(javax.baja.lonworks.datatypes.BLocalExtractXifParameter) -->
<method name="doExtractXif"  public="true">
<description/>
<parameter name="p">
<type class="javax.baja.lonworks.datatypes.BLocalExtractXifParameter"/>
</parameter>
<return>
<type class="javax.baja.sys.BString"/>
</return>
</method>

<!-- javax.baja.lonworks.BLocalLonDevice.externalConfig -->
<field name="externalConfig"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;externalConfig&lt;/code&gt; property.&#xa; If true the local interface will be managed externally.
</description>
<tag name="@see">#getExternalConfig</tag>
<tag name="@see">#setExternalConfig</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.selfDoc -->
<field name="selfDoc"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;selfDoc&lt;/code&gt; property.&#xa; Self documentation string.
</description>
<tag name="@see">#getSelfDoc</tag>
<tag name="@see">#setSelfDoc</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.servicePin -->
<field name="servicePin"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;servicePin&lt;/code&gt; action.&#xa; Send service pin message from local interface
</description>
<tag name="@see">#servicePin()</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.importXml -->
<field name="importXml"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;importXml&lt;/code&gt; action.&#xa; Import nvis, nvos and ncis from lonXml file.
</description>
<tag name="@see">#importXml(BLocalImportXmlParameter parameter)</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.extractXif -->
<field name="extractXif"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;extractXif&lt;/code&gt; action.&#xa; Create an xif file representation of the local device.
</description>
<tag name="@see">#extractXif(BLocalExtractXifParameter parameter)</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.wink -->
<field name="wink"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;wink&lt;/code&gt; topic.&#xa; Wink command received by station
</description>
<tag name="@see">#fireWink</tag>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.lonworks.BLocalLonDevice.noInfoChange -->
<field name="noInfoChange"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description/>
</field>

</class>
</bajadoc>
