<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.datatypes.BLonRouteTable" name="BLonRouteTable" packageName="com.tridium.lonworks.datatypes" public="true" final="true">
<description>
The BLonRouteTable ??
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">14 Dec 00</tag>
<tag name="@version">$Revision: 14$ $Date: 10/17/00 12:47:14 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- com.tridium.lonworks.datatypes.BLonRouteTable.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.make() -->
<method name="make"  public="true" static="true">
<description>
Create BLonRouteTable.
</description>
<return>
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.make(byte[]) -->
<method name="make"  public="true" static="true">
<description>
Create BLonRouteTable with the specified byte array.
</description>
<parameter name="a">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.getByteArrayCopy() -->
<method name="getByteArrayCopy"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.getSection(int) -->
<method name="getSection"  public="true">
<description/>
<parameter name="sec">
<type class="int"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.getFlag(int) -->
<method name="getFlag"  public="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.invert(int[]) -->
<method name="invert"  public="true">
<description>
Create a routeTable that is the inverse of this routeTable &#xa;  for each inuse subnet in the subnet map. &#xa;  Subnet 0 should never forward.
</description>
<parameter name="subs">
<type class="int" dimension="1"/>
</parameter>
<return>
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Test if the obj is equal in value to this BLonRouteTable.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.sectionsEqual(com.tridium.lonworks.datatypes.BLonRouteTable, int) -->
<method name="sectionsEqual"  public="true">
<description/>
<parameter name="comp">
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</parameter>
<parameter name="sec">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Write the primitive in String format.
</description>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from String format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
<description>
The default float constant is 0.0.
</description>
</field>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.lonworks.datatypes.BLonRouteTable.ROUTE_TABLE_SIZE -->
<field name="ROUTE_TABLE_SIZE"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

</class>
</bajadoc>
