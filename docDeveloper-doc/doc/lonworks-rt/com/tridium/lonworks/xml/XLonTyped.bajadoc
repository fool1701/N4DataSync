<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.xml.XLonTyped" name="XLonTyped" packageName="com.tridium.lonworks.xml" public="true" abstract="true">
<description>
XLonTyped is the superclass for all container classes&#xa; used to represent a lon data type and its component.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">20 July 01</tag>
<tag name="@version">$Revision: 2$ $Date: 8/27/01 10:28:19 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="com.tridium.lonworks.xml.XLonData"/>
</extends>
<!-- com.tridium.lonworks.xml.XLonTyped() -->
<constructor name="XLonTyped" public="true">
<description/>
</constructor>

<!-- com.tridium.lonworks.xml.XLonTyped.addAttribute(java.lang.String, java.lang.Object) -->
<method name="addAttribute"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getElementQualifierVector() -->
<method name="getElementQualifierVector"  public="true" abstract="true">
<description/>
<return>
<parameterizedType class="java.util.Vector">
<args>
<type class="com.tridium.lonworks.xml.XElementQualifier"/>
</args>
</parameterizedType>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.setTypeDef(java.lang.String) -->
<method name="setTypeDef"  public="true">
<description/>
<parameter name="t">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getTypeDef() -->
<method name="getTypeDef"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.setInit(java.lang.String) -->
<method name="setInit"  public="true" abstract="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getInit() -->
<method name="getInit"  public="true" abstract="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.setXTypeDef(com.tridium.lonworks.xml.XTypeDef) -->
<method name="setXTypeDef"  public="true">
<description/>
<parameter name="t">
<type class="com.tridium.lonworks.xml.XTypeDef"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getXTypeDef() -->
<method name="getXTypeDef"  public="true">
<description/>
<return>
<type class="com.tridium.lonworks.xml.XTypeDef"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.toString() -->
<method name="toString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getElementQualifiers(com.tridium.lonworks.xml.XLonInterfaceFile) -->
<method name="getElementQualifiers"  public="true">
<description>
Get array of ElementQualifiers for this data object.
</description>
<parameter name="inFile">
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XElementQualifier" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getUnion() -->
<method name="getUnion"  public="true">
<description/>
<return>
<type class="com.tridium.lonworks.xml.XUnion"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getInitBytes(com.tridium.lonworks.xml.XLonInterfaceFile) -->
<method name="getInitBytes"  public="true">
<description>
This will return a init byte[] or null.  There may be an init array in cp/nci definition&#xa;   or it may be in the CpType definition - cp/nci definitions have precedence.
</description>
<parameter name="inFile">
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.getTypeSpec(com.tridium.lonworks.xml.XLonInterfaceFile) -->
<method name="getTypeSpec"  public="true">
<description>
If there is a typeDef for this XLonTyped object then this returns its TypeClass string&#xa; entry else returns &#x22;&#x22;.
</description>
<parameter name="inFile">
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonTyped.typeDef -->
<field name="typeDef"  public="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.lonworks.xml.XLonTyped.comment -->
<field name="comment"  public="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.lonworks.xml.XLonTyped.init -->
<field name="init"  public="true">
<type class="byte" dimension="1"/>
<description/>
</field>

</class>
</bajadoc>
