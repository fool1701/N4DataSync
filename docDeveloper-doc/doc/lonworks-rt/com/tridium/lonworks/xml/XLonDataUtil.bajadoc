<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.xml.XLonDataUtil" name="XLonDataUtil" packageName="com.tridium.lonworks.xml" public="true">
<description>
This class contains static methods used to manage&#xa; converting between string and numeric data representations.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">25 July 01</tag>
<tag name="@version">$Revision: 2$ $Date: 8/27/01 10:28:13 AM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.lonworks.xml.XLonDataUtil() -->
<constructor name="XLonDataUtil" public="true">
<description/>
</constructor>

<!-- com.tridium.lonworks.xml.XLonDataUtil.snvtTypeToString(int) -->
<method name="snvtTypeToString"  public="true" static="true">
<description>
Get String designation for SNVT type.
</description>
<parameter name="type">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.snvtTypeFromString(java.lang.String) -->
<method name="snvtTypeFromString"  public="true" static="true">
<description>
Get SNVT type from string designation.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.isDiffQualifier(java.lang.String) -->
<method name="isDiffQualifier"  public="true" static="true">
<description>
Check snvt type string for diff qualifier. Form is nnn+diff.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.getSnvtTypeName(int, java.lang.String) -->
<method name="getSnvtTypeName"  public="true" static="true">
<description/>
<parameter name="snvt">
<type class="int"/>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.scptTypeToString(int) -->
<method name="scptTypeToString"  public="true" static="true">
<description>
Get String designation for SCPT type.
</description>
<parameter name="type">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.scptTypeFromString(java.lang.String) -->
<method name="scptTypeFromString"  public="true" static="true">
<description>
Get SCPT type from string designation.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.getScptTypeName(int, java.lang.String) -->
<method name="getScptTypeName"  public="true" static="true">
<description/>
<parameter name="scpt">
<type class="int"/>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.applicationTypeToString(int) -->
<method name="applicationTypeToString"  public="true" static="true">
<description>
Get String designation for applicationType.
</description>
<parameter name="ndx">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.applicationTypeFromString(java.lang.String) -->
<method name="applicationTypeFromString"  public="true" static="true">
<description>
Get applicationType from string designation.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.isHostedApplication(java.lang.String) -->
<method name="isHostedApplication"  public="true" static="true">
<description/>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.serviceTypeToString(int) -->
<method name="serviceTypeToString"  public="true" static="true">
<description>
Get String designation for serviceType.
</description>
<parameter name="ndx">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.serviceTypeFromString(java.lang.String) -->
<method name="serviceTypeFromString"  public="true" static="true">
<description>
Get serviceType from string designation.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.scopeToString(int) -->
<method name="scopeToString"  public="true" static="true">
<description>
Get String designation for scope.
</description>
<parameter name="ndx">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.scopeFromString(java.lang.String) -->
<method name="scopeFromString"  public="true" static="true">
<description>
Get scpe from string designation.
</description>
<parameter name="type">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.flagToString(int) -->
<method name="flagToString"  public="true" static="true">
<description>
Return the string representation of a two-hex digit flag
</description>
<parameter name="flag">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.flagFromString(java.lang.String) -->
<method name="flagFromString"  public="true" static="true">
<description>
Return a two hex-digit flag (in the form of an int) from&#xa; a coded string.
</description>
<parameter name="string">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.isReadOnly(java.lang.String) -->
<method name="isReadOnly"  public="true" static="true">
<description/>
<parameter name="flag">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.getString(java.lang.String[], int, java.lang.String) -->
<method name="getString"  public="true" static="true">
<description/>
<parameter name="a">
<type class="java.lang.String" dimension="1"/>
</parameter>
<parameter name="ndx">
<type class="int"/>
</parameter>
<parameter name="def">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.lonworks.xml.XLonDataUtil.fromString(java.lang.String[], java.lang.String, int) -->
<method name="fromString"  public="true" static="true">
<description/>
<parameter name="a">
<type class="java.lang.String" dimension="1"/>
</parameter>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<parameter name="def">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

</class>
</bajadoc>
