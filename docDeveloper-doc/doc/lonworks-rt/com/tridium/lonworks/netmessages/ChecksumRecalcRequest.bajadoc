<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.ChecksumRecalcRequest" name="ChecksumRecalcRequest" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
The ChecksumRecalcRequest class represents the data &#xa; structure used in Leave Domain Request network management&#xa; messages.  For more information, see the Neuron Chip Data&#xa; Book, section B.1.2.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.LonMessage"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest(int) -->
<constructor name="ChecksumRecalcRequest" public="true">
<parameter name="checksum">
<type class="int"/>
</parameter>
<description>
This constructor is used to create an Leave&#xa;  Domain message to deactivate the use of a &#xa;  domain.
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.getChecksum() -->
<method name="getChecksum"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.setChecksum(int) -->
<method name="setChecksum"  public="true">
<description/>
<parameter name="checksum">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Convert this message to network byte format
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.fromInputStream(javax.baja.lonworks.io.LonInputStream) -->
<method name="fromInputStream"  public="true">
<description/>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.toResponse(javax.baja.lonworks.io.LonInputStream) -->
<method name="toResponse"  public="true">
<description>
This method will take an explicit message check the &#xa;  the message code to determine if it is a valid response.&#xa;  If so then an appropriate response netmessage will be &#xa;  instantiated and return.  If not then and exception will&#xa;  be returned.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.netmessages.ChecksumRecalcRequest.checksum -->
<field name="checksum"  public="true">
<type class="int"/>
<description>
Checksum to recalculate - BOTH_CS_RECALC or CNFG_CS_RECALC
</description>
</field>

</class>
</bajadoc>
