<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.SubnetNoForward" name="SubnetNoForward" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
This class encapsulates an SubnetNoForward message.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.LonMessage"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<!-- com.tridium.lonworks.netmessages.SubnetNoForward() -->
<constructor name="SubnetNoForward" public="true">
<description>
Construct a blank outgoing Subnet No Forward&#xa;  Request message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward(int, int, int) -->
<constructor name="SubnetNoForward" public="true">
<parameter name="domain">
<type class="int"/>
</parameter>
<parameter name="ramOrEeprom">
<type class="int"/>
</parameter>
<parameter name="subnet">
<type class="int"/>
</parameter>
<description>
Construct an outgoing Subnet No Forward Request&#xa; message.
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.getDomain() -->
<method name="getDomain"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.getRamOrEeprom() -->
<method name="getRamOrEeprom"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.getSubnet() -->
<method name="getSubnet"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.setDomain(int) -->
<method name="setDomain"  public="true">
<description/>
<parameter name="domain">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.setRamOrEeprom(int) -->
<method name="setRamOrEeprom"  public="true">
<description/>
<parameter name="ramOrEeprom">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.setSubnet(int) -->
<method name="setSubnet"  public="true">
<description/>
<parameter name="subnet">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Create a LonOutputStream representing this &#xa;  Subnet No Forward Request
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.SubnetNoForward.toResponse(javax.baja.lonworks.io.LonInputStream) -->
<method name="toResponse"  public="true">
<description>
This method will take an explicit message check the &#xa;  the message code to determine if it is a valid response.&#xa;  If so then an appropriate response netmessage will be &#xa;  instantiated and return.  If not then and exception will&#xa;  be returned.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
