<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.QueryNvInfoRequest" name="QueryNvInfoRequest" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
The QueryNvInfoRequest class represents the data &#xa; structure used in Query NvInfo Request Install&#xa; application command.  For more information, see the &#xa; EIA/CEA-709.1 specification A.29.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">20 Oct 02</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="com.tridium.lonworks.netmessages.InstallRequest"/>
</extends>
<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest(int, int) -->
<constructor name="QueryNvInfoRequest" public="true">
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<parameter name="nvInfo">
<type class="int"/>
</parameter>
<description>
Construct a default QueryNvInfoRequest message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.setOffset(int) -->
<method name="setOffset"  public="true">
<description/>
<parameter name="offset">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.setLength(int) -->
<method name="setLength"  public="true">
<description/>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.getOffset() -->
<method name="getOffset"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.getLength() -->
<method name="getLength"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.writeMessageData(javax.baja.lonworks.io.LonOutputStream) -->
<method name="writeMessageData"  protected="true">
<description>
Write this message&#x27;s specific data
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.readMessageData(javax.baja.lonworks.io.LonInputStream) -->
<method name="readMessageData"  public="true">
<description>
Read data for this message.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNvInfoRequest.toSuccessMessage(javax.baja.lonworks.io.LonInputStream) -->
<method name="toSuccessMessage"  public="true">
<description>
Return the appropriate response message for this request.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
