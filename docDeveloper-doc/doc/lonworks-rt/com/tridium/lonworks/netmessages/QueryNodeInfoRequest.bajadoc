<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.QueryNodeInfoRequest" name="QueryNodeInfoRequest" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
The QueryNodeInfoRequest class represents the data &#xa; structure used in Query NodeInfo Request Install&#xa; application command.  For more information, see the &#xa; EIA/CEA-709.1 specification para 13.7.16 &amp; A.29.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">20 Oct 02</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="com.tridium.lonworks.netmessages.InstallRequest"/>
</extends>
<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest() -->
<constructor name="QueryNodeInfoRequest" public="true">
<description>
Construct a default QueryNodeInfoRequest message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest(int, int) -->
<constructor name="QueryNodeInfoRequest" public="true">
<parameter name="offset">
<type class="int"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<description>
Construct a default QueryNodeInfoRequest message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.setOffset(int) -->
<method name="setOffset"  public="true">
<description/>
<parameter name="offset">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.setLength(int) -->
<method name="setLength"  public="true">
<description/>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.getOffset() -->
<method name="getOffset"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.getLength() -->
<method name="getLength"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.writeMessageData(javax.baja.lonworks.io.LonOutputStream) -->
<method name="writeMessageData"  protected="true">
<description>
Write this message&#x27;s specific data to output stream.
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.readMessageData(javax.baja.lonworks.io.LonInputStream) -->
<method name="readMessageData"  public="true">
<description>
Read data for this message from input stream.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoRequest.toSuccessMessage(javax.baja.lonworks.io.LonInputStream) -->
<method name="toSuccessMessage"  public="true">
<description>
Return the appropriate response message for this request.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
