<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.UpdateNvConfigRequest" name="UpdateNvConfigRequest" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
This class encapsulates a UpdateNvConfigRequest message.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.LonMessage"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest() -->
<constructor name="UpdateNvConfigRequest" public="true">
<description>
Construct a blank outgoing Update Nv Config&#xa;  Request message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest(int, javax.baja.lonworks.datatypes.BNvConfigData) -->
<constructor name="UpdateNvConfigRequest" public="true">
<parameter name="nvIndex">
<type class="int"/>
<description>
network variable index
</description>
</parameter>
<parameter name="configData">
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
</parameter>
<description>
Construct an outgoing Update Nv Config Request&#xa;  message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.getNvIndex() -->
<method name="getNvIndex"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.setNvIndex(int) -->
<method name="setNvIndex"  public="true">
<description/>
<parameter name="nvIndex">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.getConfigData() -->
<method name="getConfigData"  public="true">
<description/>
<return>
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.setConfigData(javax.baja.lonworks.datatypes.BNvConfigData) -->
<method name="setConfigData"  public="true">
<description/>
<parameter name="configData">
<type class="javax.baja.lonworks.datatypes.BNvConfigData"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.getPrimary() -->
<method name="getPrimary"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Create a LonOutputStream representing this &#xa;  Update Nv Config Request
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.fromInputStream(javax.baja.lonworks.io.LonInputStream) -->
<method name="fromInputStream"  public="true">
<description>
Extract the Update Nv Config Request data from &#xa;  the LonInputStream
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.netmessages.UpdateNvConfigRequest.toResponse(javax.baja.lonworks.io.LonInputStream) -->
<method name="toResponse"  public="true">
<description>
This method will take an explicit message check the &#xa;  the message code to determine if it is a valid response.&#xa;  If so then an appropriate response netmessage will be &#xa;  instantiated and return.  If not an exception will&#xa;  be returned.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
