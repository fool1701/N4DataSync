<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.QueryNodeInfoResponse" name="QueryNodeInfoResponse" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
The QueryNodeInfoResponse class represents the data &#xa; structure used in responses to the Query NodeInfo &#xa; Request Install application command.  For more information, &#xa; see the EIA/CEA-709.1 specification A.29.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">20 Oct 02</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.lonworks.LonMessage"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<!-- com.tridium.lonworks.netmessages.QueryNodeInfoResponse(javax.baja.lonworks.io.LonInputStream) -->
<constructor name="QueryNodeInfoResponse" public="true">
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
<description>
Construct an incoming QueryNodeInfoResponse message.&#xa;  Note that this constructor ignores the code &#xa;  byte as it is assumed that it has already &#xa;  been decoded to get this far.
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoResponse.getData() -->
<method name="getData"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoResponse.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Write this message in network byte format to the &#xa;  out stream.  public void toOutputStream(LonOutputStream out)
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.QueryNodeInfoResponse.fromInputStream(javax.baja.lonworks.io.LonInputStream) -->
<method name="fromInputStream"  public="true">
<description>
Read data for this message.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
