<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.ReadMemResponse" name="ReadMemResponse" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
The ReadMemResponse class represents the data &#xa; structure used in the Read Memory Response network &#xa; management message.  For more information, see the Neuron&#xa; Chip Data Book, section B.1.4
</description>
<extends>
<type class="javax.baja.lonworks.LonMessage"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<!-- com.tridium.lonworks.netmessages.ReadMemResponse(javax.baja.lonworks.io.LonInputStream) -->
<constructor name="ReadMemResponse" public="true">
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
<description/>
</constructor>

<!-- com.tridium.lonworks.netmessages.ReadMemResponse.getData() -->
<method name="getData"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.lonworks.netmessages.ReadMemResponse.setData(byte[]) -->
<method name="setData"  public="true">
<description/>
<parameter name="data">
<type class="byte" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.netmessages.ReadMemResponse.toOutputStream(javax.baja.lonworks.io.LonOutputStream) -->
<method name="toOutputStream"  public="true">
<description>
Create a LonOutputStream representing this &#xa;  Read Memory Response
</description>
<parameter name="out">
<type class="javax.baja.lonworks.io.LonOutputStream"/>
<description>
data stream of message
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
