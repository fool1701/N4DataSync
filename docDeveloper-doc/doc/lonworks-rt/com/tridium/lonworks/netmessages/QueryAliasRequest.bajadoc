<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.netmessages.QueryAliasRequest" name="QueryAliasRequest" packageName="com.tridium.lonworks.netmessages" public="true">
<description>
This class encapsulates a QueryAliasRequest message.&#xa;&#xa;  The queryNvConfig messages is used to access the alias table.&#xa;  The index is the aliasTable index + the highest nvIndex.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision$ $Date$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="com.tridium.lonworks.netmessages.QueryNvConfigRequest"/>
</extends>
<!-- com.tridium.lonworks.netmessages.QueryAliasRequest(int) -->
<constructor name="QueryAliasRequest" public="true">
<parameter name="nvIndex">
<type class="int"/>
<description>
network variable index
</description>
</parameter>
<description>
Construct an outgoing Query Nv Config Request&#xa;  message
</description>
</constructor>

<!-- com.tridium.lonworks.netmessages.QueryAliasRequest.toResponse(javax.baja.lonworks.io.LonInputStream) -->
<method name="toResponse"  public="true">
<description>
This method will take an explicit message check the &#xa;  the message code to determine if it is a valid response.&#xa;  If so then an appropriate response netmessage will be &#xa;  instantiated and return.  If not then and exception will&#xa;  be returned.&#xa;&#xa;  The QueryAliasResponse is a variation of the QueryNVResponse.
</description>
<parameter name="in">
<type class="javax.baja.lonworks.io.LonInputStream"/>
</parameter>
<return>
<type class="javax.baja.lonworks.LonMessage"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
