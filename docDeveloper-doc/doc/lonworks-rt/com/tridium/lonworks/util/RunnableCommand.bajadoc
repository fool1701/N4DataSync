<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.util.RunnableCommand" name="RunnableCommand" packageName="com.tridium.lonworks.util" public="true">
<description>
RunnableCommand is a utility class to facilitate the use &#xa; of anonymous classes for placing requests on the async or&#xa; asyncEvent threads.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">28 Jan 04</tag>
<tag name="@version">$Revision: 1$ $Date: 1/30/2004 1:08:07 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="java.lang.Runnable"/>
</implements>
<!-- com.tridium.lonworks.util.RunnableCommand(java.lang.Object) -->
<constructor name="RunnableCommand" public="true">
<parameter name="arg1">
<type class="java.lang.Object"/>
</parameter>
<description>
Create RunnableCommand with one arguments
</description>
</constructor>

<!-- com.tridium.lonworks.util.RunnableCommand(java.lang.Object, java.lang.Object) -->
<constructor name="RunnableCommand" public="true">
<parameter name="arg1">
<type class="java.lang.Object"/>
</parameter>
<parameter name="arg2">
<type class="java.lang.Object"/>
</parameter>
<description>
Create RunnableCommand with two arguments
</description>
</constructor>

<!-- com.tridium.lonworks.util.RunnableCommand.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Check if both args are equal using their equals() method.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.util.RunnableCommand.hashCode() -->
<method name="hashCode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.util.RunnableCommand.run() -->
<method name="run"  public="true">
<description>
Subclasses must override run() method.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.util.RunnableCommand.arg1 -->
<field name="arg1"  public="true">
<type class="java.lang.Object"/>
<description/>
</field>

<!-- com.tridium.lonworks.util.RunnableCommand.arg2 -->
<field name="arg2"  public="true">
<type class="java.lang.Object"/>
<description/>
</field>

</class>
</bajadoc>
