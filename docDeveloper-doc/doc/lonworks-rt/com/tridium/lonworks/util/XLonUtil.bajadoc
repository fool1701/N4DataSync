<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.util.XLonUtil" name="XLonUtil" packageName="com.tridium.lonworks.util" public="true">
<description>
This class contains static methods used to access various&#xa;  file types and convert them to XLon objects.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">6 August 01</tag>
<tag name="@version">$Revision: 1$ $Date: 8/9/01 2:22:44 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.lonworks.util.XLonUtil() -->
<constructor name="XLonUtil" public="true">
<description/>
</constructor>

<!-- com.tridium.lonworks.util.XLonUtil.xifToXDevice(javax.baja.file.BIFile) -->
<method name="xifToXDevice"  public="true" static="true">
<description>
Convience for &lt;code&gt;XifToXDevice.convert(file, null)&lt;/code&gt;.
</description>
<parameter name="file">
<type class="javax.baja.file.BIFile"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonDevice"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.XLonUtil.xifToXDevice(java.lang.String, com.tridium.lonworks.resource.CrossReference) -->
<method name="xifToXDevice"  public="true" static="true">
<description>
Parse the named xif file to a XLonDevice. Use the specified cross reference to &#xa; resolve dataTypes.
</description>
<parameter name="fileName">
<type class="java.lang.String"/>
</parameter>
<parameter name="cr">
<type class="com.tridium.lonworks.resource.CrossReference"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonDevice"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.XLonUtil.resourceToXLonFile(com.tridium.lonworks.resource.ResourceFile, com.tridium.lonworks.resource.CrossReference, java.io.PrintStream) -->
<method name="resourceToXLonFile"  public="true" static="true">
<description>
Parse the specifed ResourceFile object to XLonInterfaceFile.
</description>
<parameter name="rf">
<type class="com.tridium.lonworks.resource.ResourceFile"/>
</parameter>
<parameter name="cr">
<type class="com.tridium.lonworks.resource.CrossReference"/>
</parameter>
<parameter name="out">
<type class="java.io.PrintStream"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.XLonUtil.resourceToXLonFile(java.lang.String, com.tridium.lonworks.resource.CrossReference) -->
<method name="resourceToXLonFile"  public="true" static="true">
<description>
Convience for &lt;code&gt;resourceToXLonFile(fileName, cr, System.out)&lt;/code&gt;
</description>
<parameter name="fileName">
<type class="java.lang.String"/>
</parameter>
<parameter name="cr">
<type class="com.tridium.lonworks.resource.CrossReference"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.XLonUtil.deviceToXLonFile(javax.baja.lonworks.BLonDevice) -->
<method name="deviceToXLonFile"  public="true" static="true">
<description>
Convience for &lt;code&gt;deviceToXLonFile(dev, dev.getDisplayName(null))&lt;/code&gt;
</description>
<parameter name="dev">
<type class="javax.baja.lonworks.BLonDevice"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.XLonUtil.deviceToXLonFile(javax.baja.lonworks.BLonDevice, java.lang.String) -->
<method name="deviceToXLonFile"  public="true" static="true">
<description>
Create a XLonInterfaceFile from the specified BLonDevice. Use name
</description>
<parameter name="dev">
<type class="javax.baja.lonworks.BLonDevice"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridium.lonworks.xml.XLonInterfaceFile"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
