<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.util.ByteArrayTokenizer" name="ByteArrayTokenizer" packageName="com.tridium.lonworks.util" public="true">
<description>
This ByteArrayTokenizer allows a byte array to be broken down&#xa;  into tokens and accessed similar to StringTokenizer.&#xa; &lt;p&gt;
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">20 May 02</tag>
<tag name="@version">$Revision: 3$ $Date: 10/18/01 2:56:45 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.lonworks.util.ByteArrayTokenizer(byte[], byte) -->
<constructor name="ByteArrayTokenizer" public="true">
<parameter name="data">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="token">
<type class="byte"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.lonworks.util.ByteArrayTokenizer(byte[], char) -->
<constructor name="ByteArrayTokenizer" public="true">
<parameter name="data">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="token">
<type class="char"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.lonworks.util.ByteArrayTokenizer.countTokens() -->
<method name="countTokens"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.lonworks.util.ByteArrayTokenizer.hasMoreTokens() -->
<method name="hasMoreTokens"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.lonworks.util.ByteArrayTokenizer.nextToken() -->
<method name="nextToken"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

</class>
</bajadoc>
