<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="lonworks" runtimeProfile="rt" qualifiedName="com.tridium.lonworks.util.RouterUtil" name="RouterUtil" packageName="com.tridium.lonworks.util" public="true">
<description>
RouterUtil contains a number of utilities used when &#xa;  managing a lonworks network.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">16 Oct 01</tag>
<tag name="@version">$Revision: 14$ $Date: 10/18/01 2:56:41 PM$</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="com.tridium.lonworks.netmessages.NetMessages"/>
</implements>
<implements>
<type class="com.tridium.lonworks.netmgmt.NetMgmtConst"/>
</implements>
<!-- com.tridium.lonworks.util.RouterUtil() -->
<constructor name="RouterUtil" public="true">
<description/>
</constructor>

<!-- com.tridium.lonworks.util.RouterUtil.setTemporaryBridge(javax.baja.lonworks.BLonNetwork) -->
<method name="setTemporaryBridge"  public="true" static="true">
<description>
Set all routers to temporaryBridge mode. Leave database in &#xa; current state so routers can be return to correct mode by&#xa; clearTemporaryBridge
</description>
<parameter name="lon">
<type class="javax.baja.lonworks.BLonNetwork"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.clearTemporaryBridge(javax.baja.lonworks.BLonNetwork) -->
<method name="clearTemporaryBridge"  public="true" static="true">
<description>
Set all routers to current mode per database.  This &#xa; will return routers to their configured mode after a &#xa; call to setTemporaryBridge().
</description>
<parameter name="lon">
<type class="javax.baja.lonworks.BLonNetwork"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.setRouterType(com.tridium.lonworks.BLonRouter, com.tridium.lonworks.enums.BLonRouterType) -->
<method name="setRouterType"  public="true" static="true">
<description>
Change the rtr type to the specified type
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="type">
<type class="com.tridium.lonworks.enums.BLonRouterType"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.setRouterType(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, com.tridium.lonworks.enums.BLonRouterType, boolean, boolean) -->
<method name="setRouterType"  public="true" static="true">
<description/>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="type">
<type class="com.tridium.lonworks.enums.BLonRouterType"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.setRouterMode(com.tridium.lonworks.BLonRouter, com.tridium.lonworks.enums.BLonRouterMode) -->
<method name="setRouterMode"  public="true" static="true">
<description>
Change the rtr mode to the specified mode&#xa; NOTE: set rtr mode affects both sides of rtr
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="mode">
<type class="com.tridium.lonworks.enums.BLonRouterMode"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.setRouterMode(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, com.tridium.lonworks.enums.BLonRouterMode, boolean) -->
<method name="setRouterMode"  public="true" static="true">
<description/>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="mode">
<type class="com.tridium.lonworks.enums.BLonRouterMode"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.getRouterType(com.tridium.lonworks.BLonRouter, boolean) -->
<method name="getRouterType"  public="true" static="true">
<description>
Get the type of the specified rtr
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridium.lonworks.enums.BLonRouterType"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.getRouterMode(com.tridium.lonworks.BLonRouter, boolean) -->
<method name="getRouterMode"  public="true" static="true">
<description>
Get the mode of the specified rtr
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridium.lonworks.enums.BLonRouterMode"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.uploadTypeAndMode(com.tridium.lonworks.BLonRouter) -->
<method name="uploadTypeAndMode"  public="true" static="true">
<description>
Get the status and update the type and mode on the specified rtr
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.getRouterStatus(com.tridium.lonworks.BLonRouter, boolean) -->
<method name="getRouterStatus"  public="true" static="true">
<description>
Get the status of the specified rtr
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridium.lonworks.netmessages.RouterStatusResponse"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.getRouterStatus(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, boolean, boolean) -->
<method name="getRouterStatus"  public="true" static="true">
<description/>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="com.tridium.lonworks.netmessages.RouterStatusResponse"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.uploadRouterTables(com.tridium.lonworks.BLonRouter) -->
<method name="uploadRouterTables"  public="true" static="true">
<description>
Get the current rtr tables and store in database.
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.getRouterTable(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, int, int, int, boolean, boolean) -->
<method name="getRouterTable"  public="true" static="true">
<description>
Get the specified rtr table.
</description>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="domainIndex">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="ramOrEeprom">
<type class="int"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="byte" dimension="1"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.downloadRouterTables(com.tridium.lonworks.BLonRouter) -->
<method name="downloadRouterTables"  public="true" static="true">
<description>
Write the current database rtr tables to the rtr.
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.downloadTable(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, int, int, boolean, boolean, com.tridium.lonworks.datatypes.BLonRouteTable) -->
<method name="downloadTable"  public="true" static="true">
<description>
Write the specified database rtr table.
</description>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="domainIndex">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<parameter name="tab">
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.updateTable(com.tridium.lonworks.BLonRouter, int, boolean, com.tridium.lonworks.datatypes.BLonRouteTable, com.tridium.lonworks.datatypes.BLonRouteTable) -->
<method name="updateTable"  public="true" static="true">
<description>
Update the specified rtr table from origTab to newTab.
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<parameter name="newTab">
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</parameter>
<parameter name="origTab">
<type class="com.tridium.lonworks.datatypes.BLonRouteTable"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.clearRouterTables(com.tridium.lonworks.BLonRouter) -->
<method name="clearRouterTables"  public="true" static="true">
<description>
Clear router tables in db and device.
</description>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.clearTable(javax.baja.lonworks.LonComm, javax.baja.lonworks.datatypes.LonAddress, int, int, boolean, boolean) -->
<method name="clearTable"  public="true" static="true">
<description>
Write the specified database rtr table.
</description>
<parameter name="lonComm">
<type class="javax.baja.lonworks.LonComm"/>
</parameter>
<parameter name="destAddr">
<type class="javax.baja.lonworks.datatypes.LonAddress"/>
</parameter>
<parameter name="domainIndex">
<type class="int"/>
</parameter>
<parameter name="groupOrSubnet">
<type class="int"/>
</parameter>
<parameter name="auth">
<type class="boolean"/>
</parameter>
<parameter name="farSide">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

<!-- com.tridium.lonworks.util.RouterUtil.updateDomainTable(com.tridium.lonworks.netmgmt.BLonNetmgmt, com.tridium.lonworks.BLonRouter) -->
<method name="updateDomainTable"  public="true" static="true">
<description/>
<parameter name="nm">
<type class="com.tridium.lonworks.netmgmt.BLonNetmgmt"/>
</parameter>
<parameter name="rtr">
<type class="com.tridium.lonworks.BLonRouter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.lonworks.LonException"/>
</throws>
</method>

</class>
</bajadoc>
