<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="wb" qualifiedName="com.tridium.ndriver.ui.device.BNDeviceMgrAgent" name="BNDeviceMgrAgent" packageName="com.tridium.ndriver.ui.device" public="true" abstract="true">
<description>
The developer may extend this class and declare their type as an agent on&#xa; their network. This will add a button, menu item, and/or toolbar item to the&#xa; corresponding device manager.&#xa; &lt;p&gt;&#xa; When the ui item is clicked, the doInvoke method on an instance of this class&#xa; will be called on the client-side.
</description>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="com.tridium.ndriver.ui.device.BINDeviceMgrAgent"/>
</implements>
<!-- com.tridium.ndriver.ui.device.BNDeviceMgrAgent() -->
<constructor name="BNDeviceMgrAgent" public="true">
<description/>
</constructor>

<!-- com.tridium.ndriver.ui.device.BNDeviceMgrAgent.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ndriver.ui.device.BNDeviceMgrAgent.getFlags() -->
<method name="getFlags"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
By default, the getFlags method returns MgrController.BARS to make this&#xa; BNDeviceMgrAgent appear in the menu bar, toolbar, and button panel (action&#xa; bar) of the point manager or device manager.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.ndriver.ui.device.BNDeviceMgrAgent.update(com.tridium.ndriver.ui.device.BNDeviceManager, com.tridium.ndriver.ui.NMgrControllerUtil.NDeviceMgrAgentCommand) -->
<method name="update"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
The developer should review the given BNDeviceManager and consider updating&#xa; (eg. enable/disable) the given agentCommand and/or any other commands on&#xa; the manager&#x27;s controller. The method is called anytime there is a change of&#xa; state on the device manager (eg. discovery list selection change, database&#xa; list selection change, database component event, learn mode changed, etc.)&#xa; &lt;p&gt;&#xa; For example (to enable the agent&#x27;s UI widget(s) if one database item is&#xa; selected): agentCommand.setEnabled(deviceManager.getController().getSelectedRows().length&#xa; == 1);&#xa; &lt;p&gt;&#xa; For example (to enable the agent&#x27;s UI widget(s) if one or more database&#xa; items are selected): agentCommand.setEnabled(deviceManager.getController().getSelectedRows().length&#xa; &gt; 0);&#xa; &lt;p&gt;&#xa; For example (to enable the agent&#x27;s UI widget(s) if zero database items are&#xa; selected): agentCommand.setEnabled(deviceManager.getController().getSelectedRows().length&#xa; == 0);
</description>
<parameter name="deviceManager">
<type class="com.tridium.ndriver.ui.device.BNDeviceManager"/>
<description>
instance of BNDeviceManager to update
</description>
</parameter>
<parameter name="agentCommand">
<type class="com.tridium.ndriver.ui.NMgrControllerUtil$NDeviceMgrAgentCommand"/>
<description>
this is a special instance of IMgrCommand. It is a&#xa;                      reference to the corresponding GUI command (button,&#xa;                      menu item, and/or toolbar button) on the device&#xa;                      manager.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.ui.device.BNDeviceMgrAgent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
