<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.discover.BINDiscoveryLeaf" name="BINDiscoveryLeaf" packageName="com.tridium.ndriver.discover" public="true" interface="true" abstract="true" category="interface">
<description>
Discovery leaves appear in the auto manager discovery panes. Leaves are not&#xa; expandable in the discovery list.
</description>
<tag name="@author">lperkins (Original ddf code)</tag>
<tag name="@author">Robert Adams (rework for ndriver)</tag>
<tag name="@creation">25 Jan 2012</tag>
<implements>
<type class="com.tridium.ndriver.discover.BINDiscoveryObject"/>
</implements>
<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.getDiscoveryName() -->
<method name="getDiscoveryName"  public="true" abstract="true">
<description>
Specify a default name to use when a discovered object is added to the&#xa; Niagara database.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.getValidDatabaseTypes() -->
<method name="getValidDatabaseTypes"  public="true" abstract="true">
<description>
Specify TypeInfo for types which may be used to create new Niagara database&#xa; items for the discovered object.&#xa; &lt;p&gt;&#xa; The type at index 0 should be the preferred type.
</description>
<return>
<type class="javax.baja.registry.TypeInfo" dimension="1"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.getParent() -->
<method name="getParent"  public="true" abstract="true">
<description>
This method is inherited from BComplex,
</description>
<return>
<type class="javax.baja.sys.BComplex"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.getPropertiesArray() -->
<method name="getPropertiesArray"  public="true" abstract="true">
<description>
This method is inherited from BComplex,
</description>
<return>
<type class="javax.baja.sys.Property" dimension="1"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.get(javax.baja.sys.Property) -->
<method name="get"  public="true" abstract="true">
<description>
This method is inherited from BComplex,
</description>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.updateTarget(javax.baja.sys.BComponent) -->
<method name="updateTarget"  public="true" abstract="true">
<description>
Update the specified target component from BINDiscoveryLeaf values. This is&#xa; used when creating BComponents from a discovery leaf to add to the&#xa; database.
</description>
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.isExisting(javax.baja.sys.BComponent) -->
<method name="isExisting"  public="true" abstract="true">
<description>
Check if the specified component is a representation of this discovery&#xa; leaf.  If unsure return false.&lt;p&gt; This callback is used for MgrLearn&#xa; isExisting().
</description>
<parameter name="component">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.defaultTargetUpdate(javax.baja.sys.BComponent) -->
<method name="defaultTargetUpdate"  public="true" abstract="true">
<description>
Do updates to specified target from default discovery leaf&#x27;s values. Used&#xa; for framework supported updates.
</description>
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryLeaf.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
