<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.discover.BINDiscoveryGroup" name="BINDiscoveryGroup" packageName="com.tridium.ndriver.discover" public="true" interface="true" abstract="true" category="interface">
<description>
Discovery groups appear in the discovery list of the auto managers. Unlike a&#xa; DiscoveryLeaf a DiscoveryGroup is expandable and can contain other discovery&#xa; groups or DiscoveryLeaves underneath them.&#xa; &lt;p&gt;&#xa; The containment is done by adding children to the discovery group component.
</description>
<tag name="@author">lperkins (Original ddf code)</tag>
<tag name="@author">Robert Adams (rework for ndriver)</tag>
<tag name="@creation">25 Jan 2012</tag>
<implements>
<type class="com.tridium.ndriver.discover.BINDiscoveryObject"/>
</implements>
<!-- com.tridium.ndriver.discover.BINDiscoveryGroup.&lt;T&gt;getChildren(java.lang.Class&lt;T&gt;) -->
<method name="getChildren"  public="true" abstract="true">
<typeParameters>
<typeVariable class="T">
</typeVariable>
</typeParameters>
<description>
Extending from BComponent gives this to you for free.
</description>
<parameter name="cls">
<parameterizedType class="java.lang.Class">
<args>
<typeVariable class="T"/>
</args>
</parameterizedType>
</parameter>
<return>
<type class="java.lang.T" dimension="1"/>
</return>
</method>

<!-- com.tridium.ndriver.discover.BINDiscoveryGroup.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
