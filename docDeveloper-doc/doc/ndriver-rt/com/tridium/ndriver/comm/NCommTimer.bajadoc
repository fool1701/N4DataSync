<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.comm.NCommTimer" name="NCommTimer" packageName="com.tridium.ndriver.comm" public="true">
<description>
This class will handle transactions for communication stacks.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">22 Oct 2011</tag>
<tag name="@since">Niagara 3.7</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- com.tridium.ndriver.comm.NCommTimer(int, int, java.lang.String) -->
<constructor name="NCommTimer" public="true">
<parameter name="maxOutstandingTransactions">
<type class="int"/>
</parameter>
<parameter name="maxTransactionWait">
<type class="int"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ndriver.comm.NCommTimer.start() -->
<method name="start"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.NCommTimer.stop() -->
<method name="stop"  public="true" synchronized="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.NCommTimer.getTransaction(com.tridium.ndriver.comm.NMessage) -->
<method name="getTransaction"  public="true">
<description>
Get a reference to a Transaction object and lock its usage until&#xa; freeTransaction is called.&#xa; &lt;p&gt;&#xa; If no free Transaction object is available, then this method will cause the&#xa; calling thread to loop until one becomes available or transaction wait&#xa; period passes in which case an Exception will be generated
</description>
<parameter name="msg">
<type class="com.tridium.ndriver.comm.NMessage"/>
</parameter>
<return>
<type class="com.tridium.ndriver.comm.NCommTimer$Transaction"/>
<description>
first available Transaction
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.NCommTimer.freeTransaction(com.tridium.ndriver.comm.NCommTimer.Transaction) -->
<method name="freeTransaction"  public="true">
<description>
Free a Transaction object for another thread to use.
</description>
<parameter name="transaction">
<type class="com.tridium.ndriver.comm.NCommTimer$Transaction"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.NCommTimer.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<description/>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
