<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.comm.http.NHttpMessage" name="NHttpMessage" packageName="com.tridium.ndriver.comm.http" public="true">
<description>
NHttpMessage provides an NMessage for http comm stack.
</description>
<tag name="@author">Robert A Adams</tag>
<tag name="@creation">Nov 1, 2011</tag>
<extends>
<type class="com.tridium.ndriver.comm.NMessage"/>
</extends>
<!-- com.tridium.ndriver.comm.http.NHttpMessage(com.tridium.ndriver.datatypes.BIpAddress) -->
<constructor name="NHttpMessage" public="true">
<parameter name="address">
<type class="com.tridium.ndriver.datatypes.BIpAddress"/>
<description/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.addHeader(java.lang.String, java.lang.String) -->
<method name="addHeader"  public="true">
<description>
Add the following named header.  If a header already exist with this name&#xa; replace with new value value.
</description>
<parameter name="name">
<type class="java.lang.String"/>
<description>
the name of the header to add
</description>
</parameter>
<parameter name="value">
<type class="java.lang.String"/>
<description>
the value of the header to add
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.addHeader(java.lang.String, java.lang.String, boolean) -->
<method name="addHeader"  public="true">
<description>
Add the following named header.  If a header already exist with this name&#xa; replace with new value value.
</description>
<tag name="@since">Niagara 4.11</tag>
<parameter name="name">
<type class="java.lang.String"/>
<description>
the name of the header to add
</description>
</parameter>
<parameter name="value">
<type class="java.lang.String"/>
<description>
the value of the header to add
</description>
</parameter>
<parameter name="replace">
<type class="boolean"/>
<description>
if true, replace any existing headers with the name,&#xa;                otherwise add to the existing headers
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.getHeaderMap() -->
<method name="getHeaderMap"  public="true">
<description>
Return a map of header names to List of header values. Keys are&#xa; case-insensitive.
</description>
<tag name="@since">Niagara 4.11</tag>
<return>
<parameterizedType class="java.util.Map">
<args>
<type class="java.lang.String"/>
<parameterizedType class="java.util.List">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
</args>
</parameterizedType>
<description>
header map
</description>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.getHeaders() -->
<method name="getHeaders"  public="true">
<description>
Return an array of NVPairs of header values. This array will only contain&#xa; one header value for each name. If there are multiple headers with the same&#xa; name, only the last header added for that name will be present in the&#xa; array. Use &lt;code&gt;<see ref="com.tridium.ndriver.comm.http.NHttpMessage#getHeaderMap()">#getHeaderMap()</see>&lt;/code&gt;getHeaderMap() to get multiple headers&#xa; with the same name.
</description>
<return>
<type class="com.tridium.ndriver.comm.http.NHttpMessage$NVPair" dimension="1"/>
<description>
array of NVPairs of header values.
</description>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.getValues(java.lang.String) -->
<method name="getValues"  public="true">
<description>
Get a list of all header values with the specified name, case insensitive,&#xa; or null if no headers with the specified name are present.
</description>
<tag name="@since">Niagara 4.11</tag>
<parameter name="name">
<type class="java.lang.String"/>
<description>
the name to get header values for, case insensitive
</description>
</parameter>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
<description>
list of header values, or null
</description>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.getValue(java.lang.String) -->
<method name="getValue"  public="true">
<description>
Return the value of the header with the specified name, or null if header&#xa; is not present. If there are multiple headers with the specified name, the&#xa; last header added will be returned. Use &lt;code&gt;<see ref="com.tridium.ndriver.comm.http.NHttpMessage#getValues(java.lang.String)">#getValues(String)</see>&lt;/code&gt;getValues()&#xa; to get multiple headers with the same name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
<description>
the header name
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
the value of the header, or null
</description>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.getData() -->
<method name="getData"  public="true">
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.NHttpMessage.toTraceString() -->
<method name="toTraceString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

</class>
</bajadoc>
