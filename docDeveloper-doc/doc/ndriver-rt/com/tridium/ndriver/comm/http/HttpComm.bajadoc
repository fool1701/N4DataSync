<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.comm.http.HttpComm" name="HttpComm" packageName="com.tridium.ndriver.comm.http" public="true">
<description>
HttpComm provides comm access to specified devices using the http protocol.
</description>
<tag name="@author">Robert A Adams</tag>
<tag name="@creation">Nov 14, 2011</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="com.tridium.ndriver.comm.IComm"/>
</implements>
<!-- com.tridium.ndriver.comm.http.HttpComm(com.tridium.ndriver.datatypes.BHttpCommConfig, com.tridium.ndriver.comm.ICommListener) -->
<constructor name="HttpComm" public="true">
<parameter name="comCfg">
<type class="com.tridium.ndriver.datatypes.BHttpCommConfig"/>
</parameter>
<parameter name="defaultListener">
<type class="com.tridium.ndriver.comm.ICommListener"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ndriver.comm.http.HttpComm.start() -->
<method name="start"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called from BCommConfig when network is started.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.stop() -->
<method name="stop"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called from BCommConfig when network is stopped.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.verifySettings(com.tridium.ndriver.datatypes.BCommConfig) -->
<method name="verifySettings"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called from BCommConfig when a property changes.
</description>
<parameter name="comCfg">
<type class="com.tridium.ndriver.datatypes.BCommConfig"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.setDefaultListener(com.tridium.ndriver.comm.ICommListener) -->
<method name="setDefaultListener"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Set the default listener.
</description>
<parameter name="listener">
<type class="com.tridium.ndriver.comm.ICommListener"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.sendRequest(com.tridium.ndriver.comm.http.NHttpRequest) -->
<method name="sendRequest"  public="true">
<description>
Send and http request and blocks until response received.
</description>
<parameter name="msg">
<type class="com.tridium.ndriver.comm.http.NHttpRequest"/>
</parameter>
<return>
<type class="com.tridium.ndriver.comm.http.NHttpResponse"/>
<description>
NHttpResponse
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.openStream(com.tridium.ndriver.comm.http.NHttpRequest) -->
<method name="openStream"  public="true">
<description>
Send an http request that will open a stream connection. Blocks until&#xa; stream opened. Applications which receive NHttpStream object should call&#xa; close() when finished accessing stream.
</description>
<parameter name="msg">
<type class="com.tridium.ndriver.comm.http.NHttpRequest"/>
</parameter>
<return>
<type class="com.tridium.ndriver.comm.http.NHttpStream"/>
<description>
an NHttpStream which allows access to the connections input and&#xa; output streams.
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Provide some spy debug
</description>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.resetStats() -->
<method name="resetStats"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called when user invokes resetStats action on commConfig object.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.http.HttpComm.log() -->
<method name="log"  public="true" final="true">
<description/>
<return>
<type class="java.util.logging.Logger"/>
</return>
</method>

</class>
</bajadoc>
