<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.comm.DebugStream" name="DebugStream" packageName="com.tridium.ndriver.comm" public="true">
<description>
DebugStream is a wrapper class for inputStream to allow debug trace of input&#xa; bytes. This is a utility class for linkLayer implementations.
</description>
<tag name="@author">Robert A Adams</tag>
<tag name="@creation">Mar 14, 2011</tag>
<extends>
<type class="java.io.InputStream"/>
</extends>
<!-- com.tridium.ndriver.comm.DebugStream(int) -->
<constructor name="DebugStream" public="true">
<parameter name="maxLen">
<type class="int"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ndriver.comm.DebugStream.read() -->
<method name="read"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="int"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- com.tridium.ndriver.comm.DebugStream.reset(java.io.InputStream) -->
<method name="reset"  public="true">
<description/>
<parameter name="in">
<type class="java.io.InputStream"/>
</parameter>
<return>
<type class="java.io.InputStream"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.DebugStream.hasDebug() -->
<method name="hasDebug"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ndriver.comm.DebugStream.debugString() -->
<method name="debugString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

</class>
</bajadoc>
