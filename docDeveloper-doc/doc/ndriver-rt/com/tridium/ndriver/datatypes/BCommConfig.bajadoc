<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.datatypes.BCommConfig" name="BCommConfig" packageName="com.tridium.ndriver.datatypes" public="true">
<description>
BCommConfig is the base class for configuration classes of specific comm&#xa; stack implementations.
</description>
<tag name="@author">Robert A Adams</tag>
<tag name="@creation">Oct 25, 2011</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<property name="faultCause" flags="trd">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message why the network is in fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</property>

<property name="statisticsReset" flags="hrt">
<type class="com.tridium.ndriver.datatypes.BSpyReset"/>
<description>
Slot for the &lt;code&gt;statisticsReset&lt;/code&gt; property.&#xa; Viewing this property in spy page resets comm statistics
</description>
<tag name="@see">#getStatisticsReset</tag>
<tag name="@see">#setStatisticsReset</tag>
</property>

<!-- com.tridium.ndriver.datatypes.BCommConfig() -->
<constructor name="BCommConfig" public="true">
<description>
Empty constructor.
</description>
</constructor>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getFaultCause() -->
<method name="getFaultCause"  public="true">
<description>
Get the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message why the network is in fault.
</description>
<tag name="@see">#faultCause</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.setFaultCause(java.lang.String) -->
<method name="setFaultCause"  public="true">
<description>
Set the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message why the network is in fault.
</description>
<tag name="@see">#faultCause</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getStatisticsReset() -->
<method name="getStatisticsReset"  public="true">
<description>
Get the &lt;code&gt;statisticsReset&lt;/code&gt; property.&#xa; Viewing this property in spy page resets comm statistics
</description>
<tag name="@see">#statisticsReset</tag>
<return>
<type class="com.tridium.ndriver.datatypes.BSpyReset"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.setStatisticsReset(com.tridium.ndriver.datatypes.BSpyReset) -->
<method name="setStatisticsReset"  public="true">
<description>
Set the &lt;code&gt;statisticsReset&lt;/code&gt; property.&#xa; Viewing this property in spy page resets comm statistics
</description>
<tag name="@see">#statisticsReset</tag>
<parameter name="v">
<type class="com.tridium.ndriver.datatypes.BSpyReset"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.started() -->
<method name="started"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Calls start() on comm stack. Calls ccStarted()to provide override point
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.stopped() -->
<method name="stopped"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Calls stop() on comm stack. Calls ccStopped()to provide override point
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Calls verifySettings() on comm stack. Calls ccChanged()to provide override&#xa; point
</description>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.ccStarted() -->
<method name="ccStarted"  public="true">
<description>
Override point called from BComponent.started() callback.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.ccStopped() -->
<method name="ccStopped"  public="true">
<description>
Override point called from BComponent.stopped() callback.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.ccChanged(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="ccChanged"  public="true">
<description>
Override point called from BComponent.changed() callback.
</description>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.createComm() -->
<method name="createComm"  public="true">
<description>
Override point to create implementation of IComm.  Called from start()&#xa; callback or if not in a running station then called when comm stack access&#xa; by call to comm().&#xa; &lt;p&gt;&#xa; Default implementation returns NComm.
</description>
<return>
<type class="com.tridium.ndriver.comm.IComm"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.comm() -->
<method name="comm"  public="true" final="true">
<description>
Access the comm stack.
</description>
<return>
<type class="com.tridium.ndriver.comm.IComm"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.statusUpdate() -->
<method name="statusUpdate"  public="true" final="true">
<description>
Called from parent when parents status changed.  Means to notify comm to&#xa; allow start or stop based on parent fault/enable changes.
</description>
<tag name="@since">3.7.107</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.setDefaultListener(com.tridium.ndriver.comm.ICommListener) -->
<method name="setDefaultListener"  public="true">
<description>
Set the default listener.
</description>
<parameter name="listener">
<type class="com.tridium.ndriver.comm.ICommListener"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getMessageFactory() -->
<method name="getMessageFactory"  public="true" final="true">
<description>
Get message factory. This returns the instance of  &lt;code&gt;IMessageFactory&lt;/code&gt;&#xa; created by &lt;code&gt;makeMessageFactory()&lt;/code&gt;. The message factory is used&#xa; by ncomm to create the appropriate &lt;code&gt;NMessage&lt;/code&gt; from an incoming&#xa; &lt;code&gt;LinkMessage&lt;/code&gt;.
</description>
<return>
<type class="com.tridium.ndriver.comm.IMessageFactory"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.makeMessageFactory() -->
<method name="makeMessageFactory"  protected="true">
<description>
Override point for subclasses to provide custom message factory. The&#xa; message factory is used by ncomm to create the appropriate NMessage from&#xa; incoming&#xa; &lt;code&gt;LinkMessage&lt;/code&gt;.&lt;p&gt;&#xa; Developers must override this method to supply an implementation of&#xa; &lt;code&gt;IMessageFactory&lt;/code&gt; that will create the appropriate driver&#xa; specific&#xa; subclass of &lt;code&gt;NMessage&lt;/code&gt; for any incoming messages.
</description>
<return>
<type class="com.tridium.ndriver.comm.IMessageFactory"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.makeLinkLayer(com.tridium.ndriver.comm.NComm) -->
<method name="makeLinkLayer"  public="true">
<description>
Override point for subclasses to create appropriate LinkLayer.
</description>
<parameter name="comm">
<type class="com.tridium.ndriver.comm.NComm"/>
</parameter>
<return>
<type class="com.tridium.ndriver.comm.ILinkLayer"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getMaxOutstandingTransactions() -->
<method name="getMaxOutstandingTransactions"  public="true">
<description>
Override point for subclasses to configure the maximum number of request&#xa; messages that can be outstanding at the same time.  Default implementation&#xa; returns 32.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getMaxTransactionWait() -->
<method name="getMaxTransactionWait"  public="true">
<description>
Override point for subclasses to configure the maximum time to wait for a&#xa; free transaction in seconds. Default implementation returns 30 seconds.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getLinkMessageFactory() -->
<method name="getLinkMessageFactory"  public="true" final="true">
<description>
Get NLinkMessageFactory
</description>
<return>
<type class="com.tridium.ndriver.comm.NLinkMessageFactory"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.makeLinkMessageFactory() -->
<method name="makeLinkMessageFactory"  protected="true">
<description>
Override point for subclasses to provide custom LinkMessage factory.&lt;p&gt; A&#xa; customized link message factory will override &lt;code&gt;NLinkMessageFactory&lt;/code&gt;&#xa; which provides apis to maintain a cache of NLinkMessage instances.
</description>
<return>
<type class="com.tridium.ndriver.comm.NLinkMessageFactory"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getResourcePrefix() -->
<method name="getResourcePrefix"  public="true">
<description>
Override point for subclasses to provide a driver specific prefix for logs&#xa; and thread names.&lt;p&gt; This default implementation will return a name derived&#xa; from this objects parentage.  If a parent network can be found that is an&#xa; instance of &lt;code&gt;BNNetwork&lt;/code&gt; the network.&lt;code&gt;getNetworkName()&lt;/code&gt;&#xa; will be returned. If not found then the class name of the immediate parent&#xa; will be returned.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Provide some spy debug
</description>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.spyReset() -->
<method name="spyReset"  public="true">
<description>
Callback from BSpyReset if it&#x27;s spy page is invoked.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- com.tridium.ndriver.datatypes.BCommConfig.faultCause -->
<field name="faultCause"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message why the network is in fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</field>

<!-- com.tridium.ndriver.datatypes.BCommConfig.statisticsReset -->
<field name="statisticsReset"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;statisticsReset&lt;/code&gt; property.&#xa; Viewing this property in spy page resets comm statistics
</description>
<tag name="@see">#getStatisticsReset</tag>
<tag name="@see">#setStatisticsReset</tag>
</field>

<!-- com.tridium.ndriver.datatypes.BCommConfig.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.ndriver.datatypes.BCommConfig.defaultListener -->
<field name="defaultListener"  protected="true">
<type class="com.tridium.ndriver.comm.ICommListener"/>
<description/>
</field>

</class>
</bajadoc>
