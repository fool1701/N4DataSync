<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ndriver" runtimeProfile="rt" qualifiedName="com.tridium.ndriver.BNNetwork" name="BNNetwork" packageName="com.tridium.ndriver" public="true" abstract="true">
<description>
BNNetwork is a base network class for drivers using ndriver support classes.&#xa; BNNetwork adds support for tuningPolicies and an async worker thread.
</description>
<tag name="@author">Robert Adams</tag>
<tag name="@creation">25 Jan 2012</tag>
<tag name="@since">Niagara 3.7</tag>
<extends>
<type class="javax.baja.driver.BDeviceNetwork"/>
</extends>
<implements>
<type class="javax.baja.sys.BIService"/>
</implements>
<property name="tuningPolicies" flags="">
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
<description>
Slot for the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#getTuningPolicies</tag>
<tag name="@see">#setTuningPolicies</tag>
</property>

<property name="async" flags="h">
<type class="com.tridium.ndriver.datatypes.BNWorker"/>
<description>
Slot for the &lt;code&gt;async&lt;/code&gt; property.&#xa; Worker thread for driver specific task that involve communication with devices
</description>
<tag name="@see">#getAsync</tag>
<tag name="@see">#setAsync</tag>
</property>

<!-- com.tridium.ndriver.BNNetwork() -->
<constructor name="BNNetwork" public="true">
<description/>
</constructor>

<!-- com.tridium.ndriver.BNNetwork.getTuningPolicies() -->
<method name="getTuningPolicies"  public="true">
<description>
Get the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#tuningPolicies</tag>
<return>
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.setTuningPolicies(javax.baja.driver.point.BTuningPolicyMap) -->
<method name="setTuningPolicies"  public="true">
<description>
Set the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#tuningPolicies</tag>
<parameter name="v">
<type class="javax.baja.driver.point.BTuningPolicyMap"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getAsync() -->
<method name="getAsync"  public="true">
<description>
Get the &lt;code&gt;async&lt;/code&gt; property.&#xa; Worker thread for driver specific task that involve communication with devices
</description>
<tag name="@see">#async</tag>
<return>
<type class="com.tridium.ndriver.datatypes.BNWorker"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.setAsync(com.tridium.ndriver.datatypes.BNWorker) -->
<method name="setAsync"  public="true">
<description>
Set the &lt;code&gt;async&lt;/code&gt; property.&#xa; Worker thread for driver specific task that involve communication with devices
</description>
<tag name="@see">#async</tag>
<parameter name="v">
<type class="com.tridium.ndriver.datatypes.BNWorker"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getNetworkName() -->
<method name="getNetworkName"  public="true" abstract="true">
<description>
Get name used for threads and logs
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.postAsync(java.lang.Runnable) -->
<method name="postAsync"  public="true">
<description>
This passes the the given Runnable to the async worker.
</description>
<parameter name="r">
<type class="java.lang.Runnable"/>
</parameter>
<return>
<type class="javax.baja.util.IFuture"/>
<description>
null always
</description>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Gets the agent list.  Adds BNDeviceManager as &#x22;Your Driver Device Manager&#x22;&#xa; if one not already registered.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.useAutoManager() -->
<method name="useAutoManager"  protected="true">
<description>
Override point to disable use of auto device manager view. Return false to&#xa; remove device manager view.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getDeviceManagerSubscribeDepth() -->
<method name="getDeviceManagerSubscribeDepth"  public="true">
<description>
Override point to specify the subscribe depth used by auto device manager.
</description>
<tag name="@since">3.7.107</tag>
<return>
<type class="int"/>
<description>
default returns 1
</description>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.getServiceTypes() -->
<method name="getServiceTypes"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.serviceStarted() -->
<method name="serviceStarted"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.BNNetwork.serviceStopped() -->
<method name="serviceStopped"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.BNNetwork.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.ndriver.BNNetwork.log() -->
<method name="log"  public="true" final="true">
<description>
Return log named with &lt;code&gt;getNetworkName()&lt;/code&gt;.
</description>
<return>
<type class="java.util.logging.Logger"/>
</return>
</method>

<!-- com.tridium.ndriver.BNNetwork.tuningPolicies -->
<field name="tuningPolicies"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tuningPolicies&lt;/code&gt; property.&#xa; A container for tuning policies which determines how&#xa; and when proxy points are read and written.
</description>
<tag name="@see">#getTuningPolicies</tag>
<tag name="@see">#setTuningPolicies</tag>
</field>

<!-- com.tridium.ndriver.BNNetwork.async -->
<field name="async"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;async&lt;/code&gt; property.&#xa; Worker thread for driver specific task that involve communication with devices
</description>
<tag name="@see">#getAsync</tag>
<tag name="@see">#setAsync</tag>
</field>

<!-- com.tridium.ndriver.BNNetwork.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.ndriver.BNNetwork.noWriteFacet -->
<field name="noWriteFacet"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

<!-- com.tridium.ndriver.BNNetwork.groupFacet -->
<field name="groupFacet"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

<!-- com.tridium.ndriver.BNNetwork.noWrite -->
<field name="noWrite"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context can be used to indicate a set should not result in writing&#xa; data to a physical device. To use, pass in set api as the context and&#xa; monitor context in changed() callback to distinguish noWrite updates from&#xa; other changes.
</description>
</field>

<!-- com.tridium.ndriver.BNNetwork.groupWrite -->
<field name="groupWrite"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context can be used to indicate one of a group of sets which should&#xa; not result in writing data to a physical device until groupWriteFinal&#xa; context is seen.
</description>
</field>

<!-- com.tridium.ndriver.BNNetwork.groupWriteFinal -->
<field name="groupWriteFinal"  public="true" static="true" final="true">
<type class="javax.baja.sys.Context"/>
<description>
This context can be used to indicate the final set in a group of sets.&#xa; This final write completes the group and should result in a write to the&#xa; physical device.
</description>
</field>

</class>
</bajadoc>
