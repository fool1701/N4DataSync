<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="query" runtimeProfile="rt" qualifiedName="javax.baja.query.BProjection" name="BProjection" packageName="javax.baja.query" public="true">
<description>
Defines the contract for a projection in a query, and provides a default&#xa; implementation.
</description>
<tag name="@author">Matthew Giannini</tag>
<tag name="@creation">Apr 15, 2008</tag>
<tag name="@version">$Revision: 3$ $Date: 6/20/08 3:05:22 PM EDT$</tag>
<tag name="@since">Baja 3.4</tag>
<extends>
<type class="javax.baja.query.BQueryNode"/>
</extends>
<property name="distinct" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;distinct&lt;/code&gt; property.&#xa; If true, it indicates that only distinct (i.e. unique)&#xa; row combinations should be returned.
</description>
<tag name="@see">#getDistinct</tag>
<tag name="@see">#setDistinct</tag>
</property>

<!-- javax.baja.query.BProjection() -->
<constructor name="BProjection" public="true">
<description>
Constructs a BProjection with no projection columns.
</description>
</constructor>

<!-- javax.baja.query.BProjection.getDistinct() -->
<method name="getDistinct"  public="true">
<description>
Get the &lt;code&gt;distinct&lt;/code&gt; property.&#xa; If true, it indicates that only distinct (i.e. unique)&#xa; row combinations should be returned.
</description>
<tag name="@see">#distinct</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.query.BProjection.setDistinct(boolean) -->
<method name="setDistinct"  public="true">
<description>
Set the &lt;code&gt;distinct&lt;/code&gt; property.&#xa; If true, it indicates that only distinct (i.e. unique)&#xa; row combinations should be returned.
</description>
<tag name="@see">#distinct</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.query.BProjection.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.query.BProjection.add(javax.baja.query.BProjectionColumn) -->
<method name="add"  public="true">
<description>
Append the given column to the end of the list of projection columns.
</description>
<parameter name="column">
<type class="javax.baja.query.BProjectionColumn"/>
<description>
the BProjectionColumn to append.
</description>
</parameter>
<return>
<type class="javax.baja.query.BProjection"/>
<description>
this.
</description>
</return>
</method>

<!-- javax.baja.query.BProjection.getProjectionColumns() -->
<method name="getProjectionColumns"  public="true">
<description/>
<return>
<type class="javax.baja.query.BProjectionColumn" dimension="1"/>
<description>
a BProjectionColumn[] containing all the projection columns&#xa; for this projection.
</description>
</return>
</method>

<!-- javax.baja.query.BProjection.isDistinct() -->
<method name="isDistinct"  public="true">
<description>
Convenience for &lt;code&gt;getDistinct()&lt;/code&gt;
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.query.BProjection.distinct() -->
<method name="distinct"  public="true">
<description>
Marks the projection as distinct.
</description>
<return>
<type class="javax.baja.query.BProjection"/>
<description>
this.
</description>
</return>
</method>

<!-- javax.baja.query.BProjection.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.query.BProjection.distinct -->
<field name="distinct"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;distinct&lt;/code&gt; property.&#xa; If true, it indicates that only distinct (i.e. unique)&#xa; row combinations should be returned.
</description>
<tag name="@see">#getDistinct</tag>
<tag name="@see">#setDistinct</tag>
</field>

<!-- javax.baja.query.BProjection.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
