<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="search" runtimeProfile="rt" qualifiedName="javax.baja.search.BSearchParams" name="BSearchParams" packageName="javax.baja.search" public="true">
<description>
Search parameters are used to define the input arguments to a search.
</description>
<tag name="@author">Dan Heine</tag>
<tag name="@author">Scott Hoye</tag>
<tag name="@creation">2014-02-06</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<property name="query" flags="o">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;query&lt;/code&gt; property.&#xa; String that defines the search query.  It is the String form of a query ORD.
</description>
<tag name="@see">#getQuery</tag>
<tag name="@see">#setQuery</tag>
</property>

<property name="scopeVector" flags="o">
<type class="javax.baja.sys.BVector"/>
<description>
Slot for the &lt;code&gt;scopeVector&lt;/code&gt; property.&#xa; The list of scopes that will be used to process the search query against.
</description>
<tag name="@see">#getScopeVector</tag>
<tag name="@see">#setScopeVector</tag>
</property>

<!-- javax.baja.search.BSearchParams() -->
<constructor name="BSearchParams" public="true">
<description>
For internal use only.  Use one of the other constructors to&#xa; specify valid search parameters.
</description>
</constructor>

<!-- javax.baja.search.BSearchParams(javax.baja.naming.BOrd, javax.baja.sys.BIObject) -->
<constructor name="BSearchParams" public="true">
<parameter name="query">
<type class="javax.baja.naming.BOrd"/>
<description>
The search query in ORD form.
</description>
</parameter>
<parameter name="scope">
<type class="javax.baja.sys.BIObject"/>
<description>
The scope on which the search query should be run.
</description>
</parameter>
<description>
Creates a BSearchParams instance with the given query and scope.
</description>
</constructor>

<!-- javax.baja.search.BSearchParams(javax.baja.naming.BOrd, javax.baja.sys.BIObject[]) -->
<constructor name="BSearchParams" public="true">
<parameter name="query">
<type class="javax.baja.naming.BOrd"/>
<description>
The search query in ORD form.
</description>
</parameter>
<parameter name="scopes">
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
The scopes on which the search query should be run.
</description>
</parameter>
<description>
Creates a BSearchParams instance with the given query and scopes.
</description>
</constructor>

<!-- javax.baja.search.BSearchParams(java.lang.String, javax.baja.sys.BIObject) -->
<constructor name="BSearchParams" public="true">
<parameter name="query">
<type class="java.lang.String"/>
<description>
The search query in String form (should be convertable to an ORD).
</description>
</parameter>
<parameter name="scope">
<type class="javax.baja.sys.BIObject"/>
<description>
The scope on which the search query should be run.
</description>
</parameter>
<description>
Creates a BSearchParams instance with the given query and scope.
</description>
</constructor>

<!-- javax.baja.search.BSearchParams(java.lang.String, javax.baja.sys.BIObject[]) -->
<constructor name="BSearchParams" public="true">
<parameter name="query">
<type class="java.lang.String"/>
<description>
The search query in String form (should be convertable to an ORD).
</description>
</parameter>
<parameter name="scopes">
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
The scopes on which the search query should be run.
</description>
</parameter>
<description>
Creates a BSearchParams instance with the given query and scopes.
</description>
</constructor>

<!-- javax.baja.search.BSearchParams.getQuery() -->
<method name="getQuery"  public="true">
<description>
Get the &lt;code&gt;query&lt;/code&gt; property.&#xa; String that defines the search query.  It is the String form of a query ORD.
</description>
<tag name="@see">#query</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.setQuery(java.lang.String) -->
<method name="setQuery"  public="true">
<description>
Set the &lt;code&gt;query&lt;/code&gt; property.&#xa; String that defines the search query.  It is the String form of a query ORD.
</description>
<tag name="@see">#query</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.getScopeVector() -->
<method name="getScopeVector"  public="true">
<description>
Get the &lt;code&gt;scopeVector&lt;/code&gt; property.&#xa; The list of scopes that will be used to process the search query against.
</description>
<tag name="@see">#scopeVector</tag>
<return>
<type class="javax.baja.sys.BVector"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.setScopeVector(javax.baja.sys.BVector) -->
<method name="setScopeVector"  public="true">
<description>
Set the &lt;code&gt;scopeVector&lt;/code&gt; property.&#xa; The list of scopes that will be used to process the search query against.
</description>
<tag name="@see">#scopeVector</tag>
<parameter name="v">
<type class="javax.baja.sys.BVector"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.getQueryOrd() -->
<method name="getQueryOrd"  public="true">
<description>
Get the search query as an ORD.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
<description>
ORD or null if the query is syntactically not an ORD.  No guarantee that all&#xa; schemes are registered however.
</description>
</return>
</method>

<!-- javax.baja.search.BSearchParams.addScope(javax.baja.sys.BIObject) -->
<method name="addScope"  public="true">
<description>
Convenience method for adding a single scope to the search parameters.&#xa; For non-BValue scopes, must use a BOrd that resolves to that scope.
</description>
<parameter name="scope">
<type class="javax.baja.sys.BIObject"/>
<description>
the search scope to add
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.addScopes(javax.baja.sys.BIObject[]) -->
<method name="addScopes"  public="true">
<description>
Add a list of scopes to the search parameters.
</description>
<parameter name="scopes">
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
array of scope objects
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.setScope(javax.baja.sys.BIObject) -->
<method name="setScope"  public="true">
<description>
Convenience method for setting a single scope on the search parameters.&#xa; This method will replace any previous scopes on this search parameters instance.&#xa; For non-BValue scopes, must use a BOrd that resolves to that scope.
</description>
<parameter name="scope">
<type class="javax.baja.sys.BIObject"/>
<description>
the search scope to set
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.setScopes(javax.baja.sys.BIObject[]) -->
<method name="setScopes"  public="true">
<description>
Convenience method for setting the scopes on the search parameters.&#xa; This method will replace any previous scopes on this search parameters instance.&#xa; For non-BValue scopes, must use a BOrd that resolves to that scope.
</description>
<parameter name="scopes">
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
the search scopes to set
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.resolveScopes() -->
<method name="resolveScopes"  public="true">
<description>
Convenience method for resolving relative scopes on the local host.
</description>
<return>
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
array of scope objects
</description>
</return>
</method>

<!-- javax.baja.search.BSearchParams.resolveScopes(javax.baja.sys.BIObject) -->
<method name="resolveScopes"  public="true">
<description>
Return an array of objects from the list of scopes.  Resolve&#xa; any object that is a BOrd.
</description>
<parameter name="base">
<type class="javax.baja.sys.BIObject"/>
<description>
base object for resolving ords
</description>
</parameter>
<return>
<type class="javax.baja.sys.BIObject" dimension="1"/>
<description>
array of scope objects
</description>
</return>
</method>

<!-- javax.baja.search.BSearchParams.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.search.BSearchParams.query -->
<field name="query"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;query&lt;/code&gt; property.&#xa; String that defines the search query.  It is the String form of a query ORD.
</description>
<tag name="@see">#getQuery</tag>
<tag name="@see">#setQuery</tag>
</field>

<!-- javax.baja.search.BSearchParams.scopeVector -->
<field name="scopeVector"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;scopeVector&lt;/code&gt; property.&#xa; The list of scopes that will be used to process the search query against.
</description>
<tag name="@see">#getScopeVector</tag>
<tag name="@see">#setScopeVector</tag>
</field>

<!-- javax.baja.search.BSearchParams.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
