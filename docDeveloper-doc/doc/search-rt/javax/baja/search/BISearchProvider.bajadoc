<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="search" runtimeProfile="rt" qualifiedName="javax.baja.search.BISearchProvider" name="BISearchProvider" packageName="javax.baja.search" public="true" interface="true" abstract="true" category="interface">
<description>
A search provider can be used as an alternative to a query scheme to&#xa; allow for searching spaces in Niagara.  A search provider must be&#xa; registered as an agent on any BOrdSchemes that it supports AND it&#xa; must also register as an agent on any scopes (ie. spaces) that it&#xa; supports searching.
</description>
<tag name="@author">Dan Heine</tag>
<tag name="@author">Scott Hoye</tag>
<tag name="@creation">2013-08-15</tag>
<tag name="@since">Niagara 4.0</tag>
<implements>
<type class="javax.baja.agent.BIAgent"/>
</implements>
<!-- javax.baja.search.BISearchProvider.search(javax.baja.naming.BOrd, javax.baja.sys.BIObject, javax.baja.sys.Context) -->
<method name="search"  public="true" abstract="true">
<description>
Search the specified scope with the given query ORD.&#xa; When called by a search task via the SearchService, this method&#xa; is called on an async executor, so you can do the work on the&#xa; calling thread.
</description>
<parameter name="queryOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The query ORD to resolve against the given scope
</description>
</parameter>
<parameter name="scope">
<type class="javax.baja.sys.BIObject"/>
<description>
The scope to resolve the query ORD against
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
The context associated with this search request.  Implementers&#xa;                should extract any user information from this context in order&#xa;                to filter results to only those permitted to the user.
</description>
</parameter>
<return>
<parameterizedType class="java.util.stream.Stream">
<args>
<type class="javax.baja.tag.Entity"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.search.BISearchProvider.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
