<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.http.BGenericHttpHeaderProvider" name="BGenericHttpHeaderProvider" packageName="javax.baja.web.http" public="true">
<description/>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.web.http.BIHttpHeaderProvider"/>
</implements>
<property name="headerName" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;headerName&lt;/code&gt; property.&#xa; The name of the header to apply.
</description>
<tag name="@see">#getHeaderName</tag>
<tag name="@see">#setHeaderName</tag>
</property>

<property name="headerValue" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;headerValue&lt;/code&gt; property.&#xa; The value of the header to apply.
</description>
<tag name="@see">#getHeaderValue</tag>
<tag name="@see">#setHeaderValue</tag>
</property>

<property name="appendHeader" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;appendHeader&lt;/code&gt; property.&#xa; True if a header should be appended to existing headers of the same name.&#xa; False if it should overwrite existing headers of the same name.
</description>
<tag name="@see">#getAppendHeader</tag>
<tag name="@see">#setAppendHeader</tag>
</property>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider() -->
<constructor name="BGenericHttpHeaderProvider" public="true">
<description/>
</constructor>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.getHeaderName() -->
<method name="getHeaderName"  public="true">
<description>
Get the &lt;code&gt;headerName&lt;/code&gt; property.&#xa; The name of the header to apply.
</description>
<tag name="@see">#headerName</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.setHeaderName(java.lang.String) -->
<method name="setHeaderName"  public="true">
<description>
Set the &lt;code&gt;headerName&lt;/code&gt; property.&#xa; The name of the header to apply.
</description>
<tag name="@see">#headerName</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.getHeaderValue() -->
<method name="getHeaderValue"  public="true">
<description>
Get the &lt;code&gt;headerValue&lt;/code&gt; property.&#xa; The value of the header to apply.
</description>
<tag name="@see">#headerValue</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.setHeaderValue(java.lang.String) -->
<method name="setHeaderValue"  public="true">
<description>
Set the &lt;code&gt;headerValue&lt;/code&gt; property.&#xa; The value of the header to apply.
</description>
<tag name="@see">#headerValue</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.getAppendHeader() -->
<method name="getAppendHeader"  public="true">
<description>
Get the &lt;code&gt;appendHeader&lt;/code&gt; property.&#xa; True if a header should be appended to existing headers of the same name.&#xa; False if it should overwrite existing headers of the same name.
</description>
<tag name="@see">#appendHeader</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.setAppendHeader(boolean) -->
<method name="setAppendHeader"  public="true">
<description>
Set the &lt;code&gt;appendHeader&lt;/code&gt; property.&#xa; True if a header should be appended to existing headers of the same name.&#xa; False if it should overwrite existing headers of the same name.
</description>
<tag name="@see">#appendHeader</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.applyHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) -->
<method name="applyHeaders"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="req">
<type class="javax.servlet.http.HttpServletRequest"/>
</parameter>
<parameter name="resp">
<type class="javax.servlet.http.HttpServletResponse"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.headerName -->
<field name="headerName"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;headerName&lt;/code&gt; property.&#xa; The name of the header to apply.
</description>
<tag name="@see">#getHeaderName</tag>
<tag name="@see">#setHeaderName</tag>
</field>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.headerValue -->
<field name="headerValue"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;headerValue&lt;/code&gt; property.&#xa; The value of the header to apply.
</description>
<tag name="@see">#getHeaderValue</tag>
<tag name="@see">#setHeaderValue</tag>
</field>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.appendHeader -->
<field name="appendHeader"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;appendHeader&lt;/code&gt; property.&#xa; True if a header should be appended to existing headers of the same name.&#xa; False if it should overwrite existing headers of the same name.
</description>
<tag name="@see">#getAppendHeader</tag>
<tag name="@see">#setAppendHeader</tag>
</field>

<!-- javax.baja.web.http.BGenericHttpHeaderProvider.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
