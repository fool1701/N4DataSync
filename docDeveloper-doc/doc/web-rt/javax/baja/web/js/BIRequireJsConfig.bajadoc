<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.js.BIRequireJsConfig" name="BIRequireJsConfig" packageName="javax.baja.web.js" public="true" interface="true" abstract="true" category="interface">
<description>
Used to configure &lt;a href=&#x22;http://requirejs.org/docs/api.html#config&#x22;&gt;RequireJS&lt;/a&gt;.
</description>
<tag name="@author">Gareth Johnson on 01/12/2015.</tag>
<tag name="@since">Niagara 4.2</tag>
<implements>
<type class="javax.baja.web.js.BIJavaScript"/>
</implements>
<!-- javax.baja.web.js.BIRequireJsConfig.write(java.io.Writer, java.lang.String, boolean, javax.baja.sys.Context) -->
<method name="write"  public="true" default="true">
<description>
Write out the JavaScript to configure RequireJS.&#xa; &lt;p&gt;&#xa; By default, this will call a exported JavaScript function with&#xa; the require object, the module prefix and whether the WebDev is enabled&#xa; for JavaScript.&#xa; &lt;/p&gt;&#xa; &lt;pre&gt;&lt;code&gt;&#xa; function config(require, modulePrefix, isWebDevJs) {&#xa;   require.paths.coolJs = modulePrefix + &#x22;myModule/rc/myJs&#x22; + (isWebDevJs ? &#x22;&#x22; : &#x22;.min&#x22;);&#xa; }&#xa; &lt;/code&gt;&lt;/pre&gt;&#xa; &lt;p&gt;&#xa; It&#x27;s not typical to override this method. Instead supply a JavaScript file that takes the&#xa; aforementioned function parameters.&#xa; &lt;/p&gt;
</description>
<parameter name="out">
<type class="java.io.Writer"/>
<description>
Used to write out the JavaScript.
</description>
</parameter>
<parameter name="modulePrefix">
<type class="java.lang.String"/>
<description>
Used as a prefix to the module resource being referenced.
</description>
</parameter>
<parameter name="isWebDevJs">
<type class="boolean"/>
<description>
true if the &#x27;js&#x27; WebDev is currently enabled.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The current Context the originating call.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
<description/>
</throws>
</method>

<!-- javax.baja.web.js.BIRequireJsConfig.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
