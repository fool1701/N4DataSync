<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.WebOp" name="WebOp" packageName="javax.baja.web" public="true" abstract="true">
<description>
WebOp is the argument passed to the BWebServlet&#xa; service() method.  It wraps up the Servlet request&#xa; and response instances as well adding additional &#xa; contextual information.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">27 Oct 00</tag>
<tag name="@version">$Revision: 33$ $Date: 1/3/11 2:40:42 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.file.ExportOp"/>
</extends>
<!-- javax.baja.web.WebOp(javax.baja.naming.OrdTarget, javax.baja.web.BWebService, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) -->
<constructor name="WebOp" public="true">
<parameter name="base">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<parameter name="service">
<type class="javax.baja.web.BWebService"/>
</parameter>
<parameter name="request">
<type class="javax.servlet.http.HttpServletRequest"/>
</parameter>
<parameter name="response">
<type class="javax.servlet.http.HttpServletResponse"/>
</parameter>
<description>
Constructor
</description>
</constructor>

<!-- javax.baja.web.WebOp.getService() -->
<method name="getService"  public="true">
<description>
Get the BWebService which is serving this request.
</description>
<return>
<type class="javax.baja.web.BWebService"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getWebEnv() -->
<method name="getWebEnv"  public="true">
<description>
Get the WebEnv for this request.
</description>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
</method>

<!-- javax.baja.web.WebOp.initWebEnv() -->
<method name="initWebEnv"  public="true">
<description>
Get the WebEnv for this request.
</description>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getProfileConfig() -->
<method name="getProfileConfig"  public="true">
<description>
Get the BWebProfileConfig to use for this request.
</description>
<return>
<type class="javax.baja.web.BWebProfileConfig"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getProfileConfig(javax.baja.sys.Context) -->
<method name="getProfileConfig"  public="true">
<description>
Get the BWebProfileConfig to use for this request. Use the BIHxProfile.PREFER_Hx=true&#xa; facet to get the getHxProfileConfig().
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.web.BWebProfileConfig"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getPathInfo() -->
<method name="getPathInfo"  public="true">
<description>
This returns the remainder of the uri after the servlet name.&#xa; op.getRequest().getPathInfo() does not return the desired&#xa; result because the BWebServlet is not a javax.servlet.Servlet&#xa; and is registered directly with the web server.&#xa;&#xa; Ex. servlet name = foo, /foo/a/b/c -&amp;gt; /a/b/c
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getRequest() -->
<method name="getRequest"  public="true">
<description>
Get the underlying HttpServletRequest instance.
</description>
<return>
<type class="javax.servlet.http.HttpServletRequest"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getResponse() -->
<method name="getResponse"  public="true">
<description>
Get the underlying HttpServletResponse instance.
</description>
<return>
<type class="javax.servlet.http.HttpServletResponse"/>
</return>
</method>

<!-- javax.baja.web.WebOp.setContentType(java.lang.String) -->
<method name="setContentType"  public="true">
<description>
Convenience for &lt;code&gt;getResponse().setContentType(mimeType)&lt;/code&gt;.
</description>
<parameter name="mimeType">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.WebOp.setContentLength(int) -->
<method name="setContentLength"  public="true">
<description>
Convenience for &lt;code&gt;getResponse().setContentLength(length)&lt;/code&gt;.
</description>
<parameter name="length">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getWriter() -->
<method name="getWriter"  public="true">
<description>
Convenience for &lt;code&gt;getResponse().getWriter()&lt;/code&gt;.
</description>
<return>
<type class="java.io.PrintWriter"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.web.WebOp.getHtmlWriter() -->
<method name="getHtmlWriter"  public="true">
<description>
Get an HtmlWriter for generating a text/html response &#xa; stream.  This writer has the special function to check&#xa; for src and href attributes and replace them with the&#xa; browser&#x27;s correct ord to URI mapping.
</description>
<return>
<type class="javax.baja.io.HtmlWriter"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.web.WebOp.getUserAgent() -->
<method name="getUserAgent"  public="true">
<description>
Get the User-Agent HTTP header as a parsed instance of &#xa; UserAgent or return null if the user-agent header is unavailable&#xa; or illegally formatted.
</description>
<return>
<type class="javax.baja.web.UserAgent"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getOutputStream() -->
<method name="getOutputStream"  public="true">
<description>
Get the response output stream.
</description>
<return>
<type class="java.io.OutputStream"/>
</return>
</method>

<!-- javax.baja.web.WebOp.toUri(javax.baja.naming.BOrd) -->
<method name="toUri"  public="true">
<description>
Convert the specified ord into a server relative URI &#xa; in this server&#x27;s URI namespace.
</description>
<parameter name="ord">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.web.WebOp.getLanguage() -->
<method name="getLanguage"  public="true">
<description>
Language code (ISO 639) of the user.  There are three ways the context&#xa; chooses a language, they are (in descending priority):&#xa; &lt;ul&gt;&#xa; &lt;li&gt;The language property of the BUser.&lt;/li&gt;&#xa; &lt;li&gt;The first Accept-Language header value sent by the browser.&lt;/li&gt;&#xa; &lt;li&gt;The default language of the server - Sys.getLanguage().&lt;/li&gt;&#xa; &lt;/ul&gt;&#xa;&#xa; To configure the preferred language of a browser:&#xa; &lt;br&gt;&#xa; &lt;ul&gt;&#xa; &lt;li&gt;IE - Tools:Internet Options:General:Languages&lt;/li&gt;&#xa; &lt;li&gt;Mozilla/Netscape - Edit:Preferences:Navigator:Languages&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<return>
<type class="java.lang.String"/>
<description>
the language code in lower case (null is never returned).
</description>
</return>
</method>

<!-- javax.baja.web.WebOp.fw(java.lang.Object) -->
<method name="fw"  public="true">
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.web.WebOp.redirectToHome() -->
<method name="redirectToHome"  public="true">
<description>
Redirect the current request back to the user&#x27;s home page.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
