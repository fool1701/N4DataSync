<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.servlets.NiagaraRpcServlet" name="NiagaraRpcServlet" packageName="javax.baja.web.servlets" public="true" final="true">
<description>
An Servlet used for invoking a Niagara RPC. The Servlet&#xa; can be invoked in two different ways.&#xa;&#xa; &lt;b&gt;Single RPC&lt;/b&gt;&#xa; &lt;p&gt;&#xa; An HTTP POST can be made to a URI in the format of &#x27;/rpc/methodName/ord&#x27;.&#xa; The body of a POST is a JSON array. The JSON array supplies the arguments to the call.&#xa; The response returns a JSON object with a &#x27;value&#x27; attribute for the return argument.&#xa; If there was no return argument then the value property is null.&#xa; &lt;/p&gt;&#xa; &lt;pre&gt;&lt;code&gt;&#xa; // A JavaScript example of a single RPC call being made from a browser.&#xa; require([&#x22;jquery&#x22;, &#x22;nmodule/js/rc/csrf/csrfUtil&#x22;], function ($, csrfUtil) {&#xa;   $.ajax(&#x22;/rpc/testMe/type:moduleName:typeName&#x22;, {&#xa;     method: &#x22;POST&#x22;,&#xa;     dataType: &#x22;json&#x22;,&#xa;     data: JSON.stringify([&#x22;hi there&#x22;]),&#xa;     headers:{&#xa;       &#x27;x-niagara-csrfToken&#x27;: csrfUtil.getCsrfToken()&#xa;     }&#xa;   })&#xa;   .then(function (response) {&#xa;     console.log(response.value);&#xa;   });&#xa; });&#xa; &lt;/code&gt;&lt;/pre&gt;&#xa;&#xa; &lt;b&gt;Multi RPC&lt;/b&gt;&#xa; &lt;p&gt;&#xa; An HTTP POST can be made to a URI in the format of &#x27;/rpc&#x27;. The body of the POST&#xa; is a JSON array in the following format...&#xa; &lt;/p&gt;&#xa; &lt;pre&gt;&lt;code&gt;&#xa; [&#xa;   // Each RPC call is an object within an array.&#xa;   {&#xa;     ord: &#x22;type:moduleName:typeName&#x22;,&#xa;     methodName: &#x22;methodName&#x22;,&#xa;     args: []&#xa;   }&#xa; ]&#xa; &lt;/code&gt;&lt;/pre&gt;&#xa; &lt;p&gt;&#xa; The response is an array with each return argument encoded into it.&#xa; &lt;/p&gt;&#xa; &lt;pre&gt;&lt;code&gt;&#xa; // A JavaScript example of a multi RPC call being made from a browser.&#xa; require([&#x22;jquery&#x22;, &#x22;nmodule/js/rc/csrf/csrfUtil&#x22;], function ($, csrfUtil) {&#xa;   var data = [&#xa;     {&#xa;       ord: &#x22;type:moduleName:typeName&#x22;,&#xa;       methodName: &#x22;methodName&#x22;,&#xa;       args: [&#x22;first hello&#x22;]&#xa;     },&#xa;     {&#xa;       ord: &#x22;type:moduleName:typeName&#x22;,&#xa;       methodName: &#x22;methodName&#x22;,&#xa;       args: [&#x22;second hello&#x22;]&#xa;     }&#xa;   ];&#xa;&#xa;   $.ajax(&#x22;/rpc&#x22;, {&#xa;     method: &#x22;POST&#x22;,&#xa;     dataType: &#x22;json&#x22;,&#xa;     data: JSON.stringify(data),&#xa;     headers:{&#xa;       &#x27;x-niagara-csrfToken&#x27;: csrfUtil.getCsrfToken()&#xa;     }&#xa;   })&#xa;   .then(function (response) {&#xa;     console.log(response);&#xa;   });&#xa; });&#xa; &lt;/code&gt;&lt;/pre&gt;
</description>
<tag name="@see">NiagaraRpc</tag>
<tag name="@author">Gareth Johnson on 16/09/2015.</tag>
<tag name="@since">Niagara 4.1</tag>
<extends>
<type class="javax.servlet.http.HttpServlet"/>
</extends>
<!-- javax.baja.web.servlets.NiagaraRpcServlet() -->
<constructor name="NiagaraRpcServlet" public="true">
<description/>
</constructor>

<!-- javax.baja.web.servlets.NiagaraRpcServlet.doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) -->
<method name="doPost"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="req">
<type class="javax.servlet.http.HttpServletRequest"/>
</parameter>
<parameter name="resp">
<type class="javax.servlet.http.HttpServletResponse"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.servlet.ServletException"/>
</throws>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

</class>
</bajadoc>
