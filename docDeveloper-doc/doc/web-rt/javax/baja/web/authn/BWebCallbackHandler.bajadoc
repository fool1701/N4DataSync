<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.authn.BWebCallbackHandler" name="BWebCallbackHandler" packageName="javax.baja.web.authn" public="true" abstract="true">
<description>
Abstract class that all &lt;code&gt;<see ref="javax.security.auth.callback">CallbackHandlers</see>&lt;/code&gt; used for authentication via Jetty must extend.&#xa; &#xa; &lt;p&gt;Each subclass must implement the &#xa; &lt;code&gt;<see ref="javax.baja.web.authn.BWebCallbackHandler#handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">#handleRequest(HttpServletRequest, HttpServletResponse)</see>&lt;/code&gt;&#xa; method, which handles acquiring credentials from the user or&#xa; processing them. The credentials or result of the processing&#xa; should be stored so that it can be retrieved during the call&#xa; to &lt;code&gt;<see ref="javax.baja.web.authn.BWebCallbackHandler#handle(javax.security.auth.callback.Callback[])">#handle(Callback[])</see>&lt;/code&gt; during authentication.&lt;/p&gt;
</description>
<tag name="@author">Melanie Coggan</tag>
<tag name="@creation">2013-12-27</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="com.tridium.web.authn.BHttpCallbackHandler"/>
</extends>
<!-- javax.baja.web.authn.BWebCallbackHandler() -->
<constructor name="BWebCallbackHandler" public="true">
<description/>
</constructor>

<!-- javax.baja.web.authn.BWebCallbackHandler.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.web.authn.BWebCallbackHandler.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
