<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="web" runtimeProfile="rt" qualifiedName="javax.baja.web.CsrfUtil" name="CsrfUtil" packageName="javax.baja.web" public="true" final="true">
<description>
A utility class to get the Csrf token for a session and&#xa; also verify an incoming token against the session token.
</description>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.web.CsrfUtil() -->
<constructor name="CsrfUtil" public="true">
<description/>
</constructor>

<!-- javax.baja.web.CsrfUtil.verifyCsrfToken(javax.servlet.http.HttpServletRequest) -->
<method name="verifyCsrfToken"  public="true" static="true" final="true">
<description>
Verify Csrf token by extracting an incoming token from a client http servlet request
</description>
<parameter name="req">
<type class="javax.servlet.http.HttpServletRequest"/>
<description>
- The incoming http request
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
boolean true if the token is valid
</description>
</return>
<throws>
<type class="java.io.IOException"/>
<description>
Thrown if there is a problem parsing the request parameters
</description>
</throws>
<throws>
<type class="javax.baja.session.CsrfException"/>
<description>
Throws if the Csrf token is invalid or missing
</description>
</throws>
</method>

<!-- javax.baja.web.CsrfUtil.verifyCsrfToken(java.lang.String, javax.servlet.http.HttpServletRequest) -->
<method name="verifyCsrfToken"  public="true" static="true">
<description>
Verify an incoming csrf token against a passed in session token
</description>
<parameter name="sessionToken">
<type class="java.lang.String"/>
<description>
- The csrf token for this session
</description>
</parameter>
<parameter name="req">
<type class="javax.servlet.http.HttpServletRequest"/>
<description>
The incoming HttpServletRequest to extract the token from
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
boolean true if the token is valid
</description>
</return>
<throws>
<type class="java.io.IOException"/>
<description>
Thrown if there is a problem parsing the request parameters
</description>
</throws>
<throws>
<type class="javax.baja.session.CsrfException"/>
<description>
Throws if the Csrf token is invalid or missing
</description>
</throws>
</method>

<!-- javax.baja.web.CsrfUtil.verifyCsrfToken(java.lang.String) -->
<method name="verifyCsrfToken"  public="true" static="true">
<description/>
<parameter name="token">
<type class="java.lang.String"/>
<description>
- The incoming token to check for validity
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
boolean true if the token is valid
</description>
</return>
<throws>
<type class="java.io.IOException"/>
<description>
Thrown if there is a problem parsing the request parameters
</description>
</throws>
<throws>
<type class="javax.baja.session.CsrfException"/>
<description>
Throws if the Csrf token is invalid or missing
</description>
</throws>
</method>

<!-- javax.baja.web.CsrfUtil.verifyCsrfToken(java.lang.String, java.lang.String) -->
<method name="verifyCsrfToken"  public="true" static="true">
<description>
Verify an incoming csrf token value with the session token value
</description>
<parameter name="sessionToken">
<type class="java.lang.String"/>
<description>
The csrf token for this session
</description>
</parameter>
<parameter name="token">
<type class="java.lang.String"/>
<description>
The incoming token to check for validity
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
boolean true if the token is valid
</description>
</return>
<throws>
<type class="java.io.IOException"/>
<description>
Thrown if there is a problem parsing the request parameters
</description>
</throws>
<throws>
<type class="javax.baja.session.CsrfException"/>
<description>
Throws if the Csrf token is invalid or missing
</description>
</throws>
</method>

<!-- javax.baja.web.CsrfUtil.CSRF_TOKEN_NAME -->
<field name="CSRF_TOKEN_NAME"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.web.CsrfUtil.CSRF_TOKEN_HTTP_HEADER -->
<field name="CSRF_TOKEN_HTTP_HEADER"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
