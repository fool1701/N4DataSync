<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.BHxFieldEditor" name="BHxFieldEditor" packageName="javax.baja.hx" public="true" abstract="true">
<description>
BHxFieldEditor is an editor designed to view and edit a&#xa; BObject.  Field Editors are typically smaller editors&#xa; meant to be assembled on a page by a parent HxView.
</description>
<tag name="@author">Andy Frank on 4 Jan 05</tag>
<tag name="@version">$Revision: 9$ $Date: 8/16/10 3:05:07 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.hx.BHxView"/>
</extends>
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;WeakerAccess&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<!-- javax.baja.hx.BHxFieldEditor() -->
<constructor name="BHxFieldEditor" public="true">
<description/>
</constructor>

<!-- javax.baja.hx.BHxFieldEditor.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hx.BHxFieldEditor.makeFor(javax.baja.sys.BObject, javax.baja.sys.Context) -->
<method name="makeFor"  public="true" static="true">
<description>
Return the HxFieldEditor registered on the given object.&#xa; A Bajaux FieldEditor (web:IFormFactorMini) will be provided if one of the following is true:&#xa; 1) The &#x22;uxFieldEditor&#x22; facet is given as part of the Context.&#xa; 2) The &#x22;bajaux=true&#x22; facet is given and a bajaux editor is registered on the obj.&#xa; 3) No hx field editor is available and there is a bajaux field editor available.&#xa; &lt;p&gt;&#xa; If the object is a &#x27;BComplex&#x27; and there are no field editors found and both facets for &#x27;bajaux&#x27; and &#x27;bajauxComplexFallback&#x27; are true, then&#xa; a simple bajaux PropertySheet will be provided.
</description>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.hx.BHxFieldEditor"/>
</return>
</method>

<!-- javax.baja.hx.BHxFieldEditor.makeForUx(javax.baja.sys.BObject, javax.baja.hx.HxOp) -->
<method name="makeForUx"  public="true" static="true">
<description>
Similar to BHxFieldEditor.makeFor, but automatically prefer bajaux editors&#xa; and if no specific editor can be found for a complex, then fallback is the BajauxComplexFE which provides a&#xa; property sheet for editing direct children of the complex. Instead of throwing a NoSuchAgentException a&#xa; simple DefaultFE will be provided as a fallback.
</description>
<tag name="@since">Niagara 4.7</tag>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.hx.BHxFieldEditor"/>
</return>
</method>

<!-- javax.baja.hx.BHxFieldEditor.fwSave(javax.baja.hx.HxOp) -->
<method name="fwSave"  public="true" final="true">
<description>
Save and validate the value.
</description>
<tag name="@since">Niagara 3.6</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxFieldEditor.fwValidate(javax.baja.sys.BObject, javax.baja.hx.HxOp) -->
<method name="fwValidate"  public="true" final="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;UnusedReturnValue&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description>
Validate the value passed in as the parameter, use the HxOp for the context
</description>
<tag name="@since">Niagara 3.6</tag>
<parameter name="value">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="javax.baja.util.CannotValidateException"/>
</throws>
</method>

<!-- javax.baja.hx.BHxFieldEditor.getAgentFilter(javax.baja.agent.AgentFilter, javax.baja.sys.Context) -->
<method name="getAgentFilter"  public="true" static="true">
<description/>
<parameter name="filter">
<type class="javax.baja.agent.AgentFilter"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentFilter"/>
</return>
</method>

<!-- javax.baja.hx.BHxFieldEditor.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.hx.BHxFieldEditor.BAJAUX_KEY -->
<field name="BAJAUX_KEY"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.hx.BHxFieldEditor.PREFER_BAJAUX -->
<field name="PREFER_BAJAUX"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

<!-- javax.baja.hx.BHxFieldEditor.BAJAUX_COMPLEX_FALLBACK_KEY -->
<field name="BAJAUX_COMPLEX_FALLBACK_KEY"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.hx.BHxFieldEditor.BAJAUX_COMPLEX_FALLBACK -->
<field name="BAJAUX_COMPLEX_FALLBACK"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

</class>
</bajadoc>
