<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.mgr.HxMgrCommand" name="HxMgrCommand" packageName="javax.baja.hx.mgr" public="true" abstract="true">
<description>
HxMgrCommand.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">22 Mar 05</tag>
<tag name="@version">$Revision: 4$ $Date: 11/29/05 10:38:19 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<!-- javax.baja.hx.mgr.HxMgrCommand() -->
<constructor name="HxMgrCommand" public="true">
<description>
Constructor.
</description>
</constructor>

<!-- javax.baja.hx.mgr.HxMgrCommand.getDisplayName(javax.baja.sys.Context) -->
<method name="getDisplayName"  public="true" abstract="true">
<description>
Get the display name for this command.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.mgr.HxMgrCommand.getFunctionName() -->
<method name="getFunctionName"  public="true" abstract="true">
<description>
Get the function name for this command. This name&#xa; must be unqiue among the set of commands.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.mgr.HxMgrCommand.getRequireSelection() -->
<method name="getRequireSelection"  public="true">
<description>
Return that this command requires one or more rows&#xa; to be selected in order to be invoked.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.mgr.HxMgrCommand.invoke(javax.baja.hx.mgr.MgrOp) -->
<method name="invoke"  public="true">
<description>
Invoke this command. If this method requries a GUI, then&#xa; return the GUI in the response - the result of the GUI&#xa; will be handled by the &lt;code&gt;save()&lt;/code&gt; method.  If no&#xa; GUI is required, perform the action and do not write to&#xa; the response stream.
</description>
<parameter name="op">
<type class="javax.baja.hx.mgr.MgrOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.mgr.HxMgrCommand.save(javax.baja.hx.mgr.MgrOp) -->
<method name="save"  public="true">
<description>
Save handles the result of the GUI that was sent to the &#xa; user from this command&#x27;s &lt;code&gt;invoke()&lt;/code&gt; method.
</description>
<parameter name="op">
<type class="javax.baja.hx.mgr.MgrOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.mgr.HxMgrCommand.process(javax.baja.hx.mgr.MgrOp) -->
<method name="process"  public="true">
<description>
Process a non-update post request.  Return true if&#xa; this Command handles the process request; if not return false.&#xa; The default implementation routes event requests to the registered&#xa; event handler if one can be found, otherwise return false.
</description>
<parameter name="op">
<type class="javax.baja.hx.mgr.MgrOp"/>
<description/>
</parameter>
<return>
<type class="boolean"/>
<description/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
