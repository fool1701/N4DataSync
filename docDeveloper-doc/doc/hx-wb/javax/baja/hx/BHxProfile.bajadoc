<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.BHxProfile" name="BHxProfile" packageName="javax.baja.hx" public="true" abstract="true">
<description>
BHxProfile is a convenience implementation of BIWebProfile with hooks to customize content.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">10 Jan 05</tag>
<tag name="@version">$Revision: 51$ $Date: 6/27/11 12:44:40 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSingleton"/>
</extends>
<implements>
<type class="javax.baja.web.mobile.BIMobileWebProfile"/>
</implements>
<implements>
<type class="com.tridium.web.IWebEnvProvider"/>
</implements>
<implements>
<type class="javax.baja.web.hx.BIHxProfile"/>
</implements>
<!-- javax.baja.hx.BHxProfile() -->
<constructor name="BHxProfile" protected="true">
<description/>
</constructor>

<!-- javax.baja.hx.BHxProfile.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.listConfig() -->
<method name="listConfig"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return the string keys of the configurable properties.
</description>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getConfig(java.lang.String) -->
<method name="getConfig"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get a configurable property by String key.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getConfigFacets(java.lang.String) -->
<method name="getConfigFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the facets for a configurable property.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.setConfig(java.lang.String, javax.baja.sys.BValue) -->
<method name="setConfig"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Set a configurable property by String key.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getPageTitle(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="getPageTitle"  public="true">
<description>
Get the page title.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.doHead(javax.baja.hx.HxOp) -->
<method name="doHead"  public="true">
<description>
Write custom head code.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.doBody(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="doBody"  public="true">
<description>
Write body. Make sure you only use the buffered content&#xa; methods to write output. Also note that you must pass this&#xa; HxOp to the given BHxView, not a child op.&#xa;&#xa; Since this method is responsible for drawing both the view content and the Profile Chrome, please ensure that the&#xa; Chrome around the view is removed if &lt;code&gt;HxProfile.isFullScreen(BHxView, HxOp)&lt;/code&gt; returns true.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.createOp(javax.baja.web.WebOp) -->
<method name="createOp"  public="true">
<description>
Create the base HxOp for an HxView transaction.
</description>
<parameter name="c">
<type class="javax.baja.web.WebOp"/>
</parameter>
<return>
<type class="javax.baja.hx.HxOp"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.destroyOp(javax.baja.hx.HxOp) -->
<method name="destroyOp"  public="true">
<description>
Destroy the given HxOp. HxView calls this method at the&#xa; end of a transaction.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.getAppName() -->
<method name="getAppName"  public="true">
<description>
Return the application name for this profile. The appName&#xa; serves as a registry key to enable certain agents/views&#xa; that only make sense within a specific application.  See&#xa; AgentInfo.getAppName() for more details.  Default implementation&#xa; returns null which filters out all views with a non-null&#xa; appName.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getAppNames() -->
<method name="getAppNames"  public="true">
<description>
Return the application name(s) for this profile. The appName(s)&#xa; serve as registry keys to enable certain agents/views&#xa; that only make sense within a specific application.  See&#xa; AgentInfo.getAppName() for more details.  The default implementation&#xa; returns no app names if the getAppName is null. If the AppName is&#xa; non-null, the default implemenation is to return that single app name&#xa; in a one entry array.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.hasView(javax.baja.sys.BObject, javax.baja.agent.AgentInfo) -->
<method name="hasView"  public="true">
<description>
Return if this profile supports the specified view.
</description>
<parameter name="target">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="agentInfo">
<type class="javax.baja.agent.AgentInfo"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getViews(javax.baja.hx.HxOp) -->
<method name="getViews"  public="true">
<description>
Return the default list of views for the profile.
</description>
<tag name="@since">Niagara 4.0</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
<description>
The Hx Op.
</description>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
<description>
The Agent List for the Profile.
</description>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.isFullScreen(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="isFullScreen"  public="true">
<description>
This method should be used by the BHxProfile subclass to determine whether the Profile chrome should be&#xa; added around the HxView or not.&#xa; By default, this method returns true if the ViewQuery parameters includes fullScreen=true.
</description>
<tag name="@since">Niagara 4.3</tag>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.hasWebStartAddressBar() -->
<method name="hasWebStartAddressBar"  protected="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description>
Enables or disables the address bar at the top of the window when&#xa; this profile is used within the Niagara Web Start application.&#xa;&#xa; The address bar provides the back and forward buttons, the location&#xa; text field, and a refresh button.&#xa;&#xa; The return value of this method has no effect when the profile is&#xa; used in a browser, it is only used by the Niagara Web Start application.&#xa; The default behavior is for the address bar to be shown.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<tag name="@deprecated">since Niagara 4.13 - will be removed in Niagara 5.0</tag>
<return>
<type class="boolean"/>
<description>
true if the Web Start application&#x27;s address bar should be shown for a user with this profile.
</description>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.hasWebStartStatusBar() -->
<method name="hasWebStartStatusBar"  protected="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description>
Enables or disables the status bar at the bottom of the window when this profile&#xa; is used within the Niagara Web Start application.&#xa;&#xa; The return value of this method has no effect when the profile is&#xa; used in a browser, it is only used by the Niagara Web Start application.&#xa; The default behavior is for the status bar to be shown.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<tag name="@deprecated">since Niagara 4.13 - will be removed in Niagara 5.0</tag>
<return>
<type class="boolean"/>
<description>
true if the Web Start application&#x27;s status bar should be shown for a user with this profile.
</description>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.writeDocument(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="writeDocument"  public="true">
<description>
Write document. You must pass this HxOp to the&#xa; given BHxView, not a child op.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.getCssClassName(javax.baja.hx.HxOp) -->
<method name="getCssClassName"  public="true">
<description>
The result of this method will be added to the class attribute of the main&#xa; form element of the profile.&#xa; This defaults to the TypeName of the BHxProfile.
</description>
<tag name="@since">Niagara 4.12</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.updateDocument(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="updateDocument"  public="true">
<description>
Update document. You must pass this HxOp to the&#xa; given BHxView, not a child op.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.processDocument(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="processDocument"  public="true">
<description>
Process a non-update post. Return true if some view&#xa; handled the message, else return false.  You must&#xa; pass this HxOp to the given BHxView, not a child op.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.saveDocument(javax.baja.hx.BHxView, javax.baja.hx.HxOp) -->
<method name="saveDocument"  public="true">
<description>
Save document. You must pass this HxOp to the given&#xa; BHxView, not a child op.
</description>
<parameter name="view">
<type class="javax.baja.hx.BHxView"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.setError(java.lang.Throwable, javax.baja.hx.HxOp) -->
<method name="setError"  public="true">
<description>
Set the error state for the transaction.  The error&#xa; state is stored on the session, so it exists beyond&#xa; the life of HxOp.  Therefore you must make sure&#xa; &lt;code&gt;BHxProfile.clearError()&lt;/code&gt; is called after&#xa; the error is handled to clear the state.
</description>
<parameter name="err">
<type class="java.lang.Throwable"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.clearError(javax.baja.hx.HxOp) -->
<method name="clearError"  public="true">
<description>
Clear error state.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.displayError(javax.baja.hx.HxOp) -->
<method name="displayError"  public="true">
<description>
Display an error message if an error state is present.&#xa; Do nothing if no error state is set.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.registerEvent(javax.baja.hx.Event) -->
<method name="registerEvent"  public="true">
<description>
Register this event.  Events are registered by&#xa; the event id - which is used to route requests&#xa; from the browser to the correct event handler.
</description>
<parameter name="event">
<type class="javax.baja.hx.Event"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.webEnv() -->
<method name="webEnv"  public="true" static="true">
<description/>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.getWebEnv(javax.baja.web.WebOp) -->
<method name="getWebEnv"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.web.WebOp"/>
</parameter>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
<throws>
<type class="com.tridium.web.WebProcessException"/>
</throws>
</method>

<!-- javax.baja.hx.BHxProfile.getBenchmarkCommand() -->
<method name="getBenchmarkCommand"  public="true">
<description>
Provide the BenchmarkCommand for this profile to obtain load times when&#xa; Logger for &#x27;diagnostics.hx.loadTime&#x27; is set to FINE or higher.
</description>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.BHxProfile.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.themeKey -->
<field name="themeKey"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.fullScreenKey -->
<field name="fullScreenKey"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.autoRefreshKey -->
<field name="autoRefreshKey"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.coreThemeCss -->
<field name="coreThemeCss"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.coreHxCss -->
<field name="coreHxCss"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.coreHxJs -->
<field name="coreHxJs"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.hxContainerCss -->
<field name="hxContainerCss"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.hxContainerJs -->
<field name="hxContainerJs"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.jQueryJs -->
<field name="jQueryJs"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

<!-- javax.baja.hx.BHxProfile.contextMenuCss -->
<field name="contextMenuCss"  public="true" static="true" final="true">
<type class="javax.baja.naming.BOrd"/>
<description/>
</field>

</class>
</bajadoc>
