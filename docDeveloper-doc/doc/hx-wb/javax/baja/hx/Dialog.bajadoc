<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.Dialog" name="Dialog" packageName="javax.baja.hx" public="true">
<description>
Dialog models a modal dialog box in the browser.
</description>
<tag name="@author">Andy Frank on 23 Jun 05</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.hx.Dialog(java.lang.String, javax.baja.hx.Command) -->
<constructor name="Dialog" public="true">
<parameter name="title">
<type class="java.lang.String"/>
</parameter>
<parameter name="handler">
<type class="javax.baja.hx.Command"/>
</parameter>
<description>
Construct a new dialog. &lt;code&gt;handler&lt;/code&gt; is the&#xa; command that will be invoked if &#x27;Ok&#x27; is selected&#xa; in the dialog.
</description>
</constructor>

<!-- javax.baja.hx.Dialog(javax.baja.util.LexiconText, javax.baja.hx.Command) -->
<constructor name="Dialog" public="true">
<parameter name="title">
<type class="javax.baja.util.LexiconText"/>
</parameter>
<parameter name="handler">
<type class="javax.baja.hx.Command"/>
</parameter>
<description>
Construct a new dialog. &lt;code&gt;handler&lt;/code&gt; is the&#xa; command that will be invoked if &#x27;Ok&#x27; is selected&#xa; in the dialog.
</description>
</constructor>

<!-- javax.baja.hx.Dialog(javax.baja.util.LexiconModule, java.lang.String, javax.baja.hx.Command) -->
<constructor name="Dialog" public="true">
<parameter name="lexiconModule">
<type class="javax.baja.util.LexiconModule"/>
</parameter>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="handler">
<type class="javax.baja.hx.Command"/>
</parameter>
<description>
Construct a new dialog using a LexiconModule and string key. handler &lt;code&gt;handler&lt;/code&gt; is the&#xa; command that will be invoked if &#x27;Ok&#x27; is selected&#xa; in the dialog.
</description>
<tag name="@since">Niagara 4.8</tag>
</constructor>

<!-- javax.baja.hx.Dialog(javax.baja.hx.Command) -->
<constructor name="Dialog" public="true">
<parameter name="handler">
<type class="javax.baja.hx.Command"/>
</parameter>
<description>
Construct a new dialog using a blank displayName. It is best to override getTitle(HxOp)&#xa; if you don&#x27;t know the name at the time of the Dialog Construction.&#xa; &lt;code&gt;handler&lt;/code&gt; is the command that will be invoked if &#x27;Ok&#x27; is selected&#xa; in the dialog.
</description>
<tag name="@since">Niagara 4.8</tag>
</constructor>

<!-- javax.baja.hx.Dialog.isSubmit(javax.baja.hx.HxOp) -->
<method name="isSubmit"  public="true">
<description>
Return true if this a submit from a previous dialog.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.open(javax.baja.hx.HxOp) -->
<method name="open"  public="true">
<description>
Open this dialog in the client browser.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.Dialog.getTitle(javax.baja.hx.HxOp) -->
<method name="getTitle"  protected="true">
<description>
Get the title to use for the dialog.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.writeContent(javax.baja.hx.HxOp) -->
<method name="writeContent"  protected="true">
<description>
Write the content for the dialog box.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.Dialog.addOnload(java.lang.String) -->
<method name="addOnload"  protected="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;RedundantThrows&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description>
Add javascript to be executed after the dialog&#xa; is displayed in client browser.
</description>
<tag name="@deprecated">since Niagara 4.4. Use HxOp.addOnload instead.</tag>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.Dialog.getHandler() -->
<method name="getHandler"  public="true">
<description>
Return the Command used to handle submits.
</description>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.getCommands(javax.baja.hx.HxOp) -->
<method name="getCommands"  public="true">
<description>
Since 3.5, but still support original syntax
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.hx.Command" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.getCommands() -->
<method name="getCommands"  public="true">
<description>
Get the commands to display on the dialog. Defaults&#xa; to OK and Cancel, where OK invokes the Handler event.&#xa; Ensure that an OK Button is first in the Array since this is the command&#xa; that will fire when enter is pressed in a text input within the dialog.
</description>
<return>
<type class="javax.baja.hx.Command" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.makeSubmitCommand() -->
<method name="makeSubmitCommand"  public="true">
<description>
Return an instance of the Submit command.
</description>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.makeSubmitCommand(java.lang.String) -->
<method name="makeSubmitCommand"  public="true">
<description>
Return an instance of the Submit command with the&#xa; specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.makeSubmitCommand(javax.baja.util.LexiconText) -->
<method name="makeSubmitCommand"  public="true">
<description>
Return an instance of the Submit command with the&#xa; specified display name.
</description>
<parameter name="displayName">
<type class="javax.baja.util.LexiconText"/>
</parameter>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.makeSubmitCommand(java.lang.String, javax.baja.util.LexiconText) -->
<method name="makeSubmitCommand"  public="true">
<description>
Return an instance of the Submit command with the&#xa; specified name and display name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="displayName">
<type class="javax.baja.util.LexiconText"/>
</parameter>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.makeCancelCommand() -->
<method name="makeCancelCommand"  public="true">
<description>
Return an instance of the Cancel command.
</description>
<return>
<type class="javax.baja.hx.Command"/>
</return>
</method>

<!-- javax.baja.hx.Dialog.write(javax.baja.hx.HxOp) -->
<method name="write"  public="true">
<description>
Start dialog.
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.Dialog.onload -->
<field name="onload"  protected="true">
<type class="java.lang.StringBuilder"/>
<description/>
</field>

</class>
</bajadoc>
