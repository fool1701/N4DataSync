<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.px.BHxPxView" name="BHxPxView" packageName="javax.baja.hx.px" public="true">
<description>
BHxPxView.
</description>
<tag name="@author">Andy Frank on 24 Oct 07</tag>
<tag name="@version">$Revision: 14$ $Date: 8/10/10 10:08:12 AM EDT$</tag>
<tag name="@since">Niagara 3.3</tag>
<extends>
<type class="javax.baja.hx.BHxView"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NiagaraSingleton"/>
</annotation>
<!-- javax.baja.hx.px.BHxPxView() -->
<constructor name="BHxPxView" public="true">
<description/>
</constructor>

<!-- javax.baja.hx.px.BHxPxView(javax.baja.agent.BAbstractPxView) -->
<constructor name="BHxPxView" public="true">
<parameter name="pxView">
<type class="javax.baja.agent.BAbstractPxView"/>
</parameter>
<description>
This constructor is used via reflection from baja:PxUtil.
</description>
</constructor>

<!-- javax.baja.hx.px.BHxPxView.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxView.doWrite(javax.baja.ui.BWidget, javax.baja.hx.HxOp) -->
<method name="doWrite"  protected="true">
<description>
Override hook for HxView.write()
</description>
<parameter name="root">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.doUpdate(javax.baja.ui.BWidget, javax.baja.hx.HxOp) -->
<method name="doUpdate"  protected="true">
<description>
Override hook for HxView.update()
</description>
<parameter name="root">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.doProcess(javax.baja.ui.BWidget, javax.baja.hx.HxOp) -->
<method name="doProcess"  protected="true">
<description>
Override hook for HxView.process()
</description>
<parameter name="root">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.doSave(javax.baja.ui.BWidget, javax.baja.hx.HxOp) -->
<method name="doSave"  protected="true">
<description>
Override hook for HxView.save()
</description>
<parameter name="root">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.doPost(javax.baja.web.WebOp) -->
<method name="doPost"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Overridden since Niagara 4.3 to check for the async px loading use case.
</description>
<parameter name="c">
<type class="javax.baja.web.WebOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.write(javax.baja.hx.HxOp) -->
<method name="write"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.update(javax.baja.hx.HxOp) -->
<method name="update"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.process(javax.baja.hx.HxOp) -->
<method name="process"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.save(javax.baja.hx.HxOp) -->
<method name="save"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxView.getContentGeom(javax.baja.hx.HxOp) -->
<method name="getContentGeom"  public="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.gx.IRectGeom"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxView.INSTANCE -->
<field name="INSTANCE"  public="true" static="true" final="true">
<type class="javax.baja.hx.px.BHxPxView"/>
<description/>
</field>

<!-- javax.baja.hx.px.BHxPxView.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.hx.px.BHxPxView.log -->
<field name="log"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

<!-- javax.baja.hx.px.BHxPxView.DIAGNOSTICS_log -->
<field name="DIAGNOSTICS_log"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
