<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hx" runtimeProfile="wb" qualifiedName="javax.baja.hx.px.BHxPxWidget" name="BHxPxWidget" packageName="javax.baja.hx.px" public="true" abstract="true">
<description>
BHxPxWidget is responsible for creating an hx representation of a BWidget&#xa; used in a Px document. Note that BHxPxWidget works differently from a typical&#xa; HxView in that op.get() will return the BWidget that this agent is supposed&#xa; to model. The widget will already be mounted in a BComponentSpace and any&#xa; bindings will already be active and leased. Also note that in&#xa; module-include.xml this type should be registered as agent on the BWidget it&#xa; is supposed to model.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">6 Jan 05</tag>
<tag name="@version">$Revision: 18$ $Date: 12/16/09 1:28:55 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.hx.BHxView"/>
</extends>
<!-- javax.baja.hx.px.BHxPxWidget() -->
<constructor name="BHxPxWidget" protected="true">
<description/>
</constructor>

<!-- javax.baja.hx.px.BHxPxWidget.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.makeFor(javax.baja.sys.BObject) -->
<method name="makeFor"  public="true" static="true">
<description>
Return the HxPxWidget registered on the given object, or&#xa; throws a NoSuchAgentException if no agent can be found.&#xa; Since no context is passed in, the widget that is created will&#xa; not be appName specific.
</description>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<return>
<type class="javax.baja.hx.px.BHxPxWidget"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.makeFor(javax.baja.sys.BObject, javax.baja.sys.Context) -->
<method name="makeFor"  public="true" static="true">
<description>
Return the HxPxWidget registered on the given object, or&#xa; throws a NoSuchAgentException if no agent can be found. If the context &#xa; can get to valid HxProfile, app specific widgets will be retrieved.&#xa; Deprecated BHxPxWidgets will be lowered in preference unless a BFacets&#xa; containing &#x22;deprecationFilter=false&#x22; is provided.&#xa; In Niagara 4.9 or higher, Bajaux widgets registered on bajaui BWidget will be&#xa; accepted as valid agents.
</description>
<tag name="@since">Niagara 3.4</tag>
<parameter name="obj">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.hx.px.BHxPxWidget"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.ux(javax.baja.ui.BWidget, javax.baja.web.BIWebProfile, javax.baja.sys.Context) -->
<method name="ux"  public="true" static="true">
<description>
Find any Bajaux Widgets associated with the given widget. If no bajaux widget can be found, return null.
</description>
<tag name="@since">Niagara 4.9</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="profile">
<type class="javax.baja.web.BIWebProfile"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.hx.px.BHxPxWidget"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.write(javax.baja.hx.HxOp) -->
<method name="write"  public="true">
<description/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.update(javax.baja.hx.HxOp) -->
<method name="update"  public="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description/>
<tag name="@deprecated"/>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.update(int, int, boolean, javax.baja.hx.HxOp) -->
<method name="update"  public="true">
<description>
Update the widget.  Implementations should write JavaScript content to the&#xa; op.getHtmlWriter() string writer.  Widgets may decide to skip updating to&#xa; save bandwidth or processing time, unless forceUpdate is true.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="width">
<type class="int"/>
</parameter>
<parameter name="height">
<type class="int"/>
</parameter>
<parameter name="forceUpdate">
<type class="boolean"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.needsUpdate(javax.baja.sys.BAbsTime, javax.baja.sys.BAbsTime) -->
<method name="needsUpdate"  public="true">
<description>
Decides if the HxPxWidget should be updated, including a call to the&#xa; update method.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="lastUpdate">
<type class="javax.baja.sys.BAbsTime"/>
<description>
When this widget was last assumed up to date
</description>
</parameter>
<parameter name="lastModified">
<type class="javax.baja.sys.BAbsTime"/>
<description>
When the underlying BWidget was last modified
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if an update is required
</description>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.needsOverflowAuto(javax.baja.hx.HxOp) -->
<method name="needsOverflowAuto"  public="true">
<description>
Decides if the HxPxWidget will get overflow set to &#x27;auto&#x27; or &#x27;hidden&#x27;
</description>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.needsOverflowVisible(javax.baja.hx.HxOp) -->
<method name="needsOverflowVisible"  public="true">
<description>
Decides if the HxPxWidget will get overflow set to &#x27;visible&#x27; or &#x27;hidden&#x27;.&#xa; If both `needsOverflowVisible` and `needsOverflowAuto` are true. Visible will take priority.
</description>
<tag name="@since">Niagara 4.10</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.handle(javax.baja.ui.event.BInputEvent, javax.baja.hx.HxOp) -->
<method name="handle"  public="true">
<description>
Handle an input event that was triggered on the widget. Implementations&#xa; should write JavaScript content to the op.getHtmlWriter() string writer.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BInputEvent"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.getChildWidgets(javax.baja.hx.HxOp) -->
<method name="getChildWidgets"  public="true" final="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description>
You can no longer override this method, please use and override&#xa; getChildWidget(Widget, Context) instead.&#xa; This allow the method to be used by PxValidation without a valid HxOp.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.ui.BWidget" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.getChildWidgets(javax.baja.ui.BWidget, javax.baja.sys.Context) -->
<method name="getChildWidgets"  public="true">
<description>
Calls to getChildWidgets() return children that this HxPxWidget will not be&#xa; drawing itself. These children will be drawn by the HxPx framework. Return&#xa; an empty array to stop children from being drawn automatically.  The&#xa; default implementation returns all of the widget&#x27;s children.
</description>
<tag name="@since">Niagara 4.2</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
<description>
The Widget represented by the HxPxWidget
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
If available, the HxOp, otherwise a regular Context can be used
</description>
</parameter>
<return>
<type class="javax.baja.ui.BWidget" dimension="1"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.getGeom(javax.baja.ui.BWidget, javax.baja.hx.HxOp) -->
<method name="getGeom"  public="true">
<description>
Get the widget&#x27;s location and size
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="javax.baja.gx.IRectGeom"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.isMouseEnabled(javax.baja.hx.HxOp) -->
<method name="isMouseEnabled"  public="true">
<description>
Returns true if the the Widget is currently allowing mouse events to propogate.&#xa; Now like in workbench, if any parent of the widget is disabled, then mouse events will not&#xa; be allowed.
</description>
<tag name="@since">Niagara 3.8</tag>
<parameter name="op">
<type class="javax.baja.hx.HxOp"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.getMouseEventHandler() -->
<method name="getMouseEventHandler"  public="true">
<description>
Returns the default mouse event handler.  Return null to allow&#xa; the browser to handle mouse events.
</description>
<tag name="@since">Niagara 3.5</tag>
<return>
<type class="javax.baja.hx.px.MouseEventCommand"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.validateWidget(javax.baja.ui.BWidget, javax.baja.sys.Context) -->
<method name="validateWidget"  public="true">
<description>
Return a non-null Localized String if something in the widget&#x27;s configuration is not configured correctly&#xa; to work with the target media. To show multiple warnings separate them with a newline character for best display&#xa; results.
</description>
<tag name="@since">Niagara 4.2</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hx.px.BHxPxWidget.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.hx.px.BHxPxWidget.log -->
<field name="log"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

<!-- javax.baja.hx.px.BHxPxWidget.mouseEventCommand -->
<field name="mouseEventCommand"  public="true" final="true">
<type class="javax.baja.hx.px.MouseEventCommand"/>
<description>
This command handles mouse events that occure on the widget.  It&#xa; routes input events to the widget and its binding.
</description>
<tag name="@since">Niagara 3.5</tag>
</field>

</class>
</bajadoc>
