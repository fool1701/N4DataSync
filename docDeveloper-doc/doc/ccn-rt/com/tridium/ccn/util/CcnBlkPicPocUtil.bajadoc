<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ccn" runtimeProfile="rt" qualifiedName="com.tridium.ccn.util.CcnBlkPicPocUtil" name="CcnBlkPicPocUtil" packageName="com.tridium.ccn.util" public="true" abstract="true">
<description>
Utility to parse a table block for instance of pic tables&#xa; represented inside a given CcnResponseBuffer
</description>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="com.tridium.ccn.util.CcnErrorCodes"/>
</implements>
<implements>
<type class="com.tridium.ccn.messages.CcnMessageConst"/>
</implements>
<!-- com.tridium.ccn.util.CcnBlkPicPocUtil() -->
<constructor name="CcnBlkPicPocUtil" public="true">
<description/>
</constructor>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setFieldName(byte[], int, java.lang.String) -->
<method name="setFieldName"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDisplayType(byte[], int, boolean) -->
<method name="setDisplayType"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="dt">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDataType(byte[], int, byte) -->
<method name="setDataType"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="dt">
<type class="byte"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDisplayDigits(byte[], int, byte, com.tridium.ccn.components.BCcnPointEntry) -->
<method name="setDisplayDigits"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="dd">
<type class="byte"/>
</parameter>
<parameter name="pe">
<type class="com.tridium.ccn.components.BCcnPointEntry"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setFieldByteCount(byte[], int, byte, com.tridium.ccn.components.BCcnPointEntry) -->
<method name="setFieldByteCount"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="bc">
<type class="byte"/>
</parameter>
<parameter name="pe">
<type class="com.tridium.ccn.components.BCcnPointEntry"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDiscreteTextOffset(byte[], int, byte, com.tridium.ccn.components.BCcnPointEntry) -->
<method name="setDiscreteTextOffset"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="dto">
<type class="byte"/>
</parameter>
<parameter name="pe">
<type class="com.tridium.ccn.components.BCcnPointEntry"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setConfigFlags(byte[], int, byte) -->
<method name="setConfigFlags"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="cf">
<type class="byte"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setUnits(byte[], int, int) -->
<method name="setUnits"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="units">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDataTableType(byte[], int) -->
<method name="setDataTableType"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="dtt">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDataBlock(byte[], int) -->
<method name="setDataBlock"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="bn">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setStrDataBlock(byte[], int) -->
<method name="setStrDataBlock"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="bn">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setEndDataBlock(byte[], int) -->
<method name="setEndDataBlock"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="bn">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setVariableNum(byte[], int, int) -->
<method name="setVariableNum"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="vn">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.setDescription(byte[], int, java.lang.String) -->
<method name="setDescription"  public="true" static="true">
<description/>
<parameter name="block">
<type class="byte" dimension="1"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="desc">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.getStartOffset(int, int) -->
<method name="getStartOffset"  protected="true" static="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="size">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
<throws>
<type class="com.tridium.ccn.exceptions.CcnException"/>
</throws>
</method>

<!-- com.tridium.ccn.util.CcnBlkPicPocUtil.EXPECTED_PICPOC_TBL_TYPES -->
<field name="EXPECTED_PICPOC_TBL_TYPES"  public="true" static="true">
<type class="int" dimension="1"/>
<description/>
</field>

</class>
</bajadoc>
