<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="ccn" runtimeProfile="rt" qualifiedName="com.tridium.ccn.messages.CcnSendByteArrayRequest" name="CcnSendByteArrayRequest" packageName="com.tridium.ccn.messages" public="true">
<description>
CcnSendByteArrayRequest the class that represents an send-byte-array request&#xa; to the higher level driver code. This message is passed to CcnAsyncRequest&#xa; by the higher level driver code. CcnAsyncRequest passes this message to&#xa; CcnNativeDriver. CcnNativeDriver calls the lower level driver api (native C++ methods),&#xa; blocks, and returns a lower-level response. CcnAsyncRequest will ask this message&#xa; to translate the lower-level response into a CcnResponseMessage. CcnAsyncRequest&#xa; will pass the higher-level CcnResponseMessage back to the higher level driver code.
</description>
<tag name="@author">Ramadevi Telaprolu on 13-Mar-08</tag>
<extends>
<type class="com.tridium.ccn.messages.CcnRequestMessage"/>
</extends>
<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest(byte[]) -->
<constructor name="CcnSendByteArrayRequest" public="true">
<parameter name="newByteArray">
<type class="byte" dimension="1"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.getByteArray() -->
<method name="getByteArray"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="byte" dimension="1"/>
</return>
</method>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.toCcnResponse(com.tridium.platCcn.CcnResponseBuffer) -->
<method name="toCcnResponse"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="responseBuffer">
<type class="com.tridium.platCcn.CcnResponseBuffer"/>
</parameter>
<return>
<type class="com.tridium.ccn.messages.CcnResponseMessage"/>
</return>
</method>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.setPid(byte) -->
<method name="setPid"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="newPid">
<type class="byte"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.write(java.io.OutputStream) -->
<method name="write"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="out">
<type class="java.io.OutputStream"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.toResponse(com.tridium.basicdriver.message.ReceivedMessage) -->
<method name="toResponse"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="resp">
<type class="com.tridium.basicdriver.message.ReceivedMessage"/>
</parameter>
<return>
<type class="com.tridium.basicdriver.message.Message"/>
</return>
</method>

<!-- com.tridium.ccn.messages.CcnSendByteArrayRequest.toString() -->
<method name="toString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

</class>
</bajadoc>
