<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="obixDriver" runtimeProfile="rt" qualifiedName="javax.baja.obix.io.BIObixAgent" name="BIObixAgent" packageName="javax.baja.obix.io" public="true" interface="true" abstract="true" category="interface">
<description>
A series of callbacks allowing one to augment default oBIX &#xa; serialization.&#xa;&#xa; &lt;p&gt;If an object being encoded implements this interface, the agent&#xa; need not be registered as an agent in module-include.xml
</description>
<tag name="@author">&lt;a href=&#x22;mailto:craig.gemmill@tridium.com&#x22;&gt;Craig Gemmill&lt;/a&gt;</tag>
<tag name="@since">Niagara 3.1</tag>
<implements>
<type class="javax.baja.agent.BIAgent"/>
</implements>
<!-- javax.baja.obix.io.BIObixAgent.encode(javax.baja.naming.OrdTarget, javax.baja.obix.io.ObixEncoder) -->
<method name="encode"  public="true" abstract="true">
<description>
Return true to have the encoder continue encoding and &#xa; call the remaining agent methods.&#xa; &lt;ul&gt;&#xa; &lt;li&gt;Return false for manual serialization. No other methods in this&#xa; interface will be called.&lt;/li&gt;&#xa; &lt;li&gt;The encoder is configured for the target, however, any changes&#xa; made to the encoder&#x27;s configuration will persist.&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<parameter name="target">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<parameter name="out">
<type class="javax.baja.obix.io.ObixEncoder"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.obix.io.BIObixAgent.encodeChild(javax.baja.naming.OrdTarget, javax.baja.obix.io.ObixEncoder) -->
<method name="encodeChild"  public="true" default="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;UnusedParameters&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description>
Return false to skip the child or manually encode it.&#xa; The encoder is configured for the child.
</description>
<parameter name="child">
<type class="javax.baja.naming.OrdTarget"/>
<description>
The child.
</description>
</parameter>
<parameter name="out">
<type class="javax.baja.obix.io.ObixEncoder"/>
<description>
The encoder.
</description>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.obix.io.BIObixAgent.encodeFinishing() -->
<method name="encodeFinishing"  public="true" default="true">
<description>
Called just before the closing element is written.  A convenient&#xa; place to append children.&#xa;&#xa; &lt;ul&gt;&#xa; &lt;li&gt;The encoder is configured for the target.&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.obix.io.BIObixAgent.getChildren(javax.baja.naming.OrdTarget[]) -->
<method name="getChildren"  public="true" default="true">
<description>
Passes in the set of children the encoder plans to encode, giving&#xa; the agent an opportunity to add, remove or reorder them.  A modified, &#xa; new or null array can be returned.&#xa; &lt;ul&gt;&#xa; &lt;li&gt;The encoder is configured for the target.&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<parameter name="children">
<type class="javax.baja.naming.OrdTarget" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.naming.OrdTarget" dimension="1"/>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.getContract() -->
<method name="getContract"  public="true" default="true">
<description>
Get any additional contracts which this agent needs to include&#xa; in the list of contracts.
</description>
<return>
<type class="java.lang.String"/>
<description>
contracts to be added to the end of the contract list.
</description>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.getPrimaryContract() -->
<method name="getPrimaryContract"  public="true" default="true">
<description>
Get the primary contract that should appear first before any others.
</description>
<return>
<type class="java.lang.String"/>
<description>
the primary contract if any
</description>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.processAttr(java.lang.String, java.lang.String) -->
<method name="processAttr"  public="true" default="true">
<description>
The value will be null if the attribute has not been set,&#xa; and return null to skip the property.&#xa; &lt;ul&gt;&#xa; &lt;li&gt;The encoder is configured for the target.&lt;/li&gt;&#xa; &lt;li&gt;The encoder must not be modified or written to from within this method.&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.processElem(java.lang.String) -->
<method name="processElem"  public="true" default="true">
<description>
Mechanism to change the target&#x27;s element.&#xa; &lt;ul&gt;&#xa; &lt;li&gt;The encoder is configured for the target.&lt;/li&gt;&#xa; &lt;li&gt;The encoder must not be modified or written to from within this method.&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<parameter name="currentValue">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.addToList(java.lang.String, java.lang.String) -->
<method name="addToList"  public="true" static="true">
<description/>
<parameter name="list">
<type class="java.lang.String"/>
</parameter>
<parameter name="toAdd">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.addToList(java.lang.String, java.lang.String, boolean) -->
<method name="addToList"  public="true" static="true">
<description>
Add an item to a space-separated list of items, such as a list of&#xa; oBIX Contracts.  If the item to be added already exists &lt;i&gt;as a separate item&lt;/i&gt;&#xa; in the list, it will not be re-added.
</description>
<parameter name="list">
<type class="java.lang.String"/>
<description>
original list
</description>
</parameter>
<parameter name="toAdd">
<type class="java.lang.String"/>
<description>
item to be added
</description>
</parameter>
<parameter name="addToHead">
<type class="boolean"/>
<description>
true if item should be added to the front
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description>
the list with any addition that was made.
</description>
</return>
</method>

<!-- javax.baja.obix.io.BIObixAgent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
