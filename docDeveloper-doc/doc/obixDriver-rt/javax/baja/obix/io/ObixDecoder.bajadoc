<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="obixDriver" runtimeProfile="rt" qualifiedName="javax.baja.obix.io.ObixDecoder" name="ObixDecoder" packageName="javax.baja.obix.io" public="true">
<description>
Converts an oBIX XML document into a BObject.
</description>
<tag name="@author">Craig Gemmill</tag>
<tag name="@creation">Sept 2005</tag>
<tag name="@since">Niagara 3.1</tag>
<tag name="@version">$Revision: $ $Date: $</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="javax.baja.sys.Context"/>
</implements>
<!-- javax.baja.obix.io.ObixDecoder(javax.baja.xml.XElem, javax.baja.sys.Context) -->
<constructor name="ObixDecoder" public="true">
<parameter name="root">
<type class="javax.baja.xml.XElem"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<throws>
<type class="java.lang.Exception"/>
</throws>
<description/>
</constructor>

<!-- javax.baja.obix.io.ObixDecoder(java.io.InputStream, javax.baja.sys.Context) -->
<constructor name="ObixDecoder" public="true">
<parameter name="in">
<type class="java.io.InputStream"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<throws>
<type class="java.lang.Exception"/>
</throws>
<description/>
</constructor>

<!-- javax.baja.obix.io.ObixDecoder.addFacets(javax.baja.sys.BFacets) -->
<method name="addFacets"  public="true">
<description>
Adds the given facets to those of the parent context.
</description>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
<description>
Null would clear any facets previously added.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getBase() -->
<method name="getBase"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Context"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getFacet(java.lang.String) -->
<method name="getFacet"  public="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getFacets() -->
<method name="getFacets"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getLanguage() -->
<method name="getLanguage"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getUser() -->
<method name="getUser"  public="true">
<description/>
<return>
<type class="javax.baja.user.BUser"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.decode() -->
<method name="decode"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.obix.io.ObixDecoder.decode(javax.baja.sys.BValue) -->
<method name="decode"  public="true">
<description>
If the proto is a BComplex, it will be copied and the stream will be&#xa; decoded into it.  If the proto is a BSimple, it&#x27;s decodeFromString method&#xa; will most likely be used to deserialize into the proper type.  If the&#xa; proto is null, it better not be an enum that&#x27;s being decoded.
</description>
<parameter name="prototype">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.obix.io.ObixDecoder.getDocument() -->
<method name="getDocument"  public="true">
<description/>
<return>
<type class="javax.baja.xml.XElem"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.isDebug() -->
<method name="isDebug"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.setDebug(boolean) -->
<method name="setDebug"  public="true">
<description>
Setting to true will copy requests to System.out.
</description>
<parameter name="on">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.isUseNew() -->
<method name="isUseNew"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.obix.io.ObixDecoder.setUseNew(boolean) -->
<method name="setUseNew"  public="true">
<description/>
<parameter name="useNew">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
