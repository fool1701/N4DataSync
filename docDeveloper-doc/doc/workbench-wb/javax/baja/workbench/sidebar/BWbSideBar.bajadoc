<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.sidebar.BWbSideBar" name="BWbSideBar" packageName="javax.baja.workbench.sidebar" public="true" abstract="true">
<description>
BWbSideBar is a plugin used to display a tool in the workbench&#xa; sidebar panel.  Sidebars are tools which have utility being &#xa; open at all times independent of the current ord or view.  The&#xa; workbench automatically makes all installed sidebars available&#xa; to the user.  &#xa; &lt;p&gt;&#xa; Sidebars must declare the following entries in their module&#x27;s &#xa; lexicon:&#xa; &lt;ul&gt;&#xa; &lt;li&gt;{typename}.displayName&lt;/li&gt;&#xa; &lt;li&gt;{typename}.icon&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">11 Jul 03</tag>
<tag name="@version">$Revision: 6$ $Date: 11/29/06 8:18:41 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.workbench.BWbPlugin"/>
</extends>
<implements>
<type class="javax.baja.workbench.sidebar.BIWbSideBar"/>
</implements>
<!-- javax.baja.workbench.sidebar.BWbSideBar() -->
<constructor name="BWbSideBar" public="true">
<description/>
</constructor>

<!-- javax.baja.workbench.sidebar.BWbSideBar.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.getInstalled() -->
<method name="getInstalled"  public="true" static="true">
<description>
Get an array of TypeInfos for all the implementations &#xa; of BWbSideBar currently installed on the system.
</description>
<return>
<type class="javax.baja.registry.TypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
By default, paint a 1px border with the outline color.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.getInstalledSideBars() -->
<method name="getInstalledSideBars"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get an array of TypeInfos for all the implementations&#xa; of BWbSideBar currently installed on the system. Delegates to&#xa; static method implementation for BWbSideBar
</description>
<return>
<type class="javax.baja.registry.TypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.hasCloseCommand() -->
<method name="hasCloseCommand"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="boolean"/>
<description>
true if this sidebar should have a &#x27;Close&#x27; command.&#xa; The default is true -- override this method for different&#xa; behavior.
</description>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.activeViewChanged() -->
<method name="activeViewChanged"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This callback is invoked when the active view is &#xa; modified via a hyperlink operation.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.asWidget() -->
<method name="asWidget"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.getLabel() -->
<method name="getLabel"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.sidebar.BWbSideBar.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
