<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.mgr.MgrEditRow" name="MgrEditRow" packageName="javax.baja.workbench.mgr" public="true">
<description>
MgrEditRow is a single row in a MgrEditTable.  It stores&#xa; both the target BComponent plus a copy of each cell.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">17 Dec 03</tag>
<tag name="@version">$Revision: 20$ $Date: 7/27/10 8:02:52 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.workbench.mgr.MgrEditRow(javax.baja.sys.BComponent, java.lang.Object, javax.baja.workbench.mgr.MgrTypeInfo[]) -->
<constructor name="MgrEditRow" public="true">
<parameter name="target">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<parameter name="types">
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</parameter>
<description>
Constructor to edit a specific component.  If there&#xa; if a MgrColumn.Type column then the specified types&#xa; will be available for user selection.
</description>
</constructor>

<!-- javax.baja.workbench.mgr.MgrEditRow.getManager() -->
<method name="getManager"  public="true" final="true">
<description>
If this row is in an edit, then return the &#xa; associated BAbstractManager, otherwise null.
</description>
<return>
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getModel() -->
<method name="getModel"  public="true" final="true">
<description>
Convenience for &lt;code&gt;getManager().getModel()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrModel"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getLearn() -->
<method name="getLearn"  public="true" final="true">
<description>
Convenience for &lt;code&gt;getManager().getLearn()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrLearn"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getEdit() -->
<method name="getEdit"  public="true">
<description>
If this row is in a edit, then return the &#xa; associated MgrEdit, otherwise null.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrEdit"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getTarget() -->
<method name="getTarget"  public="true">
<description>
Get the target component.  If there is a list of &#xa; available of types, then this target represents an&#xa; instance of the currently selected type.
</description>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getTargetParent() -->
<method name="getTargetParent"  public="true">
<description>
Get the target&#x27;s parent component.  If the component isn&#x27;t&#xa; added yet then return MgrEdit.getAddContainer(), otherwise&#xa; return the target&#x27;s current parent.
</description>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getDiscovery() -->
<method name="getDiscovery"  public="true">
<description>
Get the discovery object associated with this row &#xa; if one is available, otherwise return null.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setTagDef(java.lang.Object) -->
<method name="setTagDef"  public="true">
<description>
Set the tag def object associated with this row
</description>
<parameter name="tagDef">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getTagDef() -->
<method name="getTagDef"  public="true">
<description>
Get the tag def object associated with this row &#xa; if one is available, otherwise return null.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getAvailableTypes() -->
<method name="getAvailableTypes"  public="true">
<description>
If this row supports an editable type column then &#xa; return the list of types for the user to choose &#xa; from.  If no types were passed to the constructor&#xa; then return null.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getNameColumnIndex() -->
<method name="getNameColumnIndex"  public="true">
<description>
Get the index of the MgrColumn.Name column or &#xa; return -1 if name is not an available column.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getName() -->
<method name="getName"  public="true">
<description>
Get the name cell or null if name is not an available column.&#xa; If the name hasn&#x27;t been set yet then return null.  This&#xa; name should be escaped.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setName(java.lang.String) -->
<method name="setName"  public="true">
<description>
Set the name cell or ignore if name is not an available column.&#xa; This name should be escaped.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setDefaultName(java.lang.String) -->
<method name="setDefaultName"  public="true">
<description>
If no name has been set yet, then set the name cell to the &#xa; specified string using &lt;code&gt;MgrEdit.getUniqueName()&lt;/code&gt;.  &#xa; If the name is already set or there is no name column &#xa; then ignore this call.  This name should be escaped.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getTypeColumnIndex() -->
<method name="getTypeColumnIndex"  public="true">
<description>
Get the index of the MgrColumn.Type column or &#xa; return -1 if type is not an available column.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getType() -->
<method name="getType"  public="true">
<description>
Get the type cell or null if type is not an available column.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setType(javax.baja.workbench.mgr.MgrTypeInfo) -->
<method name="setType"  public="true">
<description>
Set the type cell or ignore if type is not an available column.
</description>
<parameter name="type">
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getColumns() -->
<method name="getColumns"  public="true" final="true">
<description>
Return &lt;code&gt;getEdit().getColumns()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getColumnIndex(javax.baja.workbench.mgr.MgrColumn) -->
<method name="getColumnIndex"  public="true" final="true">
<description>
Get the editable column index.
</description>
<parameter name="col">
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getCell(int) -->
<method name="getCell"  public="true">
<description>
Get the current value of the cell at the specified column.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.getCell(javax.baja.workbench.mgr.MgrColumn) -->
<method name="getCell"  public="true">
<description>
Get the current value of the cell at the specified column.
</description>
<parameter name="col">
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setCell(int, javax.baja.sys.BValue) -->
<method name="setCell"  public="true">
<description>
Set the current value of the cell at the specified column.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<parameter name="val">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.setCell(javax.baja.workbench.mgr.MgrColumn, javax.baja.sys.BValue) -->
<method name="setCell"  public="true">
<description>
Set the current value of the cell at the specified column.
</description>
<parameter name="col">
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</parameter>
<parameter name="val">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.loadCells() -->
<method name="loadCells"  public="true">
<description>
Make a copy of the cells to use as a working set.  This&#xa; method routes to the MgrColumn.load() method of each&#xa; column.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.saveCells(javax.baja.sys.Context) -->
<method name="saveCells"  public="true">
<description>
Save the cells back to the target component.  This&#xa; method routes to the MgrColumn.save() method of each&#xa; column.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.commit(javax.baja.sys.Context) -->
<method name="commit"  public="true">
<description>
Commit the edit to the database.  This should apply &#xa; all changes to the components up to (but not including) &#xa; the point where it is actually added to the database, &#xa; that occurs via MgrModel.addInstances().
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrEditRow.dumpCells() -->
<method name="dumpCells"  public="true">
<description>
Utility method to dump cell debug to standard out.
</description>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
