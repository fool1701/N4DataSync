<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.mgr.MgrColumn$PropString" name="MgrColumn.PropString" packageName="javax.baja.workbench.mgr" public="true" static="true" innerClass="true">
<description>
The PropString implementation is used to display &#xa; property using the property string name to specify&#xa; the property.
</description>
<extends>
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</extends>
<!-- javax.baja.workbench.mgr.MgrColumn.PropString(java.lang.String, int) -->
<constructor name="PropString" public="true">
<parameter name="propString">
<type class="java.lang.String"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString(java.lang.String, java.lang.String, int) -->
<constructor name="PropString" public="true">
<parameter name="displayName">
<type class="java.lang.String"/>
</parameter>
<parameter name="propString">
<type class="java.lang.String"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.get(java.lang.Object) -->
<method name="get"  public="true">
<description/>
<parameter name="row">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.toDisplayString(java.lang.Object, java.lang.Object, javax.baja.sys.Context) -->
<method name="toDisplayString"  public="true">
<description/>
<parameter name="row">
<type class="java.lang.Object"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.load(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="load"  public="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.save(javax.baja.workbench.mgr.MgrEditRow, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="save"  public="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.toEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor) -->
<method name="toEditor"  public="true">
<description/>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="currentEditor">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<return>
<type class="javax.baja.workbench.BWbEditor"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.fromEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor) -->
<method name="fromEditor"  public="true">
<description/>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="editor">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.toFieldEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor, java.lang.String) -->
<method name="toFieldEditor"  public="true" static="true">
<description>
This is a utility to map the rows to a common field editor.&#xa; If the rows don&#x27;t have a homogeneous type, then return null.
</description>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="currentEditor">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<parameter name="propString">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.workbench.fieldeditor.BWbFieldEditor"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrColumn.PropString.fromFieldEditor(javax.baja.workbench.mgr.MgrEditRow[], int, javax.baja.workbench.BWbEditor, java.lang.String) -->
<method name="fromFieldEditor"  public="true" static="true">
<description>
This is a utility to save back the results from a &#xa; field editor to a list of rows.
</description>
<parameter name="rows">
<type class="javax.baja.workbench.mgr.MgrEditRow" dimension="1"/>
</parameter>
<parameter name="colIndex">
<type class="int"/>
</parameter>
<parameter name="widget">
<type class="javax.baja.workbench.BWbEditor"/>
</parameter>
<parameter name="propString">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
