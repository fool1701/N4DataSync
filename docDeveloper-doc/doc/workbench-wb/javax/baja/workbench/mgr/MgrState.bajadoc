<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.mgr.MgrState" name="MgrState" packageName="javax.baja.workbench.mgr" public="true">
<description>
MgrState is used to save state between hyperlinks.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">19 Jan 04</tag>
<tag name="@version">$Revision: 10$ $Date: 6/8/10 5:23:54 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.workbench.mgr.MgrState() -->
<constructor name="MgrState" public="true">
<description/>
</constructor>

<!-- javax.baja.workbench.mgr.MgrState.toKey(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="toKey"  public="true" static="true">
<description>
Get the String key used to cache the state for the &#xa; specified manager: &lt;code&gt;manager.getType().toString()&lt;/code&gt;.
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.getCached(java.lang.String) -->
<method name="getCached"  public="true" static="true">
<description>
Get the cached MgrState for the specified Type of &#xa; BAbstractManager or return null if not in cache.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrState"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.cache(java.lang.String, javax.baja.workbench.mgr.MgrState) -->
<method name="cache"  public="true" static="true">
<description>
Add the specified state to the cache.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="state">
<type class="javax.baja.workbench.mgr.MgrState"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.restore(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="restore"  public="true">
<description>
This method is called against the cached MgrState instance &#xa; when a manager is being loaded.  This method always routes &#xa; to restoreForType().  If the last save was for the same ord &#xa; as the current manager then this method also routes &#xa; restoreForOrd().
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.restoreForType(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="restoreForType"  protected="true">
<description>
This is a hook for performing a restore based on &#xa; managers of a specified type.  The default implementation&#xa; deals with the learn/tag/template toggle and columns turned on and off.
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.restoreForOrd(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="restoreForOrd"  protected="true">
<description>
This is a hook for performing a restore based on a &#xa; manager for a specified ord.  It is only only called if&#xa; the last manager saved was for against the same ord&#xa; and the current manager.
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.save(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="save"  public="true">
<description>
Save the state of the specified manager which is being &#xa; deactivated.  This method routes to saveForType() and &#xa; saveForOrd().
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.saveForType(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="saveForType"  protected="true">
<description>
Save state based on a type of manager.  The default implementation&#xa; deals with the learn/tag/template toggle and columns turned on and off.
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrState.saveForOrd(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="saveForOrd"  protected="true">
<description>
Save state based for a specified ord.  This is a hook which let&#x27;s &#xa; subclasses easily save the last learn model.  See the restoreForOrd()&#xa; method.
</description>
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
