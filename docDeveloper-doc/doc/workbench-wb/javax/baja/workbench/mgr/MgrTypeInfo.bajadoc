<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.mgr.MgrTypeInfo" name="MgrTypeInfo" packageName="javax.baja.workbench.mgr" public="true" abstract="true">
<description>
MgrTypeInfo wraps information about what type to create&#xa; in the station database when doing a new or add operation.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">12 Jan 04</tag>
<tag name="@version">$Revision: 9$ $Date: 3/28/05 1:41:00 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.workbench.mgr.MgrTypeInfo() -->
<constructor name="MgrTypeInfo" public="true">
<description/>
</constructor>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.makeArray(javax.baja.registry.TypeInfo[]) -->
<method name="makeArray"  public="true" static="true">
<description>
Make a array of MgrTypeInfo from an array of TypeInfo.
</description>
<parameter name="typeInfo">
<type class="javax.baja.registry.TypeInfo" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.makeArray(javax.baja.registry.TypeInfo) -->
<method name="makeArray"  public="true" static="true">
<description>
Convenience for &lt;code&gt;makeArray(Sys.getRegistry().getConcreteTypes(baseType))&lt;/code&gt;.
</description>
<parameter name="baseType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.makeArray(javax.baja.sys.Type) -->
<method name="makeArray"  public="true" static="true">
<description>
Convenience for &lt;code&gt;makeArray(baseType.getTypeInfo())&lt;/code&gt;.
</description>
<parameter name="baseType">
<type class="javax.baja.sys.Type"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.makeArray(javax.baja.agent.AgentInfo[]) -->
<method name="makeArray"  public="true" static="true">
<description>
Make a array of MgrTypeInfo from an array of AgentInfo.
</description>
<parameter name="agentInfo">
<type class="javax.baja.agent.AgentInfo" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.make(javax.baja.registry.TypeInfo) -->
<method name="make"  public="true" static="true">
<description>
Make a MgrTypeInfo from a TypeInfo.
</description>
<parameter name="typeInfo">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.make(javax.baja.agent.AgentInfo) -->
<method name="make"  public="true" static="true">
<description>
Make a MgrTypeInfo from a AgentInfo.
</description>
<parameter name="agentInfo">
<type class="javax.baja.agent.AgentInfo"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.make(javax.baja.sys.Type) -->
<method name="make"  public="true" static="true">
<description>
Make a MgrTypeInfo from a Type.
</description>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.make(javax.baja.sys.BComponent) -->
<method name="make"  public="true" static="true">
<description>
Make a MgrTypeInfo from a prototype BComponent.
</description>
<parameter name="proto">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.getDisplayName() -->
<method name="getDisplayName"  public="true" abstract="true">
<description>
Get the display name of the type to create.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.getIcon() -->
<method name="getIcon"  public="true" abstract="true">
<description>
Get the icon of the type to create.
</description>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.newInstance() -->
<method name="newInstance"  public="true" abstract="true">
<description>
Allocate an instance of this type.
</description>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.isMatchable(javax.baja.sys.BComponent) -->
<method name="isMatchable"  public="true" abstract="true">
<description>
Return true if this type may be used to perform &#xa; a match against the specified database component.
</description>
<parameter name="database">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Default implementation of equals compares display name.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.getCompareString() -->
<method name="getCompareString"  protected="true">
<description>
Get string for use in equals method.
</description>
<tag name="@since">Niagara 3.6.48</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.toSlotName() -->
<method name="toSlotName"  public="true">
<description>
Get the type as a slot name.  The default implementation&#xa; returns the display name stripped of spaces and escaped.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.toString() -->
<method name="toString"  public="true">
<description>
Return &lt;code&gt;getDisplayName()&lt;/code&gt;
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTypeInfo.markDuplicates(javax.baja.workbench.mgr.MgrTypeInfo[]) -->
<method name="markDuplicates"  public="true" static="true">
<description>
This is a utility method to check an array of MgrTypeInfo for&#xa; duplicate types.  Any TypeInfoImpl with duplicate type names will &#xa; have the duplicate flag set true.  This is used by MgrController&#xa; when implementing the &#x22;new&#x22; command.&lt;p&gt;&#xa; This utility has public access to allow its use if functionality &#xa; in MgrController is overridden.
</description>
<tag name="@since">Niagara 3.6.48 - becomes public in 3.8</tag>
<parameter name="types">
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
