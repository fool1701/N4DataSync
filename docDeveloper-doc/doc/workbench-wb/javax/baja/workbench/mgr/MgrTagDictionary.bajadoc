<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.mgr.MgrTagDictionary" name="MgrTagDictionary" packageName="javax.baja.workbench.mgr" public="true">
<description>
MgrTagDictionary is the support for integration of tag dictionaries into&#xa; manager views.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">3/3/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.workbench.mgr.MgrSupport"/>
</extends>
<!-- javax.baja.workbench.mgr.MgrTagDictionary(javax.baja.workbench.mgr.BAbstractManager) -->
<constructor name="MgrTagDictionary" public="true">
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<description>
Constructor.
</description>
</constructor>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.init() -->
<method name="init"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getNamespace() -->
<method name="getNamespace"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.setNamespace(java.lang.String) -->
<method name="setNamespace"  public="true">
<description/>
<parameter name="namespace">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getTagFilter() -->
<method name="getTagFilter"  public="true">
<description/>
<return>
<type class="javax.baja.workbench.mgr.tag.BTagFilterEnum"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.setTagFilter(javax.baja.workbench.mgr.tag.BTagFilterEnum) -->
<method name="setTagFilter"  public="true">
<description/>
<parameter name="tagFilter">
<type class="javax.baja.workbench.mgr.tag.BTagFilterEnum"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getTagDictionaryService() -->
<method name="getTagDictionaryService"  public="true">
<description>
Lookup the TagDictionaryService based on the session of&#xa; the target component.
</description>
<return>
<type class="javax.baja.tag.TagDictionaryService"/>
<description>
Returns the TagDictionaryService for the current&#xa;   session or null if the TagDictionaryService is not available.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.makePane() -->
<method name="makePane"  public="true">
<description>
Get the tag dictionary pane.
</description>
<return>
<type class="javax.baja.ui.BWidget"/>
<description>
Returns the tag dictionary pane.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.makePane(javax.baja.sys.BComponent) -->
<method name="makePane"  public="true">
<description>
Get the tag dictionary pane.
</description>
<parameter name="tagEditComp">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="javax.baja.ui.BWidget"/>
<description>
Returns the tag dictionary pane.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getTable() -->
<method name="getTable"  public="true">
<description>
Get the table widget that displays the tags.
</description>
<return>
<type class="javax.baja.ui.treetable.BTreeTable"/>
<description>
Returns the tree table of tags.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getSelectedObjects() -->
<method name="getSelectedObjects"  public="true">
<description>
Get the currently selected objects.  The objects will&#xa; all be of one of the types managed by a TagDictionary.
</description>
<return>
<type class="java.lang.Object" dimension="1"/>
<description>
Returns the array of currently selected objects.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.clearSelectedObjects() -->
<method name="clearSelectedObjects"  public="true">
<description>
Clear the currently object selection.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.isTaggable(javax.baja.tag.TagInfo, javax.baja.tag.Entity) -->
<method name="isTaggable"  public="true">
<description>
Test whether the specified tag is valid for the specified entity.&#xa; The default implementation is to return tag.isValidFor(entity).
</description>
<parameter name="tag">
<type class="javax.baja.tag.TagInfo"/>
<description>
The tag to test.
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
The entity to test the tag on.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if the tag is valid for the entity,&#xa;   false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.isTaggable(javax.baja.tag.TagGroupInfo, javax.baja.tag.Entity) -->
<method name="isTaggable"  public="true">
<description>
Test whether the specified tag group is valid for the&#xa; specified entity. The default implementation is&#xa; to return tagGroup.isValidFor(entity).
</description>
<parameter name="tagGroup">
<type class="javax.baja.tag.TagGroupInfo"/>
<description>
The tagGroup to test.
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
The entity to the tag group on.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if the tag group is valid for the entity,&#xa;   false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.isExisting(java.lang.Object) -->
<method name="isExisting"  public="true">
<description>
Return true if the specified tagInfo tags are already on the&#xa; selected station database components.&#xa; &lt;code&gt;isExisting(Object)&lt;/code&gt;.
</description>
<parameter name="tagInfo">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.getNewEntityPrototypes() -->
<method name="getNewEntityPrototypes"  public="true">
<description>
Create an array of prototype entities from the list of types&#xa; returned by MgrModel.getNewTypes().
</description>
<return>
<type class="javax.baja.tag.Entity" dimension="1"/>
<description>
Returns a list of prototype entities that each have&#xa;   a parent relationship to the manager target component, and&#xa;   the set of implied tags for their type.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.doTagIt(javax.baja.sys.Context) -->
<method name="doTagIt"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.setMarkerTags(java.lang.Object[], javax.baja.sys.BComponent[], javax.baja.sys.Context) -->
<method name="setMarkerTags"  protected="true">
<description>
Add the selected set of marker tags to all database objects and display&#xa; a message indicating that the operation is complete.
</description>
<parameter name="tagObjects">
<type class="java.lang.Object" dimension="1"/>
<description>
The marker tags to add.
</description>
</parameter>
<parameter name="db">
<type class="javax.baja.sys.BComponent" dimension="1"/>
<description>
The database objects to add tags to.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
<description>
The operation cannot be undone and returns null.
</description>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.setValueAndMarkerTags(java.lang.Object[], javax.baja.sys.BComponent[], javax.baja.sys.Context) -->
<method name="setValueAndMarkerTags"  protected="true">
<description>
Add the selected set of value tags and marker tags to all database objects.&#xa; The user will be prompted to edit or accept values for all value tags.
</description>
<parameter name="tagObjects">
<type class="java.lang.Object" dimension="1"/>
<description>
The tags and tag groups to add.
</description>
</parameter>
<parameter name="db">
<type class="javax.baja.sys.BComponent" dimension="1"/>
<description>
The database objects to add tags to.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
<description>
This operation cannot be undone.  Returns null.
</description>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.makeTagColumns() -->
<method name="makeTagColumns"  public="true">
<description/>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.mgr.MgrTagDictionary.makeTagColumns(java.lang.Object[]) -->
<method name="makeTagColumns"  public="true">
<description/>
<parameter name="tagObjects">
<type class="java.lang.Object" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

</class>
</bajadoc>
