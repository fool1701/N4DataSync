<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.BWbShell" name="BWbShell" packageName="javax.baja.workbench" public="true" abstract="true">
<description>
BWbShell is a BWidgetShell for workbench applications.
</description>
<tag name="@author">Brian Frank on 7 Jan 01</tag>
<tag name="@version">$Revision: 15$ $Date: 7/23/08 4:51:23 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BWidgetShell"/>
</extends>
<implements>
<type class="javax.baja.ui.BIHyperlinkShell"/>
</implements>
<implements>
<type class="javax.baja.ui.BIActiveOrdShell"/>
</implements>
<!-- javax.baja.workbench.BWbShell() -->
<constructor name="BWbShell" public="true">
<description/>
</constructor>

<!-- javax.baja.workbench.BWbShell(java.lang.Object) -->
<constructor name="BWbShell" public="true">
<parameter name="peer">
<type class="java.lang.Object"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.workbench.BWbShell.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getActiveOrd() -->
<method name="getActiveOrd"  public="true" abstract="true">
<description>
Get the BOrd the plugin shell is currently viewing.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getActiveOrdTarget() -->
<method name="getActiveOrdTarget"  public="true" abstract="true">
<description>
Get resolved OrdTarget of the active ord.
</description>
<return>
<type class="javax.baja.naming.OrdTarget"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getActiveView() -->
<method name="getActiveView"  public="true" abstract="true">
<description>
Get the BWbView currently being used to&#xa; view (and/or edit) the active ord.
</description>
<return>
<type class="javax.baja.workbench.view.BWbView"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getProfile() -->
<method name="getProfile"  public="true" abstract="true">
<description>
Get the BWbProfile which defines how the WbShell&#xa; is used for a specific application.
</description>
<return>
<type class="javax.baja.workbench.BWbProfile"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.hyperlink(javax.baja.naming.BOrd) -->
<method name="hyperlink"  public="true" final="true">
<description>
Convenience for &lt;code&gt;hyperlink(new HyperlinkInfo(ord))&lt;/code&gt;&#xa; which does a replace hyperlink to the specified ord.
</description>
<parameter name="ord">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getRefreshCommand() -->
<method name="getRefreshCommand"  public="true" abstract="true">
<description>
Get the command used to refresh the current plugin.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getSaveCommand() -->
<method name="getSaveCommand"  public="true" abstract="true">
<description>
Get the command used to save the current plugin.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getExportCommand() -->
<method name="getExportCommand"  public="true" abstract="true">
<description>
Get the command used to export the current plugin.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getBackCommand() -->
<method name="getBackCommand"  public="true" abstract="true">
<description>
Get the command used to navigate back one view.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getForwardCommand() -->
<method name="getForwardCommand"  public="true" abstract="true">
<description>
Get the command used to navigate forward one view.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getLogoffCommand() -->
<method name="getLogoffCommand"  public="true" abstract="true">
<description>
Get the command used to log off the current session.
</description>
<return>
<type class="javax.baja.ui.Command"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.addActivityListener(javax.baja.workbench.BWbShell.ActivityListener) -->
<method name="addActivityListener"  public="true">
<description>
Add an ActivityListener that gets notified each time user activity&#xa; is made in workbench.
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="listener">
<type class="javax.baja.workbench.BWbShell$ActivityListener"/>
<description>
the listener to add
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.removeActivityListener(javax.baja.workbench.BWbShell.ActivityListener) -->
<method name="removeActivityListener"  public="true">
<description>
remove an ActivityListener
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="listener">
<type class="javax.baja.workbench.BWbShell$ActivityListener"/>
<description>
the listener to remove
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.notifyTimeout(javax.baja.ui.BWidget, javax.baja.naming.BISession) -->
<method name="notifyTimeout"  public="true">
<description>
Open a dialog to notify the user that their session is about to timeout
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
<description>
the parent widget
</description>
</parameter>
<parameter name="session">
<type class="javax.baja.naming.BISession"/>
<description>
the session that is expiring
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the timeout should be reset, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getWbShell(javax.baja.ui.BWidget) -->
<method name="getWbShell"  public="true" static="true">
<description>
Get the widget shell cast to a BWbShell.  If the widget&#xa; is not mounted in a shell or the shell isn&#x27;t an instanceof&#xa; BWbShell then return null.  If the widget is in a dialog,&#xa; then find the parent BWbShell.
</description>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.workbench.BWbShell"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.getContext() -->
<method name="getContext"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Context"/>
</return>
</method>

<!-- javax.baja.workbench.BWbShell.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
