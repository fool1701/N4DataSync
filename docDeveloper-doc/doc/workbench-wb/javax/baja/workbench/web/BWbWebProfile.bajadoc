<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.web.BWbWebProfile" name="BWbWebProfile" packageName="javax.baja.workbench.web" public="true" abstract="true">
<description>
BWbWebProfile is the base class for Workbench Profiles to&#xa; be used either in a web browser in conjunction with the &#xa; Java Plugin, or with an application launched via Java &#xa; Web Start.&#xa; &lt;p&gt;&#xa; All BWbWebProfiles must provide two public constructors,&#xa; one which takes a BWbShell and one which takes no arguments.&#xa; &#xa; The general policy of subclasses should be to keep the&#xa; restrictions of the base class since it removes features&#xa; not applicable to the general desktop profiles.&#xa; &lt;p&gt;&#xa; BWbWebProfile provides a pair of methods to test the environment&#xa; the shell is running in. These methods may be useful if overriding base&#xa; class methods such as &lt;code&gt;makeToolBar()&lt;/code&gt;. The &lt;code&gt;isApplet()&lt;/code&gt;&#xa; method will return &lt;code&gt;true&lt;/code&gt; if the shell is running as an&#xa; Applet inside a web browser. Conversely, the &lt;code&gt; isWebStart()&lt;/code&gt; &#xa; method will return &lt;code&gt;true&lt;/code&gt; if the shell is running as a Java&#xa; Web Start application: a non-Plugin environment that runs completely&#xa; outside of a browser. Subclasses of BWbWebProfile may want to use these &#xa; methods to tailor their functionality and appearance according to the &#xa; current environment. For example, when running as an Applet, the profile &#xa; will use the browser&#x27;s own back and forward buttons, whereas in the Web Start &#xa; environment, the profile will provide its own back and forward buttons&#xa; on the tool bar.
</description>
<tag name="@deprecated">since Niagara 4.13 - will be removed in Niagara 5.0</tag>
<tag name="@author">Brian Frank on 16 Mar 04</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.workbench.BWbProfile"/>
</extends>
<implements>
<type class="javax.baja.web.BIWebProfile"/>
</implements>
<implements>
<type class="com.tridium.web.IWebEnvProvider"/>
</implements>
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<!-- javax.baja.workbench.web.BWbWebProfile(javax.baja.workbench.BWbShell) -->
<constructor name="BWbWebProfile" public="true">
<parameter name="shell">
<type class="javax.baja.workbench.BWbShell"/>
</parameter>
<description>
All BWbWebProfiles must provide two public constructors,&#xa; one which takes a BWbShell and one which takes no arguments.
</description>
</constructor>

<!-- javax.baja.workbench.web.BWbWebProfile() -->
<constructor name="BWbWebProfile" public="true">
<description>
All BWbWebProfiles must provide two public constructors,&#xa; one which takes a BWbShell and one which takes no arguments.
</description>
</constructor>

<!-- javax.baja.workbench.web.BWbWebProfile.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.listConfig() -->
<method name="listConfig"  public="true">
<description>
Return the string keys of the configurable properties.
</description>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.getConfig(java.lang.String) -->
<method name="getConfig"  public="true">
<description>
Get a configurable property by String key.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.getConfigFacets(java.lang.String) -->
<method name="getConfigFacets"  public="true">
<description>
Get the facets for a configurable property.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.setConfig(java.lang.String, javax.baja.sys.BValue) -->
<method name="setConfig"  public="true">
<description>
Set a configurable property by String key.
</description>
<parameter name="key">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.makeMenuBar() -->
<method name="makeMenuBar"  public="true">
<description/>
<return>
<type class="javax.baja.ui.menu.BIMenuBar"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.makeToolBar() -->
<method name="makeToolBar"  public="true">
<description/>
<return>
<type class="javax.baja.ui.toolbar.BIToolBar"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.makeStatusBar() -->
<method name="makeStatusBar"  public="true">
<description/>
<return>
<type class="javax.baja.workbench.BWbStatusBar"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasSideBar() -->
<method name="hasSideBar"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasSideBar(javax.baja.registry.TypeInfo) -->
<method name="hasSideBar"  public="true">
<description/>
<parameter name="typeInfo">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasView(javax.baja.sys.BObject, javax.baja.agent.AgentInfo) -->
<method name="hasView"  public="true">
<description/>
<parameter name="target">
<type class="javax.baja.sys.BObject"/>
</parameter>
<parameter name="agentInfo">
<type class="javax.baja.agent.AgentInfo"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasTools() -->
<method name="hasTools"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.getNavRootOrd() -->
<method name="getNavRootOrd"  public="true">
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.append(java.lang.String[], java.lang.String[]) -->
<method name="append"  protected="true" static="true">
<description>
Returns a joined String array (strs1 + strs2)
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="strs1">
<type class="java.lang.String" dimension="1"/>
</parameter>
<parameter name="strs2">
<type class="java.lang.String" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.isApplet() -->
<method name="isApplet"  protected="true" final="true">
<annotation><type class="java.lang.Deprecated"/>
</annotation>
<description>
Tests if the shell is running in a web browser environment using&#xa; the Java Plugin. Profiles may wish to use this method to tailor&#xa; their appearance and functionality according to the environment.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<return>
<type class="boolean"/>
<description>
true if the shell is running as a Java Applet inside a web browser.
</description>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.isWebStart() -->
<method name="isWebStart"  protected="true" final="true">
<description>
Tests if the shell is running in the Niagara Web Start application.&#xa; If this method returns true, it means the profile is running outside of a&#xa; web browser. Profiles may wish to use this method to tailor their appearance&#xa; and functionality according to the environment.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<return>
<type class="boolean"/>
<description>
true if the shell is running in a Niagara Web Start launched application.
</description>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasWebStartAddressBar() -->
<method name="hasWebStartAddressBar"  public="true">
<description>
Enables or disables the address bar at the top of the window when&#xa; this profile is used within the Niagara Web Start application.&#xa; &#xa; The address bar contains a back button, forward button, the location&#xa; text field and a refresh button. It is part of the Web Start application,&#xa; not part of the Workbench shell.&#xa; &#xa; The return value of this method has no effect when the profile is used&#xa; with a Java plug-in hosted applet in a web browser environment.&#xa; &#xa; The default behavior is for the address bar to be shown.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<return>
<type class="boolean"/>
<description>
true if the Web Start application&#x27;s address bar should be shown for a user with this profile.
</description>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.hasWebStartStatusBar() -->
<method name="hasWebStartStatusBar"  public="true">
<description>
Enables or disables the status bar at the bottom of the window when this&#xa; profile is used with the Niagara Web Start application. &#xa; &#xa; The return value of this method has no effect when the profile is used&#xa; with a Java plug-in hosted applet in a web browser environment.&#xa; &#xa; The default behavior is for the status bar to be shown.
</description>
<tag name="@since">Niagara 3.8U1 / Niagara 4.2</tag>
<return>
<type class="boolean"/>
<description>
true if the Web Start application&#x27;s status bar should be shown for a user with this profile.
</description>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.webEnv() -->
<method name="webEnv"  public="true" static="true">
<description/>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.getWebEnv(javax.baja.web.WebOp) -->
<method name="getWebEnv"  public="true" final="true">
<description/>
<parameter name="op">
<type class="javax.baja.web.WebOp"/>
</parameter>
<return>
<type class="javax.baja.web.IWebEnv"/>
</return>
<throws>
<type class="com.tridium.web.WebProcessException"/>
</throws>
</method>

<!-- javax.baja.workbench.web.BWbWebProfile.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.workbench.web.BWbWebProfile.theme -->
<field name="theme"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

</class>
</bajadoc>
