<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.tool.BWbTool" name="BWbTool" packageName="javax.baja.workbench.tool" public="true" abstract="true">
<description>
BWbTool is a plugin which provides a stand alone&#xa; utility which is automatically made available in&#xa; the workbench environment.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">14 Oct 03</tag>
<tag name="@version">$Revision: 4$ $Date: 3/28/05 1:41:02 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<!-- javax.baja.workbench.tool.BWbTool() -->
<constructor name="BWbTool" public="true">
<description/>
</constructor>

<!-- javax.baja.workbench.tool.BWbTool.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.workbench.tool.BWbTool.getInstalled() -->
<method name="getInstalled"  public="true" static="true">
<description>
Get an array of TypeInfos for all the implementations &#xa; of BWbTool currently installed on the system.
</description>
<return>
<type class="javax.baja.registry.TypeInfo" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.tool.BWbTool.getLicenseFeature() -->
<method name="getLicenseFeature"  public="true">
<description>
If this tool is to be licensed using the standard licensing&#xa; mechanism then override this method to return the Feature or &#xa; return null for no license checks.  Convention is that the&#xa; vendor and feature name matches the declaring module.
</description>
<return>
<type class="javax.baja.license.Feature"/>
</return>
</method>

<!-- javax.baja.workbench.tool.BWbTool.invoke(javax.baja.workbench.BWbShell) -->
<method name="invoke"  public="true" abstract="true">
<description>
Invoke the tool.
</description>
<parameter name="shell">
<type class="javax.baja.workbench.BWbShell"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.workbench.tool.BWbTool.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
