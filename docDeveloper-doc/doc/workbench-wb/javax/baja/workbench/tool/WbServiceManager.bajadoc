<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.tool.WbServiceManager" name="WbServiceManager" packageName="javax.baja.workbench.tool" public="true" interface="true" abstract="true" category="interface">
<description>
WbServiceManager is used to manage the lifecycle and configuration &#xa; of BWbServices.  Use the &lt;code&gt;BWbService.getManager()&lt;/code&gt; &#xa; to access.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">14 Oct 03</tag>
<tag name="@version">$Revision: 3$ $Date: 3/28/05 1:41:02 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.workbench.tool.WbServiceManager.start(javax.baja.registry.TypeInfo) -->
<method name="start"  public="true" abstract="true">
<description>
Start the specified service.
</description>
<parameter name="serviceType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.start(javax.baja.workbench.tool.BWbService) -->
<method name="start"  public="true" abstract="true">
<description>
Start the specified service.
</description>
<parameter name="service">
<type class="javax.baja.workbench.tool.BWbService"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.stop(javax.baja.registry.TypeInfo) -->
<method name="stop"  public="true" abstract="true">
<description>
Stop the specified service.
</description>
<parameter name="serviceType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.stop(javax.baja.workbench.tool.BWbService) -->
<method name="stop"  public="true" abstract="true">
<description>
Stop the specified service.
</description>
<parameter name="service">
<type class="javax.baja.workbench.tool.BWbService"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.isRunning(javax.baja.registry.TypeInfo) -->
<method name="isRunning"  public="true" abstract="true">
<description>
Return if the specified service is running.
</description>
<parameter name="serviceType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.isAutoStart(javax.baja.registry.TypeInfo) -->
<method name="isAutoStart"  public="true" abstract="true">
<description>
Return if the specified service is configured as auto start.
</description>
<parameter name="serviceType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.tool.WbServiceManager.setAutoStart(javax.baja.registry.TypeInfo, boolean) -->
<method name="setAutoStart"  public="true" abstract="true">
<description>
Set the autoStart property of the specified service.  If&#xa; the service is not running, this automatically starts it too.
</description>
<parameter name="serviceType">
<type class="javax.baja.registry.TypeInfo"/>
</parameter>
<parameter name="autoStart">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
