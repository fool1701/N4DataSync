<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="workbench" runtimeProfile="wb" qualifiedName="javax.baja.workbench.component.table.ComponentTableModel" name="ComponentTableModel" packageName="javax.baja.workbench.component.table" public="true">
<description>
ComponentTableModel is the specialization of TableModel&#xa; for the BComponentTable class.  It provides a table model&#xa; where the rows are a list of BComponents.&#xa; &lt;p&gt;&#xa; The columns are configurable using the Column callback &#xa; interface.  For example to configure the model to dislay &#xa; three columns which are the component name, property x, and &#xa; property y:&#xa; &lt;pre&gt;&#xa;   model.setColumns(new ComponentTableModel.Column[]&#xa;    {&#xa;      new ComponentTableModel.DisplayNameColumn(),&#xa;      new ComponentTableModel.PropertyColumn(x),&#xa;      new ComponentTableModel.PropertyColumn(y)&#xa;    });&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">21 Mar 02</tag>
<tag name="@version">$Revision: 13$ $Date: 12/19/07 4:13:50 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.table.TableModel"/>
</extends>
<!-- javax.baja.workbench.component.table.ComponentTableModel(javax.baja.workbench.component.table.ComponentTableModel.Column[]) -->
<constructor name="ComponentTableModel" public="true">
<parameter name="columns">
<type class="javax.baja.workbench.component.table.ComponentTableModel$Column" dimension="1"/>
</parameter>
<description>
Constructor with columns.
</description>
</constructor>

<!-- javax.baja.workbench.component.table.ComponentTableModel() -->
<constructor name="ComponentTableModel" public="true">
<description>
Default constructor creates one column using DisplayNameColumn.
</description>
</constructor>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getComponentAt(int) -->
<method name="getComponentAt"  public="true">
<description>
Get the component for the specified row.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getRows() -->
<method name="getRows"  public="true">
<description>
Get the list of all components in the model.
</description>
<return>
<type class="javax.baja.sys.BComponent" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getRowByName(java.lang.String) -->
<method name="getRowByName"  public="true">
<description>
Get a row number for the BComponent with &#xa; the specified name, or -1 if no row exists&#xa; with that name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getRowsByName(java.lang.String[]) -->
<method name="getRowsByName"  public="true">
<description>
Get the row number for the BComponent&#x27;s with &#xa; the specified names.
</description>
<parameter name="names">
<type class="java.lang.String" dimension="1"/>
</parameter>
<return>
<type class="int" dimension="1"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.addRow(javax.baja.sys.BComponent) -->
<method name="addRow"  public="true">
<description>
Add a new row using the specified component.
</description>
<parameter name="component">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.addRows(javax.baja.sys.BComponent[]) -->
<method name="addRows"  public="true">
<description>
Add a row for each specified component.
</description>
<parameter name="components">
<type class="javax.baja.sys.BComponent" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.removeRow(java.lang.String) -->
<method name="removeRow"  public="true">
<description>
Remove a row by property name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if a row was found and removed for the&#xa;   specified component name, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.removeRow(javax.baja.sys.BComponent) -->
<method name="removeRow"  public="true">
<description>
Remove the row for the specified component.
</description>
<parameter name="component">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if a row was found and removed for the&#xa;   specified component, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.removeAllRows() -->
<method name="removeAllRows"  public="true">
<description>
Remove all rows.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.setRows(javax.baja.sys.BComponent[]) -->
<method name="setRows"  public="true">
<description>
Remove all current rows, and add specified rows.
</description>
<parameter name="components">
<type class="javax.baja.sys.BComponent" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.renameRow(java.lang.String, java.lang.String) -->
<method name="renameRow"  public="true" synchronized="true">
<description>
This method should be called when a component is renamed.
</description>
<parameter name="oldName">
<type class="java.lang.String"/>
</parameter>
<parameter name="newName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if a row was found for the component&#xa;   with the old name, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.setColumns(javax.baja.workbench.component.table.ComponentTableModel.Column[]) -->
<method name="setColumns"  public="true">
<description>
Set the columns.
</description>
<parameter name="columns">
<type class="javax.baja.workbench.component.table.ComponentTableModel$Column" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.reorderRows(int[]) -->
<method name="reorderRows"  public="true">
<description>
Reorder the rows with the specified indices &#xa; of the current ordering.
</description>
<parameter name="origIndices">
<type class="int" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getRowCount() -->
<method name="getRowCount"  public="true" synchronized="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getColumnCount() -->
<method name="getColumnCount"  public="true" synchronized="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getColumnName(int) -->
<method name="getColumnName"  public="true" synchronized="true">
<description/>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getRowIcon(int) -->
<method name="getRowIcon"  public="true" synchronized="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getSubject(int) -->
<method name="getSubject"  public="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.getValueAt(int, int) -->
<method name="getValueAt"  public="true">
<description/>
<parameter name="row">
<type class="int"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.isColumnSortable(int) -->
<method name="isColumnSortable"  public="true">
<description>
All columns are sortable.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.workbench.component.table.ComponentTableModel.sortByColumn(int, boolean) -->
<method name="sortByColumn"  public="true" synchronized="true">
<description>
Sort the specified column.  If the column contains&#xa; Objects which implement the Comparable interface then&#xa; that is how the sort is performed.  Otherwise the sort&#xa; is performed on the result of the toString() method&#xa; of the Object value.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<parameter name="ascending">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
