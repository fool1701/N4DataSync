<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="tagdictionary" runtimeProfile="rt" qualifiedName="javax.baja.tagdictionary.BRelationInfoList" name="BRelationInfoList" packageName="javax.baja.tagdictionary" public="true">
<description>
BRelationInfoList is a list of &lt;code&gt;RelationInfo&lt;/code&gt;s.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">2/28/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.tagdictionary.BInfoList"/>
</extends>
<implements>
<parameterizedType class="java.lang.Iterable">
<args>
<type class="javax.baja.tag.RelationInfo"/>
</args>
</parameterizedType>
</implements>
<!-- javax.baja.tagdictionary.BRelationInfoList() -->
<constructor name="BRelationInfoList" public="true">
<description/>
</constructor>

<!-- javax.baja.tagdictionary.BRelationInfoList.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.checkAdd(java.lang.String, javax.baja.sys.BValue, int, javax.baja.sys.BFacets, javax.baja.sys.Context) -->
<method name="checkAdd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Only components that implement &lt;code&gt;<see ref="javax.baja.tag.RelationInfo">RelationInfo</see>&lt;/code&gt; may be added to a BRelationInfoList.
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="flags">
<type class="int"/>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.getDictionary() -->
<method name="getDictionary"  public="true">
<description>
Get the dictionary that this list is defined in, if one exists.
</description>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.TagDictionary"/>
</args>
</parameterizedType>
<description>
an &lt;code&gt;Optional&lt;/code&gt; that contains the &lt;code&gt;TagDictionary&lt;/code&gt;&#xa; for this list if the list is part of a &lt;code&gt;TagDictionary&lt;/code&gt;;&#xa; otherwise, an empty &lt;code&gt;Optional&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.containsRelationId(javax.baja.tag.Id) -->
<method name="containsRelationId"  public="true">
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;unused&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<description>
Test whether this list includes a relation with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
relation id to search for
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the list contains a relation with the specified id;&#xa; &lt;code&gt;false&lt;/code&gt; otherwise.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.getRelation(javax.baja.tag.Id) -->
<method name="getRelation"  public="true">
<description>
Gets the relation with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the relation
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.RelationInfo"/>
</args>
</parameterizedType>
<description>
an &lt;code&gt;Optional&lt;/code&gt; that contains the &lt;code&gt;RelationInfo&lt;/code&gt; with the&#xa; specified id, if contained in the list; otherwise, an empty&#xa; &lt;code&gt;Optional&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.renamed(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="renamed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If the property is a &lt;code&gt;<see ref="javax.baja.tagdictionary.BRelationInfo">BRelationInfo</see>&lt;/code&gt;, call &lt;code&gt;<see ref="javax.baja.tagdictionary.BRelationInfo#relationRenamed()">BRelationInfo#relationRenamed()</see>&lt;/code&gt; on it.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description>
property being renamed
</description>
</parameter>
<parameter name="oldName">
<type class="java.lang.String"/>
<description>
old name
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.iterator() -->
<method name="iterator"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get an iterator of the relations in this list.
</description>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.tag.RelationInfo"/>
</args>
</parameterizedType>
<description>
an iterator of &lt;code&gt;RelationInfo&lt;/code&gt;s.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BRelationInfoList.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
