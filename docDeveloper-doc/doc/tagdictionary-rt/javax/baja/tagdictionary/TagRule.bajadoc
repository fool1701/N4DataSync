<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="tagdictionary" runtimeProfile="rt" qualifiedName="javax.baja.tagdictionary.TagRule" name="TagRule" packageName="javax.baja.tagdictionary" public="true" interface="true" abstract="true" category="interface">
<description>
A TagRule defines a rule that determines when an &lt;code&gt;<see ref="javax.baja.tag.Entity">Entity</see>&lt;/code&gt; implies a tag or set of tags.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">2/18/14</tag>
<tag name="@since">Niagara 4.0</tag>
<!-- javax.baja.tagdictionary.TagRule.getRuleCondition() -->
<method name="getRuleCondition"  public="true" abstract="true">
<description>
Get the predicate for this rule
</description>
<return>
<parameterizedType class="java.util.function.Predicate">
<args>
<type class="javax.baja.tag.Entity"/>
</args>
</parameterizedType>
<description>
the predicate to evaluate for this rule
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.evaluate(javax.baja.tag.Entity) -->
<method name="evaluate"  public="true" default="true">
<description>
A convenience method for getRuleCondition().test(entity) that is&#xa; overridden by scoped tag rules.
</description>
<tag name="@since">Niagara 4.3</tag>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
entity against which to evaluate the tag rule
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the TagRule applies to the entity; &lt;code&gt;false&lt;/code&gt; otherwise
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.containsTagId(javax.baja.tag.Id) -->
<method name="containsTagId"  public="true" abstract="true">
<description>
Test whether this rule includes an implied tag with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
tag id to search for
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the rule contains a tag with the specified id;&#xa; &lt;code&gt;false&lt;/code&gt; otherwise.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.getTag(javax.baja.tag.Id) -->
<method name="getTag"  public="true" abstract="true">
<description>
Get the tag in this rule for the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the implied tag
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.TagInfo"/>
</args>
</parameterizedType>
<description>
an &lt;code&gt;Optional&lt;/code&gt; that contains the &lt;code&gt;TagInfo&lt;/code&gt; for the&#xa; specified id if the rule includes one; an empty &lt;code&gt;Optional&lt;/code&gt; otherwise
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.getTags() -->
<method name="getTags"  public="true" abstract="true">
<description>
Get the tags associated with this rule.
</description>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.TagInfo"/>
</args>
</parameterizedType>
<description>
tags associated with this rule
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.getTagGroups() -->
<method name="getTagGroups"  public="true" abstract="true">
<description>
Get the tag groups associated with this rule.
</description>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.TagGroupInfo"/>
</args>
</parameterizedType>
<description>
tag groups associated with this rule
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.containsRelationId(javax.baja.tag.Id) -->
<method name="containsRelationId"  public="true" abstract="true">
<description>
Test whether this rule includes an implied relation with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
relation id to search for
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the rule contains a relation with the specified id;&#xa; &lt;code&gt;false&lt;/code&gt; otherwise.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.getRelations(javax.baja.tag.Id) -->
<method name="getRelations"  public="true" abstract="true">
<description>
Get an iterator of the relations in this rule with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
relation id to search for
</description>
</parameter>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.tag.RelationInfo"/>
</args>
</parameterizedType>
<description>
an iterator of the relations in this rule with the specified id
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.TagRule.getRelations() -->
<method name="getRelations"  public="true" abstract="true">
<description>
Get the relations that are associated with this rule.
</description>
<return>
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.RelationInfo"/>
</args>
</parameterizedType>
<description>
relations associated with this rule
</description>
</return>
</method>

</class>
</bajadoc>
