<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="tagdictionary" runtimeProfile="rt" qualifiedName="javax.baja.tagdictionary.BTagGroupInfoList" name="BTagGroupInfoList" packageName="javax.baja.tagdictionary" public="true">
<description>
BTagGroupInfoList is a list of &lt;code&gt;TagGroupInfo&lt;/code&gt;.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">2/21/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.tagdictionary.BInfoList"/>
</extends>
<implements>
<parameterizedType class="java.lang.Iterable">
<args>
<type class="javax.baja.tag.TagGroupInfo"/>
</args>
</parameterizedType>
</implements>
<!-- javax.baja.tagdictionary.BTagGroupInfoList() -->
<constructor name="BTagGroupInfoList" public="true">
<description/>
</constructor>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.iterator() -->
<method name="iterator"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns an iterator over the tag groups in this list. Hidden tag groups are excluded as they&#xa; are considered deprecated and are only retained to preserve relations to them.
</description>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.tag.TagGroupInfo"/>
</args>
</parameterizedType>
<description>
iterator of tag groups
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.containsTagId(javax.baja.tag.Id) -->
<method name="containsTagId"  public="true">
<description>
Test whether this list includes a tag group with the specified id.  Hidden tag groups are not&#xa; considered; see &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfoList#iterator()">#iterator()</see>&lt;/code&gt;.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
tag id to search for
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the list contains a tag group with the specified id; &lt;code&gt;false&lt;/code&gt;&#xa; otherwise.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.getTagGroup(javax.baja.tag.Id) -->
<method name="getTagGroup"  public="true">
<description>
Get the tag group for the specified id.  Hidden tag groups are not considered; see&#xa; &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfoList#iterator()">#iterator()</see>&lt;/code&gt;.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the tag
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.TagGroupInfo"/>
</args>
</parameterizedType>
<description>
an &lt;code&gt;Optional&lt;/code&gt; that contains the &lt;code&gt;TagGroupInfo&lt;/code&gt; with the specified id, if it&#xa; exists in the list; an empty &lt;code&gt;Optional&lt;/code&gt; otherwise.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.checkRename(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="checkRename"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If the property being renamed is a &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfo">BTagGroupInfo</see>&lt;/code&gt;, the rename is&#xa; not allowed if the group has any relations (see&#xa; &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfo#relations()">BTagGroupInfo#relations()</see>&lt;/code&gt;). Also, the new tag group id cannot match&#xa; any existing tag ids in the tag dictionary to which this list belongs.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description>
slot to be renamed
</description>
</parameter>
<parameter name="newName">
<type class="java.lang.String"/>
<description>
new name
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.checkAdd(java.lang.String, javax.baja.sys.BValue, int, javax.baja.sys.BFacets, javax.baja.sys.Context) -->
<method name="checkAdd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If the property being added is a &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfo">BTagGroupInfo</see>&lt;/code&gt;, the new tag group id cannot match any&#xa; existing tag ids in the tag dictionary to which this list belongs.  Also enforce that only&#xa; &lt;code&gt;<see ref="javax.baja.tag.TagGroupInfo">TagGroupInfo</see>&lt;/code&gt;s are added.
</description>
<parameter name="name">
<type class="java.lang.String"/>
<description>
name of the child object being added
</description>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
<description>
child object being added
</description>
</parameter>
<parameter name="flags">
<type class="int"/>
<description>
&lt;code&gt;<see ref="javax.baja.sys.Flags">Flags</see>&lt;/code&gt; to be added to the child object
</description>
</parameter>
<parameter name="facets">
<type class="javax.baja.sys.BFacets"/>
<description>
&lt;code&gt;<see ref="javax.baja.sys.BFacets">BFacets</see>&lt;/code&gt; to be added to the child object
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.checkRemove(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="checkRemove"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
No restrictions on removing child objects.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description>
slot to be removed
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.renamed(javax.baja.sys.Property, java.lang.String, javax.baja.sys.Context) -->
<method name="renamed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If the property is a &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfo">BTagGroupInfo</see>&lt;/code&gt;, call &lt;code&gt;<see ref="javax.baja.tagdictionary.BTagGroupInfo#groupRenamed()">BTagGroupInfo#groupRenamed()</see>&lt;/code&gt; on it.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
<description>
property being renamed
</description>
</parameter>
<parameter name="oldName">
<type class="java.lang.String"/>
<description>
old name
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BTagGroupInfoList.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
