<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="tagdictionary" runtimeProfile="rt" qualifiedName="javax.baja.tagdictionary.BSmartTagDictionary" name="BSmartTagDictionary" packageName="javax.baja.tagdictionary" public="true">
<description>
BSmartTagDictionary is an extension of &lt;code&gt;BTagDictionary&lt;/code&gt; that implements&#xa; &lt;code&gt;SmartTagDictionary&lt;/code&gt;.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">2/18/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.tagdictionary.BTagDictionary"/>
</extends>
<implements>
<type class="javax.baja.tag.SmartTagDictionary"/>
</implements>
<property name="tagRules" flags="">
<type class="javax.baja.tagdictionary.BTagRuleList"/>
<description>
Slot for the &lt;code&gt;tagRules&lt;/code&gt; property.&#xa; The collection of tag rules defined for this dictionary.
</description>
<tag name="@see">#getTagRules</tag>
<tag name="@see">#setTagRules</tag>
</property>

<!-- javax.baja.tagdictionary.BSmartTagDictionary() -->
<constructor name="BSmartTagDictionary" public="true">
<description>
Default constructor
</description>
</constructor>

<!-- javax.baja.tagdictionary.BSmartTagDictionary(java.lang.String) -->
<constructor name="BSmartTagDictionary" public="true">
<parameter name="namespace">
<type class="java.lang.String"/>
<description>
initial value of the namespace property
</description>
</parameter>
<description>
Constructor that initializes the &lt;code&gt;<see ref="javax.baja.tagdictionary.BSmartTagDictionary#namespace">#namespace</see>&lt;/code&gt; property.
</description>
</constructor>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getTagRules() -->
<method name="getTagRules"  public="true">
<description>
Get the &lt;code&gt;tagRules&lt;/code&gt; property.&#xa; The collection of tag rules defined for this dictionary.
</description>
<tag name="@see">#tagRules</tag>
<return>
<type class="javax.baja.tagdictionary.BTagRuleList"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.setTagRules(javax.baja.tagdictionary.BTagRuleList) -->
<method name="setTagRules"  public="true">
<description>
Set the &lt;code&gt;tagRules&lt;/code&gt; property.&#xa; The collection of tag rules defined for this dictionary.
</description>
<tag name="@see">#tagRules</tag>
<parameter name="v">
<type class="javax.baja.tagdictionary.BTagRuleList"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getRulesForTagId(javax.baja.tag.Id) -->
<method name="getRulesForTagId"  public="true">
<description>
Get an iterator of all of the rules that contain the specified tag&#xa; id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the tag to search for
</description>
</parameter>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.tagdictionary.TagRule"/>
</args>
</parameterizedType>
<description>
an iterator of the rules that include the specified tag id
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getRulesForRelationId(javax.baja.tag.Id) -->
<method name="getRulesForRelationId"  public="true">
<description>
Get an iterator of all of the rules that contain the specified relation id.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the relation to search for
</description>
</parameter>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.tagdictionary.TagRule"/>
</args>
</parameterizedType>
<description>
an iterator of the rules that include the specified relation id
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getImpliedTag(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedTag"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get an implied tag with the specified id for the specified entity, if one is implied. If&#xa; &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; is returned, it may mean a &lt;code&gt;<see ref="javax.baja.tag.TagInfo">TagInfo</see>&lt;/code&gt; is not implied on the&#xa; entity or that &lt;code&gt;<see ref="javax.baja.tag.TagInfo#getTag(javax.baja.tag.Entity)">TagInfo#getTag(Entity)</see>&lt;/code&gt; of an implied TagInfo returns null.&#xa; &lt;p&gt;&#xa; The tag dictionary must be valid (see &lt;code&gt;<see ref="javax.baja.status.BStatus#isValid()">BStatus#isValid()</see>&lt;/code&gt;)
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the tag to retrieve
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
The entity to evaluate.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.Tag"/>
</args>
</parameterizedType>
<description>
an implied tag or &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; if the tag is not implied on the entity
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getImpliedTagInfo(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedTagInfo"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get a tag info for the specified entity if a tag with the specified ID is implied by this smart&#xa; tag dictionary on the entity. The tag info can later be used to make a tag for the entity.&#xa; &lt;p&gt;&#xa; The tag dictionary must be valid (see &lt;code&gt;<see ref="javax.baja.status.BStatus#isValid()">BStatus#isValid()</see>&lt;/code&gt;)
</description>
<tag name="@since">Niagara 4.3</tag>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
id of the tag to retrieve
</description>
</parameter>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
entity to evaluate
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.TagInfo"/>
</args>
</parameterizedType>
<description>
a tag info if it is implied for the specified entity; optional.empty otherwise
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.addAllImpliedTags(javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Tag&gt;) -->
<method name="addAllImpliedTags"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Add all of the tags implied by this dictionary to the specified collection of tags. Tags are&#xa; not added if &lt;code&gt;<see ref="javax.baja.tag.TagInfo#getTag(javax.baja.tag.Entity)">TagInfo#getTag(Entity)</see>&lt;/code&gt; of an implied TagInfo returns null.
</description>
<parameter name="entity">
<type class="javax.baja.tag.Entity"/>
<description>
The target entity for the tags.
</description>
</parameter>
<parameter name="tags">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Tag"/>
</args>
</parameterizedType>
<description>
The collection of tags to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.getImpliedRelation(javax.baja.tag.Id, javax.baja.tag.Entity) -->
<method name="getImpliedRelation"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the first or only relation with the specified id with the specified entity as the source.&#xa; If &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; is returned, it may mean a &lt;code&gt;<see ref="javax.baja.tag.RelationInfo">RelationInfo</see>&lt;/code&gt; is not implied on&#xa; the entity or that &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an implied RelationInfo returns&#xa; Optional.empty().
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the relation.
</description>
</parameter>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The source entity for the relation.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Optional">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
a single relation with the specified id or &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt; if the relation&#xa; is not implied for the specified source.
</description>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.addAllImpliedRelations(javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Relation&gt;) -->
<method name="addAllImpliedRelations"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Add all implied relations for the specified source entity to the collection of relations.&#xa; Relations are not added if &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of an implied RelationInfo&#xa; returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The entity that is the source of the relation.
</description>
</parameter>
<parameter name="relations">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
The collection of relations to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.addImpliedRelations(javax.baja.tag.Id, javax.baja.tag.Entity, java.util.Collection&lt;javax.baja.tag.Relation&gt;) -->
<method name="addImpliedRelations"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Add all implied relations with the specified id for the specified source entity to the&#xa; collection of relations. Relations are not added if &lt;code&gt;<see ref="javax.baja.tag.RelationInfo#getRelation(javax.baja.tag.Entity)">RelationInfo#getRelation(Entity)</see>&lt;/code&gt; of&#xa; an implied RelationInfo returns &lt;code&gt;<see ref="java.util.Optional#empty()">Optional#empty()</see>&lt;/code&gt;.
</description>
<parameter name="id">
<type class="javax.baja.tag.Id"/>
<description>
The id of the relation.
</description>
</parameter>
<parameter name="source">
<type class="javax.baja.tag.Entity"/>
<description>
The entity that is the source of the relation.
</description>
</parameter>
<parameter name="relations">
<parameterizedType class="java.util.Collection">
<args>
<type class="javax.baja.tag.Relation"/>
</args>
</parameterizedType>
<description>
The collection of relations to populate.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.tagRules -->
<field name="tagRules"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tagRules&lt;/code&gt; property.&#xa; The collection of tag rules defined for this dictionary.
</description>
<tag name="@see">#getTagRules</tag>
<tag name="@see">#setTagRules</tag>
</field>

<!-- javax.baja.tagdictionary.BSmartTagDictionary.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
