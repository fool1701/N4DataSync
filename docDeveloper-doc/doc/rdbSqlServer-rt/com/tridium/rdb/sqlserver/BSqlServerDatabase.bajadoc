<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="rdbSqlServer" runtimeProfile="rt" qualifiedName="com.tridium.rdb.sqlserver.BSqlServerDatabase" name="BSqlServerDatabase" packageName="com.tridium.rdb.sqlserver" public="true">
<description>
BSqlServerDatabase models a SqlServer relational database.
</description>
<tag name="@author">Mike Jarmy on 24 Jul 03</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="com.tridium.rdb.BEncryptableTransportRdbms"/>
</extends>
<property name="instanceName" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;instanceName&lt;/code&gt; property.&#xa; The name of the server instance.  If left blank it is ignored.
</description>
<tag name="@see">#getInstanceName</tag>
<tag name="@see">#setInstanceName</tag>
</property>

<property name="port" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;port&lt;/code&gt; property.&#xa; The port number on the computer that hosts the database.&#xa; Use port 0 if you want to connect on a dynamic port.
</description>
<tag name="@see">#getPort</tag>
<tag name="@see">#setPort</tag>
</property>

<property name="histories" flags="">
<type class="com.tridium.rdb.sqlserver.history.BSqlServerHistoryDeviceExt"/>
<description>
Slot for the &lt;code&gt;histories&lt;/code&gt; property.&#xa; Collected historical data
</description>
<tag name="@see">#getHistories</tag>
<tag name="@see">#setHistories</tag>
</property>

<property name="connectionPool" flags="h">
<type class="com.tridium.rdb.sqlserver.BConnectionPool"/>
<description>
Slot for the &lt;code&gt;connectionPool&lt;/code&gt; property.&#xa; Connection Pool
</description>
<tag name="@see">#getConnectionPool</tag>
<tag name="@see">#setConnectionPool</tag>
</property>

<property name="extraConnectionProperties" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;extraConnectionProperties&lt;/code&gt; property.&#xa; Extra properties (such as charset) to use when connecting&#xa; to the database.  This must be a semicolon list of (property,value)&#xa; pairs of the form &#x22;property=value;...&#x22;
</description>
<tag name="@see">#getExtraConnectionProperties</tag>
<tag name="@see">#setExtraConnectionProperties</tag>
</property>

<property name="version" flags="1">
<type class="com.tridium.rdb.sqlserver.BSqlServerVersion"/>
<description>
Slot for the &lt;code&gt;version&lt;/code&gt; property.&#xa; version of sql server
</description>
<tag name="@see">#getVersion</tag>
<tag name="@see">#setVersion</tag>
</property>

<property name="connector" flags="">
<type class="com.tridium.rdb.sqlserver.BSqlServerConnector"/>
<description>
Slot for the &lt;code&gt;connector&lt;/code&gt; property.&#xa; From Niagara 4.12 onwards, the mssql-jdbc connector is included with the rdbSqlServer module&#xa; and will exclusively be used going forward.&#xa; Prior to 4.12, the jTDS was the default connector option. Keeping the connector property to keep the backward&#xa; compatibility. It is hidden from the property sheet.
</description>
<tag name="@see">#getConnector</tag>
<tag name="@see">#setConnector</tag>
</property>

<property name="sqlServerCert" flags="h">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;sqlServerCert&lt;/code&gt; property.&#xa; Certificate alias in the User Trust Store for the certificate that signed the server certificate.&#xa; An blank value implies a fully trust certificate is used on the MySQL server.
</description>
<tag name="@see">#getSqlServerCert</tag>
<tag name="@see">#setSqlServerCert</tag>
</property>

</class>
</bajadoc>
