<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="tls" runtimeProfile="rt" qualifiedName="com.tridium.tls.BTlsConsole" name="BTlsConsole" packageName="com.tridium.tls" public="true" abstract="true">
<description>
BTlsConsole - represents a Veeder-Root Tls serial network
</description>
<tag name="@author">Saunders, Barrow  R2 Original on 14 Apr 2000</tag>
<tag name="@author">Sam Barrow Convert to AX on 15 Oct 2005</tag>
<tag name="@since">Niagara 3.0 tls 1.0</tag>
<extends>
<type class="com.tridium.basicdriver.BBasicNetwork"/>
</extends>
<implements>
<type class="com.tridium.tls.messages.TlsMessageConst"/>
</implements>
<property name="stationNameWebSupervisor" flags="d">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;stationNameWebSupervisor&lt;/code&gt; property.&#xa; When CookingConsole first dropped in under /drivers&#xa; set this property to Web Supervisor station name
</description>
<tag name="@see">#getStationNameWebSupervisor</tag>
<tag name="@see">#setStationNameWebSupervisor</tag>
</property>

<property name="lastCsMgrCommFailureCause" flags="r">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;lastCsMgrCommFailureCause&lt;/code&gt; property.
</description>
<tag name="@see">#getLastCsMgrCommFailureCause</tag>
<tag name="@see">#setLastCsMgrCommFailureCause</tag>
</property>

<property name="staleDataTime" flags="">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;staleDataTime&lt;/code&gt; property.&#xa; Stale data is regularly reported by the Tls field controller when proxyExt(s) poll&#xa; need to process old data (in case a station is down for a period of time), need to&#xa; retain old data so that can tell the difference between old and new data and not&#xa; process old data multiple times, lastly need to purge old data to prevent station&#xa; memory from reaching low memeory conditions. This permits tuning of what is being&#xa; called staleDataTime... meaning when polling if data is older than this time, throw&#xa; it away and when a proxyExt(s) purgeOldHashtableValues method runs at mid-night, data&#xa; older than this will be purges from memory
</description>
<tag name="@see">#getStaleDataTime</tag>
<tag name="@see">#setStaleDataTime</tag>
</property>

<property name="userData" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;userData&lt;/code&gt; property.&#xa; used for test and debug to perform some static tests
</description>
<tag name="@see">#getUserData</tag>
<tag name="@see">#setUserData</tag>
</property>

</class>
</bajadoc>
