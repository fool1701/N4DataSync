<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="neql" runtimeProfile="rt" qualifiedName="javax.baja.neql.NeqlQuery" name="NeqlQuery" packageName="javax.baja.neql" public="true">
<description>
A NeqlQuery is an OrdQuery for the neql scheme which is the Niagara Entity Query Language.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">01/15/2014</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.naming.BasicQuery"/>
</extends>
<!-- javax.baja.neql.NeqlQuery(java.lang.String) -->
<constructor name="NeqlQuery" public="true">
<parameter name="queryText">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.neql.NeqlQuery.getAst() -->
<method name="getAst"  public="true">
<description>
Get the abstract syntax tree for the parsed query.
</description>
<return>
<type class="javax.baja.neql.AstNode"/>
<description>
Returns the root of the abstract syntax tree.
</description>
</return>
</method>

</class>
</bajadoc>
