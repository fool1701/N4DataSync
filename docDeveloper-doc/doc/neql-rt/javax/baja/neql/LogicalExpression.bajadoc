<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="neql" runtimeProfile="rt" qualifiedName="javax.baja.neql.LogicalExpression" name="LogicalExpression" packageName="javax.baja.neql" public="true" abstract="true">
<description>
LogicalExpression is a class of expressions that represents a logical connection between&#xa; two subexpressions, such as intersection (AND) or union (OR).
</description>
<tag name="@author">&lt;a href=&#x22;mailto:craig.gemmill@tridium.com&#x22;&gt;Craig Gemmill&lt;/a&gt;&#xa;         Date: 3/19/14&#xa;         Time: 9:27 PM</tag>
<extends>
<type class="javax.baja.neql.BinaryExpression"/>
</extends>
<!-- javax.baja.neql.LogicalExpression(javax.baja.neql.Expression, javax.baja.neql.Expression) -->
<constructor name="LogicalExpression" protected="true">
<parameter name="left">
<type class="javax.baja.neql.Expression"/>
</parameter>
<parameter name="right">
<type class="javax.baja.neql.Expression"/>
</parameter>
<description/>
</constructor>

</class>
</bajadoc>
