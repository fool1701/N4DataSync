<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="neql" runtimeProfile="rt" qualifiedName="javax.baja.neql.BNeqlEntityQueryHandler" name="BNeqlEntityQueryHandler" packageName="javax.baja.neql" public="true" abstract="true">
<description>
BNeqlEntityQueryHandler is an abstract query handler for querying a collection of Entities&#xa; provided by a cursor.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">6/4/14</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.sys.BObject"/>
</extends>
<implements>
<type class="javax.baja.neql.BINeqlQueryHandler"/>
</implements>
<!-- javax.baja.neql.BNeqlEntityQueryHandler() -->
<constructor name="BNeqlEntityQueryHandler" public="true">
<description/>
</constructor>

<!-- javax.baja.neql.BNeqlEntityQueryHandler.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.neql.BNeqlEntityQueryHandler.getIteratorForScope(javax.baja.naming.OrdTarget) -->
<method name="getIteratorForScope"  protected="true" abstract="true">
<description>
Subclasses must override this method to return an Iterator of the Entity&#xa; for the defined scope.  This method will only be called if the subclass&#xa; returns true for canHandle(scope).
</description>
<parameter name="scope">
<type class="javax.baja.naming.OrdTarget"/>
<description>
An OrdTarget for the scope.  The scope identifies a&#xa;              collection of entities to be queried.
</description>
</parameter>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.tag.Entity"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
<description>
Returns an iterator of the entities in the scope.
</description>
</return>
</method>

<!-- javax.baja.neql.BNeqlEntityQueryHandler.query(javax.baja.naming.OrdTarget, javax.baja.naming.OrdQuery) -->
<method name="query"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Process a query against the scope.
</description>
<parameter name="scope">
<type class="javax.baja.naming.OrdTarget"/>
<description>
The scope of the query to be processed.  This represents&#xa;              the collection of objects that the query will be processed&#xa;              against.  In most cases, the scope object will either be&#xa;              a BISpace or a BISpaceNode.
</description>
</parameter>
<parameter name="query">
<type class="javax.baja.naming.OrdQuery"/>
<description>
The query to be processed.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.util.CloseableIterator">
<args>
<type class="javax.baja.tag.Entity"/>
</args>
</parameterizedType>
<description>
Returns an iterator of Entities that satisfy the query.
</description>
</return>
</method>

<!-- javax.baja.neql.BNeqlEntityQueryHandler.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
