<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="schedule" runtimeProfile="rt" qualifiedName="javax.baja.schedule.BEnumSetSchedule" name="BEnumSetSchedule" packageName="javax.baja.schedule" public="true" abstract="true">
<description>
Any schedule whose effectiveness can be determined by a set of&#xa; of integers.
</description>
<tag name="@author">Aaron Hansen</tag>
<tag name="@creation">Sept 2001</tag>
<tag name="@version">$Revision: 21$ $Date: 7/17/09 10:08:35 AM EDT$</tag>
<extends>
<type class="javax.baja.schedule.BAbstractSchedule"/>
</extends>
<property name="effectiveWhenEmpty" flags="1">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;effectiveWhenEmpty&lt;/code&gt; property.
</description>
<tag name="@see">#getEffectiveWhenEmpty</tag>
<tag name="@see">#setEffectiveWhenEmpty</tag>
</property>

<property name="set" flags="1">
<type class="javax.baja.util.BEnumSet"/>
<description>
Slot for the &lt;code&gt;set&lt;/code&gt; property.
</description>
<tag name="@see">#getSet</tag>
<tag name="@see">#setSet</tag>
</property>

<property name="singleSelection" flags="1">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;singleSelection&lt;/code&gt; property.
</description>
<tag name="@see">#getSingleSelection</tag>
<tag name="@see">#setSingleSelection</tag>
</property>

<!-- javax.baja.schedule.BEnumSetSchedule() -->
<constructor name="BEnumSetSchedule" public="true">
<description/>
</constructor>

<!-- javax.baja.schedule.BEnumSetSchedule.getEffectiveWhenEmpty() -->
<method name="getEffectiveWhenEmpty"  public="true">
<description>
Get the &lt;code&gt;effectiveWhenEmpty&lt;/code&gt; property.
</description>
<tag name="@see">#effectiveWhenEmpty</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.setEffectiveWhenEmpty(boolean) -->
<method name="setEffectiveWhenEmpty"  public="true">
<description>
Set the &lt;code&gt;effectiveWhenEmpty&lt;/code&gt; property.
</description>
<tag name="@see">#effectiveWhenEmpty</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.getSet() -->
<method name="getSet"  public="true">
<description>
Get the &lt;code&gt;set&lt;/code&gt; property.
</description>
<tag name="@see">#set</tag>
<return>
<type class="javax.baja.util.BEnumSet"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.setSet(javax.baja.util.BEnumSet) -->
<method name="setSet"  public="true">
<description>
Set the &lt;code&gt;set&lt;/code&gt; property.
</description>
<tag name="@see">#set</tag>
<parameter name="v">
<type class="javax.baja.util.BEnumSet"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.getSingleSelection() -->
<method name="getSingleSelection"  public="true">
<description>
Get the &lt;code&gt;singleSelection&lt;/code&gt; property.
</description>
<tag name="@see">#singleSelection</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.setSingleSelection(boolean) -->
<method name="setSingleSelection"  public="true">
<description>
Set the &lt;code&gt;singleSelection&lt;/code&gt; property.
</description>
<tag name="@see">#singleSelection</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.add(javax.baja.sys.BEnum) -->
<method name="add"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.sys.BEnum"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.add(javax.baja.sys.BEnum, javax.baja.sys.Context) -->
<method name="add"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.sys.BEnum"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.add(int) -->
<method name="add"  public="true">
<description/>
<parameter name="i">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.add(int, javax.baja.sys.Context) -->
<method name="add"  public="true">
<description/>
<parameter name="i">
<type class="int"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.clear() -->
<method name="clear"  public="true">
<description/>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.clear(javax.baja.sys.Context) -->
<method name="clear"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.contains(javax.baja.sys.BEnum) -->
<method name="contains"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.sys.BEnum"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.contains(int) -->
<method name="contains"  public="true">
<description/>
<parameter name="i">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.first() -->
<method name="first"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.getMax() -->
<method name="getMax"  public="true" abstract="true">
<description>
The largest possible value.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.getMin() -->
<method name="getMin"  public="true" abstract="true">
<description>
The smallest possible value.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.isAlwaysEffective() -->
<method name="isAlwaysEffective"  public="true">
<description>
Returns true if always effective, or empty and effective when empty.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.initEffectiveWhenEmpty(boolean) -->
<method name="initEffectiveWhenEmpty"  public="true">
<description/>
<parameter name="arg">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.initSingleSelection(boolean) -->
<method name="initSingleSelection"  public="true">
<description/>
<parameter name="arg">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.isEmpty() -->
<method name="isEmpty"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.isLegalValue(int) -->
<method name="isLegalValue"  public="true">
<description>
The default implementation tests the arg against getMin() and getMax().&#xa; This assumes the entire range between min and max is valid.  Override&#xa; this method if that is not the case.
</description>
<parameter name="i">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.isNeverEffective() -->
<method name="isNeverEffective"  public="true">
<description>
Return false if always effective, otherwise returns true if&#xa; empty.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.remove(javax.baja.sys.BEnum) -->
<method name="remove"  public="true">
<description/>
<parameter name="e">
<type class="javax.baja.sys.BEnum"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.remove(int) -->
<method name="remove"  public="true">
<description/>
<parameter name="i">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.schedule.BEnumSetSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.isEffective(int) -->
<method name="isEffective"  protected="true">
<description/>
<parameter name="i">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BEnumSetSchedule.effectiveWhenEmpty -->
<field name="effectiveWhenEmpty"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;effectiveWhenEmpty&lt;/code&gt; property.
</description>
<tag name="@see">#getEffectiveWhenEmpty</tag>
<tag name="@see">#setEffectiveWhenEmpty</tag>
</field>

<!-- javax.baja.schedule.BEnumSetSchedule.set -->
<field name="set"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;set&lt;/code&gt; property.
</description>
<tag name="@see">#getSet</tag>
<tag name="@see">#setSet</tag>
</field>

<!-- javax.baja.schedule.BEnumSetSchedule.singleSelection -->
<field name="singleSelection"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;singleSelection&lt;/code&gt; property.
</description>
<tag name="@see">#getSingleSelection</tag>
<tag name="@see">#setSingleSelection</tag>
</field>

<!-- javax.baja.schedule.BEnumSetSchedule.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
