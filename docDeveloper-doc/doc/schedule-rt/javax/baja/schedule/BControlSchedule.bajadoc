<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="schedule" runtimeProfile="rt" qualifiedName="javax.baja.schedule.BControlSchedule" name="BControlSchedule" packageName="javax.baja.schedule" public="true" abstract="true">
<description>
Schedule that provides continuous output.&lt;p&gt;&#xa; &lt;b&gt;Default Output&lt;/b&gt;&lt;br&gt;&#xa; This is the output when the schedule is ineffective.&lt;p&gt;&#xa; &lt;b&gt;Subclassing&lt;/b&gt;&#xa; &lt;ul&gt;&#xa; &lt;li&gt;Define the &#x22;in&#x22; and &#x22;out&#x22; properties&lt;/li&gt;&#xa; &lt;li&gt;Set the default output&lt;/li&gt;&#xa; &lt;li&gt;Add child schedules&lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@author">Aaron Hansen</tag>
<tag name="@creation">Sept 2001</tag>
<tag name="@version">$Revision: 52$ $Date: 5/17/11 3:36:04 PM EDT$</tag>
<extends>
<type class="javax.baja.schedule.BCompositeSchedule"/>
</extends>
<implements>
<type class="javax.baja.status.BIStatusValue"/>
</implements>
<implements>
<type class="com.tridium.sys.metrics.IMetricResource"/>
</implements>
<property name="defaultOutput" flags="ho1">
<type class="javax.baja.status.BStatusValue"/>
<description>
Slot for the &lt;code&gt;defaultOutput&lt;/code&gt; property.
</description>
<tag name="@see">#getDefaultOutput</tag>
<tag name="@see">#setDefaultOutput</tag>
</property>

<property name="cleanupExpiredEvents" flags="o1">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;cleanupExpiredEvents&lt;/code&gt; property.
</description>
<tag name="@see">#getCleanupExpiredEvents</tag>
<tag name="@see">#setCleanupExpiredEvents</tag>
</property>

<property name="scanLimit" flags="o1">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;scanLimit&lt;/code&gt; property.&#xa; Limits how far into the future to search for the next change.
</description>
<tag name="@see">#getScanLimit</tag>
<tag name="@see">#setScanLimit</tag>
</property>

<property name="facets" flags="o1">
<type class="javax.baja.sys.BFacets"/>
<description>
Slot for the &lt;code&gt;facets&lt;/code&gt; property.
</description>
<tag name="@see">#getFacets</tag>
<tag name="@see">#setFacets</tag>
</property>

<property name="lastModified" flags="orA">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;lastModified&lt;/code&gt; property.
</description>
<tag name="@see">#getLastModified</tag>
<tag name="@see">#setLastModified</tag>
</property>

<action name="cleanup" flags="a">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;cleanup&lt;/code&gt; action.
</description>
<tag name="@see">#cleanup()</tag>
</action>

<action name="execute" flags="ah">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute()</tag>
</action>

<!-- javax.baja.schedule.BControlSchedule() -->
<constructor name="BControlSchedule" public="true">
<description/>
</constructor>

<!-- javax.baja.schedule.BControlSchedule(javax.baja.status.BStatusValue) -->
<constructor name="BControlSchedule" public="true">
<parameter name="defaultOut">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.schedule.BControlSchedule.getDefaultOutput() -->
<method name="getDefaultOutput"  public="true">
<description>
Get the &lt;code&gt;defaultOutput&lt;/code&gt; property.
</description>
<tag name="@see">#defaultOutput</tag>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setDefaultOutput(javax.baja.status.BStatusValue) -->
<method name="setDefaultOutput"  public="true">
<description>
Set the &lt;code&gt;defaultOutput&lt;/code&gt; property.
</description>
<tag name="@see">#defaultOutput</tag>
<parameter name="v">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getCleanupExpiredEvents() -->
<method name="getCleanupExpiredEvents"  public="true">
<description>
Get the &lt;code&gt;cleanupExpiredEvents&lt;/code&gt; property.
</description>
<tag name="@see">#cleanupExpiredEvents</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setCleanupExpiredEvents(boolean) -->
<method name="setCleanupExpiredEvents"  public="true">
<description>
Set the &lt;code&gt;cleanupExpiredEvents&lt;/code&gt; property.
</description>
<tag name="@see">#cleanupExpiredEvents</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getScanLimit() -->
<method name="getScanLimit"  public="true">
<description>
Get the &lt;code&gt;scanLimit&lt;/code&gt; property.&#xa; Limits how far into the future to search for the next change.
</description>
<tag name="@see">#scanLimit</tag>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setScanLimit(javax.baja.sys.BRelTime) -->
<method name="setScanLimit"  public="true">
<description>
Set the &lt;code&gt;scanLimit&lt;/code&gt; property.&#xa; Limits how far into the future to search for the next change.
</description>
<tag name="@see">#scanLimit</tag>
<parameter name="v">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getFacets() -->
<method name="getFacets"  public="true">
<description>
Get the &lt;code&gt;facets&lt;/code&gt; property.
</description>
<tag name="@see">#facets</tag>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setFacets(javax.baja.sys.BFacets) -->
<method name="setFacets"  public="true">
<description>
Set the &lt;code&gt;facets&lt;/code&gt; property.
</description>
<tag name="@see">#facets</tag>
<parameter name="v">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getLastModified() -->
<method name="getLastModified"  public="true">
<description>
Get the &lt;code&gt;lastModified&lt;/code&gt; property.
</description>
<tag name="@see">#lastModified</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setLastModified(javax.baja.sys.BAbsTime) -->
<method name="setLastModified"  public="true">
<description>
Set the &lt;code&gt;lastModified&lt;/code&gt; property.
</description>
<tag name="@see">#lastModified</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.cleanup() -->
<method name="cleanup"  public="true">
<description>
Invoke the &lt;code&gt;cleanup&lt;/code&gt; action.
</description>
<tag name="@see">#cleanup</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.execute() -->
<method name="execute"  public="true">
<description>
Invoke the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.clockChanged(javax.baja.sys.BRelTime) -->
<method name="clockChanged"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="shift">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.schedule.BControlSchedule.doCleanup() -->
<method name="doCleanup"  public="true">
<description>
Callback for deleting expired schedules.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.doExecute() -->
<method name="doExecute"  public="true">
<description>
Sets the value of the OUT property and schedules callbacks to this&#xa; method with a javax.baja.sys.Scheduler.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getOutput(javax.baja.sys.BAbsTime) -->
<method name="getOutput"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns the defaultOutput if there is no scheduled output.
</description>
<parameter name="at">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getOutputSource(javax.baja.sys.BAbsTime) -->
<method name="getOutputSource"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Will return this if the default output is going to be used.
</description>
<parameter name="at">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="javax.baja.schedule.BAbstractSchedule"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getSlotFacets(javax.baja.sys.Slot) -->
<method name="getSlotFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="slot">
<type class="javax.baja.sys.Slot"/>
</parameter>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getStatus() -->
<method name="getStatus"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getStatusValue() -->
<method name="getStatusValue"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getStatusValueFacets() -->
<method name="getStatusValueFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.initDefaultOutput(javax.baja.status.BStatusValue) -->
<method name="initDefaultOutput"  public="true">
<description>
Configuration convenience.
</description>
<parameter name="o">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="javax.baja.schedule.BControlSchedule"/>
<description>
this
</description>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Always true.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.nextCov() -->
<method name="nextCov"  public="true">
<description>
Scans for up to 90 days for the next change of value, starting&#xa; at the current time.
</description>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.nextCov(javax.baja.sys.BAbsTime) -->
<method name="nextCov"  public="true">
<description>
Scans for up to 90 days for the next change of value.
</description>
<parameter name="after">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.post(javax.baja.sys.Action, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="post"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<parameter name="arg">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.util.IFuture"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.started() -->
<method name="started"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.schedule.BControlSchedule.stopped() -->
<method name="stopped"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.schedule.BControlSchedule.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.currentOutputSource(javax.baja.schedule.BAbstractSchedule) -->
<method name="currentOutputSource"  protected="true">
<description/>
<parameter name="sch">
<type class="javax.baja.schedule.BAbstractSchedule"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.currentOutputSourceIsInput() -->
<method name="currentOutputSourceIsInput"  protected="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.isExpired(javax.baja.schedule.BAbstractSchedule) -->
<method name="isExpired"  protected="true">
<description/>
<parameter name="sch">
<type class="javax.baja.schedule.BAbstractSchedule"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.getOutput(javax.baja.schedule.BAbstractSchedule) -->
<method name="getOutput"  protected="true">
<description/>
<parameter name="sch">
<type class="javax.baja.schedule.BAbstractSchedule"/>
</parameter>
<return>
<type class="javax.baja.status.BStatusValue"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.modified() -->
<method name="modified"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Increments the modification property.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setNextTime(javax.baja.sys.BAbsTime) -->
<method name="setNextTime"  protected="true" abstract="true">
<description/>
<parameter name="t">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.setNextVal(javax.baja.status.BStatusValue) -->
<method name="setNextVal"  protected="true" abstract="true">
<description/>
<parameter name="v">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.auditableCopyFrom(java.lang.Object, javax.baja.sys.Context) -->
<method name="auditableCopyFrom"  public="true">
<annotation><type class="javax.baja.rpc.NiagaraRpc"/>
<elementValue name="transports">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="annotation">
<annotation><type class="javax.baja.rpc.Transport"/>
<elementValue name="type">
<annotationValue kind="enum">
<enumField name="fox"/>
<type class="javax.baja.rpc.TransportType"/>
</annotationValue>
</elementValue>
</annotation>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
<elementValue name="permissions">
<annotationValue kind="expr">
<expression>&#x22;w&#x22;</expression>
</annotationValue>
</elementValue>
</annotation>
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="scheduleCopy">
<type class="java.lang.Object"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.schedule.BControlSchedule.alwaysEffective -->
<field name="alwaysEffective"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;alwaysEffective&lt;/code&gt; property.
</description>
<tag name="@see">#getAlwaysEffective</tag>
<tag name="@see">#setAlwaysEffective</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.union -->
<field name="union"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;union&lt;/code&gt; property.
</description>
<tag name="@see">#getUnion</tag>
<tag name="@see">#setUnion</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.defaultOutput -->
<field name="defaultOutput"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;defaultOutput&lt;/code&gt; property.
</description>
<tag name="@see">#getDefaultOutput</tag>
<tag name="@see">#setDefaultOutput</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.cleanupExpiredEvents -->
<field name="cleanupExpiredEvents"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;cleanupExpiredEvents&lt;/code&gt; property.
</description>
<tag name="@see">#getCleanupExpiredEvents</tag>
<tag name="@see">#setCleanupExpiredEvents</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.scanLimit -->
<field name="scanLimit"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;scanLimit&lt;/code&gt; property.&#xa; Limits how far into the future to search for the next change.
</description>
<tag name="@see">#getScanLimit</tag>
<tag name="@see">#setScanLimit</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.facets -->
<field name="facets"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;facets&lt;/code&gt; property.
</description>
<tag name="@see">#getFacets</tag>
<tag name="@see">#setFacets</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.lastModified -->
<field name="lastModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;lastModified&lt;/code&gt; property.
</description>
<tag name="@see">#getLastModified</tag>
<tag name="@see">#setLastModified</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.cleanup -->
<field name="cleanup"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;cleanup&lt;/code&gt; action.
</description>
<tag name="@see">#cleanup()</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.execute -->
<field name="execute"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;execute&lt;/code&gt; action.
</description>
<tag name="@see">#execute()</tag>
</field>

<!-- javax.baja.schedule.BControlSchedule.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.schedule.BControlSchedule.IN -->
<field name="IN"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Name of the input property - &#x22;in&#x22;.
</description>
</field>

<!-- javax.baja.schedule.BControlSchedule.OUT -->
<field name="OUT"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description>
Name of the output property - &#x22;out&#x22;.
</description>
</field>

<!-- javax.baja.schedule.BControlSchedule.ticket -->
<field name="ticket"  protected="true">
<type class="javax.baja.sys.Clock$Ticket"/>
<description/>
</field>

</class>
</bajadoc>
