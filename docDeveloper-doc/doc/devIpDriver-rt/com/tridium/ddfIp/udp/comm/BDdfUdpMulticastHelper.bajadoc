<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devIpDriver" runtimeProfile="rt" qualifiedName="com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper" name="BDdfUdpMulticastHelper" packageName="com.tridium.ddfIp.udp.comm" public="true">
<description/>
<extends>
<type class="javax.baja.sys.BVector"/>
</extends>
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;deprecation&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<property name="status" flags="">
<type class="javax.baja.status.BStatus"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; Reports the status of the multicast socket.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</property>

<property name="faultCause" flags="">
<type class="javax.baja.util.BFormat"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Specifies the reason why the statusFlags are in fault, if they are in fault
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</property>

<property name="jaceIpAddress" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;jaceIpAddress&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip address to bind the multicast socket to
</description>
<tag name="@see">#getJaceIpAddress</tag>
<tag name="@see">#setJaceIpAddress</tag>
</property>

<property name="jaceUdpPort" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;jaceUdpPort&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip port to bind the multicast socket to
</description>
<tag name="@see">#getJaceUdpPort</tag>
<tag name="@see">#setJaceUdpPort</tag>
</property>

<property name="udpGroupAddresses" flags="">
<type class="javax.baja.sys.BVector"/>
<description>
Slot for the &lt;code&gt;udpGroupAddresses&lt;/code&gt; property.&#xa; The multicast socket will be bound to send and/or receive to/from&#xa; these ip addresses
</description>
<tag name="@see">#getUdpGroupAddresses</tag>
<tag name="@see">#setUdpGroupAddresses</tag>
</property>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper() -->
<constructor name="BDdfUdpMulticastHelper" public="true">
<description/>
</constructor>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getStatus() -->
<method name="getStatus"  public="true">
<description>
Get the &lt;code&gt;status&lt;/code&gt; property.&#xa; Reports the status of the multicast socket.
</description>
<tag name="@see">#status</tag>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.setStatus(javax.baja.status.BStatus) -->
<method name="setStatus"  public="true">
<description>
Set the &lt;code&gt;status&lt;/code&gt; property.&#xa; Reports the status of the multicast socket.
</description>
<tag name="@see">#status</tag>
<parameter name="v">
<type class="javax.baja.status.BStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getFaultCause() -->
<method name="getFaultCause"  public="true">
<description>
Get the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Specifies the reason why the statusFlags are in fault, if they are in fault
</description>
<tag name="@see">#faultCause</tag>
<return>
<type class="javax.baja.util.BFormat"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.setFaultCause(javax.baja.util.BFormat) -->
<method name="setFaultCause"  public="true">
<description>
Set the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Specifies the reason why the statusFlags are in fault, if they are in fault
</description>
<tag name="@see">#faultCause</tag>
<parameter name="v">
<type class="javax.baja.util.BFormat"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getJaceIpAddress() -->
<method name="getJaceIpAddress"  public="true">
<description>
Get the &lt;code&gt;jaceIpAddress&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip address to bind the multicast socket to
</description>
<tag name="@see">#jaceIpAddress</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.setJaceIpAddress(java.lang.String) -->
<method name="setJaceIpAddress"  public="true">
<description>
Set the &lt;code&gt;jaceIpAddress&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip address to bind the multicast socket to
</description>
<tag name="@see">#jaceIpAddress</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getJaceUdpPort() -->
<method name="getJaceUdpPort"  public="true">
<description>
Get the &lt;code&gt;jaceUdpPort&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip port to bind the multicast socket to
</description>
<tag name="@see">#jaceUdpPort</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.setJaceUdpPort(int) -->
<method name="setJaceUdpPort"  public="true">
<description>
Set the &lt;code&gt;jaceUdpPort&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip port to bind the multicast socket to
</description>
<tag name="@see">#jaceUdpPort</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getUdpGroupAddresses() -->
<method name="getUdpGroupAddresses"  public="true">
<description>
Get the &lt;code&gt;udpGroupAddresses&lt;/code&gt; property.&#xa; The multicast socket will be bound to send and/or receive to/from&#xa; these ip addresses
</description>
<tag name="@see">#udpGroupAddresses</tag>
<return>
<type class="javax.baja.sys.BVector"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.setUdpGroupAddresses(javax.baja.sys.BVector) -->
<method name="setUdpGroupAddresses"  public="true">
<description>
Set the &lt;code&gt;udpGroupAddresses&lt;/code&gt; property.&#xa; The multicast socket will be bound to send and/or receive to/from&#xa; these ip addresses
</description>
<tag name="@see">#udpGroupAddresses</tag>
<parameter name="v">
<type class="javax.baja.sys.BVector"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getCommunicator() -->
<method name="getCommunicator"  public="true">
<description/>
<return>
<type class="com.tridium.ddf.comm.BIDdfCommunicator"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.getSocket() -->
<method name="getSocket"  public="true">
<description>
Binds a MulticastSocket to the Jace&#x27;s ip address and port. Configures&#xa; the multicast socket to be a member of all of the groupAddresses&#xa; that are configured in the &#x27;Group Addresses&#x27; property.
</description>
<return>
<type class="java.net.MulticastSocket"/>
<description>
the bound MultiCast socket to the Jace&#x27;s ip address and port&#xa; or null if a SocketException, UnknownHostException, or IOException occurs, in&#xa; which case, a message will be automatically sent to the communicator&#x27;s&#xa; log.
</description>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.closeSocket() -->
<method name="closeSocket"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.joinOrLeaveUdpGroups() -->
<method name="joinOrLeaveUdpGroups"  protected="true">
<description>
If the internal &#x27;multicastSocket&#x27; is not null then this calls joinGroups followed by leaveGroups.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.joinUdpGroups(javax.baja.sys.BString[]) -->
<method name="joinUdpGroups"  protected="true">
<description>
Causes the MulticastSocket to join any new groups that are specified on the &#x27;Group Addresses&#x27; property.
</description>
<parameter name="groups">
<type class="javax.baja.sys.BString" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.leaveUdpGroups(javax.baja.sys.BString[]) -->
<method name="leaveUdpGroups"  protected="true">
<description>
Causes the MulticastSocket to leave any groups that it has already joined that are not in the &#x27;Group Addresses&#x27; property.
</description>
<parameter name="groups">
<type class="javax.baja.sys.BString" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatLexicon(java.lang.String) -->
<method name="formatLexicon"  public="true" static="true">
<description>
Inserts the given lexkey into a BFormat lexicon(module:key) string
</description>
<parameter name="lexkey">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatInvalidMulticastGroup(javax.baja.sys.BString, java.lang.Exception) -->
<method name="formatInvalidMulticastGroup"  public="true" static="true" final="true">
<description/>
<parameter name="g">
<type class="javax.baja.sys.BString"/>
</parameter>
<parameter name="e">
<type class="java.lang.Exception"/>
</parameter>
<return>
<type class="javax.baja.util.BFormat"/>
</return>
</method>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; Reports the status of the multicast socket.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.faultCause -->
<field name="faultCause"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Specifies the reason why the statusFlags are in fault, if they are in fault
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.jaceIpAddress -->
<field name="jaceIpAddress"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;jaceIpAddress&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip address to bind the multicast socket to
</description>
<tag name="@see">#getJaceIpAddress</tag>
<tag name="@see">#setJaceIpAddress</tag>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.jaceUdpPort -->
<field name="jaceUdpPort"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;jaceUdpPort&lt;/code&gt; property.&#xa; Specifies the local, Jace Udp/Ip port to bind the multicast socket to
</description>
<tag name="@see">#getJaceUdpPort</tag>
<tag name="@see">#setJaceUdpPort</tag>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.udpGroupAddresses -->
<field name="udpGroupAddresses"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;udpGroupAddresses&lt;/code&gt; property.&#xa; The multicast socket will be bound to send and/or receive to/from&#xa; these ip addresses
</description>
<tag name="@see">#getUdpGroupAddresses</tag>
<tag name="@see">#setUdpGroupAddresses</tag>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.multicastSocket -->
<field name="multicastSocket"  protected="true">
<type class="java.net.MulticastSocket"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.LEX -->
<field name="LEX"  public="true" static="true" final="true">
<type class="javax.baja.util.Lexicon"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.lexkeyJaceMulticastSocketOpenError -->
<field name="lexkeyJaceMulticastSocketOpenError"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.lexkeyJaceSocketConnectionError -->
<field name="lexkeyJaceSocketConnectionError"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.lexkeyJaceUnknownHostException -->
<field name="lexkeyJaceUnknownHostException"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.lexkeyInvalidGroup -->
<field name="lexkeyInvalidGroup"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.jaceMulticastSocketOpenError -->
<field name="jaceMulticastSocketOpenError"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.jaceSocketConnectionError -->
<field name="jaceSocketConnectionError"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.jaceUnknownHostException -->
<field name="jaceUnknownHostException"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.invalidMulticastGroup -->
<field name="invalidMulticastGroup"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatLexicon -->
<field name="formatLexicon"  public="true" static="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatJaceMulticastSocketOpenError -->
<field name="formatJaceMulticastSocketOpenError"  public="true" static="true" final="true">
<type class="javax.baja.util.BFormat"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatJaceSocketConnectionError -->
<field name="formatJaceSocketConnectionError"  public="true" static="true" final="true">
<type class="javax.baja.util.BFormat"/>
<description/>
</field>

<!-- com.tridium.ddfIp.udp.comm.BDdfUdpMulticastHelper.formatJaceUnknownHostException -->
<field name="formatJaceUnknownHostException"  public="true" static="true" final="true">
<type class="javax.baja.util.BFormat"/>
<description/>
</field>

</class>
</bajadoc>
