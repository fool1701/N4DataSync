<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="basicDriver" runtimeProfile="rt" qualifiedName="com.tridium.basicdriver.serial.BSerialComm" name="BSerialComm" packageName="com.tridium.basicdriver.serial" public="true">
<description>
SerialComm is used to synchronize access to a&#xa; serial network and handles the synchronization of the serial&#xa; communication.
</description>
<tag name="@author">AndySaunders</tag>
<tag name="@creation">26 Mar 02</tag>
<tag name="@version">$Revision: 1$ $Date: 03/26/02 12:47:14 PM$</tag>
<tag name="@since">Niagara 3.0 basicdriver 1.0</tag>
<extends>
<type class="com.tridium.basicdriver.comm.BCommPlugIn"/>
</extends>
<implements>
<type class="javax.baja.serial.BISerialHelperParent"/>
</implements>
<property name="interMessageDelay" flags="">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#getInterMessageDelay</tag>
<tag name="@see">#setInterMessageDelay</tag>
</property>

<property name="serialPortConfig" flags="">
<type class="javax.baja.serial.BSerialHelper"/>
<description>
Slot for the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#getSerialPortConfig</tag>
<tag name="@see">#setSerialPortConfig</tag>
</property>

<!-- com.tridium.basicdriver.serial.BSerialComm() -->
<constructor name="BSerialComm" public="true">
<description/>
</constructor>

<!-- com.tridium.basicdriver.serial.BSerialComm.getInterMessageDelay() -->
<method name="getInterMessageDelay"  public="true">
<description>
Get the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#interMessageDelay</tag>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.setInterMessageDelay(javax.baja.sys.BRelTime) -->
<method name="setInterMessageDelay"  public="true">
<description>
Set the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#interMessageDelay</tag>
<parameter name="v">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.getSerialPortConfig() -->
<method name="getSerialPortConfig"  public="true">
<description>
Get the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#serialPortConfig</tag>
<return>
<type class="javax.baja.serial.BSerialHelper"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.setSerialPortConfig(javax.baja.serial.BSerialHelper) -->
<method name="setSerialPortConfig"  public="true">
<description>
Set the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#serialPortConfig</tag>
<parameter name="v">
<type class="javax.baja.serial.BSerialHelper"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.reopenPort() -->
<method name="reopenPort"  public="true" final="true">
<description>
This method is called by BSerialHelper when the port name has changed&#xa; to indicate that a reinitialization of the serial port is &#xa; required (i.e. close the old port, and &#xa; and then call BSerialHelper.open() to open the new port).
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.commStarted() -->
<method name="commStarted"  public="true">
<description>
Starts the serial transmit/receive drivers. Returns true if successfully started, false otherwise.&#xa; Opens the serial port and extracts the input and output streams,&#xa; and also starts the receive driver thread.
</description>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.commStopped() -->
<method name="commStopped"  public="true">
<description>
Stops the serial transmit/receive drivers.&#xa; Closes the serial port and the input and output streams.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.transmit(com.tridium.basicdriver.message.Message, javax.baja.sys.BRelTime, int) -->
<method name="transmit"  public="true">
<description>
Send a message using the message request/response service to&#xa; the communication medium.  Block the calling thread&#xa; until the response is obtained or the transaction times out.&#xa; Overridden here to enforce the inter message delay.
</description>
<parameter name="msg">
<type class="com.tridium.basicdriver.message.Message"/>
<description>
a network request (in message form) to be&#xa;    sent to the output stream
</description>
</parameter>
<parameter name="responseTimeout">
<type class="javax.baja.sys.BRelTime"/>
<description>
the timeout to wait for a response for&#xa;    this request.
</description>
</parameter>
<parameter name="retryCount">
<type class="int"/>
<description>
the number of retries to perform if the request&#xa;    fails (a timeout occurs).
</description>
</parameter>
<return>
<type class="com.tridium.basicdriver.message.Message"/>
<description>
Message the response received for the sent message&#xa;    if successful (or null if no response expected),&#xa;    otherwise an exception is thrown (i.e. timeout).
</description>
</return>
<throws>
<type class="com.tridium.basicdriver.util.BasicException"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.transmitNoResponse(com.tridium.basicdriver.message.Message) -->
<method name="transmitNoResponse"  public="true">
<description>
Send a message to the transmit driver and do not expect or wait&#xa; for a response from the receive driver.&#xa; Overridden here to enforce the inter message delay.
</description>
<parameter name="msg">
<type class="com.tridium.basicdriver.message.Message"/>
<description>
a message to be sent to the output stream
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="com.tridium.basicdriver.util.BasicException"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.receive(com.tridium.basicdriver.message.ReceivedMessage) -->
<method name="receive"  public="true">
<description>
This is the access point for the receive driver to&#xa; pass its received unsolicited messages and/or &#xa; response messages up to the communications handler for&#xa; processing.  Overridden here to enforce the Inter Message&#xa; Delay.
</description>
<parameter name="msg">
<type class="com.tridium.basicdriver.message.ReceivedMessage"/>
<description>
the response/unsolicited message received &#xa;    from the input stream.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.performInterMessageDelay() -->
<method name="performInterMessageDelay"  protected="true">
<description>
This method is called just before a message transmit in order to &#xa; checks to see when the last time a message was received.&#xa; It waits the necessary inter message delay time if needed before returning.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.setReceivedMessageTicks(long) -->
<method name="setReceivedMessageTicks"  protected="true">
<description>
Should be called with the current time ticks whenever a message&#xa; is received.
</description>
<parameter name="ticks">
<type class="long"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.getSerialPort() -->
<method name="getSerialPort"  public="true">
<description>
Returns the serial port used by this SerialComm
</description>
<return>
<type class="javax.baja.serial.BISerialPort"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialComm.interMessageDelay -->
<field name="interMessageDelay"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#getInterMessageDelay</tag>
<tag name="@see">#setInterMessageDelay</tag>
</field>

<!-- com.tridium.basicdriver.serial.BSerialComm.serialPortConfig -->
<field name="serialPortConfig"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#getSerialPortConfig</tag>
<tag name="@see">#setSerialPortConfig</tag>
</field>

<!-- com.tridium.basicdriver.serial.BSerialComm.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
