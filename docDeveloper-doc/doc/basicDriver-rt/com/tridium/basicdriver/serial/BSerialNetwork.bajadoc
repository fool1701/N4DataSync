<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="basicDriver" runtimeProfile="rt" qualifiedName="com.tridium.basicdriver.serial.BSerialNetwork" name="BSerialNetwork" packageName="com.tridium.basicdriver.serial" public="true" abstract="true">
<description>
BSerialNetwork is the base container for Serial Devices.  It extends BBasicNetwork&#xa; to support serial communication on a single configurable serial port.
</description>
<tag name="@author">Scott Hoye</tag>
<tag name="@creation">22 Mar 02</tag>
<tag name="@version">$Revision: 1$ $Date: 03/22/02 12:47:14 PM$</tag>
<tag name="@since">Niagara 3.0 basicdriver 1.0</tag>
<extends>
<type class="com.tridium.basicdriver.BBasicNetwork"/>
</extends>
<implements>
<type class="javax.baja.serial.BISerialHelperParent"/>
</implements>
<property name="interMessageDelay" flags="">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#getInterMessageDelay</tag>
<tag name="@see">#setInterMessageDelay</tag>
</property>

<property name="serialPortConfig" flags="">
<type class="javax.baja.serial.BSerialHelper"/>
<description>
Slot for the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#getSerialPortConfig</tag>
<tag name="@see">#setSerialPortConfig</tag>
</property>

<!-- com.tridium.basicdriver.serial.BSerialNetwork() -->
<constructor name="BSerialNetwork" public="true">
<description>
Default constructor.
</description>
</constructor>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.getInterMessageDelay() -->
<method name="getInterMessageDelay"  public="true">
<description>
Get the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#interMessageDelay</tag>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.setInterMessageDelay(javax.baja.sys.BRelTime) -->
<method name="setInterMessageDelay"  public="true">
<description>
Set the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#interMessageDelay</tag>
<parameter name="v">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.getSerialPortConfig() -->
<method name="getSerialPortConfig"  public="true">
<description>
Get the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#serialPortConfig</tag>
<return>
<type class="javax.baja.serial.BSerialHelper"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.setSerialPortConfig(javax.baja.serial.BSerialHelper) -->
<method name="setSerialPortConfig"  public="true">
<description>
Set the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#serialPortConfig</tag>
<parameter name="v">
<type class="javax.baja.serial.BSerialHelper"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serviceStarted() -->
<method name="serviceStarted"  public="true">
<description>
Initializes the serial helper and serial log, and builds the Serial &#xa; Communication Handler (SerialComm).
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serviceStopped() -->
<method name="serviceStopped"  public="true">
<description>
Stop the serial network.  This stops the SerialComm.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.startComm() -->
<method name="startComm"  public="true">
<description>
This method starts the Communication handler&#xa; (Comm) if the network is not out-of-service&#xa; and the current Comm is not null.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.checkSerialConfig() -->
<method name="checkSerialConfig"  protected="true">
<description>
This method checks to see if there was a problem during the serial&#xa; network communication initialization (i.e. opening the serial port), and returns&#xa; a String description of the problem, if a problem was found.  Returns&#xa; null if there was no problem.  Callers should use this returned String&#xa; description to set the network in configuration fault (configFail()).&#xa; On returning null, callers should set the network out of configuration &#xa; fault (configOk()).&#xa; Subclasses can override if needed (and call this super method) to insert&#xa; their own conditions for network failure.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.getLog() -->
<method name="getLog"  public="true" final="true">
<description>
Returns the log currently used by this&#xa; serial network.
</description>
<return>
<type class="javax.baja.log.Log"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.getLoggerName() -->
<method name="getLoggerName"  public="true" final="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.reopenPort() -->
<method name="reopenPort"  public="true" final="true">
<description>
This method is called by BSerialHelper when the port name has changed&#xa; to indicate that a reinitialization of the serial port is &#xa; required (i.e. close the old port, and &#xa; and then call BSerialHelper.open() to open the new port).
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialServiceStarted() -->
<method name="serialServiceStarted"  protected="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialServiceStopped() -->
<method name="serialServiceStopped"  protected="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialNetworkStarted() -->
<method name="serialNetworkStarted"  protected="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialNetworkStopped() -->
<method name="serialNetworkStopped"  protected="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialNetworkChanged(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="serialNetworkChanged"  protected="true" final="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.interMessageDelay -->
<field name="interMessageDelay"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;interMessageDelay&lt;/code&gt; property.&#xa; Specifies the minimum amount of time to wait after a response message is&#xa; received before sending the next request message.
</description>
<tag name="@see">#getInterMessageDelay</tag>
<tag name="@see">#setInterMessageDelay</tag>
</field>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.serialPortConfig -->
<field name="serialPortConfig"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;serialPortConfig&lt;/code&gt; property.&#xa; Contains the serial port properties
</description>
<tag name="@see">#getSerialPortConfig</tag>
<tag name="@see">#setSerialPortConfig</tag>
</field>

<!-- com.tridium.basicdriver.serial.BSerialNetwork.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
