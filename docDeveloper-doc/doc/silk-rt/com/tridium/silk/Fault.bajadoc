<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="silk" runtimeProfile="rt" qualifiedName="com.tridium.silk.Fault" name="Fault" packageName="com.tridium.silk" public="true" category="exception">
<description>
Server applications can use this to throw specific soap faults.
</description>
<tag name="@author">Aaron Hansen</tag>
<tag name="@creation">Sept 2005</tag>
<tag name="@version">$Revision: $ $Date: $</tag>
<extends>
<type class="java.io.IOException"/>
</extends>
<!-- com.tridium.silk.Fault(javax.baja.silk.SoapFault) -->
<constructor name="Fault" public="true">
<parameter name="fault">
<type class="javax.baja.silk.SoapFault"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.silk.Fault(java.lang.String, javax.baja.silk.SoapFault) -->
<constructor name="Fault" public="true">
<parameter name="msg">
<type class="java.lang.String"/>
</parameter>
<parameter name="fault">
<type class="javax.baja.silk.SoapFault"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.silk.Fault.getSoapFault() -->
<method name="getSoapFault"  public="true">
<description/>
<return>
<type class="javax.baja.silk.SoapFault"/>
</return>
</method>

<!-- com.tridium.silk.Fault.summary(javax.baja.silk.SoapFault) -->
<method name="summary"  public="true" static="true">
<description/>
<parameter name="sf">
<type class="javax.baja.silk.SoapFault"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.silk.Fault.toString() -->
<method name="toString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.silk.Fault.fault -->
<field name="fault"  protected="true">
<type class="javax.baja.silk.SoapFault"/>
<description/>
</field>

</class>
</bajadoc>
