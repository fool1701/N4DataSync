<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.BLabel" name="BLabel" packageName="javax.baja.ui" public="true">
<description>
BLabel is used to display text and/or an image.  BLabels&#xa; are always transparent, so their background is defined&#xa; by their parent.  Their preferred size is always an exact&#xa; fit to contain the text and/or image.  BLabels may be used&#xa; by themselves to display information which cannot respond&#xa; to user input, or they may be embedded in widgets such as&#xa; BButtons.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">1 Dec 00</tag>
<tag name="@version">$Revision: 74$ $Date: 6/30/11 11:38:13 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BWidget"/>
</extends>
<property name="text" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;text&lt;/code&gt; property.&#xa; Text to display on the label, or &#x22;&#x22; if no&#xa; text should be rendered for this label.
</description>
<tag name="@see">#getText</tag>
<tag name="@see">#setText</tag>
</property>

<property name="image" flags="">
<type class="javax.baja.gx.BImage"/>
<description>
Slot for the &lt;code&gt;image&lt;/code&gt; property.&#xa; Image to display on the label.
</description>
<tag name="@see">#getImage</tag>
<tag name="@see">#setImage</tag>
</property>

<property name="font" flags="">
<type class="javax.baja.gx.BFont"/>
<description>
Slot for the &lt;code&gt;font&lt;/code&gt; property.&#xa; Font defines the font to use to render the label&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#getFont</tag>
<tag name="@see">#setFont</tag>
</property>

<property name="foreground" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;foreground&lt;/code&gt; property.&#xa; Brush to use to render the label&#x27;s text.  If set&#xa; to BBrush.NULL then a context sensitive default&#xa; fallback will be used.
</description>
<tag name="@see">#getForeground</tag>
<tag name="@see">#setForeground</tag>
</property>

<property name="background" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;background&lt;/code&gt; property.&#xa; Brush to fill background of label. Use BBrush.NULL&#xa; to leave background transparent.
</description>
<tag name="@see">#getBackground</tag>
<tag name="@see">#setBackground</tag>
</property>

<property name="halign" flags="">
<type class="javax.baja.ui.enums.BHalign"/>
<description>
Slot for the &lt;code&gt;halign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified left, center, or to the&#xa; right of the label&#x27;s actual size.
</description>
<tag name="@see">#getHalign</tag>
<tag name="@see">#setHalign</tag>
</property>

<property name="valign" flags="">
<type class="javax.baja.ui.enums.BValign"/>
<description>
Slot for the &lt;code&gt;valign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified top, center, or on the&#xa; bottom the label&#x27;s actual size.
</description>
<tag name="@see">#getValign</tag>
<tag name="@see">#setValign</tag>
</property>

<property name="textToIconAlign" flags="">
<type class="javax.baja.ui.enums.BAlign"/>
<description>
Slot for the &lt;code&gt;textToIconAlign&lt;/code&gt; property.&#xa; This specifies the alignment of the label&#x27;s&#xa; text to the image if the label supports both.
</description>
<tag name="@see">#getTextToIconAlign</tag>
<tag name="@see">#setTextToIconAlign</tag>
</property>

<property name="textIconGap" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;textIconGap&lt;/code&gt; property.&#xa; Number of pixels between the text and image&#xa; if this label supports both.
</description>
<tag name="@see">#getTextIconGap</tag>
<tag name="@see">#setTextIconGap</tag>
</property>

<property name="blink" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;blink&lt;/code&gt; property.&#xa; If blink it true then the label is flashed&#xa; on and off to produce a blinking effect.
</description>
<tag name="@see">#getBlink</tag>
<tag name="@see">#setBlink</tag>
</property>

<property name="wordWrapEnabled" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;wordWrapEnabled&lt;/code&gt; property.&#xa; enables word wrapping on white space&#xa; to force wrapping, call setSize with max width
</description>
<tag name="@see">#getWordWrapEnabled</tag>
<tag name="@see">#setWordWrapEnabled</tag>
</property>

<topic name="actionPerformed" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; This topic fires a BWidgetEvent whenever the widget is clicked.
</description>
<tag name="@since">Niagara 4.13</tag>
<tag name="@see">#fireActionPerformed</tag>
</topic>

<!-- javax.baja.ui.BLabel(javax.baja.gx.BImage, java.lang.String) -->
<constructor name="BLabel" public="true">
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<description>
Label constructor with image and text.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(java.lang.String) -->
<constructor name="BLabel" public="true">
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<description>
Label constructor with specified text.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(javax.baja.gx.BImage) -->
<constructor name="BLabel" public="true">
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<description>
Label constructor with specified image.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(java.lang.String, javax.baja.ui.enums.BHalign) -->
<constructor name="BLabel" public="true">
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="hAlign">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<description>
Label constructor with specified text and horizontal alignment.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(java.lang.String, javax.baja.ui.enums.BValign) -->
<constructor name="BLabel" public="true">
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="vAlign">
<type class="javax.baja.ui.enums.BValign"/>
</parameter>
<description>
Label constructor with specified text and vertical alignment.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(java.lang.String, javax.baja.gx.BFont) -->
<constructor name="BLabel" public="true">
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="font">
<type class="javax.baja.gx.BFont"/>
</parameter>
<description>
Label constructor with specified text and font.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(javax.baja.gx.BImage, java.lang.String, javax.baja.gx.BFont) -->
<constructor name="BLabel" public="true">
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="font">
<type class="javax.baja.gx.BFont"/>
</parameter>
<description>
Label constructor with specified image, text, and font.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(javax.baja.gx.BImage, javax.baja.ui.enums.BHalign) -->
<constructor name="BLabel" public="true">
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="hAlign">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<description>
Label constructor with specified image and horizontal alignment.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(javax.baja.gx.BImage, javax.baja.ui.enums.BValign) -->
<constructor name="BLabel" public="true">
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="vAlign">
<type class="javax.baja.ui.enums.BValign"/>
</parameter>
<description>
Label constructor with specified image and vertical alignment.
</description>
</constructor>

<!-- javax.baja.ui.BLabel(java.lang.String, javax.baja.gx.BFont, javax.baja.ui.enums.BHalign) -->
<constructor name="BLabel" public="true">
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="font">
<type class="javax.baja.gx.BFont"/>
</parameter>
<parameter name="hAlign">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<description>
Label constructor with specified text, font, and horizontal alignment.
</description>
</constructor>

<!-- javax.baja.ui.BLabel() -->
<constructor name="BLabel" public="true">
<description>
No argument constructor.
</description>
</constructor>

<!-- javax.baja.ui.BLabel.getText() -->
<method name="getText"  public="true">
<description>
Get the &lt;code&gt;text&lt;/code&gt; property.&#xa; Text to display on the label, or &#x22;&#x22; if no&#xa; text should be rendered for this label.
</description>
<tag name="@see">#text</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setText(java.lang.String) -->
<method name="setText"  public="true">
<description>
Set the &lt;code&gt;text&lt;/code&gt; property.&#xa; Text to display on the label, or &#x22;&#x22; if no&#xa; text should be rendered for this label.
</description>
<tag name="@see">#text</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getImage() -->
<method name="getImage"  public="true">
<description>
Get the &lt;code&gt;image&lt;/code&gt; property.&#xa; Image to display on the label.
</description>
<tag name="@see">#image</tag>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setImage(javax.baja.gx.BImage) -->
<method name="setImage"  public="true">
<description>
Set the &lt;code&gt;image&lt;/code&gt; property.&#xa; Image to display on the label.
</description>
<tag name="@see">#image</tag>
<parameter name="v">
<type class="javax.baja.gx.BImage"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getFont() -->
<method name="getFont"  public="true">
<description>
Get the &lt;code&gt;font&lt;/code&gt; property.&#xa; Font defines the font to use to render the label&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#font</tag>
<return>
<type class="javax.baja.gx.BFont"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setFont(javax.baja.gx.BFont) -->
<method name="setFont"  public="true">
<description>
Set the &lt;code&gt;font&lt;/code&gt; property.&#xa; Font defines the font to use to render the label&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#font</tag>
<parameter name="v">
<type class="javax.baja.gx.BFont"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getForeground() -->
<method name="getForeground"  public="true">
<description>
Get the &lt;code&gt;foreground&lt;/code&gt; property.&#xa; Brush to use to render the label&#x27;s text.  If set&#xa; to BBrush.NULL then a context sensitive default&#xa; fallback will be used.
</description>
<tag name="@see">#foreground</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setForeground(javax.baja.gx.BBrush) -->
<method name="setForeground"  public="true">
<description>
Set the &lt;code&gt;foreground&lt;/code&gt; property.&#xa; Brush to use to render the label&#x27;s text.  If set&#xa; to BBrush.NULL then a context sensitive default&#xa; fallback will be used.
</description>
<tag name="@see">#foreground</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getBackground() -->
<method name="getBackground"  public="true">
<description>
Get the &lt;code&gt;background&lt;/code&gt; property.&#xa; Brush to fill background of label. Use BBrush.NULL&#xa; to leave background transparent.
</description>
<tag name="@see">#background</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setBackground(javax.baja.gx.BBrush) -->
<method name="setBackground"  public="true">
<description>
Set the &lt;code&gt;background&lt;/code&gt; property.&#xa; Brush to fill background of label. Use BBrush.NULL&#xa; to leave background transparent.
</description>
<tag name="@see">#background</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getHalign() -->
<method name="getHalign"  public="true">
<description>
Get the &lt;code&gt;halign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified left, center, or to the&#xa; right of the label&#x27;s actual size.
</description>
<tag name="@see">#halign</tag>
<return>
<type class="javax.baja.ui.enums.BHalign"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setHalign(javax.baja.ui.enums.BHalign) -->
<method name="setHalign"  public="true">
<description>
Set the &lt;code&gt;halign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified left, center, or to the&#xa; right of the label&#x27;s actual size.
</description>
<tag name="@see">#halign</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getValign() -->
<method name="getValign"  public="true">
<description>
Get the &lt;code&gt;valign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified top, center, or on the&#xa; bottom the label&#x27;s actual size.
</description>
<tag name="@see">#valign</tag>
<return>
<type class="javax.baja.ui.enums.BValign"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setValign(javax.baja.ui.enums.BValign) -->
<method name="setValign"  public="true">
<description>
Set the &lt;code&gt;valign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified top, center, or on the&#xa; bottom the label&#x27;s actual size.
</description>
<tag name="@see">#valign</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BValign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getTextToIconAlign() -->
<method name="getTextToIconAlign"  public="true">
<description>
Get the &lt;code&gt;textToIconAlign&lt;/code&gt; property.&#xa; This specifies the alignment of the label&#x27;s&#xa; text to the image if the label supports both.
</description>
<tag name="@see">#textToIconAlign</tag>
<return>
<type class="javax.baja.ui.enums.BAlign"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setTextToIconAlign(javax.baja.ui.enums.BAlign) -->
<method name="setTextToIconAlign"  public="true">
<description>
Set the &lt;code&gt;textToIconAlign&lt;/code&gt; property.&#xa; This specifies the alignment of the label&#x27;s&#xa; text to the image if the label supports both.
</description>
<tag name="@see">#textToIconAlign</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BAlign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getTextIconGap() -->
<method name="getTextIconGap"  public="true">
<description>
Get the &lt;code&gt;textIconGap&lt;/code&gt; property.&#xa; Number of pixels between the text and image&#xa; if this label supports both.
</description>
<tag name="@see">#textIconGap</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setTextIconGap(double) -->
<method name="setTextIconGap"  public="true">
<description>
Set the &lt;code&gt;textIconGap&lt;/code&gt; property.&#xa; Number of pixels between the text and image&#xa; if this label supports both.
</description>
<tag name="@see">#textIconGap</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getBlink() -->
<method name="getBlink"  public="true">
<description>
Get the &lt;code&gt;blink&lt;/code&gt; property.&#xa; If blink it true then the label is flashed&#xa; on and off to produce a blinking effect.
</description>
<tag name="@see">#blink</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setBlink(boolean) -->
<method name="setBlink"  public="true">
<description>
Set the &lt;code&gt;blink&lt;/code&gt; property.&#xa; If blink it true then the label is flashed&#xa; on and off to produce a blinking effect.
</description>
<tag name="@see">#blink</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getWordWrapEnabled() -->
<method name="getWordWrapEnabled"  public="true">
<description>
Get the &lt;code&gt;wordWrapEnabled&lt;/code&gt; property.&#xa; enables word wrapping on white space&#xa; to force wrapping, call setSize with max width
</description>
<tag name="@see">#wordWrapEnabled</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setWordWrapEnabled(boolean) -->
<method name="setWordWrapEnabled"  public="true">
<description>
Set the &lt;code&gt;wordWrapEnabled&lt;/code&gt; property.&#xa; enables word wrapping on white space&#xa; to force wrapping, call setSize with max width
</description>
<tag name="@see">#wordWrapEnabled</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.fireActionPerformed(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireActionPerformed"  public="true">
<description>
Fire an event for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; This topic fires a BWidgetEvent whenever the widget is clicked.
</description>
<tag name="@since">Niagara 4.13</tag>
<tag name="@see">#actionPerformed</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setWordWrapEnabled(boolean, double) -->
<method name="setWordWrapEnabled"  public="true">
<description/>
<parameter name="enabled">
<type class="boolean"/>
</parameter>
<parameter name="maxWidth">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute the preferred size of the label.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Compute the layout information for the label.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getPadding() -->
<method name="getPadding"  public="true">
<description>
Get the padding between the widget bounds&#xa; and the label bounds.
</description>
<return>
<type class="javax.baja.gx.BInsets"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.setPadding(javax.baja.gx.BInsets) -->
<method name="setPadding"  public="true">
<description>
Explicitaly set the padding between the widget&#xa; bounds and the label bounds.
</description>
<parameter name="padding">
<type class="javax.baja.gx.BInsets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getLabelLayout() -->
<method name="getLabelLayout"  public="true">
<description>
Get the Label Layout that provides all text and image positions.
</description>
<return>
<type class="javax.baja.ui.BLabel$Layout"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the label.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.paintIcon(javax.baja.gx.Graphics, javax.baja.gx.BImage, double, double) -->
<method name="paintIcon"  protected="true">
<description>
Paint the image.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="image">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="x">
<type class="double"/>
</parameter>
<parameter name="y">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.paintBackground(javax.baja.gx.Graphics, javax.baja.gx.BBrush) -->
<method name="paintBackground"  protected="true">
<description>
Paint the background.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="background">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.paintText(javax.baja.gx.Graphics, java.lang.String, double, double) -->
<method name="paintText"  protected="true">
<description>
Paint the label&#x27;s text.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="tx">
<type class="double"/>
</parameter>
<parameter name="ty">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.animate() -->
<method name="animate"  public="true">
<description>
Animate the image if supported.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getStyleSelector() -->
<method name="getStyleSelector"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.receiveInputEvents() -->
<method name="receiveInputEvents"  public="true">
<description>
Labels do not receive input events&#xa; unless hasBindings() returns true.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.getDebugString() -->
<method name="getDebugString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.createLayout() -->
<method name="createLayout"  protected="true">
<description/>
<return>
<type class="javax.baja.ui.BLabel$Layout"/>
</return>
</method>

<!-- javax.baja.ui.BLabel.text -->
<field name="text"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;text&lt;/code&gt; property.&#xa; Text to display on the label, or &#x22;&#x22; if no&#xa; text should be rendered for this label.
</description>
<tag name="@see">#getText</tag>
<tag name="@see">#setText</tag>
</field>

<!-- javax.baja.ui.BLabel.image -->
<field name="image"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;image&lt;/code&gt; property.&#xa; Image to display on the label.
</description>
<tag name="@see">#getImage</tag>
<tag name="@see">#setImage</tag>
</field>

<!-- javax.baja.ui.BLabel.font -->
<field name="font"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;font&lt;/code&gt; property.&#xa; Font defines the font to use to render the label&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#getFont</tag>
<tag name="@see">#setFont</tag>
</field>

<!-- javax.baja.ui.BLabel.foreground -->
<field name="foreground"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;foreground&lt;/code&gt; property.&#xa; Brush to use to render the label&#x27;s text.  If set&#xa; to BBrush.NULL then a context sensitive default&#xa; fallback will be used.
</description>
<tag name="@see">#getForeground</tag>
<tag name="@see">#setForeground</tag>
</field>

<!-- javax.baja.ui.BLabel.background -->
<field name="background"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;background&lt;/code&gt; property.&#xa; Brush to fill background of label. Use BBrush.NULL&#xa; to leave background transparent.
</description>
<tag name="@see">#getBackground</tag>
<tag name="@see">#setBackground</tag>
</field>

<!-- javax.baja.ui.BLabel.halign -->
<field name="halign"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;halign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified left, center, or to the&#xa; right of the label&#x27;s actual size.
</description>
<tag name="@see">#getHalign</tag>
<tag name="@see">#setHalign</tag>
</field>

<!-- javax.baja.ui.BLabel.valign -->
<field name="valign"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;valign&lt;/code&gt; property.&#xa; If the label is sized larger than its preferred&#xa; size, this defines whether the text and/or image&#xa; should be justified top, center, or on the&#xa; bottom the label&#x27;s actual size.
</description>
<tag name="@see">#getValign</tag>
<tag name="@see">#setValign</tag>
</field>

<!-- javax.baja.ui.BLabel.textToIconAlign -->
<field name="textToIconAlign"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;textToIconAlign&lt;/code&gt; property.&#xa; This specifies the alignment of the label&#x27;s&#xa; text to the image if the label supports both.
</description>
<tag name="@see">#getTextToIconAlign</tag>
<tag name="@see">#setTextToIconAlign</tag>
</field>

<!-- javax.baja.ui.BLabel.textIconGap -->
<field name="textIconGap"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;textIconGap&lt;/code&gt; property.&#xa; Number of pixels between the text and image&#xa; if this label supports both.
</description>
<tag name="@see">#getTextIconGap</tag>
<tag name="@see">#setTextIconGap</tag>
</field>

<!-- javax.baja.ui.BLabel.blink -->
<field name="blink"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;blink&lt;/code&gt; property.&#xa; If blink it true then the label is flashed&#xa; on and off to produce a blinking effect.
</description>
<tag name="@see">#getBlink</tag>
<tag name="@see">#setBlink</tag>
</field>

<!-- javax.baja.ui.BLabel.wordWrapEnabled -->
<field name="wordWrapEnabled"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;wordWrapEnabled&lt;/code&gt; property.&#xa; enables word wrapping on white space&#xa; to force wrapping, call setSize with max width
</description>
<tag name="@see">#getWordWrapEnabled</tag>
<tag name="@see">#setWordWrapEnabled</tag>
</field>

<!-- javax.baja.ui.BLabel.actionPerformed -->
<field name="actionPerformed"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; This topic fires a BWidgetEvent whenever the widget is clicked.
</description>
<tag name="@since">Niagara 4.13</tag>
<tag name="@see">#fireActionPerformed</tag>
</field>

<!-- javax.baja.ui.BLabel.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
