<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.list.BList" name="BList" packageName="javax.baja.ui.list" public="true">
<description>
BList is used to visualize a list of items.&#xa;&#xa; &lt;p&gt;&#xa; BList is composed of several pluggable support classes:&#xa; &lt;ul&gt;&#xa; &lt;li&gt;&lt;b&gt;Model:&lt;/b&gt; The list model stores the items.  There is &#xa; required one to one  mapping between BList and ListModel.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Controller:&lt;/b&gt; The ListController is responsible&#xa;   for processing all user input on the list in the form&#xa;   of focus, keyboard, and mouse events.  All input events&#xa;   are routed to the installed controller for processing.&#xa;   There is required one to one mapping between BList and &#xa;   ListController.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Selection:&lt;/b&gt; Every list has a ListSelection&#xa;   instance which is used to store the current selection&#xa;   and provide access to modify the selection.  There is &#xa;   required one to one mapping between BList and  ListSelection.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Renderer:&lt;/b&gt; The list&#x27;s installed ListRenderer&#xa;   is used to paint each item.  There is required one to one &#xa;   mapping between BList and ListRenderer.&#xa; &lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">9 Jul 02</tag>
<tag name="@version">$Revision: 55$ $Date: 6/29/11 12:15:44 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.transfer.BTransferWidget"/>
</extends>
<property name="multipleSelection" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#getMultipleSelection</tag>
<tag name="@see">#setMultipleSelection</tag>
</property>

<property name="vscrollBar" flags="rth">
<type class="javax.baja.ui.BScrollBar"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</property>

<action name="vscroll" flags="">
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</action>

<topic name="actionPerformed" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or the selects a row with the mouse.
</description>
<tag name="@see">#fireActionPerformed</tag>
</topic>

<topic name="cancelled" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#fireCancelled</tag>
</topic>

<topic name="listModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;listModified&lt;/code&gt; topic.&#xa; Fired when the contents are modified.
</description>
<tag name="@see">#fireListModified</tag>
</topic>

<topic name="selectionModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the list selection is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</topic>

<!-- javax.baja.ui.list.BList() -->
<constructor name="BList" public="true">
<description>
Constructor with an empty DefaultListModel.
</description>
</constructor>

<!-- javax.baja.ui.list.BList(javax.baja.ui.list.ListModel) -->
<constructor name="BList" public="true">
<parameter name="model">
<type class="javax.baja.ui.list.ListModel"/>
</parameter>
<description>
Constructor with specified model.
</description>
</constructor>

<!-- javax.baja.ui.list.BList(javax.baja.ui.list.ListController) -->
<constructor name="BList" public="true">
<parameter name="controller">
<type class="javax.baja.ui.list.ListController"/>
</parameter>
<description>
Constructor with specified controller.
</description>
</constructor>

<!-- javax.baja.ui.list.BList(javax.baja.ui.list.ListModel, javax.baja.ui.list.ListController) -->
<constructor name="BList" public="true">
<parameter name="model">
<type class="javax.baja.ui.list.ListModel"/>
</parameter>
<parameter name="controller">
<type class="javax.baja.ui.list.ListController"/>
</parameter>
<description>
Constructor with model and controller.
</description>
</constructor>

<!-- javax.baja.ui.list.BList.getMultipleSelection() -->
<method name="getMultipleSelection"  public="true">
<description>
Get the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#multipleSelection</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setMultipleSelection(boolean) -->
<method name="setMultipleSelection"  public="true">
<description>
Set the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#multipleSelection</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getVscrollBar() -->
<method name="getVscrollBar"  public="true">
<description>
Get the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#vscrollBar</tag>
<return>
<type class="javax.baja.ui.BScrollBar"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setVscrollBar(javax.baja.ui.BScrollBar) -->
<method name="setVscrollBar"  public="true">
<description>
Set the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#vscrollBar</tag>
<parameter name="v">
<type class="javax.baja.ui.BScrollBar"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.vscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="vscroll"  public="true">
<description>
Invoke the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll</tag>
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.fireActionPerformed(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireActionPerformed"  public="true">
<description>
Fire an event for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or the selects a row with the mouse.
</description>
<tag name="@see">#actionPerformed</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.fireCancelled(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireCancelled"  public="true">
<description>
Fire an event for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#cancelled</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.fireListModified(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireListModified"  public="true">
<description>
Fire an event for the &lt;code&gt;listModified&lt;/code&gt; topic.&#xa; Fired when the contents are modified.
</description>
<tag name="@see">#listModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.fireSelectionModified(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireSelectionModified"  public="true">
<description>
Fire an event for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the list selection is modified.
</description>
<tag name="@see">#selectionModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.started() -->
<method name="started"  public="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getModel() -->
<method name="getModel"  public="true">
<description>
Get the table model currently installed.
</description>
<return>
<type class="javax.baja.ui.list.ListModel"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setModel(javax.baja.ui.list.ListModel) -->
<method name="setModel"  public="true">
<description>
Install the specified model this BList visualizes.
</description>
<parameter name="model">
<type class="javax.baja.ui.list.ListModel"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getController() -->
<method name="getController"  public="true">
<description>
Get the controller currently installed.
</description>
<return>
<type class="javax.baja.ui.list.ListController"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setController(javax.baja.ui.list.ListController) -->
<method name="setController"  public="true">
<description>
Install the specified controller.
</description>
<parameter name="controller">
<type class="javax.baja.ui.list.ListController"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getSelection() -->
<method name="getSelection"  public="true">
<description>
Get the current list selection.
</description>
<return>
<type class="javax.baja.ui.list.ListSelection"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setSelection(javax.baja.ui.list.ListSelection) -->
<method name="setSelection"  public="true">
<description>
Install the specified selection model.
</description>
<parameter name="selection">
<type class="javax.baja.ui.list.ListSelection"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getRenderer() -->
<method name="getRenderer"  public="true">
<description>
Get the ListRenderer currently installed.
</description>
<return>
<type class="javax.baja.ui.list.ListRenderer"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setRenderer(javax.baja.ui.list.ListRenderer) -->
<method name="setRenderer"  public="true">
<description>
Install the specified ListRenderer.
</description>
<parameter name="renderer">
<type class="javax.baja.ui.list.ListRenderer"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description>
Relayout and repaint when properties change.
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute the preferred size of the list.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout the list.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getVisibleRowCount() -->
<method name="getVisibleRowCount"  public="true">
<description>
Get the number of visible rows for the list.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getItemIndexAt(double, double) -->
<method name="getItemIndexAt"  public="true">
<description>
Translate a coordinate into a item index or return -1&#xa; if the coordinate does not map to an item&#x27;s cell.
</description>
<parameter name="x">
<type class="double"/>
</parameter>
<parameter name="y">
<type class="double"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getItemBounds(int) -->
<method name="getItemBounds"  public="true">
<description>
Get the item bounds of the specified item index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.RectGeom"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.ensureItemIsVisible(int) -->
<method name="ensureItemIsVisible"  public="true">
<description>
Ensure the item index is scrolled so that it is visible.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.doVscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="doVscroll"  public="true">
<description>
Implementation for the scroll action.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getItemCount() -->
<method name="getItemCount"  public="true">
<description>
Convenience for &lt;code&gt;getModel().getItemCount()&lt;/code&gt;.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getItem(int) -->
<method name="getItem"  public="true">
<description>
Get the item at the specified index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.indexOfItem(java.lang.Object) -->
<method name="indexOfItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().indexOfItem(value)&lt;/code&gt;.
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.addItem(java.lang.Object) -->
<method name="addItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().addItem(value)&lt;/code&gt;.
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.addItem(javax.baja.gx.BImage, java.lang.Object) -->
<method name="addItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().addItem(icon, value)&lt;/code&gt;.
</description>
<parameter name="icon">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.insertItem(int, java.lang.Object) -->
<method name="insertItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().insertItem(index, value)&lt;/code&gt;.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.insertItem(int, javax.baja.gx.BImage, java.lang.Object) -->
<method name="insertItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().insertItem(index, icon, value)&lt;/code&gt;.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setItem(int, java.lang.Object) -->
<method name="setItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().setItem(index, value)&lt;/code&gt;.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setItem(int, javax.baja.gx.BImage, java.lang.Object) -->
<method name="setItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().setItem(index, icon, value)&lt;/code&gt;.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.removeItem(java.lang.Object) -->
<method name="removeItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().removeItem(value)&lt;/code&gt;.
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.removeItem(int) -->
<method name="removeItem"  public="true">
<description>
Convenience for &lt;code&gt;getModel().removeItem(index)&lt;/code&gt;.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.removeAllItems() -->
<method name="removeAllItems"  public="true">
<description>
Convenience for &lt;code&gt;getModel().removeAllItems()&lt;/code&gt;.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.removeSelectedItems() -->
<method name="removeSelectedItems"  public="true">
<description>
Remove all currently selected items from the list.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.isSelected(int) -->
<method name="isSelected"  public="true">
<description>
Is the specified index selected.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.isSelected(java.lang.Object) -->
<method name="isSelected"  public="true">
<description>
Is the specified item selected.
</description>
<parameter name="item">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getSelectedIndex() -->
<method name="getSelectedIndex"  public="true">
<description>
Get the currently selected item index &#xa; or -1 if nothing selected.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getSelectedIndices() -->
<method name="getSelectedIndices"  public="true">
<description>
Get the currently selected item indices, or&#xa; an empty array is nothing selected.
</description>
<return>
<type class="int" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getSelectedItem() -->
<method name="getSelectedItem"  public="true">
<description>
Get the currently selected item value or return&#xa; null if there is no selection.
</description>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getSelectedItems() -->
<method name="getSelectedItems"  public="true">
<description>
Get the currently selected items, or an &#xa; empty array is nothing is selected.
</description>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setSelectedIndex(int) -->
<method name="setSelectedIndex"  public="true">
<description>
Set the selected index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.setSelectedItem(java.lang.Object) -->
<method name="setSelectedItem"  public="true">
<description>
Select the specified item, or if null clear&#xa; the current selection.  Equality is checked&#xa; using the &#x22;==&#x22; operator, not equals().
</description>
<parameter name="value">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the list.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getStyleSelector() -->
<method name="getStyleSelector"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.isFocusTraversable() -->
<method name="isFocusTraversable"  public="true">
<description>
BList will accept focus.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.focusGained(javax.baja.ui.event.BFocusEvent) -->
<method name="focusGained"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.focusLost(javax.baja.ui.event.BFocusEvent) -->
<method name="focusLost"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.keyReleased(javax.baja.ui.event.BKeyEvent) -->
<method name="keyReleased"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.keyTyped(javax.baja.ui.event.BKeyEvent) -->
<method name="keyTyped"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseMoved"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mousePulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePulsed"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.mouseWheel(javax.baja.ui.event.BMouseWheelEvent) -->
<method name="mouseWheel"  public="true">
<description>
Route to ListController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseWheelEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.getTransferData() -->
<method name="getTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<return>
<type class="javax.baja.ui.transfer.TransferEnvelope"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.list.BList.insertTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="insertTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.list.BList.removeTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="removeTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.list.BList.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.list.BList.multipleSelection -->
<field name="multipleSelection"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#getMultipleSelection</tag>
<tag name="@see">#setMultipleSelection</tag>
</field>

<!-- javax.baja.ui.list.BList.vscrollBar -->
<field name="vscrollBar"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</field>

<!-- javax.baja.ui.list.BList.vscroll -->
<field name="vscroll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</field>

<!-- javax.baja.ui.list.BList.actionPerformed -->
<field name="actionPerformed"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or the selects a row with the mouse.
</description>
<tag name="@see">#fireActionPerformed</tag>
</field>

<!-- javax.baja.ui.list.BList.cancelled -->
<field name="cancelled"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#fireCancelled</tag>
</field>

<!-- javax.baja.ui.list.BList.listModified -->
<field name="listModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;listModified&lt;/code&gt; topic.&#xa; Fired when the contents are modified.
</description>
<tag name="@see">#fireListModified</tag>
</field>

<!-- javax.baja.ui.list.BList.selectionModified -->
<field name="selectionModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the list selection is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</field>

<!-- javax.baja.ui.list.BList.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
