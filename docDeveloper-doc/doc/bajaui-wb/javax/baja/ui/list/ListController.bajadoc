<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.list.ListController" name="ListController" packageName="javax.baja.ui.list" public="true">
<description>
ListController is used to respond to user input on BList.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">9 Jul 02</tag>
<tag name="@version">$Revision: 15$ $Date: 5/26/10 9:27:55 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.list.BList$ListSupport"/>
</extends>
<!-- javax.baja.ui.list.ListController() -->
<constructor name="ListController" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.list.ListController.focusGained(javax.baja.ui.event.BFocusEvent) -->
<method name="focusGained"  public="true">
<description>
Callback when focusGained() on BList.  The default&#xa; implementation is to select the first item if no items&#xa; are currently selected.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.focusLost(javax.baja.ui.event.BFocusEvent) -->
<method name="focusLost"  public="true">
<description>
Callback when focusLost() on BList.  The default&#xa; implementation is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description>
Callback when keyPressed() on BList.  The default&#xa; implementation is to process the up, down, pageup&#xa; and pagedown keys.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.keyReleased(javax.baja.ui.event.BKeyEvent) -->
<method name="keyReleased"  public="true">
<description>
Callback when keyReleased() on BList.  The default&#xa; implementation is to process the Enter and Esc keys.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.keyTyped(javax.baja.ui.event.BKeyEvent) -->
<method name="keyTyped"  public="true">
<description>
Callback when keyTyped() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.handleEnter(javax.baja.ui.event.BKeyEvent) -->
<method name="handleEnter"  protected="true">
<description>
Default implementation is to fire actionPerformed.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.handleEscape(javax.baja.ui.event.BKeyEvent) -->
<method name="handleEscape"  protected="true">
<description>
Default implementation is to fire cancelled.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
Callback when mousePressed() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description>
Callback when mouseReleased() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description>
Callback when mouseEntered() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description>
Callback when mouseExited() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseMoved"  public="true">
<description>
Callback when mouseMoved() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description>
Callback when mouseDragged() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mousePulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePulsed"  public="true">
<description>
Callback when mousePulsed() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.mouseWheel(javax.baja.ui.event.BMouseWheelEvent) -->
<method name="mouseWheel"  public="true">
<description>
Callback when mouseWheel() on BList.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseWheelEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.getMouseOverItem() -->
<method name="getMouseOverItem"  public="true">
<description>
If the cursor is currently over a item, then&#xa; return the item index, otherwise return -1.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemEntered(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemEntered"  protected="true">
<description>
Callback when the mouse enters a item cell.  &#xa; The default is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemExited(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemExited"  protected="true">
<description>
Callback when the mouse exits a item cell.  &#xa; The default is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemPressed(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemPressed"  protected="true">
<description>
Callback when the mouse is pressed over a item.  &#xa; The default implementation of this method is to&#xa; select or deselect the specified item.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemReleased(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemReleased"  protected="true">
<description>
Callback when the mouse is released over a item.  &#xa; The default is to check selection.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemMoved(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemMoved"  protected="true">
<description>
Callback when the mouse is moved over a item.  &#xa; The default is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemDragged(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemDragged"  protected="true">
<description>
Callback when the mouse is dragged over a item cell.  &#xa; The default is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemPulsed(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemPulsed"  protected="true">
<description>
Callback when the mouse is pulsed over a item cell.  &#xa; The default is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemDoubleClicked(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemDoubleClicked"  protected="true">
<description>
Call for double click over item.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundEntered"  protected="true">
<description>
Callback when the mouse enters background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundExited(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundExited"  protected="true">
<description>
Callback when the mouse exits background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundPressed(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundPressed"  protected="true">
<description>
Callback when the mouse is pressed over background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundReleased"  protected="true">
<description>
Callback when the mouse is released over background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundMoved"  protected="true">
<description>
Callback when the mouse is moved over background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundDragged"  protected="true">
<description>
Callback when the mouse is dragged over background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundPulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundPulsed"  protected="true">
<description>
Callback when the mouse is pulsed over background (below items).
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.itemPopup(javax.baja.ui.event.BMouseEvent, int) -->
<method name="itemPopup"  protected="true">
<description>
This callback is made when the user triggers a popup over an item.  &#xa; This method routes to &lt;code&gt;popup(event, index)&lt;/code&gt;
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.backgroundPopup(javax.baja.ui.event.BMouseEvent) -->
<method name="backgroundPopup"  protected="true">
<description>
This callback is made when the user triggers a popup &#xa; in the background space where no items are visible.  &#xa; This method routes to &lt;code&gt;popup(event, -1)&lt;/code&gt;
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.popup(javax.baja.ui.event.BMouseEvent, int) -->
<method name="popup"  protected="true">
<description>
Callback when a mouse event triggers a popup menu.  The&#xa; index specifies the item index the user clicked over, or&#xa; -1 if the user clicked over the background.  This method&#xa; routes to makePopup() and opens the popup.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.makePopup(javax.baja.ui.list.ListSubject) -->
<method name="makePopup"  protected="true">
<description>
Make a popup menu for the specified subject &#xa; selection or return null to display no popup menu.
</description>
<parameter name="subject">
<type class="javax.baja.ui.list.ListSubject"/>
</parameter>
<return>
<type class="javax.baja.ui.BMenu"/>
</return>
</method>

<!-- javax.baja.ui.list.ListController.checkSelection(javax.baja.ui.event.BMouseEvent, int) -->
<method name="checkSelection"  protected="true">
<description>
Check if the selection should be changed.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="item">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
