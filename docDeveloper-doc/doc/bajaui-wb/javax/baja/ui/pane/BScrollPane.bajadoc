<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.pane.BScrollPane" name="BScrollPane" packageName="javax.baja.ui.pane" public="true">
<description>
BScrollPane lays out one child using a viewport&#xa; which may be scrolled to view the entire child&#x27;s&#xa; actual size.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">26 Nov 00</tag>
<tag name="@version">$Revision: 75$ $Date: 6/20/11 9:34:25 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.pane.BPane"/>
</extends>
<property name="content" flags="">
<type class="javax.baja.ui.BWidget"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.&#xa; Content is the widget to be scrolled.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</property>

<property name="hscrollBar" flags="rth">
<type class="javax.baja.ui.BScrollBar"/>
<description>
Slot for the &lt;code&gt;hscrollBar&lt;/code&gt; property.&#xa; The horizontal scroll bar&#x27;s visibility&#xa; is determined by horizontalScrollBarPolicy.
</description>
<tag name="@see">#getHscrollBar</tag>
<tag name="@see">#setHscrollBar</tag>
</property>

<property name="vscrollBar" flags="rth">
<type class="javax.baja.ui.BScrollBar"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.&#xa; The vertical scroll bar&#x27;s visibility&#xa; is determined by verticalScrollBarPolicy.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</property>

<property name="hpolicy" flags="">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
<description>
Slot for the &lt;code&gt;hpolicy&lt;/code&gt; property.&#xa; Determines when should the horizontal scroll&#xa; bar be displayed.
</description>
<tag name="@see">#getHpolicy</tag>
<tag name="@see">#setHpolicy</tag>
</property>

<property name="vpolicy" flags="">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
<description>
Slot for the &lt;code&gt;vpolicy&lt;/code&gt; property.&#xa; Determines when should the vertical scroll&#xa; bar be displayed.
</description>
<tag name="@see">#getVpolicy</tag>
<tag name="@see">#setVpolicy</tag>
</property>

<property name="viewportBackground" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;viewportBackground&lt;/code&gt; property.&#xa; Brush used to paint background of viewport.  By default&#xa; it uses a theme based window background brush.
</description>
<tag name="@see">#getViewportBackground</tag>
<tag name="@see">#setViewportBackground</tag>
</property>

<property name="borderPolicy" flags="">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
<description>
Slot for the &lt;code&gt;borderPolicy&lt;/code&gt; property.&#xa; Determines when should the pane&#x27;s border be displayed.  If set to&#xa; asNeeded, the border will be displayed only when scroll bars&#xa; are visible
</description>
<tag name="@see">#getBorderPolicy</tag>
<tag name="@see">#setBorderPolicy</tag>
</property>

<action name="hscroll" flags="">
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll(BScrollEvent parameter)</tag>
</action>

<action name="vscroll" flags="">
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</action>

<!-- javax.baja.ui.pane.BScrollPane(javax.baja.ui.BWidget) -->
<constructor name="BScrollPane" public="true">
<parameter name="content">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<description>
Construct a BScrollPane.
</description>
</constructor>

<!-- javax.baja.ui.pane.BScrollPane() -->
<constructor name="BScrollPane" public="true">
<description>
Construct a BScrollPane.
</description>
</constructor>

<!-- javax.baja.ui.pane.BScrollPane.getContent() -->
<method name="getContent"  public="true">
<description>
Get the &lt;code&gt;content&lt;/code&gt; property.&#xa; Content is the widget to be scrolled.
</description>
<tag name="@see">#content</tag>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setContent(javax.baja.ui.BWidget) -->
<method name="setContent"  public="true">
<description>
Set the &lt;code&gt;content&lt;/code&gt; property.&#xa; Content is the widget to be scrolled.
</description>
<tag name="@see">#content</tag>
<parameter name="v">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getHscrollBar() -->
<method name="getHscrollBar"  public="true">
<description>
Get the &lt;code&gt;hscrollBar&lt;/code&gt; property.&#xa; The horizontal scroll bar&#x27;s visibility&#xa; is determined by horizontalScrollBarPolicy.
</description>
<tag name="@see">#hscrollBar</tag>
<return>
<type class="javax.baja.ui.BScrollBar"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setHscrollBar(javax.baja.ui.BScrollBar) -->
<method name="setHscrollBar"  public="true">
<description>
Set the &lt;code&gt;hscrollBar&lt;/code&gt; property.&#xa; The horizontal scroll bar&#x27;s visibility&#xa; is determined by horizontalScrollBarPolicy.
</description>
<tag name="@see">#hscrollBar</tag>
<parameter name="v">
<type class="javax.baja.ui.BScrollBar"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getVscrollBar() -->
<method name="getVscrollBar"  public="true">
<description>
Get the &lt;code&gt;vscrollBar&lt;/code&gt; property.&#xa; The vertical scroll bar&#x27;s visibility&#xa; is determined by verticalScrollBarPolicy.
</description>
<tag name="@see">#vscrollBar</tag>
<return>
<type class="javax.baja.ui.BScrollBar"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setVscrollBar(javax.baja.ui.BScrollBar) -->
<method name="setVscrollBar"  public="true">
<description>
Set the &lt;code&gt;vscrollBar&lt;/code&gt; property.&#xa; The vertical scroll bar&#x27;s visibility&#xa; is determined by verticalScrollBarPolicy.
</description>
<tag name="@see">#vscrollBar</tag>
<parameter name="v">
<type class="javax.baja.ui.BScrollBar"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getHpolicy() -->
<method name="getHpolicy"  public="true">
<description>
Get the &lt;code&gt;hpolicy&lt;/code&gt; property.&#xa; Determines when should the horizontal scroll&#xa; bar be displayed.
</description>
<tag name="@see">#hpolicy</tag>
<return>
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setHpolicy(javax.baja.ui.enums.BScrollBarPolicy) -->
<method name="setHpolicy"  public="true">
<description>
Set the &lt;code&gt;hpolicy&lt;/code&gt; property.&#xa; Determines when should the horizontal scroll&#xa; bar be displayed.
</description>
<tag name="@see">#hpolicy</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getVpolicy() -->
<method name="getVpolicy"  public="true">
<description>
Get the &lt;code&gt;vpolicy&lt;/code&gt; property.&#xa; Determines when should the vertical scroll&#xa; bar be displayed.
</description>
<tag name="@see">#vpolicy</tag>
<return>
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setVpolicy(javax.baja.ui.enums.BScrollBarPolicy) -->
<method name="setVpolicy"  public="true">
<description>
Set the &lt;code&gt;vpolicy&lt;/code&gt; property.&#xa; Determines when should the vertical scroll&#xa; bar be displayed.
</description>
<tag name="@see">#vpolicy</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getViewportBackground() -->
<method name="getViewportBackground"  public="true">
<description>
Get the &lt;code&gt;viewportBackground&lt;/code&gt; property.&#xa; Brush used to paint background of viewport.  By default&#xa; it uses a theme based window background brush.
</description>
<tag name="@see">#viewportBackground</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setViewportBackground(javax.baja.gx.BBrush) -->
<method name="setViewportBackground"  public="true">
<description>
Set the &lt;code&gt;viewportBackground&lt;/code&gt; property.&#xa; Brush used to paint background of viewport.  By default&#xa; it uses a theme based window background brush.
</description>
<tag name="@see">#viewportBackground</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getBorderPolicy() -->
<method name="getBorderPolicy"  public="true">
<description>
Get the &lt;code&gt;borderPolicy&lt;/code&gt; property.&#xa; Determines when should the pane&#x27;s border be displayed.  If set to&#xa; asNeeded, the border will be displayed only when scroll bars&#xa; are visible
</description>
<tag name="@see">#borderPolicy</tag>
<return>
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.setBorderPolicy(javax.baja.ui.enums.BScrollBarPolicy) -->
<method name="setBorderPolicy"  public="true">
<description>
Set the &lt;code&gt;borderPolicy&lt;/code&gt; property.&#xa; Determines when should the pane&#x27;s border be displayed.  If set to&#xa; asNeeded, the border will be displayed only when scroll bars&#xa; are visible
</description>
<tag name="@see">#borderPolicy</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BScrollBarPolicy"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.hscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="hscroll"  public="true">
<description>
Invoke the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll</tag>
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.vscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="vscroll"  public="true">
<description>
Invoke the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll</tag>
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.started() -->
<method name="started"  public="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getViewport() -->
<method name="getViewport"  public="true">
<description>
Get the visible viewport of the scroll pane.
</description>
<return>
<type class="javax.baja.gx.RectGeom"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.childAt(javax.baja.gx.Point) -->
<method name="childAt"  public="true">
<description/>
<parameter name="pt">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.translateToChild(javax.baja.ui.BWidget, javax.baja.gx.Point) -->
<method name="translateToChild"  public="true">
<description/>
<parameter name="child">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="pt">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="javax.baja.gx.Point"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
BScrollPane has a preferred size equal to&#xa; its child content component plus insets.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout the scroll pane, depending on the scrollbar&#xa; policy this may add or remove scroll bars.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.doHscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="doHscroll"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.doVscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="doVscroll"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.scrollToVisible(javax.baja.gx.RectGeom) -->
<method name="scrollToVisible"  public="true">
<description/>
<parameter name="rect">
<type class="javax.baja.gx.RectGeom"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.pulseViewport(javax.baja.gx.Point, double) -->
<method name="pulseViewport"  public="true">
<description>
Given a point in the content&#x27;s coordinate system, determine&#xa; if the viewport should be &#x22;pulsed&#x22; if the user is dragging&#xa; near one of the scroll pane edges.
</description>
<parameter name="contentPt">
<type class="javax.baja.gx.Point"/>
</parameter>
<parameter name="pulsePixels">
<type class="double"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true if pulse was performed on viewport.
</description>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.mouseWheel(javax.baja.ui.event.BMouseWheelEvent) -->
<method name="mouseWheel"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseWheelEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getWheelUnits() -->
<method name="getWheelUnits"  protected="true">
<description>
Get the number of units to scroll when the mouse wheel is used.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getStyleSelector() -->
<method name="getStyleSelector"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.pane.BScrollPane.content -->
<field name="content"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.&#xa; Content is the widget to be scrolled.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.hscrollBar -->
<field name="hscrollBar"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hscrollBar&lt;/code&gt; property.&#xa; The horizontal scroll bar&#x27;s visibility&#xa; is determined by horizontalScrollBarPolicy.
</description>
<tag name="@see">#getHscrollBar</tag>
<tag name="@see">#setHscrollBar</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.vscrollBar -->
<field name="vscrollBar"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.&#xa; The vertical scroll bar&#x27;s visibility&#xa; is determined by verticalScrollBarPolicy.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.hpolicy -->
<field name="hpolicy"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hpolicy&lt;/code&gt; property.&#xa; Determines when should the horizontal scroll&#xa; bar be displayed.
</description>
<tag name="@see">#getHpolicy</tag>
<tag name="@see">#setHpolicy</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.vpolicy -->
<field name="vpolicy"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vpolicy&lt;/code&gt; property.&#xa; Determines when should the vertical scroll&#xa; bar be displayed.
</description>
<tag name="@see">#getVpolicy</tag>
<tag name="@see">#setVpolicy</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.viewportBackground -->
<field name="viewportBackground"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;viewportBackground&lt;/code&gt; property.&#xa; Brush used to paint background of viewport.  By default&#xa; it uses a theme based window background brush.
</description>
<tag name="@see">#getViewportBackground</tag>
<tag name="@see">#setViewportBackground</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.borderPolicy -->
<field name="borderPolicy"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;borderPolicy&lt;/code&gt; property.&#xa; Determines when should the pane&#x27;s border be displayed.  If set to&#xa; asNeeded, the border will be displayed only when scroll bars&#xa; are visible
</description>
<tag name="@see">#getBorderPolicy</tag>
<tag name="@see">#setBorderPolicy</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.hscroll -->
<field name="hscroll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll(BScrollEvent parameter)</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.vscroll -->
<field name="vscroll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</field>

<!-- javax.baja.ui.pane.BScrollPane.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.ui.pane.BScrollPane.viewport -->
<field name="viewport"  protected="true">
<type class="javax.baja.gx.RectGeom"/>
<description/>
</field>

</class>
</bajadoc>
