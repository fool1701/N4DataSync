<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.pane.BTransformPane" name="BTransformPane" packageName="javax.baja.ui.pane" public="true">
<description>
BTransformPane applies the specified transform mode to the content widget in the pane.&#xa; BTransformPane supports applying transformations for the following widget types: Label, Picture,&#xa; Button, and TransformPane.&#xa;&#xa; The content widget&#x27;s complete orientation will be transformed. This means that any content widget&#xa; positioning or scaling such as label alignment will be based upon the orientation of the widget&#xa; after all transformations are applied.
</description>
<tag name="@since">Niagara 4.12</tag>
<extends>
<type class="javax.baja.ui.pane.BPane"/>
</extends>
<property name="content" flags="">
<type class="javax.baja.ui.BWidget"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</property>

<property name="transformMode" flags="">
<type class="javax.baja.ui.enums.BTransformMode"/>
<description>
Slot for the &lt;code&gt;transformMode&lt;/code&gt; property.
</description>
<tag name="@see">#getTransformMode</tag>
<tag name="@see">#setTransformMode</tag>
</property>

<!-- javax.baja.ui.pane.BTransformPane() -->
<constructor name="BTransformPane" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.pane.BTransformPane.getContent() -->
<method name="getContent"  public="true">
<description>
Get the &lt;code&gt;content&lt;/code&gt; property.
</description>
<tag name="@see">#content</tag>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.setContent(javax.baja.ui.BWidget) -->
<method name="setContent"  public="true">
<description>
Set the &lt;code&gt;content&lt;/code&gt; property.
</description>
<tag name="@see">#content</tag>
<parameter name="v">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.getTransformMode() -->
<method name="getTransformMode"  public="true">
<description>
Get the &lt;code&gt;transformMode&lt;/code&gt; property.
</description>
<tag name="@see">#transformMode</tag>
<return>
<type class="javax.baja.ui.enums.BTransformMode"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.setTransformMode(javax.baja.ui.enums.BTransformMode) -->
<method name="setTransformMode"  public="true">
<description>
Set the &lt;code&gt;transformMode&lt;/code&gt; property.
</description>
<tag name="@see">#transformMode</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BTransformMode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="children">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.childAt(javax.baja.gx.Point) -->
<method name="childAt"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="point">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTransformPane.content -->
<field name="content"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</field>

<!-- javax.baja.ui.pane.BTransformPane.transformMode -->
<field name="transformMode"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;transformMode&lt;/code&gt; property.
</description>
<tag name="@see">#getTransformMode</tag>
<tag name="@see">#setTransformMode</tag>
</field>

<!-- javax.baja.ui.pane.BTransformPane.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
