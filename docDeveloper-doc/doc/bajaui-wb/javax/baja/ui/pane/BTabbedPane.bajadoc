<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.pane.BTabbedPane" name="BTabbedPane" packageName="javax.baja.ui.pane" public="true">
<description>
BTabbedPane is a container which displays a set of BLabelPane&#xa; children one at a time using a set of &#x22;tabs&#x22; to select the &#xa; currently displayed child.  The BLabelPane&#x27;s label is used&#xa; to label each tab, and the content of the current selection&#xa; fills the rest of the pane.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">5 Dec 00</tag>
<tag name="@version">$Revision: 57$ $Date: 6/20/11 9:34:25 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.pane.BLabelPaneContainer"/>
</extends>
<property name="tabPlacement" flags="">
<type class="javax.baja.ui.enums.BAlign"/>
<description>
Slot for the &lt;code&gt;tabPlacement&lt;/code&gt; property.&#xa; This defines whether the tabs appear on the top, bottom,&#xa; right, or left.  Using BAlignment.center will result&#xa; in an error.
</description>
<tag name="@see">#getTabPlacement</tag>
<tag name="@see">#setTabPlacement</tag>
</property>

<property name="showSingleTab" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;showSingleTab&lt;/code&gt; property.&#xa; Display or hide the tab when only one tab is visible on the pane.
</description>
<tag name="@see">#getShowSingleTab</tag>
<tag name="@see">#setShowSingleTab</tag>
</property>

<property name="tabControl" flags="th">
<type class="javax.baja.ui.BWidget"/>
<description>
Slot for the &lt;code&gt;tabControl&lt;/code&gt; property.&#xa; The tabControl is displayed to the right or bottom of all tabs.
</description>
<tag name="@see">#getTabControl</tag>
<tag name="@see">#setTabControl</tag>
</property>

<property name="paintFullBorder" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;paintFullBorder&lt;/code&gt; property.&#xa; Specifies whether to paint the full beveled border on all&#xa; four sides, or only on the side where the tabs are painted.
</description>
<tag name="@see">#getPaintFullBorder</tag>
<tag name="@see">#setPaintFullBorder</tag>
</property>

<topic name="selectionModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the selected tab is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</topic>

<!-- javax.baja.ui.pane.BTabbedPane(javax.baja.ui.enums.BAlign) -->
<constructor name="BTabbedPane" public="true">
<parameter name="tabPlacement">
<type class="javax.baja.ui.enums.BAlign"/>
</parameter>
<description>
Constructor with tab placement.
</description>
</constructor>

<!-- javax.baja.ui.pane.BTabbedPane() -->
<constructor name="BTabbedPane" public="true">
<description>
No argument constructor.
</description>
</constructor>

<!-- javax.baja.ui.pane.BTabbedPane.getTabPlacement() -->
<method name="getTabPlacement"  public="true">
<description>
Get the &lt;code&gt;tabPlacement&lt;/code&gt; property.&#xa; This defines whether the tabs appear on the top, bottom,&#xa; right, or left.  Using BAlignment.center will result&#xa; in an error.
</description>
<tag name="@see">#tabPlacement</tag>
<return>
<type class="javax.baja.ui.enums.BAlign"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setTabPlacement(javax.baja.ui.enums.BAlign) -->
<method name="setTabPlacement"  public="true">
<description>
Set the &lt;code&gt;tabPlacement&lt;/code&gt; property.&#xa; This defines whether the tabs appear on the top, bottom,&#xa; right, or left.  Using BAlignment.center will result&#xa; in an error.
</description>
<tag name="@see">#tabPlacement</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BAlign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getShowSingleTab() -->
<method name="getShowSingleTab"  public="true">
<description>
Get the &lt;code&gt;showSingleTab&lt;/code&gt; property.&#xa; Display or hide the tab when only one tab is visible on the pane.
</description>
<tag name="@see">#showSingleTab</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setShowSingleTab(boolean) -->
<method name="setShowSingleTab"  public="true">
<description>
Set the &lt;code&gt;showSingleTab&lt;/code&gt; property.&#xa; Display or hide the tab when only one tab is visible on the pane.
</description>
<tag name="@see">#showSingleTab</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getTabControl() -->
<method name="getTabControl"  public="true">
<description>
Get the &lt;code&gt;tabControl&lt;/code&gt; property.&#xa; The tabControl is displayed to the right or bottom of all tabs.
</description>
<tag name="@see">#tabControl</tag>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setTabControl(javax.baja.ui.BWidget) -->
<method name="setTabControl"  public="true">
<description>
Set the &lt;code&gt;tabControl&lt;/code&gt; property.&#xa; The tabControl is displayed to the right or bottom of all tabs.
</description>
<tag name="@see">#tabControl</tag>
<parameter name="v">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getPaintFullBorder() -->
<method name="getPaintFullBorder"  public="true">
<description>
Get the &lt;code&gt;paintFullBorder&lt;/code&gt; property.&#xa; Specifies whether to paint the full beveled border on all&#xa; four sides, or only on the side where the tabs are painted.
</description>
<tag name="@see">#paintFullBorder</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setPaintFullBorder(boolean) -->
<method name="setPaintFullBorder"  public="true">
<description>
Set the &lt;code&gt;paintFullBorder&lt;/code&gt; property.&#xa; Specifies whether to paint the full beveled border on all&#xa; four sides, or only on the side where the tabs are painted.
</description>
<tag name="@see">#paintFullBorder</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.fireSelectionModified(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireSelectionModified"  public="true">
<description>
Fire an event for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the selected tab is modified.
</description>
<tag name="@see">#selectionModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getSelectedLabelPane() -->
<method name="getSelectedLabelPane"  public="true">
<description>
Get the selected label pane, or return null if no panes.
</description>
<return>
<type class="javax.baja.ui.pane.BLabelPane"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getSelectedPane() -->
<method name="getSelectedPane"  public="true">
<description>
Get the selected content widget, or null if no panes.
</description>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.selectLabelPane(javax.baja.ui.pane.BLabelPane) -->
<method name="selectLabelPane"  public="true">
<description>
Select the specified label pane.
</description>
<parameter name="pane">
<type class="javax.baja.ui.pane.BLabelPane"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.selectPane(javax.baja.ui.BWidget) -->
<method name="selectPane"  public="true">
<description>
Selects the tab with the specified content widget.
</description>
<parameter name="content">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setTabSupport(javax.baja.ui.pane.BTabbedPane.TabSupport) -->
<method name="setTabSupport"  public="true">
<description>
Install the specified TabSupport.
</description>
<parameter name="support">
<type class="javax.baja.ui.pane.BTabbedPane$TabSupport"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getTabSupport() -->
<method name="getTabSupport"  public="true">
<description>
Get the currently installed TabSupport.
</description>
<return>
<type class="javax.baja.ui.pane.BTabbedPane$TabSupport"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.setEnabledLabelPane(javax.baja.ui.pane.BLabelPane, boolean) -->
<method name="setEnabledLabelPane"  public="true">
<description>
Select the specified label pane.
</description>
<parameter name="pane">
<type class="javax.baja.ui.pane.BLabelPane"/>
</parameter>
<parameter name="enabled">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute the tabbed pane&#x27;s preferred size.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout the tabbed pane&#x27;s children.
</description>
<parameter name="widgets">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the tabbed pane.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getStyleSelector() -->
<method name="getStyleSelector"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.childAt(javax.baja.gx.Point) -->
<method name="childAt"  public="true">
<description/>
<parameter name="pt">
<type class="javax.baja.gx.Point"/>
</parameter>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<description/>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="ctx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.selectionModified(javax.baja.ui.pane.BLabelPane) -->
<method name="selectionModified"  protected="true">
<description>
Callback for when current selected tab is modified.
</description>
<parameter name="tab">
<type class="javax.baja.ui.pane.BLabelPane"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.tabAt(double, double) -->
<method name="tabAt"  protected="true">
<description/>
<parameter name="x">
<type class="double"/>
</parameter>
<parameter name="y">
<type class="double"/>
</parameter>
<return>
<type class="javax.baja.ui.pane.BLabelPane"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.isAnyTabEnabled() -->
<method name="isAnyTabEnabled"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.isFocusTraversable() -->
<method name="isFocusTraversable"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.focusGained(javax.baja.ui.event.BFocusEvent) -->
<method name="focusGained"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.focusLost(javax.baja.ui.event.BFocusEvent) -->
<method name="focusLost"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.pane.BTabbedPane.tabPlacement -->
<field name="tabPlacement"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tabPlacement&lt;/code&gt; property.&#xa; This defines whether the tabs appear on the top, bottom,&#xa; right, or left.  Using BAlignment.center will result&#xa; in an error.
</description>
<tag name="@see">#getTabPlacement</tag>
<tag name="@see">#setTabPlacement</tag>
</field>

<!-- javax.baja.ui.pane.BTabbedPane.showSingleTab -->
<field name="showSingleTab"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;showSingleTab&lt;/code&gt; property.&#xa; Display or hide the tab when only one tab is visible on the pane.
</description>
<tag name="@see">#getShowSingleTab</tag>
<tag name="@see">#setShowSingleTab</tag>
</field>

<!-- javax.baja.ui.pane.BTabbedPane.tabControl -->
<field name="tabControl"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tabControl&lt;/code&gt; property.&#xa; The tabControl is displayed to the right or bottom of all tabs.
</description>
<tag name="@see">#getTabControl</tag>
<tag name="@see">#setTabControl</tag>
</field>

<!-- javax.baja.ui.pane.BTabbedPane.paintFullBorder -->
<field name="paintFullBorder"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;paintFullBorder&lt;/code&gt; property.&#xa; Specifies whether to paint the full beveled border on all&#xa; four sides, or only on the side where the tabs are painted.
</description>
<tag name="@see">#getPaintFullBorder</tag>
<tag name="@see">#setPaintFullBorder</tag>
</field>

<!-- javax.baja.ui.pane.BTabbedPane.selectionModified -->
<field name="selectionModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the selected tab is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</field>

<!-- javax.baja.ui.pane.BTabbedPane.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
