<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.pane.BFlowPane" name="BFlowPane" packageName="javax.baja.ui.pane" public="true">
<description>
BFlowPane lays out its children from left to right and top to&#xa; bottom fitting as many children as possible in each row.  It&#xa; is based on the java.awt.FlowLayout. Starting in Niagara 4.6,&#xa; a BResponsivePane can be used to further customize the positioning&#xa; of the widgets.
</description>
<tag name="@author">John Sublett and JJ Frankovich</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.ui.pane.BPane"/>
</extends>
<property name="align" flags="">
<type class="javax.baja.ui.enums.BHalign"/>
<description>
Slot for the &lt;code&gt;align&lt;/code&gt; property.&#xa; How are children aligned horizontally on each row. When fill is used, BResponsivePane children with a Percent maxWidth will&#xa; spread out to fill the entire row. Pref, Abs, and non-Responsive Pane children will just align left.
</description>
<tag name="@see">#getAlign</tag>
<tag name="@see">#setAlign</tag>
</property>

<property name="rowAlign" flags="">
<type class="javax.baja.ui.enums.BValign"/>
<description>
Slot for the &lt;code&gt;rowAlign&lt;/code&gt; property.&#xa; Determines how to use extra vertical space within rows.
</description>
<tag name="@see">#getRowAlign</tag>
<tag name="@see">#setRowAlign</tag>
</property>

<property name="hgap" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;hgap&lt;/code&gt; property.&#xa; Horizontal gap is the space in pixels between each child on a&#xa; row.  It does not affect the space between a child and the&#xa; pane boundary.
</description>
<tag name="@see">#getHgap</tag>
<tag name="@see">#setHgap</tag>
</property>

<property name="vgap" flags="">
<type class="int"/>
<description>
Slot for the &lt;code&gt;vgap&lt;/code&gt; property.&#xa; Vertical gap is the space in pixels between row.  It does&#xa; not affect the space between a child and the pane boundary.
</description>
<tag name="@see">#getVgap</tag>
<tag name="@see">#setVgap</tag>
</property>

<property name="background" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;background&lt;/code&gt; property.&#xa; Specifies how the pane&#x27;s background is painted.
</description>
<tag name="@see">#getBackground</tag>
<tag name="@see">#setBackground</tag>
</property>

<!-- javax.baja.ui.pane.BFlowPane() -->
<constructor name="BFlowPane" public="true">
<description>
Construct a BFlowPane with default properties.
</description>
</constructor>

<!-- javax.baja.ui.pane.BFlowPane(javax.baja.ui.enums.BHalign) -->
<constructor name="BFlowPane" public="true">
<parameter name="alignment">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<description>
Constructor with specified horizontal alignment.
</description>
</constructor>

<!-- javax.baja.ui.pane.BFlowPane(javax.baja.ui.enums.BHalign, int, int) -->
<constructor name="BFlowPane" public="true">
<parameter name="alignment">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<parameter name="hgap">
<type class="int"/>
</parameter>
<parameter name="vgap">
<type class="int"/>
</parameter>
<description>
Constructor with specified horizontal alignment and gaps.
</description>
</constructor>

<!-- javax.baja.ui.pane.BFlowPane.getAlign() -->
<method name="getAlign"  public="true">
<description>
Get the &lt;code&gt;align&lt;/code&gt; property.&#xa; How are children aligned horizontally on each row. When fill is used, BResponsivePane children with a Percent maxWidth will&#xa; spread out to fill the entire row. Pref, Abs, and non-Responsive Pane children will just align left.
</description>
<tag name="@see">#align</tag>
<return>
<type class="javax.baja.ui.enums.BHalign"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.setAlign(javax.baja.ui.enums.BHalign) -->
<method name="setAlign"  public="true">
<description>
Set the &lt;code&gt;align&lt;/code&gt; property.&#xa; How are children aligned horizontally on each row. When fill is used, BResponsivePane children with a Percent maxWidth will&#xa; spread out to fill the entire row. Pref, Abs, and non-Responsive Pane children will just align left.
</description>
<tag name="@see">#align</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BHalign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getRowAlign() -->
<method name="getRowAlign"  public="true">
<description>
Get the &lt;code&gt;rowAlign&lt;/code&gt; property.&#xa; Determines how to use extra vertical space within rows.
</description>
<tag name="@see">#rowAlign</tag>
<return>
<type class="javax.baja.ui.enums.BValign"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.setRowAlign(javax.baja.ui.enums.BValign) -->
<method name="setRowAlign"  public="true">
<description>
Set the &lt;code&gt;rowAlign&lt;/code&gt; property.&#xa; Determines how to use extra vertical space within rows.
</description>
<tag name="@see">#rowAlign</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BValign"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getHgap() -->
<method name="getHgap"  public="true">
<description>
Get the &lt;code&gt;hgap&lt;/code&gt; property.&#xa; Horizontal gap is the space in pixels between each child on a&#xa; row.  It does not affect the space between a child and the&#xa; pane boundary.
</description>
<tag name="@see">#hgap</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.setHgap(int) -->
<method name="setHgap"  public="true">
<description>
Set the &lt;code&gt;hgap&lt;/code&gt; property.&#xa; Horizontal gap is the space in pixels between each child on a&#xa; row.  It does not affect the space between a child and the&#xa; pane boundary.
</description>
<tag name="@see">#hgap</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getVgap() -->
<method name="getVgap"  public="true">
<description>
Get the &lt;code&gt;vgap&lt;/code&gt; property.&#xa; Vertical gap is the space in pixels between row.  It does&#xa; not affect the space between a child and the pane boundary.
</description>
<tag name="@see">#vgap</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.setVgap(int) -->
<method name="setVgap"  public="true">
<description>
Set the &lt;code&gt;vgap&lt;/code&gt; property.&#xa; Vertical gap is the space in pixels between row.  It does&#xa; not affect the space between a child and the pane boundary.
</description>
<tag name="@see">#vgap</tag>
<parameter name="v">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getBackground() -->
<method name="getBackground"  public="true">
<description>
Get the &lt;code&gt;background&lt;/code&gt; property.&#xa; Specifies how the pane&#x27;s background is painted.
</description>
<tag name="@see">#background</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.setBackground(javax.baja.gx.BBrush) -->
<method name="setBackground"  public="true">
<description>
Set the &lt;code&gt;background&lt;/code&gt; property.&#xa; Specifies how the pane&#x27;s background is painted.
</description>
<tag name="@see">#background</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Compute the preferred size of the pane.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Layout the pane.
</description>
<parameter name="children">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.doLayout(javax.baja.ui.BWidget[], boolean) -->
<method name="doLayout"  protected="true">
<description>
Layout the pane; you can prevent additional recursive calls to doLayout by setting the&#xa; firstFixHeight parameter to false.
</description>
<parameter name="children">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<parameter name="firstFixHeight">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getPreferredWidth(javax.baja.ui.BWidget) -->
<method name="getPreferredWidth"  public="true">
<description>
Get the preferred width of a widget child based on any customization by the&#xa; responsive pane if its present.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="widget">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getWidthFromPercentage(double) -->
<method name="getWidthFromPercentage"  public="true">
<description>
parent width is percentage of responsive pane preferred width if scroll pane is present which includes&#xa; offset for borders and scrollbars. If no scrollPane, just used width.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="percent">
<type class="double"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.pane.BFlowPane.align -->
<field name="align"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;align&lt;/code&gt; property.&#xa; How are children aligned horizontally on each row. When fill is used, BResponsivePane children with a Percent maxWidth will&#xa; spread out to fill the entire row. Pref, Abs, and non-Responsive Pane children will just align left.
</description>
<tag name="@see">#getAlign</tag>
<tag name="@see">#setAlign</tag>
</field>

<!-- javax.baja.ui.pane.BFlowPane.rowAlign -->
<field name="rowAlign"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;rowAlign&lt;/code&gt; property.&#xa; Determines how to use extra vertical space within rows.
</description>
<tag name="@see">#getRowAlign</tag>
<tag name="@see">#setRowAlign</tag>
</field>

<!-- javax.baja.ui.pane.BFlowPane.hgap -->
<field name="hgap"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hgap&lt;/code&gt; property.&#xa; Horizontal gap is the space in pixels between each child on a&#xa; row.  It does not affect the space between a child and the&#xa; pane boundary.
</description>
<tag name="@see">#getHgap</tag>
<tag name="@see">#setHgap</tag>
</field>

<!-- javax.baja.ui.pane.BFlowPane.vgap -->
<field name="vgap"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vgap&lt;/code&gt; property.&#xa; Vertical gap is the space in pixels between row.  It does&#xa; not affect the space between a child and the pane boundary.
</description>
<tag name="@see">#getVgap</tag>
<tag name="@see">#setVgap</tag>
</field>

<!-- javax.baja.ui.pane.BFlowPane.background -->
<field name="background"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;background&lt;/code&gt; property.&#xa; Specifies how the pane&#x27;s background is painted.
</description>
<tag name="@see">#getBackground</tag>
<tag name="@see">#setBackground</tag>
</field>

<!-- javax.baja.ui.pane.BFlowPane.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.ui.pane.BFlowPane.lastMaxHeight -->
<field name="lastMaxHeight"  protected="true">
<type class="double"/>
<description/>
</field>

</class>
</bajadoc>
