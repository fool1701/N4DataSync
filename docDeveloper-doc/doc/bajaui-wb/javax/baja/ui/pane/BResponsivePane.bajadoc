<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.pane.BResponsivePane" name="BResponsivePane" packageName="javax.baja.ui.pane" public="true">
<description>
BResponsivePane can be used to customize the layout of a widgets within the&#xa; BFlowPane. The MaxWidth LayoutDimension defaults to the content&#x27;s preferred size,&#xa; but can be changed for better flow layout. For example, setting 4 sibling&#xa; BResponsivePanes to 25% each will try to fit the 4 children on the same row.&#xa; The minWidth defaults to 20 pixels, but should be customized to the smallest width&#xa; desired width for the inner content. The last widget on a row will shrink down&#xa; from the maxWidth to the minWidth and still fit on the row, but if there not enough space for the&#xa; minWidth the FlowPane will drop that child down to the next row.
</description>
<tag name="@author">JJ Frankovich</tag>
<tag name="@since">Niagara 4.6</tag>
<extends>
<type class="javax.baja.ui.pane.BPane"/>
</extends>
<property name="content" flags="">
<type class="javax.baja.ui.BWidget"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.&#xa; The content of the pane.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</property>

<property name="maxWidth" flags="">
<type class="javax.baja.ui.BLayoutDimension"/>
<description>
Slot for the &lt;code&gt;maxWidth&lt;/code&gt; property.&#xa; The maximum and preferred width of the pane.
</description>
<tag name="@see">#getMaxWidth</tag>
<tag name="@see">#setMaxWidth</tag>
</property>

<property name="minWidth" flags="">
<type class="javax.baja.ui.BLayoutDimension"/>
<description>
Slot for the &lt;code&gt;minWidth&lt;/code&gt; property.&#xa; The minimum width allowed for the pane before we start wrapping.
</description>
<tag name="@see">#getMinWidth</tag>
<tag name="@see">#setMinWidth</tag>
</property>

<property name="forceNewRow" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;forceNewRow&lt;/code&gt; property.&#xa; If true, will force this widget to start on a new row, this can be useful&#xa; for dividing widgets into different sections of a FlowPane like for a header or footer.
</description>
<tag name="@see">#getForceNewRow</tag>
<tag name="@see">#setForceNewRow</tag>
</property>

<!-- javax.baja.ui.pane.BResponsivePane() -->
<constructor name="BResponsivePane" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.pane.BResponsivePane.getContent() -->
<method name="getContent"  public="true">
<description>
Get the &lt;code&gt;content&lt;/code&gt; property.&#xa; The content of the pane.
</description>
<tag name="@see">#content</tag>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.setContent(javax.baja.ui.BWidget) -->
<method name="setContent"  public="true">
<description>
Set the &lt;code&gt;content&lt;/code&gt; property.&#xa; The content of the pane.
</description>
<tag name="@see">#content</tag>
<parameter name="v">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.getMaxWidth() -->
<method name="getMaxWidth"  public="true">
<description>
Get the &lt;code&gt;maxWidth&lt;/code&gt; property.&#xa; The maximum and preferred width of the pane.
</description>
<tag name="@see">#maxWidth</tag>
<return>
<type class="javax.baja.ui.BLayoutDimension"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.setMaxWidth(javax.baja.ui.BLayoutDimension) -->
<method name="setMaxWidth"  public="true">
<description>
Set the &lt;code&gt;maxWidth&lt;/code&gt; property.&#xa; The maximum and preferred width of the pane.
</description>
<tag name="@see">#maxWidth</tag>
<parameter name="v">
<type class="javax.baja.ui.BLayoutDimension"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.getMinWidth() -->
<method name="getMinWidth"  public="true">
<description>
Get the &lt;code&gt;minWidth&lt;/code&gt; property.&#xa; The minimum width allowed for the pane before we start wrapping.
</description>
<tag name="@see">#minWidth</tag>
<return>
<type class="javax.baja.ui.BLayoutDimension"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.setMinWidth(javax.baja.ui.BLayoutDimension) -->
<method name="setMinWidth"  public="true">
<description>
Set the &lt;code&gt;minWidth&lt;/code&gt; property.&#xa; The minimum width allowed for the pane before we start wrapping.
</description>
<tag name="@see">#minWidth</tag>
<parameter name="v">
<type class="javax.baja.ui.BLayoutDimension"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.getForceNewRow() -->
<method name="getForceNewRow"  public="true">
<description>
Get the &lt;code&gt;forceNewRow&lt;/code&gt; property.&#xa; If true, will force this widget to start on a new row, this can be useful&#xa; for dividing widgets into different sections of a FlowPane like for a header or footer.
</description>
<tag name="@see">#forceNewRow</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.setForceNewRow(boolean) -->
<method name="setForceNewRow"  public="true">
<description>
Set the &lt;code&gt;forceNewRow&lt;/code&gt; property.&#xa; If true, will force this widget to start on a new row, this can be useful&#xa; for dividing widgets into different sections of a FlowPane like for a header or footer.
</description>
<tag name="@see">#forceNewRow</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
A BResponsivePane&#x27;s parent must be a BFlowPane
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BResponsivePane has a preferred size equal to&#xa; its child content component.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Layout the pane.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.pane.BResponsivePane.content -->
<field name="content"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;content&lt;/code&gt; property.&#xa; The content of the pane.
</description>
<tag name="@see">#getContent</tag>
<tag name="@see">#setContent</tag>
</field>

<!-- javax.baja.ui.pane.BResponsivePane.maxWidth -->
<field name="maxWidth"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;maxWidth&lt;/code&gt; property.&#xa; The maximum and preferred width of the pane.
</description>
<tag name="@see">#getMaxWidth</tag>
<tag name="@see">#setMaxWidth</tag>
</field>

<!-- javax.baja.ui.pane.BResponsivePane.minWidth -->
<field name="minWidth"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;minWidth&lt;/code&gt; property.&#xa; The minimum width allowed for the pane before we start wrapping.
</description>
<tag name="@see">#getMinWidth</tag>
<tag name="@see">#setMinWidth</tag>
</field>

<!-- javax.baja.ui.pane.BResponsivePane.forceNewRow -->
<field name="forceNewRow"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;forceNewRow&lt;/code&gt; property.&#xa; If true, will force this widget to start on a new row, this can be useful&#xa; for dividing widgets into different sections of a FlowPane like for a header or footer.
</description>
<tag name="@see">#getForceNewRow</tag>
<tag name="@see">#setForceNewRow</tag>
</field>

<!-- javax.baja.ui.pane.BResponsivePane.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
