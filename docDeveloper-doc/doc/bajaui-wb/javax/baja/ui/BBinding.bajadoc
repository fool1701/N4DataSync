<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.BBinding" name="BBinding" packageName="javax.baja.ui" public="true" abstract="true">
<description>
BBinding is used to bind a BWidget to a data source.  BBindings&#xa; are bound to one BObject using an ord.  Subclasses are registered &#xa; as agents on the type of BObjects to which they can be bound to.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">10 May 04</tag>
<tag name="@version">$Revision: 10$ $Date: 1/24/08 9:36:03 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.agent.BIAgent"/>
</implements>
<property name="ord" flags="">
<type class="javax.baja.naming.BOrd"/>
<description>
Slot for the &lt;code&gt;ord&lt;/code&gt; property.&#xa; Specifies the ord of the binding target.
</description>
<tag name="@see">#getOrd</tag>
<tag name="@see">#setOrd</tag>
</property>

<property name="degradeBehavior" flags="">
<type class="javax.baja.ui.enums.BDegradeBehavior"/>
<description>
Slot for the &lt;code&gt;degradeBehavior&lt;/code&gt; property.&#xa; Specifies the behavior for when the binding&#xa; ord cannot be resolved or used due to security&#xa; permissions.
</description>
<tag name="@see">#getDegradeBehavior</tag>
<tag name="@see">#setDegradeBehavior</tag>
</property>

<topic name="targetChanged" flags="">
<eventType>
<type class="javax.baja.sys.BValue"/>
</eventType><description>
Slot for the &lt;code&gt;targetChanged&lt;/code&gt; topic.&#xa; Fired whenever the binding target changed.
</description>
<tag name="@see">#fireTargetChanged</tag>
</topic>

<!-- javax.baja.ui.BBinding() -->
<constructor name="BBinding" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.BBinding.getOrd() -->
<method name="getOrd"  public="true">
<description>
Get the &lt;code&gt;ord&lt;/code&gt; property.&#xa; Specifies the ord of the binding target.
</description>
<tag name="@see">#ord</tag>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.setOrd(javax.baja.naming.BOrd) -->
<method name="setOrd"  public="true">
<description>
Set the &lt;code&gt;ord&lt;/code&gt; property.&#xa; Specifies the ord of the binding target.
</description>
<tag name="@see">#ord</tag>
<parameter name="v">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.getDegradeBehavior() -->
<method name="getDegradeBehavior"  public="true">
<description>
Get the &lt;code&gt;degradeBehavior&lt;/code&gt; property.&#xa; Specifies the behavior for when the binding&#xa; ord cannot be resolved or used due to security&#xa; permissions.
</description>
<tag name="@see">#degradeBehavior</tag>
<return>
<type class="javax.baja.ui.enums.BDegradeBehavior"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.setDegradeBehavior(javax.baja.ui.enums.BDegradeBehavior) -->
<method name="setDegradeBehavior"  public="true">
<description>
Set the &lt;code&gt;degradeBehavior&lt;/code&gt; property.&#xa; Specifies the behavior for when the binding&#xa; ord cannot be resolved or used due to security&#xa; permissions.
</description>
<tag name="@see">#degradeBehavior</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BDegradeBehavior"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.fireTargetChanged(javax.baja.sys.BValue) -->
<method name="fireTargetChanged"  public="true">
<description>
Fire an event for the &lt;code&gt;targetChanged&lt;/code&gt; topic.&#xa; Fired whenever the binding target changed.
</description>
<tag name="@see">#targetChanged</tag>
<parameter name="event">
<type class="javax.baja.sys.BValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.getWidget() -->
<method name="getWidget"  public="true" final="true">
<description>
Get the parent widget or null if not &#xa; mounted as a child under a widget.
</description>
<return>
<type class="javax.baja.ui.BWidget"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.getShell() -->
<method name="getShell"  public="true" final="true">
<description>
Get the ancestor widget shell or null if not &#xa; mounted as a child under a widget shell.
</description>
<return>
<type class="javax.baja.ui.BWidgetShell"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.isBound() -->
<method name="isBound"  public="true" final="true">
<description>
Return if this binding is currently bound to its ord target.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.getTarget() -->
<method name="getTarget"  public="true" final="true">
<description>
Return the ord target.
</description>
<return>
<type class="javax.baja.naming.OrdTarget"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.get() -->
<method name="get"  public="true" final="true">
<description>
Convenience for &lt;code&gt;getTarget().get()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.started() -->
<method name="started"  public="true">
<description>
Binding started callback.  Subclasses should call super.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.stopped() -->
<method name="stopped"  public="true">
<description>
Binding stopped callback.  Subclasses should call super.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.targetChanged() -->
<method name="targetChanged"  public="true">
<description>
Callback when binding target has been modified.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.isDegraded() -->
<method name="isDegraded"  public="true">
<description>
Return if the binding is unbound or unusable for any reason (such&#xa; as lack permissions).  This method is called by applyDegradeBehavior() &#xa; to decide if the configured degrade behavior should be applied &#xa; or unapplied.  The default implementation returns !isBound().
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.applyDegradeBehavior() -->
<method name="applyDegradeBehavior"  public="true">
<description>
Apply (or unapply) the configured degrade behavior&#xa; based on the current value of isDegraded().  This &#xa; method is automatically called by targetChanged().
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.save(javax.baja.sys.Context) -->
<method name="save"  public="true">
<description>
Callback when containing WbView is being saved.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.BBinding.getOnWidget(javax.baja.sys.Property) -->
<method name="getOnWidget"  public="true">
<description>
This method allows a binding to override a get operation &#xa; on the parent widget by returning a non-null value. &#xa; Return null to use the parent&#x27;s actual property value.
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<return>
<type class="javax.baja.sys.BValue"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.changedOnWidget(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changedOnWidget"  public="true">
<description>
Callback for when the parent widgets&#x27;s &#xa; &lt;code&gt;changed&lt;/code&gt; callback  is invoked.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.invokedOnWidget(javax.baja.sys.Action, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="invokedOnWidget"  public="true">
<description>
Callback for when the specified action is invoked on &#xa; the parent widget.
</description>
<parameter name="action">
<type class="javax.baja.sys.Action"/>
</parameter>
<parameter name="value">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true to &#x22;consume&#x22; the invocation and prevent further&#xa;   routing to other bindings.
</description>
</return>
</method>

<!-- javax.baja.ui.BBinding.firedOnWidget(javax.baja.sys.Topic, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="firedOnWidget"  public="true">
<description>
Callback for when the specified topic is  fired on the &#xa; parent widget.
</description>
<parameter name="topic">
<type class="javax.baja.sys.Topic"/>
</parameter>
<parameter name="event">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="boolean"/>
<description>
true to &#x22;consume&#x22; the event and prevent further&#xa;   routing to other bindings.
</description>
</return>
</method>

<!-- javax.baja.ui.BBinding.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<description>
Only BWidget is a valid parent.
</description>
<parameter name="c">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description>
Return string representation.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<description>
Framework support access; this method should&#xa; never be used by developers.
</description>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.ui.BBinding.ord -->
<field name="ord"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;ord&lt;/code&gt; property.&#xa; Specifies the ord of the binding target.
</description>
<tag name="@see">#getOrd</tag>
<tag name="@see">#setOrd</tag>
</field>

<!-- javax.baja.ui.BBinding.degradeBehavior -->
<field name="degradeBehavior"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;degradeBehavior&lt;/code&gt; property.&#xa; Specifies the behavior for when the binding&#xa; ord cannot be resolved or used due to security&#xa; permissions.
</description>
<tag name="@see">#getDegradeBehavior</tag>
<tag name="@see">#setDegradeBehavior</tag>
</field>

<!-- javax.baja.ui.BBinding.targetChanged -->
<field name="targetChanged"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;targetChanged&lt;/code&gt; topic.&#xa; Fired whenever the binding target changed.
</description>
<tag name="@see">#fireTargetChanged</tag>
</field>

<!-- javax.baja.ui.BBinding.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.ui.BBinding.LOGGER -->
<field name="LOGGER"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
