<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.BAccelerator" name="BAccelerator" packageName="javax.baja.ui" public="true" final="true">
<description>
BAccelerator stores a key stroke which includes&#xa; modifiers which can be used to invoke actions&#xa; on the widget with focus.  The BNF grammar of &#xa; an accelerator string is (case insensitive):&#xa; &lt;pre&gt;&#xa;   #accelerator = [ #modifiers &#x22;+&#x22; ] #keycode&#xa;   #modifiers   = #modifier { &#x22;+&#x22; #modifier&#x22; }&#xa;   #modifier    = &#x22;ctrl&#x22; | &#x22;shift&#x22; | &#x22;alt&#x22; | &#x22;meta&#x22;&#xa;   #keycode     =  #alpha | #number | #function | #symbol | #special&#xa;   #alpha       = &#x22;a&#x22;..&#x22;z&#x22;&#xa;   #number      = &#x22;0&#x22;..&#x22;9&#x22;&#xa;   #function    = &#x22;f1&#x22;..&#x22;f12&#x22;&#xa;   #symbol      = &#x22;/&#x22;&#xa;   #special     = &#x22;up&#x22; | &#x22;down&#x22; | &#x22;left&#x22; | &#x22;right&#x22; | &#x22;esc&#x22;&#xa;                  &#x22;insert&#x22; | &#x22;delete&#x22; | &#x22;home&#x22; | &#x22;end&#x22; |&#xa;                  &#x22;pageup&#x22; | &#x22;pagedown&#x22; | &#x22;backspace&#x22; | &#x22;tab&#x22;&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">30 Nov 00</tag>
<tag name="@version">$Revision: 14$ $Date: 7/27/10 9:55:34 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.ui.BAccelerator.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.make(int, int) -->
<method name="make"  public="true" static="true">
<description>
Accelerator factory method with specified key &#xa; code and modifiers mask.
</description>
<parameter name="keyCode">
<type class="int"/>
</parameter>
<parameter name="modifiers">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.ui.BAccelerator"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.make(java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Factory method for an accelerator by parsing&#xa; the specified string.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.ui.BAccelerator"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.isNull() -->
<method name="isNull"  public="true">
<description>
Is this the null accelerator.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.isMatch(javax.baja.ui.event.BKeyEvent) -->
<method name="isMatch"  public="true">
<description>
Return true if the specified event is a match&#xa; against this accelerator.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.getModifiers() -->
<method name="getModifiers"  public="true">
<description>
Get the modifiers which must be pressed &#xa; in order to invoke this accelerator.  &#xa; This is a mask of the bits defined in BInputEvent.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.getKeyCode() -->
<method name="getKeyCode"  public="true">
<description>
Get the key code which is a virtual code defined&#xa; by BKeyEvent.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.getModifiersString() -->
<method name="getModifiersString"  public="true">
<description>
Get the modifiers as their grammar string.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.getKeyCodeString() -->
<method name="getKeyCodeString"  public="true">
<description>
Get the key code as its grammar string.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.hashCode() -->
<method name="hashCode"  public="true">
<description>
Provide a hash using the modifiers and key code.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Equality is based on identical key code &#xa; and modifiers.
</description>
<parameter name="object">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description>
To string.
</description>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description>
BAccelerator is serialized writeUTF() of &#xa; its string encoding.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.ui.BAccelerator.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description>
BAccelerator is unserialized using readUTF()&#xa; of its string encoding.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.ui.BAccelerator.encodeToString() -->
<method name="encodeToString"  public="true">
<description>
Write the primitive in String format.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BAccelerator.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description>
Read the primitive from String format.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.ui.BAccelerator.NULL -->
<field name="NULL"  public="true" static="true" final="true">
<type class="javax.baja.ui.BAccelerator"/>
<description>
Null is a singleton used to define no accelerator.
</description>
</field>

<!-- javax.baja.ui.BAccelerator.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.ui.BAccelerator"/>
<description>
The default accelerator is NULL.
</description>
</field>

<!-- javax.baja.ui.BAccelerator.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
