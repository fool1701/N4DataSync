<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.table.BTable" name="BTable" packageName="javax.baja.ui.table" public="true">
<description>
BTable displays a grid of rows and columns.  &#xa;&#xa; &lt;p&gt;&#xa; Features included in BTable:&#xa; &lt;ul&gt;&#xa;   &lt;li&gt;Auto-resize column button&lt;/li&gt;&#xa;   &lt;li&gt;Automatic support for column sorting&lt;/li&gt;&#xa;   &lt;li&gt;Pluggable data model&lt;/li&gt;&#xa;   &lt;li&gt;Pluggable user input processing&lt;/li&gt;&#xa;   &lt;li&gt;Pluggable header rendering&lt;/li&gt;&#xa;   &lt;li&gt;Pluggable cell rendering&lt;/li&gt;&#xa;   &lt;li&gt;Automatic scrolling support&lt;/li&gt;&#xa; &lt;/ul&gt;&#xa;&#xa; &lt;p&gt;&#xa; BTable is composed of several pluggable support classes:&#xa; &lt;ul&gt;&#xa; &lt;li&gt;&lt;b&gt;Model:&lt;/b&gt; The table model stores the grid of&#xa;   data for the table.  The model is responsible for&#xa;   implementing methods the table uses to know the grid&#xa;   size, the Objects used to render the grid cells, and&#xa;   provide sort support.  There is required one to one &#xa;   mapping between BTable and TableModel.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Controller:&lt;/b&gt; The TableController is responsible&#xa;   for processing all user input on the table in the form&#xa;   of focus, keyboard, and mouse events.  All input events&#xa;   are routed to the installed controller for processing.&#xa;   The default controller keeps track of what table element&#xa;   (header, cell, or resize hotspot) the mouse is over and&#xa;   provides convenient callbacks for subclasses.  The default&#xa;   controller also provides all the selection management.  &#xa;   There is required one to one mapping between BTable and &#xa;   TableController.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Selection:&lt;/b&gt; Every table has a TableSelection&#xa;   instance which is used to store the current selection&#xa;   and provide access to modify the selection.  The default&#xa;   implementation provides row selection support and is&#xa;   designed to work in tandem with the default controller.&#xa;   There is required one to one mapping between BTable and &#xa;   TableSelection.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Cell Renderer:&lt;/b&gt; The table&#x27;s installed cell renderer&#xa;   is used to paint each cell.  The paintCell() callback&#xa;   contains all the cell information needed to visualize the&#xa;   cell.  The cell renderer is also used in determining the&#xa;   preferred column size.  There is required one to one mapping &#xa;   between BTable and TableCellRenderer.&#xa; &lt;/li&gt;&#xa; &lt;li&gt;&lt;b&gt;Header Renderer:&lt;/b&gt; The table&#x27;s installed header renderer&#xa;   is used to paint each column header.  The paintHeader() callback&#xa;   contains all the header information needed to visualize the&#xa;   header.  The header renderer is also used in determining the&#xa;   preferred column size.  There is required one to one mapping &#xa;   between BTable and TableHeaderRenderer.&#xa; &lt;/li&gt;&#xa; &lt;/ul&gt;
</description>
<tag name="@author">John Sublett</tag>
<tag name="@author">Brian Frank (rewrite 3 Aug 01)</tag>
<tag name="@creation">22 Nov 00</tag>
<tag name="@version">$Revision: 124$ $Date: 6/28/11 8:45:13 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.transfer.BTransferWidget"/>
</extends>
<property name="multipleSelection" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#getMultipleSelection</tag>
<tag name="@see">#setMultipleSelection</tag>
</property>

<property name="headerVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;headerVisible&lt;/code&gt; property.&#xa; Indicates whether or not the header is visible.
</description>
<tag name="@see">#getHeaderVisible</tag>
<tag name="@see">#setHeaderVisible</tag>
</property>

<property name="optionsButtonVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;optionsButtonVisible&lt;/code&gt; property.&#xa; Indicates whether or not the options button is visible.
</description>
<tag name="@see">#getOptionsButtonVisible</tag>
<tag name="@see">#setOptionsButtonVisible</tag>
</property>

<property name="hgridVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;hgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#getHgridVisible</tag>
<tag name="@see">#setHgridVisible</tag>
</property>

<property name="vgridVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;vgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#getVgridVisible</tag>
<tag name="@see">#setVgridVisible</tag>
</property>

<property name="extendedResize" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;extendedResize&lt;/code&gt; property.&#xa; Indicates whether or not the user can resize columns anywhere&#xa; on the table, instead of just over the header.
</description>
<tag name="@see">#getExtendedResize</tag>
<tag name="@see">#setExtendedResize</tag>
</property>

<property name="hscrollBarVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;hscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal scroll bar is visible.
</description>
<tag name="@see">#getHscrollBarVisible</tag>
<tag name="@see">#setHscrollBarVisible</tag>
</property>

<property name="vscrollBarVisible" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;vscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the vertical scroll bar is visible.
</description>
<tag name="@see">#getVscrollBarVisible</tag>
<tag name="@see">#setVscrollBarVisible</tag>
</property>

<property name="gridBrush" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;gridBrush&lt;/code&gt; property.&#xa; Brush used to paint the grid lines if visible.  The theme&#xa; default is used if set to BBrush.NULL.
</description>
<tag name="@see">#getGridBrush</tag>
<tag name="@see">#setGridBrush</tag>
</property>

<property name="colorRows" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;colorRows&lt;/code&gt; property.
</description>
<tag name="@see">#getColorRows</tag>
<tag name="@see">#setColorRows</tag>
</property>

<property name="evenRowColor" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;evenRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#getEvenRowColor</tag>
<tag name="@see">#setEvenRowColor</tag>
</property>

<property name="oddRowColor" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;oddRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#getOddRowColor</tag>
<tag name="@see">#setOddRowColor</tag>
</property>

<property name="hscrollBar" flags="rth">
<type class="javax.baja.ui.BScrollBar"/>
<description>
Slot for the &lt;code&gt;hscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getHscrollBar</tag>
<tag name="@see">#setHscrollBar</tag>
</property>

<property name="vscrollBar" flags="rth">
<type class="javax.baja.ui.BScrollBar"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</property>

<property name="optionsButton" flags="rt">
<type class="javax.baja.ui.BButton"/>
<description>
Slot for the &lt;code&gt;optionsButton&lt;/code&gt; property.
</description>
<tag name="@see">#getOptionsButton</tag>
<tag name="@see">#setOptionsButton</tag>
</property>

<action name="vscroll" flags="">
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</action>

<action name="hscroll" flags="">
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll(BScrollEvent parameter)</tag>
</action>

<topic name="actionPerformed" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or selects a row with the mouse.
</description>
<tag name="@see">#fireActionPerformed</tag>
</topic>

<topic name="cancelled" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#fireCancelled</tag>
</topic>

<topic name="tableModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;tableModified&lt;/code&gt; topic.&#xa; Fired when the table contents are modified.
</description>
<tag name="@see">#fireTableModified</tag>
</topic>

<topic name="selectionModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the table selection is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</topic>

<!-- javax.baja.ui.table.BTable() -->
<constructor name="BTable" public="true">
<description>
Constructor with an empty DefaultTableModel.
</description>
</constructor>

<!-- javax.baja.ui.table.BTable(javax.baja.ui.table.TableModel) -->
<constructor name="BTable" public="true">
<parameter name="model">
<type class="javax.baja.ui.table.TableModel"/>
</parameter>
<description>
Constructor with specified model.
</description>
</constructor>

<!-- javax.baja.ui.table.BTable(javax.baja.ui.table.TableModel, javax.baja.ui.table.TableController) -->
<constructor name="BTable" public="true">
<parameter name="model">
<type class="javax.baja.ui.table.TableModel"/>
</parameter>
<parameter name="controller">
<type class="javax.baja.ui.table.TableController"/>
</parameter>
<description>
Constructor with model and controller.
</description>
</constructor>

<!-- javax.baja.ui.table.BTable(javax.baja.ui.table.TableModel, javax.baja.ui.table.TableController, javax.baja.ui.table.TableSelection) -->
<constructor name="BTable" public="true">
<parameter name="model">
<type class="javax.baja.ui.table.TableModel"/>
</parameter>
<parameter name="controller">
<type class="javax.baja.ui.table.TableController"/>
</parameter>
<parameter name="selection">
<type class="javax.baja.ui.table.TableSelection"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.ui.table.BTable(javax.baja.ui.table.TableModel, javax.baja.ui.table.TableController, javax.baja.ui.table.TableSelection, javax.baja.ui.table.TableHeaderRenderer, javax.baja.ui.table.TableCellRenderer) -->
<constructor name="BTable" public="true">
<parameter name="model">
<type class="javax.baja.ui.table.TableModel"/>
</parameter>
<parameter name="controller">
<type class="javax.baja.ui.table.TableController"/>
</parameter>
<parameter name="selection">
<type class="javax.baja.ui.table.TableSelection"/>
</parameter>
<parameter name="headerRenderer">
<type class="javax.baja.ui.table.TableHeaderRenderer"/>
</parameter>
<parameter name="cellRenderer">
<type class="javax.baja.ui.table.TableCellRenderer"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.ui.table.BTable.getMultipleSelection() -->
<method name="getMultipleSelection"  public="true">
<description>
Get the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#multipleSelection</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setMultipleSelection(boolean) -->
<method name="setMultipleSelection"  public="true">
<description>
Set the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#multipleSelection</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHeaderVisible() -->
<method name="getHeaderVisible"  public="true">
<description>
Get the &lt;code&gt;headerVisible&lt;/code&gt; property.&#xa; Indicates whether or not the header is visible.
</description>
<tag name="@see">#headerVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setHeaderVisible(boolean) -->
<method name="setHeaderVisible"  public="true">
<description>
Set the &lt;code&gt;headerVisible&lt;/code&gt; property.&#xa; Indicates whether or not the header is visible.
</description>
<tag name="@see">#headerVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getOptionsButtonVisible() -->
<method name="getOptionsButtonVisible"  public="true">
<description>
Get the &lt;code&gt;optionsButtonVisible&lt;/code&gt; property.&#xa; Indicates whether or not the options button is visible.
</description>
<tag name="@see">#optionsButtonVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setOptionsButtonVisible(boolean) -->
<method name="setOptionsButtonVisible"  public="true">
<description>
Set the &lt;code&gt;optionsButtonVisible&lt;/code&gt; property.&#xa; Indicates whether or not the options button is visible.
</description>
<tag name="@see">#optionsButtonVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHgridVisible() -->
<method name="getHgridVisible"  public="true">
<description>
Get the &lt;code&gt;hgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#hgridVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setHgridVisible(boolean) -->
<method name="setHgridVisible"  public="true">
<description>
Set the &lt;code&gt;hgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#hgridVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getVgridVisible() -->
<method name="getVgridVisible"  public="true">
<description>
Get the &lt;code&gt;vgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#vgridVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setVgridVisible(boolean) -->
<method name="setVgridVisible"  public="true">
<description>
Set the &lt;code&gt;vgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#vgridVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getExtendedResize() -->
<method name="getExtendedResize"  public="true">
<description>
Get the &lt;code&gt;extendedResize&lt;/code&gt; property.&#xa; Indicates whether or not the user can resize columns anywhere&#xa; on the table, instead of just over the header.
</description>
<tag name="@see">#extendedResize</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setExtendedResize(boolean) -->
<method name="setExtendedResize"  public="true">
<description>
Set the &lt;code&gt;extendedResize&lt;/code&gt; property.&#xa; Indicates whether or not the user can resize columns anywhere&#xa; on the table, instead of just over the header.
</description>
<tag name="@see">#extendedResize</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHscrollBarVisible() -->
<method name="getHscrollBarVisible"  public="true">
<description>
Get the &lt;code&gt;hscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal scroll bar is visible.
</description>
<tag name="@see">#hscrollBarVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setHscrollBarVisible(boolean) -->
<method name="setHscrollBarVisible"  public="true">
<description>
Set the &lt;code&gt;hscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal scroll bar is visible.
</description>
<tag name="@see">#hscrollBarVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getVscrollBarVisible() -->
<method name="getVscrollBarVisible"  public="true">
<description>
Get the &lt;code&gt;vscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the vertical scroll bar is visible.
</description>
<tag name="@see">#vscrollBarVisible</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setVscrollBarVisible(boolean) -->
<method name="setVscrollBarVisible"  public="true">
<description>
Set the &lt;code&gt;vscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the vertical scroll bar is visible.
</description>
<tag name="@see">#vscrollBarVisible</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getGridBrush() -->
<method name="getGridBrush"  public="true">
<description>
Get the &lt;code&gt;gridBrush&lt;/code&gt; property.&#xa; Brush used to paint the grid lines if visible.  The theme&#xa; default is used if set to BBrush.NULL.
</description>
<tag name="@see">#gridBrush</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setGridBrush(javax.baja.gx.BBrush) -->
<method name="setGridBrush"  public="true">
<description>
Set the &lt;code&gt;gridBrush&lt;/code&gt; property.&#xa; Brush used to paint the grid lines if visible.  The theme&#xa; default is used if set to BBrush.NULL.
</description>
<tag name="@see">#gridBrush</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getColorRows() -->
<method name="getColorRows"  public="true">
<description>
Get the &lt;code&gt;colorRows&lt;/code&gt; property.
</description>
<tag name="@see">#colorRows</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setColorRows(boolean) -->
<method name="setColorRows"  public="true">
<description>
Set the &lt;code&gt;colorRows&lt;/code&gt; property.
</description>
<tag name="@see">#colorRows</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getEvenRowColor() -->
<method name="getEvenRowColor"  public="true">
<description>
Get the &lt;code&gt;evenRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#evenRowColor</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setEvenRowColor(javax.baja.gx.BBrush) -->
<method name="setEvenRowColor"  public="true">
<description>
Set the &lt;code&gt;evenRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#evenRowColor</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getOddRowColor() -->
<method name="getOddRowColor"  public="true">
<description>
Get the &lt;code&gt;oddRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#oddRowColor</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setOddRowColor(javax.baja.gx.BBrush) -->
<method name="setOddRowColor"  public="true">
<description>
Set the &lt;code&gt;oddRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#oddRowColor</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHscrollBar() -->
<method name="getHscrollBar"  public="true">
<description>
Get the &lt;code&gt;hscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#hscrollBar</tag>
<return>
<type class="javax.baja.ui.BScrollBar"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setHscrollBar(javax.baja.ui.BScrollBar) -->
<method name="setHscrollBar"  public="true">
<description>
Set the &lt;code&gt;hscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#hscrollBar</tag>
<parameter name="v">
<type class="javax.baja.ui.BScrollBar"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getVscrollBar() -->
<method name="getVscrollBar"  public="true">
<description>
Get the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#vscrollBar</tag>
<return>
<type class="javax.baja.ui.BScrollBar"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setVscrollBar(javax.baja.ui.BScrollBar) -->
<method name="setVscrollBar"  public="true">
<description>
Set the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#vscrollBar</tag>
<parameter name="v">
<type class="javax.baja.ui.BScrollBar"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getOptionsButton() -->
<method name="getOptionsButton"  public="true">
<description>
Get the &lt;code&gt;optionsButton&lt;/code&gt; property.
</description>
<tag name="@see">#optionsButton</tag>
<return>
<type class="javax.baja.ui.BButton"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setOptionsButton(javax.baja.ui.BButton) -->
<method name="setOptionsButton"  public="true">
<description>
Set the &lt;code&gt;optionsButton&lt;/code&gt; property.
</description>
<tag name="@see">#optionsButton</tag>
<parameter name="v">
<type class="javax.baja.ui.BButton"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.vscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="vscroll"  public="true">
<description>
Invoke the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll</tag>
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.hscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="hscroll"  public="true">
<description>
Invoke the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll</tag>
<parameter name="parameter">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.fireActionPerformed(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireActionPerformed"  public="true">
<description>
Fire an event for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or selects a row with the mouse.
</description>
<tag name="@see">#actionPerformed</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.fireCancelled(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireCancelled"  public="true">
<description>
Fire an event for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#cancelled</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.fireTableModified(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireTableModified"  public="true">
<description>
Fire an event for the &lt;code&gt;tableModified&lt;/code&gt; topic.&#xa; Fired when the table contents are modified.
</description>
<tag name="@see">#tableModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.fireSelectionModified(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireSelectionModified"  public="true">
<description>
Fire an event for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the table selection is modified.
</description>
<tag name="@see">#selectionModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.initUIComponents() -->
<method name="initUIComponents"  protected="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getModel() -->
<method name="getModel"  public="true">
<description>
Get the table model currently installed.
</description>
<return>
<type class="javax.baja.ui.table.TableModel"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setModel(javax.baja.ui.table.TableModel) -->
<method name="setModel"  public="true">
<description>
Install the specified model this BTable visualizes.
</description>
<parameter name="model">
<type class="javax.baja.ui.table.TableModel"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getController() -->
<method name="getController"  public="true">
<description>
Get the table controller currently installed.
</description>
<return>
<type class="javax.baja.ui.table.TableController"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setController(javax.baja.ui.table.TableController) -->
<method name="setController"  public="true">
<description>
Install the specified controller.
</description>
<parameter name="controller">
<type class="javax.baja.ui.table.TableController"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getSelection() -->
<method name="getSelection"  public="true">
<description>
Get the current table selection.
</description>
<return>
<type class="javax.baja.ui.table.TableSelection"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setSelection(javax.baja.ui.table.TableSelection) -->
<method name="setSelection"  public="true">
<description>
Install the specified selection model.
</description>
<parameter name="selection">
<type class="javax.baja.ui.table.TableSelection"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHeaderRenderer() -->
<method name="getHeaderRenderer"  public="true">
<description>
Get the TableHeaderRenderer currently installed.
</description>
<return>
<type class="javax.baja.ui.table.TableHeaderRenderer"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setHeaderRenderer(javax.baja.ui.table.TableHeaderRenderer) -->
<method name="setHeaderRenderer"  public="true">
<description>
Install the specified TableHeaderRenderer.
</description>
<parameter name="renderer">
<type class="javax.baja.ui.table.TableHeaderRenderer"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getCellRenderer() -->
<method name="getCellRenderer"  public="true">
<description>
Get the TableCellRenderer currently installed.
</description>
<return>
<type class="javax.baja.ui.table.TableCellRenderer"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setCellRenderer(javax.baja.ui.table.TableCellRenderer) -->
<method name="setCellRenderer"  public="true">
<description>
Install the specified TableCellRenderer.
</description>
<parameter name="renderer">
<type class="javax.baja.ui.table.TableCellRenderer"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<description>
Relayout and repaint table when properties change.
</description>
<parameter name="prop">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute the preferred size of the table.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout the table.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.sizeColumnsToFit() -->
<method name="sizeColumnsToFit"  public="true">
<description>
Resize all columns to automatically fit the longest row.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getColumnAt(double) -->
<method name="getColumnAt"  public="true">
<description>
Given a x coordinate in the BTable&#x27;s coordinate &#xa; space, return the column index.  If x falls outside&#xa; the BTable&#x27;s bounds then return -1.
</description>
<parameter name="x">
<type class="double"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getRowAt(double) -->
<method name="getRowAt"  public="true">
<description>
Given a y coordinate in the BTable&#x27;s coordinate space, &#xa; return the row index.  If the y coordinate falls within &#xa; the header row return Integer.MAX_VALUE, or it is falls &#xa; outside of a valid row then return -1.
</description>
<parameter name="y">
<type class="double"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHeaderWidth(int) -->
<method name="getHeaderWidth"  public="true">
<description>
Get the width of the specified header column.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getCellWidth(int) -->
<method name="getCellWidth"  public="true">
<description>
Get the width of the specified column cell.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getHeaderBounds(int) -->
<method name="getHeaderBounds"  public="true">
<description>
Get the header bounds of the specified column.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.RectGeom"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getCellBounds(int, int) -->
<method name="getCellBounds"  public="true">
<description>
Get the cell bounds of the specified row and column.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.RectGeom"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.setColumnPosition(int, double) -->
<method name="setColumnPosition"  public="true">
<description>
Set the specified column&#x27;s position to the given&#xa; x coordinate.  If the x coordinate would obscure&#xa; the column to the left then it is clipped to a&#xa; minimum.  All the columns to the right are shifted&#xa; accordingly.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<parameter name="x">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getVisibleRowCount() -->
<method name="getVisibleRowCount"  public="true">
<description>
Get the number of visible rows for the table.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.ensureRowIsVisible(int) -->
<method name="ensureRowIsVisible"  public="true">
<description>
Ensure the table is scrolled so that the &#xa; specified row is visible.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.doVscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="doVscroll"  public="true">
<description>
Implementation for the verticalScroll action.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.doHscroll(javax.baja.ui.event.BScrollEvent) -->
<method name="doHscroll"  public="true">
<description>
Implementation for the horizontalScroll action.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BScrollEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getSortColumn() -->
<method name="getSortColumn"  public="true">
<description>
Get the column being used for the current sort,&#xa; or -1 if no sorting is currently active.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.isSortAscending() -->
<method name="isSortAscending"  public="true">
<description>
Return true if the current sort is ascending &#xa; or false if it is descending.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.sortByColumn(int, boolean) -->
<method name="sortByColumn"  public="true">
<description>
Setup the table&#x27;s column sort on the &#xa; specified column index.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<parameter name="ascending">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the table.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.paintBackground(javax.baja.gx.Graphics) -->
<method name="paintBackground"  protected="true">
<description/>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.paintHorizontalGrid() -->
<method name="paintHorizontalGrid"  protected="true">
<description>
Return if the horizontal grid should be painted.  The default &#xa; returns the state of the horizontalGridVisible property.  This&#xa; a hook allows subclasses to perform their own grid painting.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.paintVerticalGrid() -->
<method name="paintVerticalGrid"  protected="true">
<description>
Return if the vertical grid should be painted.  The default &#xa; returns the state of the verticalGridVisible property.  This&#xa; a hook allows subclasses to perform their own grid painting.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getStyleSelector() -->
<method name="getStyleSelector"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.isFocusTraversable() -->
<method name="isFocusTraversable"  public="true">
<description>
Route to TableController.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.focusGained(javax.baja.ui.event.BFocusEvent) -->
<method name="focusGained"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.focusLost(javax.baja.ui.event.BFocusEvent) -->
<method name="focusLost"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.keyReleased(javax.baja.ui.event.BKeyEvent) -->
<method name="keyReleased"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.keyTyped(javax.baja.ui.event.BKeyEvent) -->
<method name="keyTyped"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseMoved"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mousePulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePulsed"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseWheel(javax.baja.ui.event.BMouseWheelEvent) -->
<method name="mouseWheel"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseWheelEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.mouseHover(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseHover"  public="true">
<description>
Route to TableController.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.getTransferData() -->
<method name="getTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<return>
<type class="javax.baja.ui.transfer.TransferEnvelope"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.table.BTable.insertTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="insertTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.table.BTable.removeTransferData(javax.baja.ui.transfer.TransferContext) -->
<method name="removeTransferData"  public="true">
<description>
Throw UnsupportedOperationException
</description>
<parameter name="cx">
<type class="javax.baja.ui.transfer.TransferContext"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.table.BTable.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.table.BTable.multipleSelection -->
<field name="multipleSelection"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;multipleSelection&lt;/code&gt; property.&#xa; If true then multiple rows may be selected, or if&#xa; false then only row at a time may be selected.
</description>
<tag name="@see">#getMultipleSelection</tag>
<tag name="@see">#setMultipleSelection</tag>
</field>

<!-- javax.baja.ui.table.BTable.headerVisible -->
<field name="headerVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;headerVisible&lt;/code&gt; property.&#xa; Indicates whether or not the header is visible.
</description>
<tag name="@see">#getHeaderVisible</tag>
<tag name="@see">#setHeaderVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.optionsButtonVisible -->
<field name="optionsButtonVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;optionsButtonVisible&lt;/code&gt; property.&#xa; Indicates whether or not the options button is visible.
</description>
<tag name="@see">#getOptionsButtonVisible</tag>
<tag name="@see">#setOptionsButtonVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.hgridVisible -->
<field name="hgridVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#getHgridVisible</tag>
<tag name="@see">#setHgridVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.vgridVisible -->
<field name="vgridVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vgridVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal lines of the grid&#xa; are visible.
</description>
<tag name="@see">#getVgridVisible</tag>
<tag name="@see">#setVgridVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.extendedResize -->
<field name="extendedResize"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;extendedResize&lt;/code&gt; property.&#xa; Indicates whether or not the user can resize columns anywhere&#xa; on the table, instead of just over the header.
</description>
<tag name="@see">#getExtendedResize</tag>
<tag name="@see">#setExtendedResize</tag>
</field>

<!-- javax.baja.ui.table.BTable.hscrollBarVisible -->
<field name="hscrollBarVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the horizontal scroll bar is visible.
</description>
<tag name="@see">#getHscrollBarVisible</tag>
<tag name="@see">#setHscrollBarVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.vscrollBarVisible -->
<field name="vscrollBarVisible"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vscrollBarVisible&lt;/code&gt; property.&#xa; Indicates whether or not the vertical scroll bar is visible.
</description>
<tag name="@see">#getVscrollBarVisible</tag>
<tag name="@see">#setVscrollBarVisible</tag>
</field>

<!-- javax.baja.ui.table.BTable.gridBrush -->
<field name="gridBrush"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;gridBrush&lt;/code&gt; property.&#xa; Brush used to paint the grid lines if visible.  The theme&#xa; default is used if set to BBrush.NULL.
</description>
<tag name="@see">#getGridBrush</tag>
<tag name="@see">#setGridBrush</tag>
</field>

<!-- javax.baja.ui.table.BTable.colorRows -->
<field name="colorRows"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;colorRows&lt;/code&gt; property.
</description>
<tag name="@see">#getColorRows</tag>
<tag name="@see">#setColorRows</tag>
</field>

<!-- javax.baja.ui.table.BTable.evenRowColor -->
<field name="evenRowColor"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;evenRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#getEvenRowColor</tag>
<tag name="@see">#setEvenRowColor</tag>
</field>

<!-- javax.baja.ui.table.BTable.oddRowColor -->
<field name="oddRowColor"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;oddRowColor&lt;/code&gt; property.
</description>
<tag name="@see">#getOddRowColor</tag>
<tag name="@see">#setOddRowColor</tag>
</field>

<!-- javax.baja.ui.table.BTable.hscrollBar -->
<field name="hscrollBar"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;hscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getHscrollBar</tag>
<tag name="@see">#setHscrollBar</tag>
</field>

<!-- javax.baja.ui.table.BTable.vscrollBar -->
<field name="vscrollBar"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;vscrollBar&lt;/code&gt; property.
</description>
<tag name="@see">#getVscrollBar</tag>
<tag name="@see">#setVscrollBar</tag>
</field>

<!-- javax.baja.ui.table.BTable.optionsButton -->
<field name="optionsButton"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;optionsButton&lt;/code&gt; property.
</description>
<tag name="@see">#getOptionsButton</tag>
<tag name="@see">#setOptionsButton</tag>
</field>

<!-- javax.baja.ui.table.BTable.vscroll -->
<field name="vscroll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;vscroll&lt;/code&gt; action.
</description>
<tag name="@see">#vscroll(BScrollEvent parameter)</tag>
</field>

<!-- javax.baja.ui.table.BTable.hscroll -->
<field name="hscroll"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;hscroll&lt;/code&gt; action.
</description>
<tag name="@see">#hscroll(BScrollEvent parameter)</tag>
</field>

<!-- javax.baja.ui.table.BTable.actionPerformed -->
<field name="actionPerformed"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the user presses the Enter key&#xa; or selects a row with the mouse.
</description>
<tag name="@see">#fireActionPerformed</tag>
</field>

<!-- javax.baja.ui.table.BTable.cancelled -->
<field name="cancelled"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;cancelled&lt;/code&gt; topic.&#xa; Fired when the user presses the Esc key.
</description>
<tag name="@see">#fireCancelled</tag>
</field>

<!-- javax.baja.ui.table.BTable.tableModified -->
<field name="tableModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;tableModified&lt;/code&gt; topic.&#xa; Fired when the table contents are modified.
</description>
<tag name="@see">#fireTableModified</tag>
</field>

<!-- javax.baja.ui.table.BTable.selectionModified -->
<field name="selectionModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;selectionModified&lt;/code&gt; topic.&#xa; Fired when the table selection is modified.
</description>
<tag name="@see">#fireSelectionModified</tag>
</field>

<!-- javax.baja.ui.table.BTable.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
