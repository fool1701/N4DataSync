<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.table.TableCellRenderer" name="TableCellRenderer" packageName="javax.baja.ui.table" public="true">
<description>
TableCellRenderer is used to render the individual &#xa; cells of a BTable grid.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">3 Aug 01</tag>
<tag name="@version">$Revision: 29$ $Date: 6/29/11 12:15:44 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.table.BTable$TableSupport"/>
</extends>
<!-- javax.baja.ui.table.TableCellRenderer() -->
<constructor name="TableCellRenderer" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.table.TableCellRenderer.getForeground(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getForeground"  public="true">
<description>
Get the foreground used to paint the cell text.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getBackground(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getBackground"  public="true">
<description>
Get the background used to paint the cell.  Return &#xa; null if the standard background should be used.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getColorRows() -->
<method name="getColorRows"  public="true">
<description>
Specify whether alternate rows should be colored
</description>
<return>
<type class="boolean"/>
<description/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getEvenRowColor() -->
<method name="getEvenRowColor"  public="true">
<description>
Specify the brush used to color even rows in the table
</description>
<return>
<type class="javax.baja.gx.BBrush"/>
<description/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getOddRowColor() -->
<method name="getOddRowColor"  public="true">
<description>
Specify the brush used to color odd rows in the table.&#xa; Note: If unspecified, odd rows default to the standard background brush
</description>
<return>
<type class="javax.baja.gx.BBrush"/>
<description/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getFont(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getFont"  public="true">
<description>
Get the font used to paint the cell text.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.BFont"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getSelectionForeground(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getSelectionForeground"  public="true">
<description>
Get the selection foreground used to paint the cell text.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getSelectionBackground(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getSelectionBackground"  public="true">
<description>
Get the selection background used to paint the cell.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getCellHeight() -->
<method name="getCellHeight"  public="true">
<description>
Get the fixed height of the table rows.  A given BTable&#xa; always has the same height across all of its rows based&#xa; on the result of this method.
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getPreferredCellWidth(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getPreferredCellWidth"  public="true">
<description>
Get the preferred width of the specified cell.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getClip(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getClip"  public="true">
<description>
Get the clipping path to apply to this cell. This path&#xa; should be relative to (0,0).
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="javax.baja.gx.IGeom"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.getCellText(javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="getCellText"  public="true">
<description>
Get the text to display for the specified item.  Default&#xa; is to return &lt;code&gt;String.valueOf(cell.value)&lt;/code&gt;.
</description>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.paintCell(javax.baja.gx.Graphics, javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="paintCell"  public="true">
<description>
Paint the cell to the specified graphics context.  The&#xa; graphics context will be translated so that the origin &#xa; of the cell is 0,0.  This method calls paintCellBackground()&#xa; to fill the background and set the foreground color.&#xa; Then the icon and text are painted.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.table.TableCellRenderer.paintCellBackground(javax.baja.gx.Graphics, javax.baja.ui.table.TableCellRenderer.Cell) -->
<method name="paintCellBackground"  protected="true">
<description>
This is the first method of paintCell() which paints&#xa; the background and then sets the graphics context with&#xa; the current foreground color (depending on selection&#xa; state).
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="cell">
<type class="javax.baja.ui.table.TableCellRenderer$Cell"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
