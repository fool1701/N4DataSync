<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.BProgressBar" name="BProgressBar" packageName="javax.baja.ui" public="true">
<description>
BProgressBar
</description>
<tag name="@author">Mike Jarmy</tag>
<tag name="@creation">11 Apr 02</tag>
<tag name="@version">$Revision: 22$ $Date: 11/22/06 4:14:10 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BWidget"/>
</extends>
<property name="min" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;min&lt;/code&gt; property.&#xa; Minimum value of progress bar.
</description>
<tag name="@see">#getMin</tag>
<tag name="@see">#setMin</tag>
</property>

<property name="max" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;max&lt;/code&gt; property.&#xa; Maximum value of progress bar.
</description>
<tag name="@see">#getMax</tag>
<tag name="@see">#setMax</tag>
</property>

<property name="textPattern" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;textPattern&lt;/code&gt; property.&#xa; A string which will be used via&#xa; &lt;code&gt;java.text.DecimalFormat.format()&lt;/code&gt; to render&#xa; the current value of &lt;code&gt;getPercentComplete()&lt;/code&gt; onto&#xa; the progress bar.&#xa; If the textPattern is null or &#x22;&#x22;, then no string will be rendered.
</description>
<tag name="@see">#getTextPattern</tag>
<tag name="@see">#setTextPattern</tag>
</property>

<property name="textFont" flags="">
<type class="javax.baja.gx.BFont"/>
<description>
Slot for the &lt;code&gt;textFont&lt;/code&gt; property.&#xa; Defines the font to use to render the progress bars&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#getTextFont</tag>
<tag name="@see">#setTextFont</tag>
</property>

<property name="backgroundBrush" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;backgroundBrush&lt;/code&gt; property.
</description>
<tag name="@see">#getBackgroundBrush</tag>
<tag name="@see">#setBackgroundBrush</tag>
</property>

<property name="barBrush" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;barBrush&lt;/code&gt; property.
</description>
<tag name="@see">#getBarBrush</tag>
<tag name="@see">#setBarBrush</tag>
</property>

<property name="indeterminate" flags="">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;indeterminate&lt;/code&gt; property.&#xa; Define if this bar&#x27;s progress is indeterminate.
</description>
<tag name="@see">#getIndeterminate</tag>
<tag name="@see">#setIndeterminate</tag>
</property>

<topic name="valueChanged" flags="">
<eventType>
<type class="javax.baja.ui.event.BWidgetEvent"/>
</eventType><description>
Slot for the &lt;code&gt;valueChanged&lt;/code&gt; topic.&#xa; Fired each time the progress bar&#x27;s value is changed.
</description>
<tag name="@see">#fireValueChanged</tag>
</topic>

<!-- javax.baja.ui.BProgressBar() -->
<constructor name="BProgressBar" public="true">
<description>
default constructor
</description>
</constructor>

<!-- javax.baja.ui.BProgressBar(double, double) -->
<constructor name="BProgressBar" public="true">
<parameter name="min">
<type class="double"/>
</parameter>
<parameter name="max">
<type class="double"/>
</parameter>
<description>
construct with minimum and maximum
</description>
</constructor>

<!-- javax.baja.ui.BProgressBar.getMin() -->
<method name="getMin"  public="true">
<description>
Get the &lt;code&gt;min&lt;/code&gt; property.&#xa; Minimum value of progress bar.
</description>
<tag name="@see">#min</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setMin(double) -->
<method name="setMin"  public="true">
<description>
Set the &lt;code&gt;min&lt;/code&gt; property.&#xa; Minimum value of progress bar.
</description>
<tag name="@see">#min</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getMax() -->
<method name="getMax"  public="true">
<description>
Get the &lt;code&gt;max&lt;/code&gt; property.&#xa; Maximum value of progress bar.
</description>
<tag name="@see">#max</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setMax(double) -->
<method name="setMax"  public="true">
<description>
Set the &lt;code&gt;max&lt;/code&gt; property.&#xa; Maximum value of progress bar.
</description>
<tag name="@see">#max</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getTextPattern() -->
<method name="getTextPattern"  public="true">
<description>
Get the &lt;code&gt;textPattern&lt;/code&gt; property.&#xa; A string which will be used via&#xa; &lt;code&gt;java.text.DecimalFormat.format()&lt;/code&gt; to render&#xa; the current value of &lt;code&gt;getPercentComplete()&lt;/code&gt; onto&#xa; the progress bar.&#xa; If the textPattern is null or &#x22;&#x22;, then no string will be rendered.
</description>
<tag name="@see">#textPattern</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setTextPattern(java.lang.String) -->
<method name="setTextPattern"  public="true">
<description>
Set the &lt;code&gt;textPattern&lt;/code&gt; property.&#xa; A string which will be used via&#xa; &lt;code&gt;java.text.DecimalFormat.format()&lt;/code&gt; to render&#xa; the current value of &lt;code&gt;getPercentComplete()&lt;/code&gt; onto&#xa; the progress bar.&#xa; If the textPattern is null or &#x22;&#x22;, then no string will be rendered.
</description>
<tag name="@see">#textPattern</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getTextFont() -->
<method name="getTextFont"  public="true">
<description>
Get the &lt;code&gt;textFont&lt;/code&gt; property.&#xa; Defines the font to use to render the progress bars&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#textFont</tag>
<return>
<type class="javax.baja.gx.BFont"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setTextFont(javax.baja.gx.BFont) -->
<method name="setTextFont"  public="true">
<description>
Set the &lt;code&gt;textFont&lt;/code&gt; property.&#xa; Defines the font to use to render the progress bars&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#textFont</tag>
<parameter name="v">
<type class="javax.baja.gx.BFont"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getBackgroundBrush() -->
<method name="getBackgroundBrush"  public="true">
<description>
Get the &lt;code&gt;backgroundBrush&lt;/code&gt; property.
</description>
<tag name="@see">#backgroundBrush</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setBackgroundBrush(javax.baja.gx.BBrush) -->
<method name="setBackgroundBrush"  public="true">
<description>
Set the &lt;code&gt;backgroundBrush&lt;/code&gt; property.
</description>
<tag name="@see">#backgroundBrush</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getBarBrush() -->
<method name="getBarBrush"  public="true">
<description>
Get the &lt;code&gt;barBrush&lt;/code&gt; property.
</description>
<tag name="@see">#barBrush</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setBarBrush(javax.baja.gx.BBrush) -->
<method name="setBarBrush"  public="true">
<description>
Set the &lt;code&gt;barBrush&lt;/code&gt; property.
</description>
<tag name="@see">#barBrush</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getIndeterminate() -->
<method name="getIndeterminate"  public="true">
<description>
Get the &lt;code&gt;indeterminate&lt;/code&gt; property.&#xa; Define if this bar&#x27;s progress is indeterminate.
</description>
<tag name="@see">#indeterminate</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setIndeterminate(boolean) -->
<method name="setIndeterminate"  public="true">
<description>
Set the &lt;code&gt;indeterminate&lt;/code&gt; property.&#xa; Define if this bar&#x27;s progress is indeterminate.
</description>
<tag name="@see">#indeterminate</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.fireValueChanged(javax.baja.ui.event.BWidgetEvent) -->
<method name="fireValueChanged"  public="true">
<description>
Fire an event for the &lt;code&gt;valueChanged&lt;/code&gt; topic.&#xa; Fired each time the progress bar&#x27;s value is changed.
</description>
<tag name="@see">#valueChanged</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BWidgetEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute the preferred size.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.animate() -->
<method name="animate"  public="true">
<description>
Animate.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the label.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getValue() -->
<method name="getValue"  public="true">
<description>
Get the current value of progress bar.
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.setValue(double) -->
<method name="setValue"  public="true">
<description>
Set the current value of progress bar. If this value is set&#xa; lower than the minimum value, it will be changed to&#xa; the minimum value instead. If this value&#xa; is set higher than the maximum value, it will be changed&#xa; to the maximum value.
</description>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.getPercentComplete() -->
<method name="getPercentComplete"  public="true">
<description>
Get the percent complete.
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BProgressBar.min -->
<field name="min"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;min&lt;/code&gt; property.&#xa; Minimum value of progress bar.
</description>
<tag name="@see">#getMin</tag>
<tag name="@see">#setMin</tag>
</field>

<!-- javax.baja.ui.BProgressBar.max -->
<field name="max"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;max&lt;/code&gt; property.&#xa; Maximum value of progress bar.
</description>
<tag name="@see">#getMax</tag>
<tag name="@see">#setMax</tag>
</field>

<!-- javax.baja.ui.BProgressBar.textPattern -->
<field name="textPattern"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;textPattern&lt;/code&gt; property.&#xa; A string which will be used via&#xa; &lt;code&gt;java.text.DecimalFormat.format()&lt;/code&gt; to render&#xa; the current value of &lt;code&gt;getPercentComplete()&lt;/code&gt; onto&#xa; the progress bar.&#xa; If the textPattern is null or &#x22;&#x22;, then no string will be rendered.
</description>
<tag name="@see">#getTextPattern</tag>
<tag name="@see">#setTextPattern</tag>
</field>

<!-- javax.baja.ui.BProgressBar.textFont -->
<field name="textFont"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;textFont&lt;/code&gt; property.&#xa; Defines the font to use to render the progress bars&#x27;s&#xa; text.  If it is set to BFont.NULL then a context&#xa; sensitive default fallback will be used.
</description>
<tag name="@see">#getTextFont</tag>
<tag name="@see">#setTextFont</tag>
</field>

<!-- javax.baja.ui.BProgressBar.backgroundBrush -->
<field name="backgroundBrush"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;backgroundBrush&lt;/code&gt; property.
</description>
<tag name="@see">#getBackgroundBrush</tag>
<tag name="@see">#setBackgroundBrush</tag>
</field>

<!-- javax.baja.ui.BProgressBar.barBrush -->
<field name="barBrush"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;barBrush&lt;/code&gt; property.
</description>
<tag name="@see">#getBarBrush</tag>
<tag name="@see">#setBarBrush</tag>
</field>

<!-- javax.baja.ui.BProgressBar.indeterminate -->
<field name="indeterminate"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;indeterminate&lt;/code&gt; property.&#xa; Define if this bar&#x27;s progress is indeterminate.
</description>
<tag name="@see">#getIndeterminate</tag>
<tag name="@see">#setIndeterminate</tag>
</field>

<!-- javax.baja.ui.BProgressBar.valueChanged -->
<field name="valueChanged"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;valueChanged&lt;/code&gt; topic.&#xa; Fired each time the progress bar&#x27;s value is changed.
</description>
<tag name="@see">#fireValueChanged</tag>
</field>

<!-- javax.baja.ui.BProgressBar.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
