<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.BSlider" name="BSlider" packageName="javax.baja.ui" public="true">
<description>
BSlider provides a visual slider which is used to&#xa; select and integer or doubleing point value between&#xa; a fixed range.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">16 May 01</tag>
<tag name="@version">$Revision: 30$ $Date: 5/12/05 3:59:58 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BWidget"/>
</extends>
<property name="min" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;min&lt;/code&gt; property.&#xa; The minumim value the slider can move to.
</description>
<tag name="@see">#getMin</tag>
<tag name="@see">#setMin</tag>
</property>

<property name="max" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;max&lt;/code&gt; property.&#xa; The max value the slider can move to.
</description>
<tag name="@see">#getMax</tag>
<tag name="@see">#setMax</tag>
</property>

<property name="increment" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;increment&lt;/code&gt; property.&#xa; The smallest possible value that the slider&#xa; can increment by.
</description>
<tag name="@see">#getIncrement</tag>
<tag name="@see">#setIncrement</tag>
</property>

<property name="value" flags="">
<type class="double"/>
<description>
Slot for the &lt;code&gt;value&lt;/code&gt; property.&#xa; The currently selected value on the slider bar.
</description>
<tag name="@see">#getValue</tag>
<tag name="@see">#setValue</tag>
</property>

<property name="orientation" flags="">
<type class="javax.baja.ui.enums.BOrientation"/>
<description>
Slot for the &lt;code&gt;orientation&lt;/code&gt; property.&#xa; The orientation of the slider bar.
</description>
<tag name="@see">#getOrientation</tag>
<tag name="@see">#setOrientation</tag>
</property>

<property name="trackBrush" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;trackBrush&lt;/code&gt; property.&#xa; The color to paint the track or null to use default.
</description>
<tag name="@see">#getTrackBrush</tag>
<tag name="@see">#setTrackBrush</tag>
</property>

<property name="thumbBrush" flags="">
<type class="javax.baja.gx.BBrush"/>
<description>
Slot for the &lt;code&gt;thumbBrush&lt;/code&gt; property.&#xa; The color to paint the thumb or null to use default.
</description>
<tag name="@see">#getThumbBrush</tag>
<tag name="@see">#setThumbBrush</tag>
</property>

<topic name="valueModified" flags="">
<eventType>
<type class="javax.baja.ui.event.BSliderEvent"/>
</eventType><description>
Slot for the &lt;code&gt;valueModified&lt;/code&gt; topic.&#xa; Event fired when the position is modified.
</description>
<tag name="@see">#fireValueModified</tag>
</topic>

<topic name="actionPerformed" flags="">
<eventType>
<type class="javax.baja.ui.event.BSliderEvent"/>
</eventType><description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the mouse is released after dragging slider.
</description>
<tag name="@see">#fireActionPerformed</tag>
</topic>

<!-- javax.baja.ui.BSlider() -->
<constructor name="BSlider" public="true">
<description>
No argument constructor.
</description>
</constructor>

<!-- javax.baja.ui.BSlider(double, double) -->
<constructor name="BSlider" public="true">
<parameter name="min">
<type class="double"/>
</parameter>
<parameter name="max">
<type class="double"/>
</parameter>
<description>
Sets the min, max values.
</description>
</constructor>

<!-- javax.baja.ui.BSlider(double, double, double, double) -->
<constructor name="BSlider" public="true">
<parameter name="min">
<type class="double"/>
</parameter>
<parameter name="max">
<type class="double"/>
</parameter>
<parameter name="inc">
<type class="double"/>
</parameter>
<parameter name="val">
<type class="double"/>
</parameter>
<description>
Sets the min, max, increment, and initial values.
</description>
</constructor>

<!-- javax.baja.ui.BSlider(javax.baja.ui.enums.BOrientation, double, double, double, double) -->
<constructor name="BSlider" public="true">
<parameter name="orient">
<type class="javax.baja.ui.enums.BOrientation"/>
</parameter>
<parameter name="min">
<type class="double"/>
</parameter>
<parameter name="max">
<type class="double"/>
</parameter>
<parameter name="inc">
<type class="double"/>
</parameter>
<parameter name="val">
<type class="double"/>
</parameter>
<description>
Sets the min, max, increment, initial and&#xa; orienation values.
</description>
</constructor>

<!-- javax.baja.ui.BSlider.getMin() -->
<method name="getMin"  public="true">
<description>
Get the &lt;code&gt;min&lt;/code&gt; property.&#xa; The minumim value the slider can move to.
</description>
<tag name="@see">#min</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setMin(double) -->
<method name="setMin"  public="true">
<description>
Set the &lt;code&gt;min&lt;/code&gt; property.&#xa; The minumim value the slider can move to.
</description>
<tag name="@see">#min</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getMax() -->
<method name="getMax"  public="true">
<description>
Get the &lt;code&gt;max&lt;/code&gt; property.&#xa; The max value the slider can move to.
</description>
<tag name="@see">#max</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setMax(double) -->
<method name="setMax"  public="true">
<description>
Set the &lt;code&gt;max&lt;/code&gt; property.&#xa; The max value the slider can move to.
</description>
<tag name="@see">#max</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getIncrement() -->
<method name="getIncrement"  public="true">
<description>
Get the &lt;code&gt;increment&lt;/code&gt; property.&#xa; The smallest possible value that the slider&#xa; can increment by.
</description>
<tag name="@see">#increment</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setIncrement(double) -->
<method name="setIncrement"  public="true">
<description>
Set the &lt;code&gt;increment&lt;/code&gt; property.&#xa; The smallest possible value that the slider&#xa; can increment by.
</description>
<tag name="@see">#increment</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getValue() -->
<method name="getValue"  public="true">
<description>
Get the &lt;code&gt;value&lt;/code&gt; property.&#xa; The currently selected value on the slider bar.
</description>
<tag name="@see">#value</tag>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setValue(double) -->
<method name="setValue"  public="true">
<description>
Set the &lt;code&gt;value&lt;/code&gt; property.&#xa; The currently selected value on the slider bar.
</description>
<tag name="@see">#value</tag>
<parameter name="v">
<type class="double"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getOrientation() -->
<method name="getOrientation"  public="true">
<description>
Get the &lt;code&gt;orientation&lt;/code&gt; property.&#xa; The orientation of the slider bar.
</description>
<tag name="@see">#orientation</tag>
<return>
<type class="javax.baja.ui.enums.BOrientation"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setOrientation(javax.baja.ui.enums.BOrientation) -->
<method name="setOrientation"  public="true">
<description>
Set the &lt;code&gt;orientation&lt;/code&gt; property.&#xa; The orientation of the slider bar.
</description>
<tag name="@see">#orientation</tag>
<parameter name="v">
<type class="javax.baja.ui.enums.BOrientation"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getTrackBrush() -->
<method name="getTrackBrush"  public="true">
<description>
Get the &lt;code&gt;trackBrush&lt;/code&gt; property.&#xa; The color to paint the track or null to use default.
</description>
<tag name="@see">#trackBrush</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setTrackBrush(javax.baja.gx.BBrush) -->
<method name="setTrackBrush"  public="true">
<description>
Set the &lt;code&gt;trackBrush&lt;/code&gt; property.&#xa; The color to paint the track or null to use default.
</description>
<tag name="@see">#trackBrush</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getThumbBrush() -->
<method name="getThumbBrush"  public="true">
<description>
Get the &lt;code&gt;thumbBrush&lt;/code&gt; property.&#xa; The color to paint the thumb or null to use default.
</description>
<tag name="@see">#thumbBrush</tag>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.setThumbBrush(javax.baja.gx.BBrush) -->
<method name="setThumbBrush"  public="true">
<description>
Set the &lt;code&gt;thumbBrush&lt;/code&gt; property.&#xa; The color to paint the thumb or null to use default.
</description>
<tag name="@see">#thumbBrush</tag>
<parameter name="v">
<type class="javax.baja.gx.BBrush"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.fireValueModified(javax.baja.ui.event.BSliderEvent) -->
<method name="fireValueModified"  public="true">
<description>
Fire an event for the &lt;code&gt;valueModified&lt;/code&gt; topic.&#xa; Event fired when the position is modified.
</description>
<tag name="@see">#valueModified</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BSliderEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.fireActionPerformed(javax.baja.ui.event.BSliderEvent) -->
<method name="fireActionPerformed"  public="true">
<description>
Fire an event for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the mouse is released after dragging slider.
</description>
<tag name="@see">#actionPerformed</tag>
<parameter name="event">
<type class="javax.baja.ui.event.BSliderEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.computePreferredSize() -->
<method name="computePreferredSize"  public="true">
<description>
Compute preferred size.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.doLayout(javax.baja.ui.BWidget[]) -->
<method name="doLayout"  public="true">
<description>
Layout component.
</description>
<parameter name="kids">
<type class="javax.baja.ui.BWidget" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.layoutHorizontally() -->
<method name="layoutHorizontally"  public="true">
<description>
Layout the component horizontally.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.layoutVertically() -->
<method name="layoutVertically"  public="true">
<description>
Layout the component vertically.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.isHorizontal() -->
<method name="isHorizontal"  public="true">
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.paint(javax.baja.gx.Graphics) -->
<method name="paint"  public="true">
<description>
Paint the slider component.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
If the mouse is pressed on the thumb, the thumb becomes&#xa; &#x22;hot&#x22; and needs to be moved as the mouse is moved. If the&#xa; mouse was pressed on the track, then the thumb needs to&#xa; &#x22;paged&#x22; in the direction.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description/>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.getIcon() -->
<method name="getIcon"  public="true">
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.ui.BSlider.min -->
<field name="min"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;min&lt;/code&gt; property.&#xa; The minumim value the slider can move to.
</description>
<tag name="@see">#getMin</tag>
<tag name="@see">#setMin</tag>
</field>

<!-- javax.baja.ui.BSlider.max -->
<field name="max"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;max&lt;/code&gt; property.&#xa; The max value the slider can move to.
</description>
<tag name="@see">#getMax</tag>
<tag name="@see">#setMax</tag>
</field>

<!-- javax.baja.ui.BSlider.increment -->
<field name="increment"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;increment&lt;/code&gt; property.&#xa; The smallest possible value that the slider&#xa; can increment by.
</description>
<tag name="@see">#getIncrement</tag>
<tag name="@see">#setIncrement</tag>
</field>

<!-- javax.baja.ui.BSlider.value -->
<field name="value"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;value&lt;/code&gt; property.&#xa; The currently selected value on the slider bar.
</description>
<tag name="@see">#getValue</tag>
<tag name="@see">#setValue</tag>
</field>

<!-- javax.baja.ui.BSlider.orientation -->
<field name="orientation"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;orientation&lt;/code&gt; property.&#xa; The orientation of the slider bar.
</description>
<tag name="@see">#getOrientation</tag>
<tag name="@see">#setOrientation</tag>
</field>

<!-- javax.baja.ui.BSlider.trackBrush -->
<field name="trackBrush"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;trackBrush&lt;/code&gt; property.&#xa; The color to paint the track or null to use default.
</description>
<tag name="@see">#getTrackBrush</tag>
<tag name="@see">#setTrackBrush</tag>
</field>

<!-- javax.baja.ui.BSlider.thumbBrush -->
<field name="thumbBrush"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;thumbBrush&lt;/code&gt; property.&#xa; The color to paint the thumb or null to use default.
</description>
<tag name="@see">#getThumbBrush</tag>
<tag name="@see">#setThumbBrush</tag>
</field>

<!-- javax.baja.ui.BSlider.valueModified -->
<field name="valueModified"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;valueModified&lt;/code&gt; topic.&#xa; Event fired when the position is modified.
</description>
<tag name="@see">#fireValueModified</tag>
</field>

<!-- javax.baja.ui.BSlider.actionPerformed -->
<field name="actionPerformed"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;actionPerformed&lt;/code&gt; topic.&#xa; Event fired when the mouse is released after dragging slider.
</description>
<tag name="@see">#fireActionPerformed</tag>
</field>

<!-- javax.baja.ui.BSlider.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.ui.BSlider.thumbPoint -->
<field name="thumbPoint"  protected="true">
<type class="double"/>
<description/>
</field>

<!-- javax.baja.ui.BSlider.viewSize -->
<field name="viewSize"  protected="true">
<type class="double"/>
<description/>
</field>

<!-- javax.baja.ui.BSlider.realSize -->
<field name="realSize"  protected="true">
<type class="double"/>
<description/>
</field>

<!-- javax.baja.ui.BSlider.thumb -->
<field name="thumb"  protected="true">
<type class="javax.baja.gx.RectGeom"/>
<description/>
</field>

<!-- javax.baja.ui.BSlider.track -->
<field name="track"  protected="true">
<type class="javax.baja.gx.RectGeom"/>
<description/>
</field>

</class>
</bajadoc>
