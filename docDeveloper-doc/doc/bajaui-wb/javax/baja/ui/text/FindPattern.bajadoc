<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.text.FindPattern" name="FindPattern" packageName="javax.baja.ui.text" public="true">
<description>
FindPattern is used to encapsulate the search string and options.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">16 May 02</tag>
<tag name="@version">$Revision: 20$ $Date: 6/27/11 12:44:40 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.ui.text.FindPattern(java.lang.String, boolean, boolean) -->
<constructor name="FindPattern" public="true">
<parameter name="string">
<type class="java.lang.String"/>
</parameter>
<parameter name="matchCase">
<type class="boolean"/>
</parameter>
<parameter name="matchWord">
<type class="boolean"/>
</parameter>
<description>
Create a FindPattern with the specified string and options.
</description>
</constructor>

<!-- javax.baja.ui.text.FindPattern(java.lang.String, boolean, boolean, boolean) -->
<constructor name="FindPattern" public="true">
<parameter name="string">
<type class="java.lang.String"/>
</parameter>
<parameter name="matchCase">
<type class="boolean"/>
</parameter>
<parameter name="matchWord">
<type class="boolean"/>
</parameter>
<parameter name="fromTop">
<type class="boolean"/>
</parameter>
<description>
Create a FindPattern with the specified string and options.
</description>
</constructor>

<!-- javax.baja.ui.text.FindPattern.getCurrent() -->
<method name="getCurrent"  public="true" static="true">
<description>
Get the current find pattern.
</description>
<return>
<type class="javax.baja.ui.text.FindPattern"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.setCurrent(javax.baja.ui.text.FindPattern) -->
<method name="setCurrent"  public="true" static="true">
<description>
Set the current find pattern.
</description>
<parameter name="pattern">
<type class="javax.baja.ui.text.FindPattern"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.query(javax.baja.ui.BWidget) -->
<method name="query"  public="true" static="true">
<description>
Query the user for a search pattern or return null if cancelled.
</description>
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.ui.text.FindPattern"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.findNext(java.lang.String, int) -->
<method name="findNext"  public="true">
<description>
Get the next index of the pattern in the specified &#xa; text, or return -1 if no more matches.
</description>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.findPrev(java.lang.String, int) -->
<method name="findPrev"  public="true">
<description>
Get the previous index of the pattern in the specified &#xa; text, or return -1 if no more matches.
</description>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.findNext(char[], int, int) -->
<method name="findNext"  public="true">
<description>
Get the next index of the pattern in the specified &#xa; text, or return -1 if no more matches.
</description>
<parameter name="buf">
<type class="char" dimension="1"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<parameter name="len">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.findPrev(char[], int, int) -->
<method name="findPrev"  public="true">
<description>
Get the previous index of the pattern in the specified &#xa; text, or return -1 if no more matches.
</description>
<parameter name="buf">
<type class="char" dimension="1"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<parameter name="len">
<type class="int"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.toString() -->
<method name="toString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.replace(java.lang.String, java.lang.String) -->
<method name="replace"  public="true">
<description>
For every occurance of a match with the specified text,&#xa; replace it with the replaceWith string.
</description>
<parameter name="text">
<type class="java.lang.String"/>
</parameter>
<parameter name="replaceWith">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.replace(char[], int, int, java.lang.String) -->
<method name="replace"  public="true">
<description>
For every occurance of a match with the specified text,&#xa; replace it with the replaceWith string.
</description>
<parameter name="buf">
<type class="char" dimension="1"/>
</parameter>
<parameter name="start">
<type class="int"/>
</parameter>
<parameter name="len">
<type class="int"/>
</parameter>
<parameter name="replaceWith">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.text.FindPattern.string -->
<field name="string"  public="true" final="true">
<type class="java.lang.String"/>
<description/>
</field>

<!-- javax.baja.ui.text.FindPattern.matchCase -->
<field name="matchCase"  public="true" final="true">
<type class="boolean"/>
<description/>
</field>

<!-- javax.baja.ui.text.FindPattern.matchWord -->
<field name="matchWord"  public="true" final="true">
<type class="boolean"/>
<description/>
</field>

<!-- javax.baja.ui.text.FindPattern.fromTop -->
<field name="fromTop"  public="true" final="true">
<type class="boolean"/>
<description/>
</field>

</class>
</bajadoc>
