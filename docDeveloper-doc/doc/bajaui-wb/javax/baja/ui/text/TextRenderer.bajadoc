<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.text.TextRenderer" name="TextRenderer" packageName="javax.baja.ui.text" public="true">
<description>
TextRenderer is used to paint the text document to &#xa; a BTextEditor&#x27;s graphics context.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">5 Aug 01</tag>
<tag name="@version">$Revision: 23$ $Date: 6/20/11 9:34:25 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.text.BTextEditor$TextSupport"/>
</extends>
<!-- javax.baja.ui.text.TextRenderer() -->
<constructor name="TextRenderer" public="true">
<description>
Constructor for default implementation of TextRenderer.
</description>
</constructor>

<!-- javax.baja.ui.text.TextRenderer(javax.baja.gx.BFont) -->
<constructor name="TextRenderer" public="true">
<parameter name="font">
<type class="javax.baja.gx.BFont"/>
</parameter>
<description>
Constructor with specified font.
</description>
</constructor>

<!-- javax.baja.ui.text.TextRenderer.getLineHeight() -->
<method name="getLineHeight"  public="true">
<description>
Get the fixed line height in pixels used for the &#xa; text widget.  All lines in a BTextEditor must use &#xa; this fixed height
</description>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getLineWidth(javax.baja.ui.text.Line) -->
<method name="getLineWidth"  public="true">
<description>
Calculate the total width of the specified line.
</description>
<parameter name="line">
<type class="javax.baja.ui.text.Line"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getLineWidth(javax.baja.ui.text.Line, int, int) -->
<method name="getLineWidth"  public="true">
<description/>
<parameter name="line">
<type class="javax.baja.ui.text.Line"/>
</parameter>
<parameter name="startChar">
<type class="int"/>
</parameter>
<parameter name="endChar">
<type class="int"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getColumnWidth(javax.baja.ui.text.Line, int) -->
<method name="getColumnWidth"  public="true">
<description>
Calculate the width of the specified column&#xa; on the given line.
</description>
<parameter name="line">
<type class="javax.baja.ui.text.Line"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.columnToX(javax.baja.ui.text.Line, int) -->
<method name="columnToX"  public="true">
<description>
Get the x coordinate of the column cell for &#xa; the specified line.
</description>
<parameter name="line">
<type class="javax.baja.ui.text.Line"/>
</parameter>
<parameter name="column">
<type class="int"/>
</parameter>
<return>
<type class="double"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.xToColumn(javax.baja.ui.text.Line, double) -->
<method name="xToColumn"  public="true">
<description>
Get the column index of the specified x &#xa; coordinate in the given line.
</description>
<parameter name="line">
<type class="javax.baja.ui.text.Line"/>
</parameter>
<parameter name="x">
<type class="double"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.paintBackground(javax.baja.gx.Graphics) -->
<method name="paintBackground"  public="true">
<description>
Paint the editor background.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.paintLine(javax.baja.gx.Graphics, javax.baja.ui.text.TextRenderer.LineInfo) -->
<method name="paintLine"  public="true">
<description>
Paint the specified line to the graphics context.  &#xa; The graphics context will be translated so that&#xa; the origin is the top left corner of the line.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="info">
<type class="javax.baja.ui.text.TextRenderer$LineInfo"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getSelectionForeground() -->
<method name="getSelectionForeground"  public="true">
<description>
Get the foreground used to paint selected text.
</description>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getSelectionBackground() -->
<method name="getSelectionBackground"  public="true">
<description>
Get the background used to paint selected text.
</description>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getBackground() -->
<method name="getBackground"  public="true">
<description>
Get the brush used to paint the background for paintBackground().
</description>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.getForeground(javax.baja.ui.text.Segment) -->
<method name="getForeground"  public="true">
<description>
Get the brush to paint the specified segment.
</description>
<parameter name="seg">
<type class="javax.baja.ui.text.Segment"/>
</parameter>
<return>
<type class="javax.baja.gx.BBrush"/>
</return>
</method>

<!-- javax.baja.ui.text.TextRenderer.paintCaret(javax.baja.gx.Graphics, javax.baja.ui.text.TextRenderer.LineInfo, int) -->
<method name="paintCaret"  public="true">
<description>
Paint the caret for the line positioned at the specified &#xa; column index.  The graphics context will be translated &#xa; so that the origin is the top left corner of the line.
</description>
<parameter name="g">
<type class="javax.baja.gx.Graphics"/>
</parameter>
<parameter name="lineInfo">
<type class="javax.baja.ui.text.TextRenderer$LineInfo"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
