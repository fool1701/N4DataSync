<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.text.Segment" name="Segment" packageName="javax.baja.ui.text" public="true">
<description>
Segment is a run of characters in a Line which is&#xa; rendered individually by a TextRenderer.  A Segment&#xa; doesn&#x27;t store any characters itself, but rather stores&#xa; a start index and length into a Line&#x27;s char[] buffer.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">6 Jul 01</tag>
<tag name="@version">$Revision: 5$ $Date: 9/30/01 7:07:29 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.ui.text.Segment(int, int, int) -->
<constructor name="Segment" public="true">
<parameter name="type">
<type class="int"/>
</parameter>
<parameter name="offset">
<type class="int"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<description>
Construct a new Segement with the specified type,&#xa; offset, and length.  The subType defaults to zero.
</description>
</constructor>

<!-- javax.baja.ui.text.Segment(int, int, int, int) -->
<constructor name="Segment" public="true">
<parameter name="type">
<type class="int"/>
</parameter>
<parameter name="modifiers">
<type class="int"/>
</parameter>
<parameter name="offset">
<type class="int"/>
</parameter>
<parameter name="length">
<type class="int"/>
</parameter>
<description>
Construct a new Segement with the specified type, &#xa; modifiers, offset, and length.
</description>
</constructor>

<!-- javax.baja.ui.text.Segment.isWhitespace() -->
<method name="isWhitespace"  public="true">
<description>
Return if this segment is a whitepace type.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isNewlineN() -->
<method name="isNewlineN"  public="true" final="true">
<description>
This is a NEWLINE segment that ends with a &#x22;\n&#x22;.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isNewlineR() -->
<method name="isNewlineR"  public="true" final="true">
<description>
This is a NEWLINE segment that ends with a &#x22;\r&#x22;.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isNewlineRN() -->
<method name="isNewlineRN"  public="true" final="true">
<description>
This is a NEWLINE segment that ends with a &#x22;\r\n&#x22;.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isWord() -->
<method name="isWord"  public="true" final="true">
<description>
Is this segment considered a word when it comes&#xa; to commands which are word based such as WordLeft,&#xa; WordRight, and DeleteWord.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isNonJavadoc() -->
<method name="isNonJavadoc"  public="true" final="true">
<description>
If the current segment is a multi-line comment start, &#xa; this flag indicates if it is not a Javadoc comment.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isInStringLiteral() -->
<method name="isInStringLiteral"  public="true" final="true">
<description>
Is this segment currently inside a string literal.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isInLineComment() -->
<method name="isInLineComment"  public="true" final="true">
<description>
Is this segment currently in a line comment.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isInMultiLineComment() -->
<method name="isInMultiLineComment"  public="true" final="true">
<description>
Is this segment currently in a multiline comment.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.isInNonJavadoc() -->
<method name="isInNonJavadoc"  public="true" final="true">
<description>
If this segment is inside a multi-line comment, &#xa; this returns if the start segment has the MOD_JAVADOC &#xa; modififer set.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.toString() -->
<method name="toString"  public="true">
<description>
To string.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.text.Segment.TEXT -->
<field name="TEXT"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.SPACES -->
<field name="SPACES"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.TAB -->
<field name="TAB"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.NEWLINE -->
<field name="NEWLINE"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.NUMBER_LITERAL -->
<field name="NUMBER_LITERAL"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.IDENTIFIER -->
<field name="IDENTIFIER"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.KEYWORD -->
<field name="KEYWORD"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.PREPROCESSOR -->
<field name="PREPROCESSOR"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.BRACKET -->
<field name="BRACKET"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.STRING_DELIMITER -->
<field name="STRING_DELIMITER"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.LINE_COMMENT -->
<field name="LINE_COMMENT"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MULTI_LINE_COMMENT_START -->
<field name="MULTI_LINE_COMMENT_START"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MULTI_LINE_COMMENT_END -->
<field name="MULTI_LINE_COMMENT_END"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_NEWLINE_N -->
<field name="MOD_NEWLINE_N"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_NEWLINE_R -->
<field name="MOD_NEWLINE_R"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_NEWLINE_RN -->
<field name="MOD_NEWLINE_RN"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_WORD -->
<field name="MOD_WORD"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_NON_JAVADOC -->
<field name="MOD_NON_JAVADOC"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_IN_STRING_LITERAL -->
<field name="MOD_IN_STRING_LITERAL"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_IN_LINE_COMMENT -->
<field name="MOD_IN_LINE_COMMENT"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_IN_MULTI_LINE_COMMENT -->
<field name="MOD_IN_MULTI_LINE_COMMENT"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.MOD_IN_NON_JAVADOC -->
<field name="MOD_IN_NON_JAVADOC"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.ui.text.Segment.type -->
<field name="type"  public="true" final="true">
<type class="int"/>
<description>
This is one of the predefined type code constants.
</description>
</field>

<!-- javax.baja.ui.text.Segment.modifiers -->
<field name="modifiers"  public="true">
<type class="int"/>
<description>
The modifiers allows the user to configure color coding &#xa; using a finer granuality than just type.  A good &#xa; example is using modifiers to distinguish between Java&#x27;s &#xa; &#x22;slash/star/star&#x22; multiline Javadoc comments and the &#xa; normal C &#x22;slash/star&#x22; comments.  Modifier constants&#xa; are defined as MOD_x.  Although this field is not&#xa; final, it should not be modified.
</description>
</field>

<!-- javax.baja.ui.text.Segment.offset -->
<field name="offset"  public="true" final="true">
<type class="int"/>
<description>
This is the zero based column index into the &#xa; Line&#x27;s char[] buffer.
</description>
</field>

<!-- javax.baja.ui.text.Segment.length -->
<field name="length"  public="true" final="true">
<type class="int"/>
<description>
This is the number of characters the segment &#xa; run emcompasses in the Line&#x27;s char[] buffer.
</description>
</field>

</class>
</bajadoc>
