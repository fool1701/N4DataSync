<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.text.TextSelection" name="TextSelection" packageName="javax.baja.ui.text" public="true">
<description>
TextSelection is used to store a BTextWidget&#x27;s selection.
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">5 Aug 01</tag>
<tag name="@version">$Revision: 6$ $Date: 3/28/05 10:32:36 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.text.BTextEditor$TextSupport"/>
</extends>
<!-- javax.baja.ui.text.TextSelection() -->
<constructor name="TextSelection" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.text.TextSelection.isEmpty() -->
<method name="isEmpty"  public="true">
<description>
Return true if there is no current selection.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.getAnchor() -->
<method name="getAnchor"  public="true">
<description>
Get the anchor position or null if no selection is &#xa; active.  The anchor position is the beginning of the &#xa; selection and &#x22;anchors&#x22; the selection as the cursor &#xa; is moved before and after the anchor position.  The &#xa; anchor position may be before or after the lead &#xa; position.
</description>
<return>
<type class="javax.baja.ui.text.Position"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.getLead() -->
<method name="getLead"  public="true">
<description>
Get the lead selection position or null if no&#xa; selection is active.  The lead is usually the last&#xa; position selection.  The lead may be before or&#xa; after the anchor.
</description>
<return>
<type class="javax.baja.ui.text.Position"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.getStart() -->
<method name="getStart"  public="true">
<description>
Get the selection start position, or null if no&#xa; selection is active.  The start position is &#xa; guaranteed to before the end position.
</description>
<return>
<type class="javax.baja.ui.text.Position"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.getEnd() -->
<method name="getEnd"  public="true">
<description>
Get the selection end position, or null if no&#xa; selection is active.  The end position is &#xa; guaranteed to be after the start position.
</description>
<return>
<type class="javax.baja.ui.text.Position"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.select(javax.baja.ui.text.Position, javax.baja.ui.text.Position) -->
<method name="select"  public="true">
<description>
Select the range of text between the two positions &#xa; inclusively.  The first position specified becomes &#xa; the new anchor and the second the new lead.  The&#xa; caret is automatically positioned at the lead.
</description>
<parameter name="anchor">
<type class="javax.baja.ui.text.Position"/>
</parameter>
<parameter name="lead">
<type class="javax.baja.ui.text.Position"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.selectAll() -->
<method name="selectAll"  public="true">
<description>
Select all the text and position the caret at&#xa; the document start.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.deselect() -->
<method name="deselect"  public="true">
<description>
Clear the current selection.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.text.TextSelection.updateEditor() -->
<method name="updateEditor"  public="true">
<description>
Update the editor with the new selection, and&#xa; fire the selectionModified event.
</description>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
