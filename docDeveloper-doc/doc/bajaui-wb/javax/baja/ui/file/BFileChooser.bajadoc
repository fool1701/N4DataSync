<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.file.BFileChooser" name="BFileChooser" packageName="javax.baja.ui.file" public="true" abstract="true">
<description>
FileChooser allows the user to browse a given&#xa; file system and select a file.
</description>
<tag name="@author">Andy Frank</tag>
<tag name="@creation">19 May 04</tag>
<tag name="@version">$Revision: 70$ $Date: 5/25/05 1:37:59 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.BDialog"/>
</extends>
<!-- javax.baja.ui.file.BFileChooser(javax.baja.ui.BWidget, java.lang.String) -->
<constructor name="BFileChooser" protected="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="title">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.ui.file.BFileChooser.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.showOpen(javax.baja.ui.BWidget) -->
<method name="showOpen"  public="true" static="true">
<description>
Make and show a FileChooser to open a file. Return&#xa; the file selected, or null if the dialog was cancelled.
</description>
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.showSave(javax.baja.ui.BWidget) -->
<method name="showSave"  public="true" static="true">
<description>
Make and show a FileChooser to save a file. Return&#xa; the file selected, or null if the dialog was cancelled.
</description>
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.makeOpen(javax.baja.ui.BWidget) -->
<method name="makeOpen"  public="true" static="true">
<description>
Make a FileChooser to open a file.
</description>
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.ui.file.BFileChooser"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.makeSave(javax.baja.ui.BWidget) -->
<method name="makeSave"  public="true" static="true">
<description>
Make a FileChooser to save a file.
</description>
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<return>
<type class="javax.baja.ui.file.BFileChooser"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.show() -->
<method name="show"  public="true">
<description>
Convience method for show(false) to return a single &#xa; result. Returns null if dialog was cancelled.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.show(boolean) -->
<method name="show"  public="true" abstract="true">
<description>
Display a new BFileChooser to open a file and return &#xa; the selected ords.  If no nodes were selected, or dialog &#xa; was cancelled, then return an empty array.
</description>
<parameter name="multipleSelection">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.getCurrentDirectory() -->
<method name="getCurrentDirectory"  public="true" abstract="true">
<description>
Get the current directory.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setCurrentDirectory(javax.baja.naming.BOrd) -->
<method name="setCurrentDirectory"  public="true" abstract="true">
<description>
Set the current directory. If ord points to a&#xa; file, change to the file&#x27;s directory and select the file.
</description>
<parameter name="dir">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setDefaultFileName(java.lang.String) -->
<method name="setDefaultFileName"  public="true" abstract="true">
<description>
Set the default filename to open/save.  The filename&#xa; cannot contain any path information - only the filename.
</description>
<parameter name="filename">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setCreateFileOnSave(boolean) -->
<method name="setCreateFileOnSave"  public="true" abstract="true">
<description>
Set whether or not BFileChooser creates the file&#xa; during a save operatoin.  Default is true.
</description>
<parameter name="create">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setConfirmOverwrite(boolean) -->
<method name="setConfirmOverwrite"  public="true" abstract="true">
<description>
Set whether or not BFileChooser should prompt the user&#xa; to confirm an overwrite, from choosing an existing file&#xa; during a save operation. Default is true.
</description>
<parameter name="confirm">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setUpdateFilenameExtensionFromFilter(boolean) -->
<method name="setUpdateFilenameExtensionFromFilter"  public="true">
<description>
For file save dialogs, sets whether the filename extension should be updated&#xa; to match the extension of the currently selected extension file filter.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="updateFilenameExtensionFromFilter">
<type class="boolean"/>
<description>
true if the filename extension should be updated
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.addFilter(javax.baja.file.IFileFilter) -->
<method name="addFilter"  public="true" abstract="true">
<description>
Add the specifed filter.
</description>
<parameter name="filter">
<type class="javax.baja.file.IFileFilter"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.addFilters(javax.baja.file.IFileFilter[]) -->
<method name="addFilters"  public="true" abstract="true">
<description>
Add the specified filters.
</description>
<parameter name="filters">
<type class="javax.baja.file.IFileFilter" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.clearFilters() -->
<method name="clearFilters"  public="true">
<description>
Remove all file filters.
</description>
<tag name="@since">Niagara 4.8</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.getSpaces() -->
<method name="getSpaces"  public="true" abstract="true">
<description>
Return the current list of FileSpaces.
</description>
<return>
<type class="javax.baja.space.BSpace" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.setSpaces(javax.baja.space.BSpace[]) -->
<method name="setSpaces"  public="true" abstract="true">
<description>
Set the list of avaiable FileSpaces.
</description>
<parameter name="spaces">
<type class="javax.baja.space.BSpace" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.file.BFileChooser.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
