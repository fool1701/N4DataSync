<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.file.ExtFileFilter" name="ExtFileFilter" packageName="javax.baja.ui.file" public="true">
<description>
ExtFileFilter filter files by extension.
</description>
<tag name="@author">Andy Frank on 29 Apr 03</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="javax.baja.file.IExtFileFilter"/>
</implements>
<!-- javax.baja.ui.file.ExtFileFilter(java.lang.String, java.lang.String) -->
<constructor name="ExtFileFilter" public="true">
<parameter name="desc">
<type class="java.lang.String"/>
<description>
The filter description
</description>
</parameter>
<parameter name="ext">
<type class="java.lang.String"/>
<description>
Comma-delimited list (no spaces) of allowed extensions.
</description>
</parameter>
<description>
Constructor. Example: ExtFileFilter(&#x22;Image files&#x22;, &#x22;gif,jpg,png,svg&#x22;)
</description>
</constructor>

<!-- javax.baja.ui.file.ExtFileFilter(java.lang.String, java.lang.String[]) -->
<constructor name="ExtFileFilter" public="true">
<parameter name="desc">
<type class="java.lang.String"/>
<description>
The filter description
</description>
</parameter>
<parameter name="ext">
<type class="java.lang.String" dimension="1"/>
<description>
An array of allowed extensions
</description>
</parameter>
<description>
Constructor. Example:&#xa; ExtFileFilter(&#x22;Image files&#x22;, new String[] { &#x22;gif&#x22;, &#x22;jpg&#x22;, &#x22;png&#x22;, &#x22;svg&#x22; });
</description>
</constructor>

<!-- javax.baja.ui.file.ExtFileFilter.getRegisteredImages() -->
<method name="getRegisteredImages"  public="true" static="true">
<description>
Supply a string of all the available image files that are registered in Niagara.
</description>
<tag name="@since">Niagara 4.10</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.file.ExtFileFilter.accept(javax.baja.file.BIFile) -->
<method name="accept"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Accept the specified BIFile.
</description>
<parameter name="file">
<type class="javax.baja.file.BIFile"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.file.ExtFileFilter.getDescription(javax.baja.sys.Context) -->
<method name="getDescription"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return the description of this filter.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.file.ExtFileFilter.acceptExtension(java.lang.String) -->
<method name="acceptExtension"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Check if the given extension is acceptable by this filter.
</description>
<tag name="@since">Niagara 4.8</tag>
<parameter name="extension">
<type class="java.lang.String"/>
<description>
the patch to check
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the extension is acceptable, false otherwise
</description>
</return>
</method>

<!-- javax.baja.ui.file.ExtFileFilter.getDefaultExtension() -->
<method name="getDefaultExtension"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
A single file filter can support multiple &#x22;valid&#x22; extensions (e.g. &#x22;.xls&#x22; / &#x22;.xlsx&#x22;).&#xa; This method returns the extension that is the &#x22;main&#x22; or default extension&#xa; for this file filter. This could be used to, for example, auto-fill a file extension&#xa; for a file when the filter is selected.
</description>
<tag name="@since">Niagara 4.8</tag>
<return>
<type class="java.lang.String"/>
<description>
the default extension for this filter, or null if there is no default extension
</description>
</return>
</method>

<!-- javax.baja.ui.file.ExtFileFilter.images -->
<field name="images"  public="true" static="true">
<type class="javax.baja.ui.file.ExtFileFilter"/>
<description>
Filter by Images.
</description>
</field>

</class>
</bajadoc>
