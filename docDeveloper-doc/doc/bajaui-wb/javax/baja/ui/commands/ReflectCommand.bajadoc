<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.commands.ReflectCommand" name="ReflectCommand" packageName="javax.baja.ui.commands" public="true">
<description>
ReflectCommand is a handy command implementation that&#xa; uses reflection to invoke a method on the command owner.&#xa; The method to invoke must take zero parameters.  If the&#xa; method returns an instance of CommandArtifact then it&#xa; is returned from doInvoke(), otherwise null is returned.&#xa;&#xa; &lt;pre&gt;&#xa;  BMyWidget()&#xa;  { &#xa;    add(null, new BButton(new ReflectCommand(this, &#x22;Press Me&#x22;, &#x22;doIt&#x22;));&#xa;  }&#xa;&#xa;  public void doIt() &#xa;  {&#xa;    System.out.println(&#x22;ok!&#x22;);&#xa;  }&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Brian Frank</tag>
<tag name="@creation">24 Apr 02</tag>
<tag name="@version">$Revision: 9$ $Date: 3/31/05 11:08:52 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.Command"/>
</extends>
<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, java.lang.String, javax.baja.gx.BImage, java.lang.String) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="label">
<type class="java.lang.String"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="method">
<type class="java.lang.String"/>
</parameter>
<description>
Invoke the specified method on the command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, java.lang.String, java.lang.String) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="label">
<type class="java.lang.String"/>
</parameter>
<parameter name="method">
<type class="java.lang.String"/>
</parameter>
<description>
Invoke the specified method on the command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, java.lang.String, java.lang.reflect.Method) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="label">
<type class="java.lang.String"/>
</parameter>
<parameter name="method">
<type class="java.lang.reflect.Method"/>
</parameter>
<description>
Invoke the specified method on command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, java.lang.String, javax.baja.gx.BImage, java.lang.reflect.Method) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="label">
<type class="java.lang.String"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.gx.BImage"/>
</parameter>
<parameter name="method">
<type class="java.lang.reflect.Method"/>
</parameter>
<description>
Invoke the specified method on command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, javax.baja.util.Lexicon, java.lang.String, java.lang.String) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="lexicon">
<type class="javax.baja.util.Lexicon"/>
</parameter>
<parameter name="keyBase">
<type class="java.lang.String"/>
</parameter>
<parameter name="method">
<type class="java.lang.String"/>
</parameter>
<description>
Invoke the specified method on command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand(javax.baja.ui.BWidget, javax.baja.util.Lexicon, java.lang.String, java.lang.reflect.Method) -->
<constructor name="ReflectCommand" public="true">
<parameter name="owner">
<type class="javax.baja.ui.BWidget"/>
</parameter>
<parameter name="lexicon">
<type class="javax.baja.util.Lexicon"/>
</parameter>
<parameter name="keyBase">
<type class="java.lang.String"/>
</parameter>
<parameter name="method">
<type class="java.lang.reflect.Method"/>
</parameter>
<description>
Invoke the specified method on command invoke.
</description>
</constructor>

<!-- javax.baja.ui.commands.ReflectCommand.doInvoke() -->
<method name="doInvoke"  public="true">
<description>
Invoke the action.
</description>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.ui.commands.ReflectCommand.method -->
<field name="method"  protected="true">
<type class="java.lang.reflect.Method"/>
<description>
The method to invoke on the owner
</description>
</field>

</class>
</bajadoc>
