<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.tree.TreeController" name="TreeController" packageName="javax.baja.ui.tree" public="true">
<description>
The TreeController manages input for the BTree.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@author">Mike Jarmy</tag>
<tag name="@creation">04 Dec 2001</tag>
<tag name="@version">$Revision: 27$ $Date: 10/24/07 11:24:48 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.tree.BTree$TreeSupport"/>
</extends>
<!-- javax.baja.ui.tree.TreeController() -->
<constructor name="TreeController" public="true">
<description/>
</constructor>

<!-- javax.baja.ui.tree.TreeController.isFocusTraversable() -->
<method name="isFocusTraversable"  public="true">
<description>
Return if the BTree is focus traversable.&#xa; Default returns true.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.focusGained(javax.baja.ui.event.BFocusEvent) -->
<method name="focusGained"  public="true">
<description>
Callback when focusLost() on BTree.  The default&#xa; implementation is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.focusLost(javax.baja.ui.event.BFocusEvent) -->
<method name="focusLost"  public="true">
<description>
Callback when focusLost() on BTree.  The default&#xa; implementation is to do nothing.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BFocusEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.expanded(javax.baja.ui.tree.TreeNode) -->
<method name="expanded"  public="true">
<description>
Handle an expansion of the specified node.
</description>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.collapsed(javax.baja.ui.tree.TreeNode) -->
<method name="collapsed"  public="true">
<description>
Handle the collapse of the specified node.
</description>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.getFocus() -->
<method name="getFocus"  public="true">
<description>
Get the node that currently has focus.
</description>
<return>
<type class="javax.baja.ui.tree.TreeNode"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.setFocus(javax.baja.ui.tree.TreeNode) -->
<method name="setFocus"  public="true">
<description>
Set the specified node to be the focused node in the tree.
</description>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseSelection(javax.baja.ui.tree.TreeNode, javax.baja.ui.event.BMouseEvent) -->
<method name="mouseSelection"  protected="true">
<description>
Handle a mouse selection.
</description>
<parameter name="target">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseWheel(javax.baja.ui.event.BMouseWheelEvent) -->
<method name="mouseWheel"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseWheelEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mousePressed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePressed"  public="true">
<description>
Handle a mouse press.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseReleased(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseReleased"  public="true">
<description>
Handle a mouse release.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseMoved(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseMoved"  public="true">
<description>
Handle a mouse move.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseEntered(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseEntered"  public="true">
<description>
Handle a mouse entry.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseExited(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseExited"  public="true">
<description>
Handle a mouse exit.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.nodeEntered(javax.baja.ui.tree.TreeNode) -->
<method name="nodeEntered"  protected="true">
<description>
Receive notification that the mouse has entered the&#xa; selection area of the specified tree node.
</description>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.nodeExited(javax.baja.ui.tree.TreeNode) -->
<method name="nodeExited"  protected="true">
<description>
Receive notification that the mouse has exited the&#xa; selection area of the specified tree node.
</description>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mouseDragged(javax.baja.ui.event.BMouseEvent) -->
<method name="mouseDragged"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.mousePulsed(javax.baja.ui.event.BMouseEvent) -->
<method name="mousePulsed"  public="true">
<description/>
<parameter name="evt">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.initFocus() -->
<method name="initFocus"  protected="true" final="true">
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.keyPressed(javax.baja.ui.event.BKeyEvent) -->
<method name="keyPressed"  public="true">
<description>
Handle a key press.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.keyReleased(javax.baja.ui.event.BKeyEvent) -->
<method name="keyReleased"  public="true">
<description>
Callback when keyReleased() on BTree.  The default&#xa; implementation is to process the Enter and Esc keys.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.keyTyped(javax.baja.ui.event.BKeyEvent) -->
<method name="keyTyped"  public="true">
<description>
Handle a typed key.  This is the combination of a key press&#xa; and a key release.
</description>
<parameter name="evt">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.handleEnter(javax.baja.ui.event.BKeyEvent) -->
<method name="handleEnter"  protected="true">
<description>
Default implementation is to fire actionPerformed.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.handleEscape(javax.baja.ui.event.BKeyEvent) -->
<method name="handleEscape"  protected="true">
<description>
Default implementation is to fire cancelled.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BKeyEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.nodeDoubleClicked(javax.baja.ui.event.BMouseEvent, javax.baja.ui.tree.TreeNode) -->
<method name="nodeDoubleClicked"  protected="true">
<description>
Handle a double click selection at the specified location&#xa; for the specified node.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.doSelectAction(javax.baja.ui.tree.TreeNode, double, double) -->
<method name="doSelectAction"  protected="true">
<description>
Handle a double click selection at the specified location&#xa; for the specified node.
</description>
<parameter name="target">
<type class="javax.baja.ui.tree.TreeNode"/>
<description>
The target node of the double click.  This will&#xa;   be null if the double click occurred in the tree background&#xa;   and not on a node.
</description>
</parameter>
<parameter name="x">
<type class="double"/>
<description>
The x location where the double click occurred in the&#xa;   bounds of the tree.
</description>
</parameter>
<parameter name="y">
<type class="double"/>
<description>
The y location where the double click occurred in the&#xa;   bounds of the tree.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.pulseViewport(double, double) -->
<method name="pulseViewport"  public="true">
<description>
If the tree is inside a ScrollPane then call&#xa; &lt;code&gt;BScrollPane.pulseViewport()&lt;/code&gt;
</description>
<parameter name="x">
<type class="double"/>
</parameter>
<parameter name="y">
<type class="double"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.popup(javax.baja.ui.event.BMouseEvent, javax.baja.ui.tree.TreeNode) -->
<method name="popup"  protected="true">
<description>
Callback when a mouse event triggers a popup menu.  The&#xa; node specifies the TreeNode the user clicked over, or&#xa; null if the user clicked over the background.  This method&#xa; routes to makePopup() and opens the popup.
</description>
<parameter name="event">
<type class="javax.baja.ui.event.BMouseEvent"/>
</parameter>
<parameter name="node">
<type class="javax.baja.ui.tree.TreeNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.tree.TreeController.makePopup(javax.baja.ui.tree.TreeSubject) -->
<method name="makePopup"  protected="true">
<description>
Make a popup menu for the specified subject&#xa; selection or return null to display no popup menu.
</description>
<parameter name="subject">
<type class="javax.baja.ui.tree.TreeSubject"/>
</parameter>
<return>
<type class="javax.baja.ui.BMenu"/>
</return>
</method>

</class>
</bajadoc>
