<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="bajaui" runtimeProfile="wb" qualifiedName="javax.baja.ui.treetable.WrapperTreeTableModel" name="WrapperTreeTableModel" packageName="javax.baja.ui.treetable" public="true" abstract="true">
<description>
A WrapperTableModel is a table model that wraps another table model.&#xa; It is commonly used to hide, reorder, or rename table columns.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">30 Oct 2003</tag>
<tag name="@version">$Revision: 3$ $Date: 6/28/11 8:35:58 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.ui.treetable.TreeTableModel"/>
</extends>
<!-- javax.baja.ui.treetable.WrapperTreeTableModel(javax.baja.ui.treetable.TreeTableModel) -->
<constructor name="WrapperTreeTableModel" protected="true">
<parameter name="root">
<type class="javax.baja.ui.treetable.TreeTableModel"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRootModel() -->
<method name="getRootModel"  public="true">
<description>
Get the model that is wrapped by this model.
</description>
<return>
<type class="javax.baja.ui.treetable.TreeTableModel"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.setTable(javax.baja.ui.table.BTable) -->
<method name="setTable"  public="true">
<description>
Set the table for this model.
</description>
<parameter name="table">
<type class="javax.baja.ui.table.BTable"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRowCount() -->
<method name="getRowCount"  public="true">
<description>
Get the number of rows in the model.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getColumnCount() -->
<method name="getColumnCount"  public="true">
<description>
Get the number of the columns in the model.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getColumnName(int) -->
<method name="getColumnName"  public="true">
<description>
Get the column name for the specified column index.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getValueAt(int, int) -->
<method name="getValueAt"  public="true">
<description>
Get the grid value for the specified row and column.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getColumnAlignment(int) -->
<method name="getColumnAlignment"  public="true">
<description>
Get the horizontal alignment to use for the &#xa; specified column index.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.ui.enums.BHalign"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getSubject(int) -->
<method name="getSubject"  public="true">
<description>
Get the subject value for the specified row.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRowIcon(int) -->
<method name="getRowIcon"  public="true">
<description>
Return the BImage to use for the specified row icon,&#xa; or null if icons are not supported.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getColumnNames() -->
<method name="getColumnNames"  public="true">
<description>
Get the column name for the specified column index.
</description>
<return>
<type class="java.lang.String" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRowValues(int) -->
<method name="getRowValues"  public="true">
<description>
Get the specified row as an array of Objects.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getColumnValues(int) -->
<method name="getColumnValues"  public="true">
<description>
Get the specified column as an array of Objects.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRootCount() -->
<method name="getRootCount"  public="true">
<description>
Get the number of root nodes in the table.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.getRoot(int) -->
<method name="getRoot"  public="true">
<description>
Get the specified root node.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.ui.treetable.TreeTableNode"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.updateTable() -->
<method name="updateTable"  public="true">
<description>
This method should be called when the table model&#xa; has been modified, and the table requires an update.&#xa; It automatically fires a tableModified event.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.updateTable(boolean) -->
<method name="updateTable"  public="true">
<description>
This method should be called when the table model&#xa; has been modified, and the table requires an update.&#xa; It automatically fires a tableModified event.
</description>
<parameter name="resizeColumns">
<type class="boolean"/>
<description>
Indicates whether the update requires&#xa;   the columns to be resized.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.export() -->
<method name="export"  public="true">
<description>
Export this table model into a BITable.
</description>
<return>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.export(int, int) -->
<method name="export"  public="true">
<description>
Export a cell as a BObject value.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.isColumnSortable(int) -->
<method name="isColumnSortable"  public="true">
<description>
Return true if the specified column is sortable.&#xa; The default is to return false.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.sortByColumn(int, boolean) -->
<method name="sortByColumn"  public="true">
<description>
When this method is called, the model should sort &#xa; its rows based on the specified column index. The &#xa; ascending parameter is true if the column should be &#xa; sorted ascending (least to greatest), or false if &#xa; a descending sort should be used.  The default &#xa; implementation is to throw UnsupportedOperationException.
</description>
<parameter name="col">
<type class="int"/>
</parameter>
<parameter name="ascending">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.rowToNode(int) -->
<method name="rowToNode"  public="true">
<description>
Map a row index into a TreeTableNode instance.
</description>
<parameter name="row">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.ui.treetable.TreeTableNode"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.nodeToRow(javax.baja.ui.treetable.TreeTableNode) -->
<method name="nodeToRow"  public="true">
<description>
Map a TreeTableNode into a row index or -1 if &#xa; not currently expanded as a row in the table.
</description>
<parameter name="node">
<type class="javax.baja.ui.treetable.TreeTableNode"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.isNodeVisibleRow(javax.baja.ui.treetable.TreeTableNode) -->
<method name="isNodeVisibleRow"  public="true">
<description>
Return if the TreeTableNode is currently a &#xa; visible row in the table.
</description>
<parameter name="node">
<type class="javax.baja.ui.treetable.TreeTableNode"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.isDepthExpandable(int) -->
<method name="isDepthExpandable"  public="true">
<description>
Return if the specified depth is expandable.  If true then &#xa; the renderer will always leave space for an expansion button &#xa; for nodes at the specified depth.  Default returns true&#xa; assuming that all depths of the table are expandable.
</description>
<parameter name="depth">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.ui.treetable.WrapperTreeTableModel.updateTreeTable(boolean) -->
<method name="updateTreeTable"  public="true">
<description>
Update the node to row mapping either becauses &#xa; rows have been added or nodes have been collapsed&#xa; or expanded.
</description>
<parameter name="resizeColumns">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
