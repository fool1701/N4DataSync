<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.BLevelElem" name="BLevelElem" packageName="javax.baja.hierarchy" public="true">
<description>
BLevelElem is the neql query result element.&#xa; It is used to capture the target component and Hierarchy navigation info.&#xa; &lt;p&gt;&#xa; Please note, any changes to this class should also be reflected in the BajaScript&#xa; version (hierarchy-ux/rc/bs/LevelElem.js).&#xa; &lt;/p&gt;
</description>
<tag name="@author">Andy Saunders</tag>
<tag name="@creation">1 July 2013</tag>
<tag name="@since">Baja 4.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<parameterizedType class="java.lang.Comparable">
<args>
<type class="java.lang.Object"/>
</args>
</parameterizedType>
</implements>
<implements>
<type class="javax.baja.nav.BINavContainer"/>
</implements>
<implements>
<type class="javax.baja.nav.BIIndirectNavNode"/>
</implements>
<property name="elemName" flags="">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;elemName&lt;/code&gt; property.
</description>
<tag name="@see">#getElemName</tag>
<tag name="@see">#setElemName</tag>
</property>

<property name="elemIcon" flags="">
<type class="javax.baja.sys.BIcon"/>
<description>
Slot for the &lt;code&gt;elemIcon&lt;/code&gt; property.
</description>
<tag name="@see">#getElemIcon</tag>
<tag name="@see">#setElemIcon</tag>
</property>

<property name="contextParams" flags="hr">
<type class="javax.baja.sys.BFacets"/>
<description>
Slot for the &lt;code&gt;contextParams&lt;/code&gt; property.&#xa; For remote calls to getElements(), contextParams must always contain:&#xa; BLevelDef.ENTITY_ORD&#xa; BLevelDef.LEVEL_DEF_PATH&#xa; BLevelDef.CHILD_PREDICATE
</description>
<tag name="@see">#getContextParams</tag>
<tag name="@see">#setContextParams</tag>
</property>

<property name="elemTags" flags="hr">
<type class="javax.baja.sys.BFacets"/>
<description>
Slot for the &lt;code&gt;elemTags&lt;/code&gt; property.
</description>
<tag name="@see">#getElemTags</tag>
<tag name="@see">#setElemTags</tag>
</property>

<!-- javax.baja.hierarchy.BLevelElem() -->
<constructor name="BLevelElem" public="true">
<description/>
</constructor>

<!-- javax.baja.hierarchy.BLevelElem(javax.baja.hierarchy.BLevelDef, javax.baja.hierarchy.BLevelElem, java.lang.String, javax.baja.sys.BIcon, javax.baja.sys.BFacets) -->
<constructor name="BLevelElem" public="true">
<parameter name="levelDef">
<type class="javax.baja.hierarchy.BLevelDef"/>
</parameter>
<parameter name="parent">
<type class="javax.baja.hierarchy.BLevelElem"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.sys.BIcon"/>
</parameter>
<parameter name="contextParams">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.BLevelElem(javax.baja.hierarchy.BLevelDef, javax.baja.hierarchy.BLevelElem, java.lang.String, javax.baja.sys.BIcon, javax.baja.sys.BFacets, javax.baja.sys.BFacets) -->
<constructor name="BLevelElem" public="true">
<parameter name="levelDef">
<type class="javax.baja.hierarchy.BLevelDef"/>
</parameter>
<parameter name="parent">
<type class="javax.baja.hierarchy.BLevelElem"/>
</parameter>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="icon">
<type class="javax.baja.sys.BIcon"/>
</parameter>
<parameter name="contextParams">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<parameter name="elemTags">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.BLevelElem.getElemName() -->
<method name="getElemName"  public="true">
<description>
Get the &lt;code&gt;elemName&lt;/code&gt; property.
</description>
<tag name="@see">#elemName</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.setElemName(java.lang.String) -->
<method name="setElemName"  public="true">
<description>
Set the &lt;code&gt;elemName&lt;/code&gt; property.
</description>
<tag name="@see">#elemName</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getElemIcon() -->
<method name="getElemIcon"  public="true">
<description>
Get the &lt;code&gt;elemIcon&lt;/code&gt; property.
</description>
<tag name="@see">#elemIcon</tag>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.setElemIcon(javax.baja.sys.BIcon) -->
<method name="setElemIcon"  public="true">
<description>
Set the &lt;code&gt;elemIcon&lt;/code&gt; property.
</description>
<tag name="@see">#elemIcon</tag>
<parameter name="v">
<type class="javax.baja.sys.BIcon"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getContextParams() -->
<method name="getContextParams"  public="true">
<description>
Get the &lt;code&gt;contextParams&lt;/code&gt; property.&#xa; For remote calls to getElements(), contextParams must always contain:&#xa; BLevelDef.ENTITY_ORD&#xa; BLevelDef.LEVEL_DEF_PATH&#xa; BLevelDef.CHILD_PREDICATE
</description>
<tag name="@see">#contextParams</tag>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.setContextParams(javax.baja.sys.BFacets) -->
<method name="setContextParams"  public="true">
<description>
Set the &lt;code&gt;contextParams&lt;/code&gt; property.&#xa; For remote calls to getElements(), contextParams must always contain:&#xa; BLevelDef.ENTITY_ORD&#xa; BLevelDef.LEVEL_DEF_PATH&#xa; BLevelDef.CHILD_PREDICATE
</description>
<tag name="@see">#contextParams</tag>
<parameter name="v">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getElemTags() -->
<method name="getElemTags"  public="true">
<description>
Get the &lt;code&gt;elemTags&lt;/code&gt; property.
</description>
<tag name="@see">#elemTags</tag>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.setElemTags(javax.baja.sys.BFacets) -->
<method name="setElemTags"  public="true">
<description>
Set the &lt;code&gt;elemTags&lt;/code&gt; property.
</description>
<tag name="@see">#elemTags</tag>
<parameter name="v">
<type class="javax.baja.sys.BFacets"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getLevelDef() -->
<method name="getLevelDef"  protected="true">
<description>
Server side only.
</description>
<return>
<type class="javax.baja.hierarchy.BLevelDef"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.setHierarchySpace(javax.baja.hierarchy.BHierarchySpace) -->
<method name="setHierarchySpace"  public="true">
<description/>
<parameter name="space">
<type class="javax.baja.hierarchy.BHierarchySpace"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getHierarchySpace() -->
<method name="getHierarchySpace"  public="true">
<description/>
<return>
<type class="javax.baja.hierarchy.BHierarchySpace"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavChildren() -->
<method name="getNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.nav.BINavNode" dimension="1"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavName() -->
<method name="getNavName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavDisplayName(javax.baja.sys.Context) -->
<method name="getNavDisplayName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavChild(java.lang.String) -->
<method name="getNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="navName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.resolveNavChild(java.lang.String) -->
<method name="resolveNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="navName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.hasNavChildren() -->
<method name="hasNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavIcon() -->
<method name="getNavIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getHost() -->
<method name="getHost"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.naming.BHost"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getSession() -->
<method name="getSession"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.naming.BISession"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavOrd() -->
<method name="getNavOrd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
<description>
the &lt;code&gt;hierarchyOrd&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getTargetOrd() -->
<method name="getTargetOrd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getChildPredicate() -->
<method name="getChildPredicate"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
<description>
the neql predicate used to create this LevelElem.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getLevelDefPath() -->
<method name="getLevelDefPath"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
<description>
the path in the HierarchyService to the BLevelDef that created this BLevelElem.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getEntityOrd() -->
<method name="getEntityOrd"  public="true">
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
<description>
return the entity ord if this BLevelElem points to an Entity, otherwise returns BOrd.NULL.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getHierarchyOrd() -->
<method name="getHierarchyOrd"  public="true">
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
<description>
the hierarchy ord that resolves to this BLevelElem.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getTargetComponent() -->
<method name="getTargetComponent"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BComponent"/>
<description>
the targetComponent if the &lt;code&gt;getEntityOrd()&lt;/code&gt; resolves to a BComponent, otherwise returns null.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.compareTo(java.lang.Object) -->
<method name="compareTo"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Comparison based on NavDisplayName.
</description>
<parameter name="other">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the list of agents for this BObject.  The&#xa; default implementation of this method returns&#xa; &lt;code&gt;Registry.getAgents()&lt;/code&gt;
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavDescription(javax.baja.sys.Context) -->
<method name="getNavDescription"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.getNavParent() -->
<method name="getNavParent"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;getParent()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.tags() -->
<method name="tags"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.tag.Tags"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.spyTags(javax.baja.spy.SpyWriter) -->
<method name="spyTags"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.addNavChild(javax.baja.nav.BINavNode) -->
<method name="addNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Not implemented  to support NavContainer viewing, but not editing
</description>
<parameter name="child">
<type class="javax.baja.nav.BINavNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.removeNavChild(javax.baja.nav.BINavNode) -->
<method name="removeNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Not implemented  to support NavContainer viewing, but not editing
</description>
<parameter name="child">
<type class="javax.baja.nav.BINavNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.reorderNavChildren(javax.baja.nav.BINavNode[]) -->
<method name="reorderNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Not implemented  to support NavContainer viewing, but not editing
</description>
<parameter name="children">
<type class="javax.baja.nav.BINavNode" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4</tag>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.hierarchy.BLevelElem.elemName -->
<field name="elemName"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;elemName&lt;/code&gt; property.
</description>
<tag name="@see">#getElemName</tag>
<tag name="@see">#setElemName</tag>
</field>

<!-- javax.baja.hierarchy.BLevelElem.elemIcon -->
<field name="elemIcon"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;elemIcon&lt;/code&gt; property.
</description>
<tag name="@see">#getElemIcon</tag>
<tag name="@see">#setElemIcon</tag>
</field>

<!-- javax.baja.hierarchy.BLevelElem.contextParams -->
<field name="contextParams"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;contextParams&lt;/code&gt; property.&#xa; For remote calls to getElements(), contextParams must always contain:&#xa; BLevelDef.ENTITY_ORD&#xa; BLevelDef.LEVEL_DEF_PATH&#xa; BLevelDef.CHILD_PREDICATE
</description>
<tag name="@see">#getContextParams</tag>
<tag name="@see">#setContextParams</tag>
</field>

<!-- javax.baja.hierarchy.BLevelElem.elemTags -->
<field name="elemTags"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;elemTags&lt;/code&gt; property.
</description>
<tag name="@see">#getElemTags</tag>
<tag name="@see">#setElemTags</tag>
</field>

<!-- javax.baja.hierarchy.BLevelElem.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.hierarchy.BLevelElem.parent -->
<field name="parent"  protected="true">
<type class="javax.baja.hierarchy.BLevelElem"/>
<description/>
</field>

</class>
</bajadoc>
