<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.BHierarchyScope" name="BHierarchyScope" packageName="javax.baja.hierarchy" public="true">
<description>
BHierarchyScope defines a space that a hierarchy is built against.
</description>
<tag name="@author">Blake Puhak</tag>
<tag name="@creation">31 March 2014</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<property name="scopeOrd" flags="">
<type class="javax.baja.naming.BOrd"/>
<description>
Slot for the &lt;code&gt;scopeOrd&lt;/code&gt; property.
</description>
<tag name="@see">#getScopeOrd</tag>
<tag name="@see">#setScopeOrd</tag>
</property>

<!-- javax.baja.hierarchy.BHierarchyScope() -->
<constructor name="BHierarchyScope" public="true">
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchyScope(javax.baja.naming.BOrd) -->
<constructor name="BHierarchyScope" public="true">
<parameter name="scopeOrd">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchyScope.getScopeOrd() -->
<method name="getScopeOrd"  public="true">
<description>
Get the &lt;code&gt;scopeOrd&lt;/code&gt; property.
</description>
<tag name="@see">#scopeOrd</tag>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScope.setScopeOrd(javax.baja.naming.BOrd) -->
<method name="setScopeOrd"  public="true">
<description>
Set the &lt;code&gt;scopeOrd&lt;/code&gt; property.
</description>
<tag name="@see">#scopeOrd</tag>
<parameter name="v">
<type class="javax.baja.naming.BOrd"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScope.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScope.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScope.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
A Hierarchy can have only have BLevelDef children.
</description>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScope.scopeOrd -->
<field name="scopeOrd"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;scopeOrd&lt;/code&gt; property.
</description>
<tag name="@see">#getScopeOrd</tag>
<tag name="@see">#setScopeOrd</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchyScope.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
