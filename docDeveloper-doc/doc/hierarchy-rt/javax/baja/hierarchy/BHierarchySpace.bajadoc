<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.BHierarchySpace" name="BHierarchySpace" packageName="javax.baja.hierarchy" public="true">
<description>
BHierarchySpace is the space that manages access to hierarchies defined by the HierarchyService.&#xa; &lt;p&gt;&#xa; Please note, any changes to this class should also be reflected in the BajaScript&#xa; version (hierarchy-ux/rc/bs/HierarchySpace.js).&#xa; &lt;/p&gt;
</description>
<tag name="@author">Andrew Saunders</tag>
<tag name="@creation">12 Aug 2013</tag>
<tag name="@since">Baja 4.0</tag>
<extends>
<type class="javax.baja.space.BSpace"/>
</extends>
<!-- javax.baja.hierarchy.BHierarchySpace() -->
<constructor name="BHierarchySpace" public="true">
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchySpace(javax.baja.hierarchy.BHierarchyService) -->
<constructor name="BHierarchySpace" public="true">
<parameter name="hService">
<type class="javax.baja.hierarchy.BHierarchyService"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchySpace(java.lang.String, javax.baja.util.LexiconText) -->
<constructor name="BHierarchySpace" public="true">
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="lexText">
<type class="javax.baja.util.LexiconText"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchySpace.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.hasNavChildren() -->
<method name="hasNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Children are lazily loaded so always return true.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.getNavChild(java.lang.String) -->
<method name="getNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.resolveNavChild(java.lang.String) -->
<method name="resolveNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Resolve the nav child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.getNavChildren() -->
<method name="getNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get all of the nav children.
</description>
<return>
<type class="javax.baja.nav.BINavNode" dimension="1"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.getOrdInSession() -->
<method name="getOrdInSession"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
The ord in the session is always &#x22;hierarchy:&#x22;.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the list of agents for this BObject.  The default implementation of this method returns&#xa; &lt;code&gt;Registry.getAgents()&lt;/code&gt;
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Dump spy info.
</description>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hierarchy.BHierarchySpace.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
