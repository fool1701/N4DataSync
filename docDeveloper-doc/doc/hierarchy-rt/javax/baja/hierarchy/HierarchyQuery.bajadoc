<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.HierarchyQuery" name="HierarchyQuery" packageName="javax.baja.hierarchy" public="true">
<description>
A HierarchyQuery is the OrdQuery for hierarchies.  The grammar for the body is:&#xa;&#xa; &lt;pre&gt;&#xa;   hierarchypath  := absolute | relative&#xa;   absolute  := &#x22;/&#x22; path&#xa;   relative  := backup | path&#xa;   backup    := ( &#x22;../&#x22; )* path&#xa;   path      := name [ &#x22;/&#x22; path]&#xa;   name      := nameStart (namePart)*&#xa;&#xa;   nameStart  := alpha | escape&#xa;   namePart   := alpha | digit | safe | escape&#xa;   safe       := &#x22;_&#x22;&#xa;   alpha      := &#x22;a&#x22;-&#x22;z&#x22; | &#x22;A-Z&#x22;&#xa;   digit      := &#x22;0&#x22;-&#x22;9&#x22;&#xa;   escape     := asciiEsc | unicodeEsc&#xa;   asciiEsc   := &#x22;$&#x22; hex hex&#xa;   unicodeEsc := &#x22;$u&#x22; hex hex hex hex&#xa;   hex        := &#x27;a&#x27;-&#x27;f&#x27; | &#x27;A&#x27;-&#x27;F&#x27; | digit&#xa; &lt;/pre&gt;
</description>
<tag name="@author">Andrew Saunders</tag>
<tag name="@creation">19 Aug 13</tag>
<tag name="@since">Baja 4.0</tag>
<extends>
<type class="javax.baja.naming.SlotPath"/>
</extends>
<!-- javax.baja.hierarchy.HierarchyQuery(java.lang.String, java.lang.String) -->
<constructor name="HierarchyQuery" public="true">
<parameter name="scheme">
<type class="java.lang.String"/>
</parameter>
<parameter name="body">
<type class="java.lang.String"/>
</parameter>
<throws>
<type class="javax.baja.naming.SyntaxException"/>
</throws>
<description/>
</constructor>

<!-- javax.baja.hierarchy.HierarchyQuery(java.lang.String) -->
<constructor name="HierarchyQuery" public="true">
<parameter name="body">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.hierarchy.HierarchyQuery.makeSlotPath(java.lang.String, java.lang.String) -->
<method name="makeSlotPath"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="scheme">
<type class="java.lang.String"/>
</parameter>
<parameter name="body">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.naming.SlotPath"/>
</return>
</method>

<!-- javax.baja.hierarchy.HierarchyQuery.makePath(java.lang.String) -->
<method name="makePath"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.3U1</tag>
<parameter name="body">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.naming.OrdQuery"/>
</return>
</method>

<!-- javax.baja.hierarchy.HierarchyQuery.normalize(javax.baja.naming.OrdQueryList, int) -->
<method name="normalize"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="list">
<type class="javax.baja.naming.OrdQueryList"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
