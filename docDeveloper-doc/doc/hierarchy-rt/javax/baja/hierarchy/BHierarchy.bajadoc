<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.BHierarchy" name="BHierarchy" packageName="javax.baja.hierarchy" public="true" final="true">
<description>
BHierarchy defines a navigational hierarchy.
</description>
<tag name="@author">Blake Puhak</tag>
<tag name="@creation">4 Mar 2014</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.hierarchy.BLevelDef"/>
</extends>
<property name="status" flags="trsd">
<type class="javax.baja.status.BStatus"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; Status of the hierarchy. This property should never be set directly.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</property>

<property name="faultCause" flags="trd">
<type class="java.lang.String"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message regarding why the hierarchy is in fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</property>

<property name="scope" flags="">
<type class="javax.baja.hierarchy.BHierarchyScopeContainer"/>
<description>
Slot for the &lt;code&gt;scope&lt;/code&gt; property.&#xa; The list of scopes to build this hierarchy against.
</description>
<tag name="@see">#getScope</tag>
<tag name="@see">#setScope</tag>
</property>

<property name="tags" flags="">
<type class="javax.baja.hierarchy.BHierarchyTags"/>
<description>
Slot for the &lt;code&gt;tags&lt;/code&gt; property.&#xa; Tags on the hierarchy itself.
</description>
<tag name="@see">#getTags</tag>
<tag name="@see">#setTags</tag>
</property>

<property name="cacheStatus" flags="trd">
<type class="com.tridium.hierarchy.BHierarchyCacheStatus"/>
<description>
Slot for the &lt;code&gt;cacheStatus&lt;/code&gt; property.&#xa; State of the cache of the hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheStatus</tag>
<tag name="@see">#setCacheStatus</tag>
</property>

<property name="cacheCreationTime" flags="trd">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;cacheCreationTime&lt;/code&gt; property.&#xa; Date/time when the current cache was created.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheCreationTime</tag>
<tag name="@see">#setCacheCreationTime</tag>
</property>

<property name="cacheOnStationStarted" flags="d">
<type class="boolean"/>
<description>
Slot for the &lt;code&gt;cacheOnStationStarted&lt;/code&gt; property.&#xa; Cache this hierarchy once the station is started (see stationStarted()).
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheOnStationStarted</tag>
<tag name="@see">#setCacheOnStationStarted</tag>
</property>

<action name="createCache" flags="">
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
<description>
Slot for the &lt;code&gt;createCache&lt;/code&gt; action.&#xa; Creates or replaces the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#createCache()</tag>
</action>

<action name="clearCache" flags="">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;clearCache&lt;/code&gt; action.&#xa; Clears the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#clearCache()</tag>
</action>

<!-- javax.baja.hierarchy.BHierarchy() -->
<constructor name="BHierarchy" public="true">
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchy.getStatus() -->
<method name="getStatus"  public="true">
<description>
Get the &lt;code&gt;status&lt;/code&gt; property.&#xa; Status of the hierarchy. This property should never be set directly.
</description>
<tag name="@see">#status</tag>
<return>
<type class="javax.baja.status.BStatus"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setStatus(javax.baja.status.BStatus) -->
<method name="setStatus"  public="true">
<description>
Set the &lt;code&gt;status&lt;/code&gt; property.&#xa; Status of the hierarchy. This property should never be set directly.
</description>
<tag name="@see">#status</tag>
<parameter name="v">
<type class="javax.baja.status.BStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getFaultCause() -->
<method name="getFaultCause"  public="true">
<description>
Get the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message regarding why the hierarchy is in fault.
</description>
<tag name="@see">#faultCause</tag>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setFaultCause(java.lang.String) -->
<method name="setFaultCause"  public="true">
<description>
Set the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message regarding why the hierarchy is in fault.
</description>
<tag name="@see">#faultCause</tag>
<parameter name="v">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getScope() -->
<method name="getScope"  public="true">
<description>
Get the &lt;code&gt;scope&lt;/code&gt; property.&#xa; The list of scopes to build this hierarchy against.
</description>
<tag name="@see">#scope</tag>
<return>
<type class="javax.baja.hierarchy.BHierarchyScopeContainer"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setScope(javax.baja.hierarchy.BHierarchyScopeContainer) -->
<method name="setScope"  public="true">
<description>
Set the &lt;code&gt;scope&lt;/code&gt; property.&#xa; The list of scopes to build this hierarchy against.
</description>
<tag name="@see">#scope</tag>
<parameter name="v">
<type class="javax.baja.hierarchy.BHierarchyScopeContainer"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getTags() -->
<method name="getTags"  public="true">
<description>
Get the &lt;code&gt;tags&lt;/code&gt; property.&#xa; Tags on the hierarchy itself.
</description>
<tag name="@see">#tags</tag>
<return>
<type class="javax.baja.hierarchy.BHierarchyTags"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setTags(javax.baja.hierarchy.BHierarchyTags) -->
<method name="setTags"  public="true">
<description>
Set the &lt;code&gt;tags&lt;/code&gt; property.&#xa; Tags on the hierarchy itself.
</description>
<tag name="@see">#tags</tag>
<parameter name="v">
<type class="javax.baja.hierarchy.BHierarchyTags"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getCacheStatus() -->
<method name="getCacheStatus"  public="true">
<description>
Get the &lt;code&gt;cacheStatus&lt;/code&gt; property.&#xa; State of the cache of the hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheStatus</tag>
<return>
<type class="com.tridium.hierarchy.BHierarchyCacheStatus"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setCacheStatus(com.tridium.hierarchy.BHierarchyCacheStatus) -->
<method name="setCacheStatus"  public="true">
<description>
Set the &lt;code&gt;cacheStatus&lt;/code&gt; property.&#xa; State of the cache of the hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheStatus</tag>
<parameter name="v">
<type class="com.tridium.hierarchy.BHierarchyCacheStatus"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getCacheCreationTime() -->
<method name="getCacheCreationTime"  public="true">
<description>
Get the &lt;code&gt;cacheCreationTime&lt;/code&gt; property.&#xa; Date/time when the current cache was created.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheCreationTime</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setCacheCreationTime(javax.baja.sys.BAbsTime) -->
<method name="setCacheCreationTime"  public="true">
<description>
Set the &lt;code&gt;cacheCreationTime&lt;/code&gt; property.&#xa; Date/time when the current cache was created.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheCreationTime</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getCacheOnStationStarted() -->
<method name="getCacheOnStationStarted"  public="true">
<description>
Get the &lt;code&gt;cacheOnStationStarted&lt;/code&gt; property.&#xa; Cache this hierarchy once the station is started (see stationStarted()).
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheOnStationStarted</tag>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.setCacheOnStationStarted(boolean) -->
<method name="setCacheOnStationStarted"  public="true">
<description>
Set the &lt;code&gt;cacheOnStationStarted&lt;/code&gt; property.&#xa; Cache this hierarchy once the station is started (see stationStarted()).
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#cacheOnStationStarted</tag>
<parameter name="v">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.createCache() -->
<method name="createCache"  public="true">
<description>
Invoke the &lt;code&gt;createCache&lt;/code&gt; action.&#xa; Creates or replaces the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#createCache</tag>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.clearCache() -->
<method name="clearCache"  public="true">
<description>
Invoke the &lt;code&gt;clearCache&lt;/code&gt; action.&#xa; Clears the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#clearCache</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.started() -->
<method name="started"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called when a component&#x27;s running state moves to true. Components are started top-down:&#xa; children after their parent.&#xa;&#xa; &lt;p&gt;For a hierarchy component, the license requirements are checked.&lt;/p&gt;
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.stationStarted() -->
<method name="stationStarted"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Cache the hierarchy once the station is started if &lt;code&gt;<see ref="javax.baja.hierarchy.BHierarchy#cacheOnStationStarted">#cacheOnStationStarted</see>&lt;/code&gt; is set and&#xa; the system property named &#x22;niagara.hierarchy.caching.disableOnStationStarted&#x22; is not set.
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hierarchy.BHierarchy.updateStatus(javax.baja.hierarchy.BHierarchyService) -->
<method name="updateStatus"  public="true">
<description>
Recompute the &lt;code&gt;<see ref="javax.baja.hierarchy.BHierarchy#status">#status</see>&lt;/code&gt; property.
</description>
<parameter name="service">
<type class="javax.baja.hierarchy.BHierarchyService"/>
<description>
hierarchy service to which this hierarchy belongs
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.isOperational() -->
<method name="isOperational"  public="true">
<description>
Tests that the hierarchy is neither disabled nor in fault.
</description>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if neither disabled nor in fault; &lt;code&gt;false&lt;/code&gt; otherwise
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Tests whether the specified parent is a legal parent for this component. This method is called&#xa; during an &lt;code&gt;add()&lt;/code&gt; method.&#xa;&#xa; &lt;p&gt;For a hierarchy, the only legal parent is a hierarchy service.&lt;/p&gt;
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
<description>
component to which this component is being added
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the parent is an instance of &lt;code&gt;<see ref="javax.baja.hierarchy.BHierarchyService">BHierarchyService</see>&lt;/code&gt;; &lt;code&gt;false&lt;/code&gt;&#xa; otherwise
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Tests that the specified child is a legal child component for this component. This method is&#xa; called during an &lt;code&gt;add()&lt;/code&gt; method.&#xa;&#xa; &lt;p&gt;For a hierarchy, legal children are either level definitions are a hierarchy scope&#xa; container.&lt;/p&gt;
</description>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
<description>
component being added to this component
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
&lt;code&gt;true&lt;/code&gt; if the child is an instance of &lt;code&gt;<see ref="javax.baja.hierarchy.BLevelDef">BLevelDef</see>&lt;/code&gt; or&#xa; &lt;code&gt;<see ref="javax.baja.hierarchy.BHierarchyScopeContainer">BHierarchyScopeContainer</see>&lt;/code&gt; ; &lt;code&gt;false&lt;/code&gt;&#xa; otherwise
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getElements(javax.baja.hierarchy.BLevelElem, javax.baja.sys.Context) -->
<method name="getElements"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return an array that contains only a root level element for the hierarchy.
</description>
<parameter name="parentElem">
<type class="javax.baja.hierarchy.BLevelElem"/>
<description>
not used
</description>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
<description>
execution context; its user is not used for getting permissions that determine&#xa; which elements to return
</description>
</parameter>
<return>
<type class="javax.baja.hierarchy.BLevelElem" dimension="1"/>
<description>
array with a single level element representing the root of the hierarchy
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getHierarchy() -->
<method name="getHierarchy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Returns the hierarchy that this hierarchy belongs to: itself.
</description>
<return>
<type class="javax.baja.hierarchy.BHierarchy"/>
<description>
this hierarchy
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getPrevious() -->
<method name="getPrevious"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;null&lt;/code&gt; because the hierarchy is the root of the hierarchy tree.
</description>
<return>
<type class="javax.baja.hierarchy.BLevelDef"/>
<description>
&lt;code&gt;null&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getNext() -->
<method name="getNext"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return the a child level definition or null if this level definition is a leaf. In the case of&#xa; the hierarchy component, return the first child level definition.
</description>
<return>
<type class="javax.baja.hierarchy.BLevelDef"/>
<description>
the first level definition child, if any exist; &lt;code&gt;null&lt;/code&gt; otherwise
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.descendantsStarted() -->
<method name="descendantsStarted"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rebuilds the level def cache (server-side only) once all of the hierarchy&#x27;s properties have&#xa; been started.
</description>
<tag name="@since">Niagara 4.6</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rebuilds the level def cache (server-side only) if a BLevelDef property is added.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rebuilds the level def cache (server-side only) if a BLevelDef property is changed via a set&#xa; method.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.removed(javax.baja.sys.Property, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="removed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rebuilds the level def cache (server-side only) if a BLevelDef property has been removed.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="oldValue">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.reordered(javax.baja.sys.Context) -->
<method name="reordered"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Rebuilds the level def cache (server-side only) when properties have been reordered.  It is&#xa; difficult to detect that only the order of BLevelDefs have been affected so the cache is&#xa; rebuilt every time.
</description>
<tag name="@since">Niagara 4.6</tag>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getLevelDefCache() -->
<method name="getLevelDefCache"  public="true">
<description>
Returns an unmodifiable cached list of the BLevelDefs in this hierarchy.  Caching avoids&#xa; rebuilding an array with a call to getChildren every time the BLevelDefs are required.  This&#xa; cache is rebuilt when BLevelDefs are added or removed and when properties of this hierarchy are&#xa; reordered.  Cache is populated on the server-side only.
</description>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.hierarchy.BLevelDef"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon for this component.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
<description>
component&#x27;s icon
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.doCreateCache(javax.baja.sys.Context) -->
<method name="doCreateCache"  public="true">
<description>
Cache an un-cached hierarchy or replace an existing cache.
</description>
<tag name="@since">Niagara 4.4</tag>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.doClearCache() -->
<method name="doClearCache"  public="true">
<description>
Remove an existing cache of this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<tag name="@since">Niagara 4.4</tag>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchy.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.hierarchy.BHierarchy.status -->
<field name="status"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;status&lt;/code&gt; property.&#xa; Status of the hierarchy. This property should never be set directly.
</description>
<tag name="@see">#getStatus</tag>
<tag name="@see">#setStatus</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.faultCause -->
<field name="faultCause"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;faultCause&lt;/code&gt; property.&#xa; Provides a short message regarding why the hierarchy is in fault.
</description>
<tag name="@see">#getFaultCause</tag>
<tag name="@see">#setFaultCause</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.scope -->
<field name="scope"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;scope&lt;/code&gt; property.&#xa; The list of scopes to build this hierarchy against.
</description>
<tag name="@see">#getScope</tag>
<tag name="@see">#setScope</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.tags -->
<field name="tags"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;tags&lt;/code&gt; property.&#xa; Tags on the hierarchy itself.
</description>
<tag name="@see">#getTags</tag>
<tag name="@see">#setTags</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.cacheStatus -->
<field name="cacheStatus"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;cacheStatus&lt;/code&gt; property.&#xa; State of the cache of the hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheStatus</tag>
<tag name="@see">#setCacheStatus</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.cacheCreationTime -->
<field name="cacheCreationTime"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;cacheCreationTime&lt;/code&gt; property.&#xa; Date/time when the current cache was created.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheCreationTime</tag>
<tag name="@see">#setCacheCreationTime</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.cacheOnStationStarted -->
<field name="cacheOnStationStarted"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;cacheOnStationStarted&lt;/code&gt; property.&#xa; Cache this hierarchy once the station is started (see stationStarted()).
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#getCacheOnStationStarted</tag>
<tag name="@see">#setCacheOnStationStarted</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.createCache -->
<field name="createCache"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;createCache&lt;/code&gt; action.&#xa; Creates or replaces the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#createCache()</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.clearCache -->
<field name="clearCache"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;clearCache&lt;/code&gt; action.&#xa; Clears the cache for this hierarchy.
</description>
<tag name="@since">Niagara 4.4</tag>
<tag name="@see">#clearCache()</tag>
</field>

<!-- javax.baja.hierarchy.BHierarchy.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
