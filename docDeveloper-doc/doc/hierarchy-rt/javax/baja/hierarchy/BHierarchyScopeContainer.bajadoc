<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="hierarchy" runtimeProfile="rt" qualifiedName="javax.baja.hierarchy.BHierarchyScopeContainer" name="BHierarchyScopeContainer" packageName="javax.baja.hierarchy" public="true">
<description>
A HierarchyScopeContainer groups the HierarchyScopes for a given Hierarchy.
</description>
<tag name="@author">Blake Puhak</tag>
<tag name="@since">Niagara 4.0</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<!-- javax.baja.hierarchy.BHierarchyScopeContainer() -->
<constructor name="BHierarchyScopeContainer" public="true">
<description/>
</constructor>

<!-- javax.baja.hierarchy.BHierarchyScopeContainer.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScopeContainer.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Allow only BHierarchy parents.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScopeContainer.getHierarchyScopes() -->
<method name="getHierarchyScopes"  public="true">
<description>
Returns all of the licensed hierarchy scopes
</description>
<return>
<type class="javax.baja.hierarchy.BHierarchyScope" dimension="1"/>
<description>
array of licensed hierarchy scopes available.
</description>
</return>
</method>

<!-- javax.baja.hierarchy.BHierarchyScopeContainer.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
