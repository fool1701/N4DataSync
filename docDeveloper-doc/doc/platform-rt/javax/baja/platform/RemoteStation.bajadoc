<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platform" runtimeProfile="rt" qualifiedName="javax.baja.platform.RemoteStation" name="RemoteStation" packageName="javax.baja.platform" public="true" interface="true" abstract="true" category="interface">
<description>
Represents the state of a single station running on a remote host,&#xa; and provides a simple control interface for it.&#xa; &#xa; RemoteStation instances can be found using StationManager objects.
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">04 Feb 05</tag>
<tag name="@version">$Revision: 15$ $Date: 12/14/05 10:16:01 AM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.platform.RemoteStation.getStatus() -->
<method name="getStatus"  public="true" abstract="true">
<description>
Life cycle status of the station
</description>
<return>
<type class="javax.baja.platform.BStationStatus"/>
</return>
</method>

<!-- javax.baja.platform.RemoteStation.getName() -->
<method name="getName"  public="true" abstract="true">
<description>
Name of the directory under !stations where the station is installed
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.platform.RemoteStation.getFoxOrd() -->
<method name="getFoxOrd"  public="true" abstract="true">
<description>
ORD that can be followed to open the station in workbench
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.platform.RemoteStation.poll() -->
<method name="poll"  public="true" abstract="true">
<description>
Poll the platform daemon and update the properties of this &#xa; object accordingly
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.canStart() -->
<method name="canStart"  public="true" abstract="true">
<description>
Return true if the station can be started.  &#xa; &#xa; If false is returned, the host must be rebooted before the station can&#xa; be started
</description>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.start(javax.baja.platform.IPlatformOperationListener) -->
<method name="start"  public="true" abstract="true">
<description>
Start the remote station and wait until it its startup sequence completes&#xa; successfully
</description>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates and allows the caller to cancel the&#xa; wait for startup to finish.   Cancelling does not interrupt the station startup,&#xa; that must be done explicitly with a stop or kill method.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.startAsync() -->
<method name="startAsync"  public="true" abstract="true">
<description>
Start the remote station
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.saveAsync() -->
<method name="saveAsync"  public="true" abstract="true">
<description>
Request that the running remote station save its state
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.save(javax.baja.platform.IPlatformOperationListener) -->
<method name="save"  public="true" abstract="true">
<description>
Request that the running remote station save its state and block until &#xa; the save has completed or failed, or is canceled
</description>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates and allows the caller to cancel the&#xa; wait for the save to finish.  Cancelling does not affect the station&#x27;s save &#xa; operation.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.stopAsync() -->
<method name="stopAsync"  public="true" abstract="true">
<description>
Request that the running remote station stop gracefully
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.stop(javax.baja.platform.IPlatformOperationListener) -->
<method name="stop"  public="true" abstract="true">
<description>
Request that the running remote station stop gracefully and block &#xa; until the station is idle or the operation is canceled
</description>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates and allows the caller to cancel the&#xa; wait for the station to be fully stopped.   Cancelling affects only the wait, &#xa; and will not cause the shutdown to abort.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.canRestart() -->
<method name="canRestart"  public="true" abstract="true">
<description>
Return true if the station can be restarted.   If false, once the station&#xa; is stopped the host must be rebooted before it can be started again.
</description>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.restartAsync() -->
<method name="restartAsync"  public="true" abstract="true">
<description>
Request that the running remote station restart itself
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.killAsync() -->
<method name="killAsync"  public="true" abstract="true">
<description>
Request that the running remote station be terminated immediately
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.delete(javax.baja.platform.IPlatformOperationListener) -->
<method name="delete"  public="true" abstract="true">
<description>
Stop the the remote station then delete it from the host
</description>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates and allows the caller to cancel the&#xa; operation.   Cancelling stops the wait for the station shutdown, but will&#xa; not cause the shutdown operation to abort.   Once the station is shut down, &#xa; the file deletion cannot be interrupted.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
<throws>
<type class="javax.baja.security.AuthenticationException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.rename(java.lang.String, javax.baja.platform.IPlatformOperationListener) -->
<method name="rename"  public="true" abstract="true">
<description>
Stop the the remote station then rename it
</description>
<parameter name="newName">
<type class="java.lang.String"/>
<description>
new name for the remote station
</description>
</parameter>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates and allows the caller to cancel the&#xa; operation.   Cancelling stops the wait for the station shutdown, but will&#xa; not cause the shutdown operation to abort.   Once the station is shut down, &#xa; the file rename cannot be interrupted.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.makeLocalCopy(javax.baja.file.BDirectory, javax.baja.platform.IPlatformOperationListener) -->
<method name="makeLocalCopy"  public="true" abstract="true">
<description>
Make a local copy of the station
</description>
<parameter name="localStationDir">
<type class="javax.baja.file.BDirectory"/>
</parameter>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
<description>
receives status updates for the operation.   listener.isCanceled()&#xa; is not checked, so has no effect
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.updateStationCertAlias(java.lang.String) -->
<method name="updateStationCertAlias"  public="true" abstract="true">
<description>
Set / Update the certificate alias for this station.
</description>
<parameter name="alias">
<type class="java.lang.String"/>
<description>
The new certificate alias for the station
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
</method>

<!-- javax.baja.platform.RemoteStation.updateStationTlsVersion(java.lang.String) -->
<method name="updateStationTlsVersion"  public="true" abstract="true">
<description>
Update TLS version for this station.
</description>
<parameter name="tlsVersion">
<type class="java.lang.String"/>
<description>
The new TLS version for the station
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.net.ConnectException"/>
</throws>
</method>

</class>
</bajadoc>
