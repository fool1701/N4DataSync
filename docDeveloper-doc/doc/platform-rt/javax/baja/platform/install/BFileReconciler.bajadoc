<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platform" runtimeProfile="rt" qualifiedName="javax.baja.platform.install.BFileReconciler" name="BFileReconciler" packageName="javax.baja.platform.install" public="true" abstract="true">
<description>
Base class for a processor that can reconcile the contents of two&#xa; versions of a file and return a single set of reconciled contents.
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">13 June 07</tag>
<tag name="@version">$Revision: 3$ $Date: 10/3/07 11:36:11 AM EDT$</tag>
<tag name="@since">Niagara 3.3</tag>
<extends>
<type class="javax.baja.sys.BSingleton"/>
</extends>
<!-- javax.baja.platform.install.BFileReconciler() -->
<constructor name="BFileReconciler" public="true">
<description/>
</constructor>

<!-- javax.baja.platform.install.BFileReconciler.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.platform.install.BFileReconciler.reconcile(javax.baja.file.BIFile, javax.baja.file.BIFile) -->
<method name="reconcile"  public="true" abstract="true">
<description>
Return the reconciled contents of the two given versions of a file, or&#xa; null if no reconciliation can/should occur.
</description>
<parameter name="newContents">
<type class="javax.baja.file.BIFile"/>
<description>
the new version of the file to be reconciled, will never&#xa; be null
</description>
</parameter>
<parameter name="existingContents">
<type class="javax.baja.file.BIFile"/>
<description>
the existing version of the file to be reconciled, will&#xa; never be null
</description>
</parameter>
<return>
<type class="javax.baja.platform.install.BFileReconciler$ReconciliationResults"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.install.BFileReconciler.reconcile(javax.baja.file.BIFile, long, javax.baja.file.BIFile, long) -->
<method name="reconcile"  public="true" final="true">
<description>
Return the reconciled contents of the two given versions of a file, or&#xa; null if no reconciliation can/should occur.
</description>
<parameter name="newContents">
<type class="javax.baja.file.BIFile"/>
<description>
the new version of the file to be reconciled
</description>
</parameter>
<parameter name="newContentCrc">
<type class="long"/>
<description>
the CRC checksum for newContents, or -1L if unknown
</description>
</parameter>
<parameter name="existingContents">
<type class="javax.baja.file.BIFile"/>
<description>
the existing version of the file to be reconciled, or null &#xa; if it doesn&#x27;t currently exist
</description>
</parameter>
<parameter name="existingContentCrc">
<type class="long"/>
<description>
the CRC checksum for existingContents, or -1L if unknown
</description>
</parameter>
<return>
<type class="javax.baja.platform.install.BFileReconciler$ReconciliationResults"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.install.BFileReconciler.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.platform.install.BFileReconciler.NO_RECONCILIATION -->
<field name="NO_RECONCILIATION"  public="true" static="true" final="true">
<type class="javax.baja.platform.install.BFileReconciler$ReconciliationResults"/>
<description/>
</field>

</class>
</bajadoc>
