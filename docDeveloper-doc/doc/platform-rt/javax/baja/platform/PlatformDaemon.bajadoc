<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platform" runtimeProfile="rt" qualifiedName="javax.baja.platform.PlatformDaemon" name="PlatformDaemon" packageName="javax.baja.platform" public="true" abstract="true">
<description>
Provides a simple interface to a local or remote platform daemon, which&#xa; can be used for station control and file transfer
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">04 Feb 05</tag>
<tag name="@version">$Revision: 15$ $Date: 7/15/10 3:17:38 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.platform.PlatformDaemon() -->
<constructor name="PlatformDaemon" public="true">
<description/>
</constructor>

<!-- javax.baja.platform.PlatformDaemon.make(java.lang.String, int, java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Factory
</description>
<parameter name="hostAddr">
<type class="java.lang.String"/>
<description>
host name or IP address where the platform daemon is running
</description>
</parameter>
<parameter name="port">
<type class="int"/>
<description>
HTTP port on which the platform daemon is listening, default is 3011
</description>
</parameter>
<parameter name="username">
<type class="java.lang.String"/>
<description>
user name to use for authentication to the platform daemon
</description>
</parameter>
<parameter name="password">
<type class="java.lang.String"/>
<description>
password to use for authentication to the platform daemon
</description>
</parameter>
<return>
<type class="javax.baja.platform.PlatformDaemon"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.make(java.lang.String, int, boolean, java.lang.String, java.lang.String) -->
<method name="make"  public="true" static="true">
<description>
Factory
</description>
<tag name="@since">Niagara 4.0</tag>
<parameter name="hostAddr">
<type class="java.lang.String"/>
<description>
host name or IP address where the platform daemon is running
</description>
</parameter>
<parameter name="port">
<type class="int"/>
<description>
HTTP port on which the platform daemon is listening, default is 3011
</description>
</parameter>
<parameter name="secure">
<type class="boolean"/>
<description>
if true, make a secure connection to the platform daemon
</description>
</parameter>
<parameter name="username">
<type class="java.lang.String"/>
<description>
user name to use for authentication to the platform daemon
</description>
</parameter>
<parameter name="password">
<type class="java.lang.String"/>
<description>
password to use for authentication to the platform daemon
</description>
</parameter>
<return>
<type class="javax.baja.platform.PlatformDaemon"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.make(javax.baja.naming.BHost, int, javax.baja.security.BUsernameAndPassword) -->
<method name="make"  public="true" static="true">
<description>
Factory
</description>
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
<description>
host where the platform daemon is running
</description>
</parameter>
<parameter name="port">
<type class="int"/>
<description>
HTTP port on which the platform daemon is listening, default is 3011
</description>
</parameter>
<parameter name="credentials">
<type class="javax.baja.security.BUsernameAndPassword"/>
<description>
admin credentials for the platform daemon
</description>
</parameter>
<return>
<type class="javax.baja.platform.PlatformDaemon"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.make(javax.baja.naming.BHost, int, boolean, javax.baja.security.BUsernameAndPassword) -->
<method name="make"  public="true" static="true">
<description>
Factory
</description>
<tag name="@since">Niagara 4.0</tag>
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
<description>
host where the platform daemon is running
</description>
</parameter>
<parameter name="port">
<type class="int"/>
<description>
HTTP port on which the platform daemon is listening,&#xa; default is 3011
</description>
</parameter>
<parameter name="secure">
<type class="boolean"/>
<description>
if true, make a secure connection to the platform daemon
</description>
</parameter>
<parameter name="credentials">
<type class="javax.baja.security.BUsernameAndPassword"/>
<description>
admin credentials for the platform daemon
</description>
</parameter>
<return>
<type class="javax.baja.platform.PlatformDaemon"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.getStationManager() -->
<method name="getStationManager"  public="true" abstract="true">
<description>
Returns an object that can be used for station control
</description>
<return>
<type class="javax.baja.platform.StationManager"/>
</return>
</method>

<!-- javax.baja.platform.PlatformDaemon.getFileManager() -->
<method name="getFileManager"  public="true" abstract="true">
<description>
Returns an object that can be used for file access and transfer
</description>
<return>
<type class="javax.baja.platform.FileManager"/>
</return>
</method>

<!-- javax.baja.platform.PlatformDaemon.getInstallManager() -->
<method name="getInstallManager"  public="true" abstract="true">
<description>
Returns an object that can be used to install software to the&#xa; remote host
</description>
<return>
<type class="javax.baja.platform.InstallManager"/>
</return>
</method>

<!-- javax.baja.platform.PlatformDaemon.getSecurityManager() -->
<method name="getSecurityManager"  public="true" abstract="true">
<description>
Returns an object that can be used to manage the authentication&#xa; and access control settings for the remote host
</description>
<return>
<type class="javax.baja.platform.DaemonSecurityManager"/>
</return>
</method>

<!-- javax.baja.platform.PlatformDaemon.getOfflineBackupManager() -->
<method name="getOfflineBackupManager"  public="true" abstract="true">
<description>
Return a BackupManager object that can make a backup from the remote&#xa; host while no station is running.
</description>
<return>
<type class="javax.baja.platform.BackupManager"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.getLicenseManager() -->
<method name="getLicenseManager"  public="true" abstract="true">
<description>
Return a PlatformLicenseManager object that can manage licenses on&#xa; the remote host.
</description>
<return>
<type class="javax.baja.platform.PlatformLicenseManager"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.close() -->
<method name="close"  public="true" abstract="true">
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.PlatformDaemon.isNiagara4Platform() -->
<method name="isNiagara4Platform"  public="true" abstract="true">
<description>
Returns true if the remote host is running Niagara 4 software, or returns false&#xa; if it is running Niagara AX.
</description>
<tag name="@since">Niagara 4.1</tag>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

</class>
</bajadoc>
