<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platform" runtimeProfile="rt" qualifiedName="javax.baja.platform.InstallManager" name="InstallManager" packageName="javax.baja.platform" public="true" interface="true" abstract="true" category="interface">
<description>
Interface for PlatformDaemon software installation functions&#xa; &#xa; An InstallManager instance can be obtained by calling&#xa; PlatformDaemon.getInstallManager()
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">4 May 05</tag>
<tag name="@version">$Revision: 7$ $Date: 6/1/07 11:56:30 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<!-- javax.baja.platform.InstallManager.install(javax.baja.platform.InstallOperation, javax.baja.platform.IPlatformOperationListener) -->
<method name="install"  public="true" abstract="true">
<description>
Verify an install operation, then perform the install.
</description>
<parameter name="operation">
<type class="javax.baja.platform.InstallOperation"/>
</parameter>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.install(javax.baja.platform.InstallOperation, javax.baja.platform.IPlatformOperationListener, char[]) -->
<method name="install"  public="true" abstract="true">
<description>
Verify an install operation that requires a passphrase, then perform the install.
</description>
<parameter name="pOperation">
<type class="javax.baja.platform.InstallOperation"/>
</parameter>
<parameter name="iListener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
</parameter>
<parameter name="password">
<type class="char" dimension="1"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.checkInstall(javax.baja.platform.InstallOperation, javax.baja.platform.IPlatformOperationListener) -->
<method name="checkInstall"  public="true" abstract="true">
<description>
Check an InstallOperation for validity.   If the returned summary has&#xa; no unmet dependencies, then it can be successfully installed.
</description>
<parameter name="operation">
<type class="javax.baja.platform.InstallOperation"/>
</parameter>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
</parameter>
<return>
<type class="javax.baja.platform.install.InstallationSummary"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.checkDistPasswordRequired(javax.baja.platform.InstallOperation) -->
<method name="checkDistPasswordRequired"  public="true" abstract="true">
<description>
Check if a Dist requires a password for install
</description>
<parameter name="operation">
<type class="javax.baja.platform.InstallOperation"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.getPlatformParts(javax.baja.platform.IPlatformOperationListener) -->
<method name="getPlatformParts"  public="true" abstract="true">
<description>
Enumerates all of the PlatformParts on the target host against which&#xa; software dependencies may be defined.
</description>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
</parameter>
<return>
<type class="javax.baja.platform.install.PlatformPart" dimension="1"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.registerInstallableFile(javax.baja.file.BIFile, javax.baja.platform.IPlatformOperationListener) -->
<method name="registerInstallableFile"  public="true" abstract="true">
<description>
Imports a module or distribution file into the local computer&#x27;s&#xa; software database.
</description>
<parameter name="file">
<type class="javax.baja.file.BIFile"/>
</parameter>
<parameter name="listener">
<type class="javax.baja.platform.IPlatformOperationListener"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallManager.getEnabledRuntimeProfiles() -->
<method name="getEnabledRuntimeProfiles"  public="true" abstract="true">
<description>
If the remote host is running Niagara 4, returns a Set containing the runtime profiles currently&#xa; enabled, otherwise throws UnsupportedOperationException.
</description>
<tag name="@since">Niagara 4.1</tag>
<return>
<parameterizedType class="java.util.Set">
<args>
<type class="javax.baja.nre.platform.RuntimeProfile"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.platform.InstallManager.getUnsupportedRuntimeProfiles() -->
<method name="getUnsupportedRuntimeProfiles"  public="true" abstract="true">
<description>
If the remote host is running Niagara 4, returns a Set containing the runtime profiles that are&#xa; unsupported by that host&#x27;s platform, otherwise throws UnsupportedOperationException.
</description>
<tag name="@since">Niagara 4.1</tag>
<return>
<parameterizedType class="java.util.Set">
<args>
<type class="javax.baja.nre.platform.RuntimeProfile"/>
</args>
</parameterizedType>
</return>
</method>

</class>
</bajadoc>
