<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platform" runtimeProfile="rt" qualifiedName="javax.baja.platform.InstallOperation" name="InstallOperation" packageName="javax.baja.platform" public="true" abstract="true">
<description>
Configuration options for software installations performed using&#xa; PlatformDaemon
</description>
<tag name="@author">Matt Boon</tag>
<tag name="@creation">4 May 05</tag>
<tag name="@version">$Revision: 7$ $Date: 6/1/07 11:56:30 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<!-- javax.baja.platform.InstallOperation() -->
<constructor name="InstallOperation" protected="true">
<description>
Private constructor.  Caller should use the factory.
</description>
</constructor>

<!-- javax.baja.platform.InstallOperation.make() -->
<method name="make"  public="true" static="true">
<description>
Factory
</description>
<return>
<type class="javax.baja.platform.InstallOperation"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.setIgnoreTcpIpChanges(boolean) -->
<method name="setIgnoreTcpIpChanges"  public="true" abstract="true">
<description>
If set to true, any TCP/IP settings changes that may be included&#xa; with backup distribution files will be ignored when the operation&#xa; is executed.
</description>
<parameter name="value">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.setIgnoreAuthChanges(boolean) -->
<method name="setIgnoreAuthChanges"  public="true" abstract="true">
<description>
If set to true, any platform daemon authentication changes that may &#xa; be included with distribution files will be ignored when the operation&#xa; is executed.
</description>
<parameter name="value">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.installModule(java.lang.String, javax.baja.util.Version) -->
<method name="installModule"  public="true" abstract="true">
<description>
Add a module to be installed with the operation.
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
<description>
name of the module to install (does not include the&#xa; .jar extension)
</description>
</parameter>
<parameter name="version">
<type class="javax.baja.util.Version"/>
<description>
version of the module to install, or Version.NULL for&#xa; latest available version
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.installDistribution(javax.baja.file.BIFile) -->
<method name="installDistribution"  public="true" abstract="true">
<description>
Add a distribution to be installed with the operation.
</description>
<parameter name="distFile">
<type class="javax.baja.file.BIFile"/>
<description>
distribution file to install
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.platform.InstallOperation.installDistribution(java.lang.String, javax.baja.util.Version) -->
<method name="installDistribution"  public="true" abstract="true">
<description>
Add a distribution to be installed with the operation.
</description>
<parameter name="distName">
<type class="java.lang.String"/>
<description>
name of the distribution to install (does not&#xa; include the .dist extension)
</description>
</parameter>
<parameter name="version">
<type class="javax.baja.util.Version"/>
<description>
version of the distribution to install, or &#xa; Version.NULL for latest available version
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.uninstallModule(java.lang.String) -->
<method name="uninstallModule"  public="true" abstract="true">
<description>
Uninstall a module
</description>
<parameter name="moduleName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.platform.InstallOperation.updateEnabledRuntimeProfiles(java.util.Set&lt;javax.baja.nre.platform.RuntimeProfile&gt;) -->
<method name="updateEnabledRuntimeProfiles"  public="true" abstract="true">
<description>
Update the set of enabled runtime profiles on the remote Niagara 4 host.  Modules will be installed or uninstalled&#xa; accordingly.  For example, if a platform currently has only &lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#rt">RuntimeProfile#rt</see>&lt;/code&gt; enabled and has the &#x22;alarm-rt&#x22;&#xa; module installed, enabling &lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#ux">RuntimeProfile#ux</see>&lt;/code&gt; and &lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#wb">RuntimeProfile#wb</see>&lt;/code&gt; will cause &#x22;alarm-ux&#x22; and &#x22;alarm-wb&#x22;&#xa; to be installed.&#xa;&#xa; If either &lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#ux">RuntimeProfile#ux</see>&lt;/code&gt; or &lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#wb">RuntimeProfile#wb</see>&lt;/code&gt; is in the set without the other, the other&#xa; profile will be added automatically.  Any missing profiles required for the platform (&lt;code&gt;<see ref="javax.baja.nre.platform.RuntimeProfile#rt">RuntimeProfile#rt</see>&lt;/code&gt;)&#xa; will be added automatically as well.&#xa;&#xa; If any runtime profiles in the set are unsupported by the remote host&#x27;s platform, an exception will be thrown&#xa; when the operation is attempted. To avoid this exception, use &lt;code&gt;<see ref="javax.baja.platform.InstallManager#getUnsupportedRuntimeProfiles()">InstallManager#getUnsupportedRuntimeProfiles()</see>&lt;/code&gt;&#xa; to validate the values.
</description>
<tag name="@since">Niagara 4.1</tag>
<parameter name="enabledRuntimeProfiles">
<parameterizedType class="java.util.Set">
<args>
<type class="javax.baja.nre.platform.RuntimeProfile"/>
</args>
</parameterizedType>
<description>
Set of runtime profiles that should be enabled after the operation is performed.&#xa;                               If null, profiles should be unchanged.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
