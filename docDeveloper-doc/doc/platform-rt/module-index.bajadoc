<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<module name="platform" runtimeProfile="rt" bajaVersion="0" vendor="Tridium" vendorVersion="4.13.3.48">
<description>Niagara Platform Library</description>
<package name="javax.baja.platform"/>
<package name="javax.baja.platform.install"/>
<package name="javax.baja.platform.security"/>
<package name="javax.baja.platform.tcpip"/>
<package name="javax.baja.platform.time"/>
<package name="com.tridium.platform"/>
<package name="com.tridium.platform.license"/>
<package name="com.tridium.platform.timezone"/>
<package name="com.tridium.platform.command"/>
<package name="com.tridium.platform.alarm"/>
<package name="com.tridium.platform.tcpip"/>
<package name="com.tridium.platform.npsdk"/>
<package name="com.tridium.platform.ewf"/>
<package name="com.tridium.platform.linux"/>
<package name="com.tridium.platform.qnx"/>
<package name="com.tridium.platform.daemon"/>
<package name="com.tridium.platform.daemon.file"/>
<package name="com.tridium.platform.fox"/>
<package name="com.tridium.platform.win32"/>
<package name="com.tridium.platform.ntp"/>
<class packageName="com.tridium.platform.command" name="BAbstractPlatformCommand"><description>Base implementation for BIPlatform command</description></class>
<class packageName="com.tridium.platform.daemon" name="BAppSurrogate"><description>Represents an application running on a host that&#x27;s connected to a BDaemonConsole&#xa; plugin</description></class>
<class packageName="com.tridium.platform.daemon.file" name="BCacheAccessPolicy"></class>
<class packageName="com.tridium.platform.daemon.file" name="BCachedDaemonFileSpace"></class>
<class packageName="com.tridium.platform.license" name="BCertificateSummary"><description>Summary for a single vendor&#x27;s licensing certificate</description></class>
<class packageName="com.tridium.platform.daemon" name="BDaemonAccessLevel"></class>
<class packageName="com.tridium.platform.daemon.file" name="BDaemonDirectoryStore"><description>FileStore implementation for a directory accessed through&#xa; a niagara daemon</description></class>
<class packageName="com.tridium.platform.daemon.file" name="BDaemonFileSpace"><description>FileSpace implementation for the files which can be accessed&#xa; using a niagara daemon</description></class>
<class packageName="com.tridium.platform.daemon.file" name="BDaemonFileStore"><description>FileStore implementation for a normal file accessed through&#xa; a niagara daemon</description></class>
<class packageName="com.tridium.platform.daemon" name="BDaemonLogLevel"><description>Represents a log filter level for a niagara daemon logging service&#xa;&#xa; NOTE: Only used to represent log values in Niagara AX and Niagara 4.0 -&gt; 4.2&#xa; Niagara 4.3 transitioned the Niagara Daemon to use Java Logging conventions</description></class>
<class packageName="com.tridium.platform.daemon" name="BDaemonScheme"><description>BDaemonScheme manages the &#x22;platform&#x22; scheme used to &#xa; mount a BDaemonSession.</description></class>
<class packageName="com.tridium.platform.daemon" name="BDaemonSession"><description>BDaemonSession is a session mounted directly under a BHost&#xa; and accessed via a &#x22;platform: &lt;port&gt;&#x22; ord.</description></class>
<class packageName="com.tridium.platform.command" name="BDaemonSessionCommand"><description>Command that has the ability to initialize a BDaemonSession from&#xa; command line arguments and/or stdin.</description></class>
<class packageName="com.tridium.platform.daemon.file" name="BDefaultDaemonFileSpace"><description>FileSpace implementation for the files which can be accessed&#xa; using a niagara daemon</description></class>
<class packageName="com.tridium.platform.timezone" name="BDstSupportLevel"><description>BDstSupportLevel is a BEnum that specifies the level of support that&#xa; an OS has for DstRules</description></class>
<class packageName="com.tridium.platform" name="BEngineWatchdogPolicy"><description>BEngineWatchdogPolicy is an BEnum that specifies the response taken by &#xa; the Niagara daemon if it detects an engine watchdog timeout.</description></class>
<class packageName="com.tridium.platform.license" name="BEnvLicenseSummary"><description>Summarizes a list of licenses for a particular instance of a Niagara runtime&#xa; environment, identified by its host ID and brand ID.</description></class>
<class packageName="com.tridium.platform.ewf" name="BEwfBootCommand"></class>
<class packageName="com.tridium.platform.ewf" name="BEwfEnableState"></class>
<class packageName="com.tridium.platform.ewf" name="BEwfOverlayAttributes"></class>
<class packageName="javax.baja.platform.install" name="BFileReconciler"><description>Base class for a processor that can reconcile the contents of two&#xa; versions of a file and return a single set of reconciled contents.</description></class>
<class packageName="javax.baja.platform.install" name="BFileReconciler.FileReconciliationResults"><description>ReconciliationResults implementation that describes the&#xa; contents of a single file</description></class>
<class packageName="javax.baja.platform.install" name="BFileReconciler.LazyReconciliationResults"><description>ReconciliationResults implementation that defers processing until&#xa; the size or stream is requested</description></class>
<class packageName="javax.baja.platform.install" name="BFileReconciler.ReconciliationResults" category="interface"><description>Describes the result of a file reconciliation</description></class>
<class packageName="com.tridium.platform" name="BFilesystemAttributes"><description>Attributes for a fixed filesystem/drive</description></class>
<class packageName="com.tridium.platform" name="BHostIdSettings"><description>Attributes for HostId settings</description></class>
<class packageName="com.tridium.platform" name="BHostIdStatus"><description>Status of the Host Id: perpetual, ok, unregistered, cloned</description></class>
<class packageName="com.tridium.platform.daemon" name="BHostProperties"><description>Collection of properties describing a remote host that runs a niagarad.</description></class>
<class packageName="com.tridium.platform.alarm" name="BIAlarmablePlatformService" category="interface"><description>Platform services that need to generate alarms should implement this interface.</description></class>
<class packageName="com.tridium.platform.command" name="BIPlatformCommand" category="interface"><description>A platform command that can be invoked from the command line using&#xa;    plat &lt;command name&gt; &lt;flags&gt;</description></class>
<class packageName="com.tridium.platform" name="BIPlatformConnection" category="interface"><description>BIPlatformConnection - an interface that provides access to a BPlatformConnection/BDaemonSession&#xa; from an rt module</description></class>
<class packageName="com.tridium.platform.license" name="BLicenseArchiveFile"></class>
<class packageName="com.tridium.platform.fox" name="BLicenseChannel"><description>BLicenseChannel is the channel used to transfer&#xa; license and certificate data between fox enabled applications.</description></class>
<class packageName="com.tridium.platform.license" name="BLicensePlatformService"><description>Currently a placeholder service at which we point a license management plugin</description></class>
<class packageName="com.tridium.platform.daemon" name="BModuleContent"></class>
<class packageName="com.tridium.platform.ntp" name="BNtpMode"><description>Enumeration for the modes (peer or packet) that are described in RFC 1305.</description></class>
<class packageName="com.tridium.platform.ntp" name="BNtpPlatformService"><description>Base class for a platform service which encapsulates some properties of the underlying&#xa; host&#x27;s Network Time Protocol (NTP) time sync service.</description></class>
<class packageName="com.tridium.platform.linux" name="BNtpPlatformServiceLinux"></class>
<class packageName="com.tridium.platform.npsdk" name="BNtpPlatformServiceNpsdk"><description>NPSDK implementation of BNtpPlatformService.</description></class>
<class packageName="com.tridium.platform.qnx" name="BNtpPlatformServiceQnx"><description>&lt;p&gt;Platform service which encapsulates some of the more important settings used by the host&#x27;s&#xa; Network Time Protocol Daemon</description></class>
<class packageName="com.tridium.platform.win32" name="BNtpPlatformServiceWin32"><description>&lt;p&gt;Platform service which encapsulates some of the more important settings used by the host&#x27;s&#xa; W32Time service.</description></class>
<class packageName="com.tridium.platform.ntp" name="BNtpServer"><description>Base class for an NTP server which a host may contact to synchronize its clock.</description></class>
<class packageName="com.tridium.platform.linux" name="BNtpServerLinux"><description>NTP server entry in a BNtpPlatformServiceLinux service&#x27;s timeServers vector.</description></class>
<class packageName="com.tridium.platform.npsdk" name="BNtpServerNpsdk"><description>NTP server entry in a BNtpPlatformServiceNpsdk service&#x27;s timeServers vector.</description></class>
<class packageName="com.tridium.platform.qnx" name="BNtpServerQnx"><description>NTP server entry in a BNtpPlatformServiceQnx service&#x27;s timeServers vector.</description></class>
<class packageName="com.tridium.platform.ntp" name="BNtpServerVector"><description>Vector that contains (only) BNtpServer elements.</description></class>
<class packageName="com.tridium.platform.win32" name="BNtpServerWin32"><description>NTP server entry in a BNtpPlatformServiceWin32 service&#x27;s timeServers vector.</description></class>
<class packageName="com.tridium.platform.win32" name="BNtpSyncPolicyWin32"><description>Identifies how the W32Time service synchronizes with time servers to set the system clock.</description></class>
<class packageName="com.tridium.platform" name="BOperatingSystemEnum"><description>EnumeratedType for the current Operating System</description></class>
<class packageName="javax.baja.platform" name="BOverwritePolicy"><description>Determines how a file copy should proceed when a file copy is requested&#xa; and a file with the given name already exists</description></class>
<class packageName="com.tridium.platform.tcpip" name="BPingArgs"><description>Arguments for the ping() action of platform:TcpIpPlatformService</description></class>
<class packageName="com.tridium.platform.command" name="BPlat"><description>Main class for platform commands, invoked by Nre.</description></class>
<class packageName="com.tridium.platform" name="BPlatform"><description>BPlatform provides a component model of the Niagara&#xa; platform:  OS, VM, framework, modules, etc.</description></class>
<class packageName="javax.baja.platform.security" name="BPlatformAccountChangeRequest"><description>Basic structure for passing along various system authentication components.</description></class>
<class packageName="com.tridium.platform.alarm" name="BPlatformAlarmProxy"><description>BPlatformAlarmProxy generates alarms on behalf on the power platform&#xa; service.</description></class>
<class packageName="com.tridium.platform.alarm" name="BPlatformAlarmSupport"><description>BPlatformAlarmSupport is a support class to enabled easy alarm generation and alarm &#xa; handling for a BIAlarmablePlatformService.</description></class>
<class packageName="com.tridium.platform.command" name="BPlatformCommandScript"><description>BPlatformCommandScript allows for BDaemonSession commands to be batched in a input script.</description></class>
<class packageName="javax.baja.platform.install" name="BPlatformPartType"><description>Represents one of the types a PlatformPart can have</description></class>
<class packageName="com.tridium.platform" name="BPlatformSSLSettings"><description>Attributes for platform SSL Settings</description></class>
<class packageName="com.tridium.platform" name="BPlatformService"><description>A platform service is the interface for a service, device, or protocol which&#xa; is managed by the platform OS (using an API, config files, etc.), native&#xa; or third-party software.</description></class>
<class packageName="com.tridium.platform.alarm" name="BPlatformServiceAlarmRecord"><description>BPlatformServiceAlarmRecord contains the data necessary for a PlatformService to generate an Alarm.</description></class>
<class packageName="com.tridium.platform" name="BPlatformServiceContainer"><description>Container for a station&#x27;s BPlatformService instances</description></class>
<class packageName="com.tridium.platform.alarm" name="BPlatformServiceSourceState"><description>BPlatformServiceSourceState is an BEnum that represents valid alarm&#xa; transition states.</description></class>
<class packageName="com.tridium.platform" name="BSessionNavNode"></class>
<class packageName="com.tridium.platform" name="BSessionNavNodeFactory"><description>BSessionNavNodeFactory is the base class that permits the&#xa; creation of specific nav tree nodes based on a provided session&#xa; type.</description></class>
<class packageName="com.tridium.platform" name="BStationRenameCleanupJob"><description>Used during Station renaming process to delete any old Station directories&#xa; on Station start up</description></class>
<class packageName="javax.baja.platform" name="BStationStatus"><description>Status codes returned by the Niagara platform daemon</description></class>
<class packageName="com.tridium.platform.daemon" name="BStationSurrogate"><description>Represents a station running on a host that&#x27;s connected to a BDaemonConsole&#xa; plugin</description></class>
<class packageName="com.tridium.platform" name="BSystemAccountData"><description>Basic structure for passing along various system passphrase components.</description></class>
<class packageName="javax.baja.platform.security" name="BSystemPassphraseChangeRequest"><description>Data class for System Passphrase Change Requests.</description></class>
<class packageName="com.tridium.platform" name="BSystemPlatformService"><description>BSystemPlatformService exposes several system summary properties and implements basic system control&#xa; actions</description></class>
<class packageName="com.tridium.platform.linux" name="BSystemPlatformServiceLinux"><description>Linux implementation of BSystemPlatformService.</description></class>
<class packageName="com.tridium.platform.npsdk" name="BSystemPlatformServiceNpsdk"><description>NPSDK implementation of BSystemPlatformService.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnx"><description>Qnx implementation of BSystemPlatformService.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxEdge10"><description>BSystemPlatformServiceQnxEdge10 is Edge10 specific version of BSystemPlatformServiceQnx.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxJavelina"><description>Javelina version of BSystemPlatformServiceQnx.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxLegacy"><description>BSystemPlatformServiceQnxLegacy is System platform service for legacy QNX JACEs (3/6/7).</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxNpm3xx"><description>NPM-3xx version of BSystemPlatformServiceQnx.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxNpm6xx"><description>NPM-6xx version of BSystemPlatformServiceQnx.</description></class>
<class packageName="com.tridium.platform.qnx" name="BSystemPlatformServiceQnxTitan"><description>BSystemPlatformServiceQnxTitan is a Titan specific version of BSystemPlatformServiceQnx.</description></class>
<class packageName="com.tridium.platform" name="BSystemPlatformServiceSecurityDashboardProviderAgent"><description>Provides security dashboard info about the platform service</description></class>
<class packageName="com.tridium.platform.win32" name="BSystemPlatformServiceWin32"><description>Win32 implementation of BSystemPlatformService.</description></class>
<class packageName="com.tridium.platform.tcpip" name="BTcpIpAdapterSettings"><description>Provides a read-only representation of the TCP/IP settings for a single adapter&#xa; (NIC, dialup binding, VPN, etc.)</description></class>
<class packageName="com.tridium.platform.tcpip" name="BTcpIpHostSettings"><description>Proxy for a host&#x27;s TCP/IP settings, as reported by the host&#x27;s Niagara&#xa; daemon.</description></class>
<class packageName="com.tridium.platform.tcpip" name="BTcpIpPlatformService"><description>Provides access to the platform&#x27;s TCP/IP settings</description></class>
<class packageName="com.tridium.platform.fox" name="BTimeChannel"><description>BTimeChannel is the channel used to transfer&#xa; time zone data between fox enabled applications.</description></class>
<class packageName="com.tridium.platform.license" name="BVendorLicenseSummary"><description>Vendor detail for a BEnvLicenseSummary</description></class>
<class packageName="javax.baja.platform.install" name="BVersionRelation"><description>Specifies how a PlatformDependency&#x27;s version should be checked against&#xa; a PlatformPart&#x27;s version</description></class>
<class packageName="javax.baja.platform" name="BackupManager" category="interface"><description>Interface for performing online or offline backups.</description></class>
<class packageName="javax.baja.platform" name="DaemonSecurityManager" category="interface"><description>Manages the authentication and access control for a PlatformDaemon</description></class>
<class packageName="javax.baja.platform" name="FileManager" category="interface"><description>Interface for PlatformDaemon file access and transfer functions&#xa; &#xa; A FileManager instance can be obtained by calling &#xa; PlatformDaemon.getFileManager()</description></class>
<class packageName="javax.baja.platform" name="FileTransferOperation"><description>Configuration options for file transfers performed by PlatformDaemon</description></class>
<class packageName="javax.baja.platform" name="ICancelHint" category="interface"><description>Used to communicate to a long-running operation whether&#xa; it should continue or cancel processing.</description></class>
<class packageName="javax.baja.platform" name="ICancelHint.CanceledException" category="exception"><description>A long-running method may throw CanceledException to signify&#xa; that its invocation did not complete</description></class>
<class packageName="javax.baja.platform" name="IPlatformOperationListener" category="interface"><description>Provides a simple interface between a PlatformDaemon client and a long-running &#xa; task</description></class>
<class packageName="javax.baja.platform" name="InstallManager" category="interface"><description>Interface for PlatformDaemon software installation functions&#xa; &#xa; An InstallManager instance can be obtained by calling&#xa; PlatformDaemon.getInstallManager()</description></class>
<class packageName="javax.baja.platform" name="InstallOperation"><description>Configuration options for software installations performed using&#xa; PlatformDaemon</description></class>
<class packageName="javax.baja.platform.install" name="InstallationSummary" category="interface"><description>Summarizes the changes that will be made when a software installation&#xa; takes place</description></class>
<class packageName="javax.baja.platform" name="LocalPlatform"><description>LocalPlatform provides a simple interface to platform settings&#xa; for the computer that&#x27;s running the current Niagara environment</description></class>
<class packageName="javax.baja.platform" name="PlatformDaemon"><description>Provides a simple interface to a local or remote platform daemon, which&#xa; can be used for station control and file transfer</description></class>
<class packageName="javax.baja.platform.install" name="PlatformDependency" category="interface"><description>A dependency that must be met before an module or dist file is&#xa; allowed to be installed.</description></class>
<class packageName="javax.baja.platform" name="PlatformLicenseManager" category="interface"><description>Interface for PlatformDaemon licensing functions&#xa; &#xa; A PlatformLicenseManager instance can be obtained by calling&#xa; PlatformDaemon.getLicenseManager()</description></class>
<class packageName="javax.baja.platform.install" name="PlatformPart" category="interface"><description>A named, versioned item such as a piece of hardware or software, &#xa; against which a PlatformDependency can be specified.</description></class>
<class packageName="javax.baja.platform.security" name="PlatformSecurityConfigManager" category="interface"><description>PlatformSecurityConfigurationManager provides an interface to the Platform Security methods&#xa; for managing default System passphrases and default platform user accounts.</description></class>
<class packageName="javax.baja.platform" name="RemoteStation" category="interface"><description>Represents the state of a single station running on a remote host,&#xa; and provides a simple control interface for it.</description></class>
<class packageName="javax.baja.platform" name="StationManager" category="interface"><description>Interface for PlatformDaemon station management functions&#xa;&#xa; A StationManager instance can be obtained by calling&#xa; PlatformDaemon.getStationManager()</description></class>
<class packageName="javax.baja.platform.tcpip" name="TcpIpManager" category="interface"><description>TcpIpManager provides an interface for managing a computer&#x27;s TCP/IP settings&#xa; &lt;br&gt;&#xa; Some settings are applied at the host level on some operating systems and&#xa; at the adapter level on other operating systems.</description></class>
<class packageName="javax.baja.platform.time" name="TimeManager" category="interface"><description>Interface for managing a computer&#x27;s time zone and locale&#xa; &#xa; &lt;br&gt;&#xa; A TimeManager can be obtained by calling &lt;code&gt;LocalPlatform.getTimeManager()&lt;/code&gt;&#xa; &lt;br&gt;&#xa; Each new TimeManager will load the current SystemPlatformService properties.</description></class>
</module>
</bajadoc>
