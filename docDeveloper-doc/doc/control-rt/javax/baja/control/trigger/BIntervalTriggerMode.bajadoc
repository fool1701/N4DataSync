<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="control" runtimeProfile="rt" qualifiedName="javax.baja.control.trigger.BIntervalTriggerMode" name="BIntervalTriggerMode" packageName="javax.baja.control.trigger" public="true" final="true">
<description>
BIntervalTriggerMode allows the trigger to be fired at a specific interval.&#xa; In contrast to the BDailyTriggerMode, BIntervalTriggerMode is intended&#xa; for use when firing the trigger several times per day (e.g. every 5 minutes).
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">07 Jan 2004</tag>
<tag name="@version">$Revision: 14$ $Date: 11/3/09 1:19:48 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.control.trigger.BTriggerMode"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.control.trigger.BIntervalTriggerMode.make() -->
<method name="make"  public="true" static="true">
<description>
Create a interval trigger mode.  By default, every minute with&#xa; all days of week selected.
</description>
<return>
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.make(javax.baja.sys.BRelTime) -->
<method name="make"  public="true" static="true">
<description>
Create an interval trigger that fires each time the specified interval&#xa; has elapsed.
</description>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
<description>
The amount of time between triggers.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.make(javax.baja.sys.BRelTime, javax.baja.util.BDaysOfWeekBits) -->
<method name="make"  public="true" static="true">
<description>
Create an interval trigger that fires each time the specified interval&#xa; has elapsed, but only on the specified days of the week.
</description>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
<description>
The amount of time between triggers.
</description>
</parameter>
<parameter name="daysOfWeek">
<type class="javax.baja.util.BDaysOfWeekBits"/>
<description>
The days of the week that the trigger will fire.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.make(javax.baja.sys.BTime, javax.baja.sys.BTime, javax.baja.sys.BRelTime, javax.baja.util.BDaysOfWeekBits) -->
<method name="make"  public="true" static="true">
<description>
Create an interval trigger that fires each time the specified interval&#xa; has elapsed, but only between the specified times on the specified&#xa; days of the week.
</description>
<parameter name="startTime">
<type class="javax.baja.sys.BTime"/>
<description>
The start time of the active range.
</description>
</parameter>
<parameter name="endTime">
<type class="javax.baja.sys.BTime"/>
<description>
The end time of the active range.
</description>
</parameter>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
<description>
The amount of time between triggers.
</description>
</parameter>
<parameter name="daysOfWeek">
<type class="javax.baja.util.BDaysOfWeekBits"/>
<description>
The days of the week that the trigger will fire.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.make(boolean, javax.baja.sys.BTime, javax.baja.sys.BTime, javax.baja.sys.BRelTime, javax.baja.util.BDaysOfWeekBits) -->
<method name="make"  public="true" static="true">
<description>
Create an interval trigger that fires each time the specified interval&#xa; has elapsed.
</description>
<parameter name="rangeEnabled">
<type class="boolean"/>
<description>
Should the start and end times be enforced.
</description>
</parameter>
<parameter name="startTime">
<type class="javax.baja.sys.BTime"/>
<description>
The start time of the active range.
</description>
</parameter>
<parameter name="endTime">
<type class="javax.baja.sys.BTime"/>
<description>
The end time of the active range.
</description>
</parameter>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
<description>
The amount of time between triggers.
</description>
</parameter>
<parameter name="daysOfWeek">
<type class="javax.baja.util.BDaysOfWeekBits"/>
<description>
The days of the week that the trigger will fire.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getDisplayName(javax.baja.sys.Context) -->
<method name="getDisplayName"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.isRangeEnabled() -->
<method name="isRangeEnabled"  public="true">
<description>
Is the time of day range enabled?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getStartTime() -->
<method name="getStartTime"  public="true">
<description>
Get the start time of the active range.
</description>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getEndTime() -->
<method name="getEndTime"  public="true">
<description>
Get the end time of the active range.
</description>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getInterval() -->
<method name="getInterval"  public="true">
<description>
Get the amount of time between triggers.
</description>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getDaysOfWeek() -->
<method name="getDaysOfWeek"  public="true">
<description>
Get the days of the week that the trigger will fire.
</description>
<return>
<type class="javax.baja.util.BDaysOfWeekBits"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.makeScheduler(javax.baja.control.trigger.BTimeTrigger) -->
<method name="makeScheduler"  public="true">
<description/>
<parameter name="trigger">
<type class="javax.baja.control.trigger.BTimeTrigger"/>
</parameter>
<return>
<type class="javax.baja.control.trigger.TriggerScheduler"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.hashCode() -->
<method name="hashCode"  public="true">
<description>
Hashcode implementation.&#xa; Added override for this method in Niagara 3.4.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.encodeToString() -->
<method name="encodeToString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.getType() -->
<method name="getType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.control.trigger.BIntervalTriggerMode"/>
<description/>
</field>

<!-- javax.baja.control.trigger.BIntervalTriggerMode.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
