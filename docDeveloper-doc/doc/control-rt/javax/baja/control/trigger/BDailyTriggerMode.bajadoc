<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="control" runtimeProfile="rt" qualifiedName="javax.baja.control.trigger.BDailyTriggerMode" name="BDailyTriggerMode" packageName="javax.baja.control.trigger" public="true" final="true">
<description>
BDailyTriggerMode allows the trigger to be fired at a specific time&#xa; on selected days of the week.  It also provides randomization interval&#xa; so that the trigger is not fired at exactly the same time every day.&#xa; &lt;p&gt;&#xa; When the next trigger time is computed, a random amount of time between&#xa; zero milliseconds and the randomization interval is added to the&#xa; to configured time of day.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">07 Jan 2004</tag>
<tag name="@version">$Revision: 11$ $Date: 4/20/09 5:27:05 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.control.trigger.BTriggerMode"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.control.trigger.BDailyTriggerMode.make() -->
<method name="make"  public="true" static="true">
<description>
Create a default instance.  2:00AM with all days of week&#xa; selected and no randomization.
</description>
<return>
<type class="javax.baja.control.trigger.BDailyTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.make(javax.baja.sys.BTime) -->
<method name="make"  public="true" static="true">
<description>
Create a new fixed daily source at the specified time on&#xa; all days of the week.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
</parameter>
<return>
<type class="javax.baja.control.trigger.BDailyTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.make(javax.baja.sys.BTime, javax.baja.util.BDaysOfWeekBits) -->
<method name="make"  public="true" static="true">
<description>
Create a new daily trigger time at the specified time on&#xa; the specified days of the week.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day that the trigger will fire.
</description>
</parameter>
<parameter name="daysOfWeek">
<type class="javax.baja.util.BDaysOfWeekBits"/>
<description>
The days of the week that the trigger will fire.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BDailyTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.make(javax.baja.sys.BTime, javax.baja.util.BDaysOfWeekBits, javax.baja.sys.BRelTime) -->
<method name="make"  public="true" static="true">
<description>
Create a new fixed daily source at the specified time on&#xa; the specified days of the week.
</description>
<parameter name="timeOfDay">
<type class="javax.baja.sys.BTime"/>
<description>
The time of day that the trigger will fire.  This&#xa;   time may differ from the calculated trigger time by as much as&#xa;   the randomization interval.
</description>
</parameter>
<parameter name="daysOfWeek">
<type class="javax.baja.util.BDaysOfWeekBits"/>
<description>
The days of the week that the trigger will fire.
</description>
</parameter>
<parameter name="randInterval">
<type class="javax.baja.sys.BRelTime"/>
<description>
The randomization interval.  When the next&#xa;   time is calculated, a random amount of time between zero milliseconds&#xa;   and the randomization interval is added to the timeOfDay.
</description>
</parameter>
<return>
<type class="javax.baja.control.trigger.BDailyTriggerMode"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.getDisplayName(javax.baja.sys.Context) -->
<method name="getDisplayName"  public="true">
<description>
Get the display name for this trigger time.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.getTimeOfDay() -->
<method name="getTimeOfDay"  public="true">
<description>
Get the time of day that the trigger will fire.
</description>
<return>
<type class="javax.baja.sys.BTime"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.getDaysOfWeek() -->
<method name="getDaysOfWeek"  public="true">
<description>
Get the days of the week that the trigger will fire.
</description>
<return>
<type class="javax.baja.util.BDaysOfWeekBits"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.getRandomizationInterval() -->
<method name="getRandomizationInterval"  public="true">
<description>
Get the randomization interval.  When the next time is calculated,&#xa; a random amount of time between zero milliseconds&#xa; and the randomization interval is added to the timeOfDay.
</description>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.makeScheduler(javax.baja.control.trigger.BTimeTrigger) -->
<method name="makeScheduler"  public="true">
<description>
Make a scheduler for this mode.
</description>
<parameter name="trigger">
<type class="javax.baja.control.trigger.BTimeTrigger"/>
</parameter>
<return>
<type class="javax.baja.control.trigger.TriggerScheduler"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.hashCode() -->
<method name="hashCode"  public="true">
<description>
Hashcode implementation.&#xa; Added override for this method in Niagara 3.4.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description/>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<description/>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<description/>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.encodeToString() -->
<method name="encodeToString"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<description/>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.getType() -->
<method name="getType"  public="true">
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.control.trigger.BDailyTriggerMode.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.control.trigger.BDailyTriggerMode"/>
<description/>
</field>

<!-- javax.baja.control.trigger.BDailyTriggerMode.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
