<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="net" runtimeProfile="rt" qualifiedName="javax.baja.net.HttpsConnection" name="HttpsConnection" packageName="javax.baja.net" public="true">
<description>
HttpsConnection allows client applications to submit requests to&#xa; an HTTP server.
</description>
<tag name="@author">John Sublett on 20 Sep 2000</tag>
<tag name="@since">Niagara 3.0</tag>
<extends>
<type class="javax.baja.net.HttpConnection"/>
</extends>
<!-- javax.baja.net.HttpsConnection(javax.baja.naming.BHost, int, java.lang.String, javax.net.SocketFactory) -->
<constructor name="HttpsConnection" public="true">
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
</parameter>
<parameter name="port">
<type class="int"/>
</parameter>
<parameter name="uri">
<type class="java.lang.String"/>
</parameter>
<parameter name="socketFactory">
<type class="javax.net.SocketFactory"/>
</parameter>
<description>
Constructor.
</description>
</constructor>

<!-- javax.baja.net.HttpsConnection(javax.baja.naming.BHost, int, java.lang.String) -->
<constructor name="HttpsConnection" public="true">
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
</parameter>
<parameter name="port">
<type class="int"/>
</parameter>
<parameter name="uri">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.net.HttpsConnection(javax.baja.naming.BHost, int, java.lang.String, java.lang.String) -->
<constructor name="HttpsConnection" public="true">
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
</parameter>
<parameter name="port">
<type class="int"/>
</parameter>
<parameter name="uri">
<type class="java.lang.String"/>
</parameter>
<parameter name="clientAlias">
<type class="java.lang.String"/>
</parameter>
<throws>
<type class="java.lang.Exception"/>
</throws>
<description/>
</constructor>

<!-- javax.baja.net.HttpsConnection.post(javax.baja.naming.BHost, int, java.lang.String, java.lang.String, byte[]) -->
<method name="post"  public="true" static="true">
<description>
Post the specified buffer to the server.
</description>
<parameter name="host">
<type class="javax.baja.naming.BHost"/>
<description>
The destination host.
</description>
</parameter>
<parameter name="port">
<type class="int"/>
<description>
The destination port.
</description>
</parameter>
<parameter name="uri">
<type class="java.lang.String"/>
<description>
The uri for the posted resource.
</description>
</parameter>
<parameter name="contentType">
<type class="java.lang.String"/>
<description>
The mime type of the posted resource.
</description>
</parameter>
<parameter name="buf">
<type class="byte" dimension="1"/>
<description>
The content buffer.
</description>
</parameter>
<return>
<type class="int"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.connect(long, java.io.InputStream) -->
<method name="connect"  public="true" synchronized="true">
<description/>
<parameter name="contentLength">
<type class="long"/>
</parameter>
<parameter name="stream">
<type class="java.io.InputStream"/>
</parameter>
<return>
<type class="int"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.connect(int) -->
<method name="connect"  public="true" synchronized="true">
<description>
Open the connection.  If doAuthenticate is&#xa; true, authentication requests will result&#xa; in an automatic retry using the userName and&#xa; password.
</description>
<tag name="@since">Niagara 3.6</tag>
<parameter name="timeout">
<type class="int"/>
<description>
in milliseconds
</description>
</parameter>
<return>
<type class="int"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.handleProxyAuth(long) -->
<method name="handleProxyAuth"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="contentLength">
<type class="long"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.net.HttpsConnection.newRequest(java.lang.String, long, java.io.InputStream) -->
<method name="newRequest"  public="true" synchronized="true">
<description>
Initiate a new request on the same connection.
</description>
<parameter name="uri">
<type class="java.lang.String"/>
</parameter>
<parameter name="contentLength">
<type class="long"/>
</parameter>
<parameter name="stream">
<type class="java.io.InputStream"/>
</parameter>
<return>
<type class="int"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.checkError() -->
<method name="checkError"  protected="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.net.ssl.SSLException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.getDefaultSocketFactory() -->
<method name="getDefaultSocketFactory"  public="true" static="true">
<description/>
<return>
<type class="javax.net.SocketFactory"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.net.HttpsConnection.getDefaultSocketFactory(java.lang.String) -->
<method name="getDefaultSocketFactory"  public="true" static="true">
<description/>
<parameter name="clientAlias">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.net.SocketFactory"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

</class>
</bajadoc>
