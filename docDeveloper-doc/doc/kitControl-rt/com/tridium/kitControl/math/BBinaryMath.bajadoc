<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="kitControl" runtimeProfile="rt" qualifiedName="com.tridium.kitControl.math.BBinaryMath" name="BBinaryMath" packageName="com.tridium.kitControl.math" public="true" abstract="true">
<description>
BBinaryMath is the superclass of all Baja math objects that&#xa; operate on a pair of input values.  BBinaryMath objects always&#xa; require two valid inputs.  If either input is null, the output&#xa; will be Double.NaN and null status.  If either input is invalid&#xa; but not null, the output will Double.NaN and the logical OR of &#xa; the status bits
</description>
<tag name="@author">Dan Giorgis</tag>
<tag name="@creation">8 Nov 00</tag>
<tag name="@version">$Revision: 27$ $Date: 3/30/2004 3:41:35 PM$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="com.tridium.kitControl.math.BMath"/>
</extends>
<property name="inA" flags="s">
<type class="javax.baja.status.BStatusNumeric"/>
<description>
Slot for the &lt;code&gt;inA&lt;/code&gt; property.&#xa; Input A
</description>
<tag name="@see">#getInA</tag>
<tag name="@see">#setInA</tag>
</property>

<property name="inB" flags="s">
<type class="javax.baja.status.BStatusNumeric"/>
<description>
Slot for the &lt;code&gt;inB&lt;/code&gt; property.&#xa; Input B
</description>
<tag name="@see">#getInB</tag>
<tag name="@see">#setInB</tag>
</property>

</class>
</bajadoc>
