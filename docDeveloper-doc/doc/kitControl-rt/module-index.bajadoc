<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<module name="kitControl" runtimeProfile="rt" bajaVersion="0" vendor="Tridium" vendorVersion="4.13.3.48">
<description>Library of Control Components</description>
<package name="com.tridium.kitControl"/>
<package name="com.tridium.kitControl.logic"><description>&lt;p&gt;This package provides classes for logic control points.</description></package>
<package name="com.tridium.kitControl.enums"/>
<package name="com.tridium.kitControl.conversion"/>
<package name="com.tridium.kitControl.math"><description>&lt;p&gt;This package provides classes for math control points.</description></package>
<package name="com.tridium.kitControl.energy"/>
<package name="com.tridium.kitControl.constants"/>
<package name="com.tridium.kitControl.timer"/>
<package name="com.tridium.kitControl.hvac"/>
<package name="com.tridium.kitControl.util"/>
<class packageName="com.tridium.kitControl.math" name="BAbsValue"><description>BAbsValue performs the operation out = abs(inA)&#xa; (absolute value of inA)</description></class>
<class packageName="com.tridium.kitControl.math" name="BAdd"><description>BAdd performs the operation out = (inA + inB + inC + inD)</description></class>
<class packageName="com.tridium.kitControl.enums" name="BAlarmCountEnum"><description>The BAlarmCountEnum class provides enumeration for schedule overriding.</description></class>
<class packageName="com.tridium.kitControl" name="BAlarmCountToRelay"><description>BAlarmCountToRelay</description></class>
<class packageName="com.tridium.kitControl.logic" name="BAnd"><description>BAnd performs a logical AND on all inputs and writes&#xa; the result to the out property.</description></class>
<class packageName="com.tridium.kitControl.math" name="BArcCosine"><description>BArcCosine performs the operation out = acos(inA)</description></class>
<class packageName="com.tridium.kitControl.math" name="BArcSine"><description>BArcSine performs the operation out = asin(inA)</description></class>
<class packageName="com.tridium.kitControl.math" name="BArcTangent"><description>BArcTangent performs the operation out = atan(inA)</description></class>
<class packageName="com.tridium.kitControl.math" name="BAverage"><description>BAverage determines the average value of valid inputs and&#xa; writes that value to out.</description></class>
<class packageName="com.tridium.kitControl.math" name="BBinaryMath"><description>BBinaryMath is the superclass of all Baja math objects that&#xa; operate on a pair of input values.</description></class>
<class packageName="com.tridium.kitControl.constants" name="BBooleanConst"><description>Boolean constant object</description></class>
<class packageName="com.tridium.kitControl.timer" name="BBooleanDelay"><description>BBooleanDelay is a component that provices delayOn and delayOff timing.</description></class>
<class packageName="com.tridium.kitControl.util" name="BBooleanLatch"><description>BBooleanLatch is used to latch a boolean value on the rising edge of the Clock property.</description></class>
<class packageName="com.tridium.kitControl.util" name="BBooleanSelect"><description>BBooleanSelect uses a enum value to select 1 of 10 possible boolean inputs</description></class>
<class packageName="com.tridium.kitControl.util" name="BBooleanSwitch"><description>BBooleanSwitch uses a boolean to switch between two booleans.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BBooleanToStatusBoolean"><description>BBooleanToStatusBoolean is a component that converts a boolean to a statusBoolean.</description></class>
<class packageName="com.tridium.kitControl.util" name="BBqlExprComponent"><description>BQL Expression Component</description></class>
<class packageName="com.tridium.kitControl" name="BChangeOfStateCountAlarmAlgorithm"><description>BChangeOfStateCountAlarmAlgorithm implements a standard out-of-range&#xa; alarming algorithm</description></class>
<class packageName="com.tridium.kitControl.logic" name="BComparison"><description>BComparison is an abstract superclass for mathematical &#xa; operations such as A &gt; B, A &gt;= B, etc.</description></class>
<class packageName="com.tridium.kitControl.math" name="BCosine"><description>BCosine performs the operation out = cos(inA)</description></class>
<class packageName="com.tridium.kitControl.util" name="BCounter"><description>BCounter is a component that count boolean input transitions.</description></class>
<class packageName="com.tridium.kitControl.timer" name="BCurrentTime"><description>BCurrentTime is a component exposes the current time as a BAbsTime.</description></class>
<class packageName="com.tridium.kitControl.util" name="BDecaInputNumeric"><description>BDecaInputNumeric is the base class for 10 input numeric objects.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BDegreeDays"><description>Degree Day Calculation object</description></class>
<class packageName="com.tridium.kitControl.util" name="BDigitalInputDemux"><description>Analogue to Digital Demultiplexor</description></class>
<class packageName="com.tridium.kitControl.enums" name="BDisableAction"><description>BDisableAction is a BEnum containing values for the action that&#xa; should be taken when the loop is disabled.</description></class>
<class packageName="com.tridium.kitControl" name="BDiscreteTotalizerAlarmAlgorithm"><description>BDiscreteTotalizerAlarmAlgorithm implements a standard out-of-range&#xa; alarming algorithm</description></class>
<class packageName="com.tridium.kitControl.math" name="BDivide"><description>BDivide performs the operation out = (inA / inB)&#xa;&#xa; If either input is Double.NaN, the output will be&#xa; Double.NaN.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BDoubleToStatusNumeric"><description>BDoubleToStatusNumeric is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl" name="BElapsedActiveTimeAlarmAlgorithm"><description>BElapsedActiveTimeAlarmAlgorithm implements a standard out-of-range&#xa; alarming algorithm</description></class>
<class packageName="com.tridium.kitControl.energy" name="BElectricalDemandLimit"><description>Electrictial Demand limit object&#xa;   On each new minute, this object predicts a demand average of a sliding window&#xa;   interval (the length of which is user defined) by combining projected usage&#xa;   with historical samplings and averaging over the interval.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BEnglishMetric"><description>BEnglishMetric is an BEnum that represents valid Baja Secure&#xa; values</description></class>
<class packageName="com.tridium.kitControl.constants" name="BEnumConst"><description>Enum constant object</description></class>
<class packageName="com.tridium.kitControl.util" name="BEnumLatch"><description>BEnumLatch is used to latch an enum value on the rising edge of the Clock property.</description></class>
<class packageName="com.tridium.kitControl.util" name="BEnumSelect"><description>BEnumSelect uses a numeric to switch between multiple numerics.</description></class>
<class packageName="com.tridium.kitControl.util" name="BEnumSwitch"><description>BEnumSwitch uses a boolean to switch between two StatusEnums.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BEnumToStatusEnum"><description>BEnumToStatusEnum is a component that converts a enum to a statusEnum.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BEqual"><description>BEqual performs the operation A == B.</description></class>
<class packageName="com.tridium.kitControl.math" name="BExponential"><description>BExponential performs the operation out = e ^ inA &#xa; (e raised in the inA power)</description></class>
<class packageName="com.tridium.kitControl" name="BExtensionName"><description>BExtensionName is the struct added to support selecting an extension &#xa; by name.</description></class>
<class packageName="com.tridium.kitControl.math" name="BFactorial"><description>BFactorial performs the factorial operation, out = inA!</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BFloatToStatusNumeric"><description>BFloatToStatusNumeric is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BGreaterThan"><description>BGreaterThan performs the operation A &amp;gt; B.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BGreaterThanEqual"><description>BGreaterThanEqual performs the operation A &amp;gt;= B.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BIntToStatusNumeric"><description>BIntToStatusNumeric is a component that converts a integer to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl" name="BInterstartDelayControl"><description>BInterstartDelayControl - No other object using the same delay master &#xa; can start for delay time after this object starts&#xa; If delay is not defined, the default delay on the master will be used.</description></class>
<class packageName="com.tridium.kitControl" name="BInterstartDelayMaster"><description>BInterstartDelayMaster&#xa;&#xa; This class is just a rough first hack to test the&#xa; extension mechanism.</description></class>
<class packageName="com.tridium.kitControl" name="BKitBooleanPoint"><description>BKitNumericPoint is the abstract superclass of all kitControl&#xa; numeric points.</description></class>
<class packageName="com.tridium.kitControl" name="BKitEnumPoint"><description>BKitEnumPoint is the abstract superclass of all kitControl&#xa; enum points.</description></class>
<class packageName="com.tridium.kitControl" name="BKitNumeric"><description>BKitNumeric is the abstract superclass of all kitControl&#xa; numeric points.</description></class>
<class packageName="com.tridium.kitControl" name="BKitNumericPoint"><description>BKitNumericPoint is the abstract superclass of all kitControl&#xa; numeric points.</description></class>
<class packageName="com.tridium.kitControl.util" name="BLatch"><description>BLatch is the base class for latches.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BLeadLagCycles"><description>BLeadLagCycles is a component that can provide lead/lag control of 2 - 10 loads &#xa; to balance start cycles.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BLeadLagRuntime"><description>BLeadLagRuntime is a component that can provide lead/lag control of 2 - 10 loads &#xa; to balance start cycles.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BLessThan"><description>BLessThan performs the operation A &amp;lt; B.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BLessThanEqual"><description>BLessThan performs the operation A &amp;lt;= B.</description></class>
<class packageName="com.tridium.kitControl.math" name="BLogBase10"><description>BLogBase10 performs the operation out = log10(inA)&#xa; (log base 10 of inA)</description></class>
<class packageName="com.tridium.kitControl.math" name="BLogNatural"><description>BLogNatural performs the operation out = ln(inA)&#xa; (log base e of inA)</description></class>
<class packageName="com.tridium.kitControl.logic" name="BLogic"><description>BLogic is the superclass of all Baja objects that&#xa; perform logical operations on a set of input&#xa; values.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BLongToStatusNumeric"><description>BLongToStatusNumeric is a component that converts a integer to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BLoopAction"><description>BLoopAction is a BEnum containing values for direct (direct) &#xa; and reverse action PID loop logic</description></class>
<class packageName="com.tridium.kitControl" name="BLoopAlarmAlgorithm"><description>BLoopAlarmAlgorithm implements a standard out-of-range&#xa; alarming algorithm</description></class>
<class packageName="com.tridium.kitControl" name="BLoopPoint"><description>The BLoopPoint class implements a simple PID control loop.</description></class>
<class packageName="com.tridium.kitControl.math" name="BMath"><description>BMath is the abstract superclass of all Baja math &#xa; objects.</description></class>
<class packageName="com.tridium.kitControl.math" name="BMaximum"><description>BMaximum determines the maximum value of valid inputs and&#xa; writes that value to out.</description></class>
<class packageName="com.tridium.kitControl.util" name="BMinMaxAvg"><description>BMinMaxAvg uses a numeric to switch between multiple numerics.</description></class>
<class packageName="com.tridium.kitControl.math" name="BMinimum"><description>BMinimum determines the maximum value of valid inputs and&#xa; writes that value to out.</description></class>
<class packageName="com.tridium.kitControl.math" name="BModulus"><description>BModulus performs the JAVA  modulus operation, out = (inA % inB)</description></class>
<class packageName="com.tridium.kitControl.util" name="BMultiVibrator"><description>BMultiVibrator generates a repeating pulse train</description></class>
<class packageName="com.tridium.kitControl.math" name="BMultiply"><description>BMultiply performs the calculation out = inA * inB * inC * inD.</description></class>
<class packageName="com.tridium.kitControl.util" name="BMuxSwitch"><description>BMuxSwitch is superclass for numeric, boolean, enum &amp; string muxes.</description></class>
<class packageName="com.tridium.kitControl.math" name="BNegative"><description>BNegative performs a unary minus, so that out = -inA</description></class>
<class packageName="com.tridium.kitControl.energy" name="BNightPurge"><description>Night Purge Component&#xa;&#xa;   This component uses the two sets of temperature and humidity inputs&#xa;   to find the air supply with the least amount of heat when the&#xa;   purgeEnabled input is &#x27;true&#x27;.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BNightPurgeMode"><description>BNightPurgeMode is an BEnum that defines operation modes of&#xa; the BNightPurge object.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BNot"><description>BAnd performs a logical NOT on all inputs and writes&#xa; the result to the out property.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BNotEqual"><description>BNotEqual performs the operation A != B.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BNullValueOverrideSelect"><description>BOccupied is an BEnum that represents valid Baja Occupied&#xa; values</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericBitAnd"><description>BNumericBitAnd performs a bit and of the in value and mask value..</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericBitOr"><description>BNumericBitOr performs a bit OR of the in value and mask value..</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericBitXor"><description>BNumericBitXor performs a bit XOR of the in value and mask value..</description></class>
<class packageName="com.tridium.kitControl.constants" name="BNumericConst"><description>Numeric constant object</description></class>
<class packageName="com.tridium.kitControl.timer" name="BNumericDelay"><description>BNumericDelay is a component that provides numeric delay / filtering for a numeric value.</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericLatch"><description>BNumericLatch is used to latch a numeric value on the rising edge of the Clock property.</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericMask"><description>BNumericMask is the base class for Numeric Bit Mask objects.</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericSelect"><description>BNumericSelect uses a numeric to switch between multiple numerics.</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericSwitch"><description>BNumericSwitch uses a boolean to switch between two numerics.</description></class>
<class packageName="com.tridium.kitControl.util" name="BNumericToBitsDemux"><description>BNumericToBitsDemux is a component which can break out&#xa;  BStatusNumeric value into individual bits (up to 32) and &#xa;  individual bytes (up to 4).</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BNumericUnitConverter"></class>
<class packageName="com.tridium.kitControl.enums" name="BOccupied"><description>BOccupied is an BEnum that represents valid Baja Occupied&#xa; values</description></class>
<class packageName="com.tridium.kitControl.enums" name="BOffHeatCool"><description>BOffHeatCool is an BEnum that represents Off Heat Cool selection&#xa; values</description></class>
<class packageName="com.tridium.kitControl.enums" name="BOffOn"><description>BOffOn is an BEnum that represents valid Baja OffOn&#xa; values</description></class>
<class packageName="com.tridium.kitControl.timer" name="BOneShot"><description>BOneShot is a component that provides a edge triggered one-shot.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BOptimizedStartStop"><description>Optimized Start Stop object&#xa;&#xa;   This object uses a space temperature input and area characteristics to &#xa;   calculate a leadtime in advance of a scheduled event that allows an &#xa;   early start to achieve a specified temperature range by occupancy time &#xa;   or an early stop operation without sacrificing the temperature range by &#xa;   unoccupancy time.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BOr"><description>BOr performs a logical OR on all valid inputs and writes&#xa; the result to the out property.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BOutsideAirOptimization"></class>
<class packageName="com.tridium.kitControl.enums" name="BOutsideAirOptimizationMode"><description>BOutsideAirOptimizationMode is an BEnum that defines operation modes of&#xa; the BOutsideAirOptimization object.</description></class>
<class packageName="com.tridium.kitControl.math" name="BPower"><description>BPower performs the operation out = (inA ^ inB) or &#xa; a raised to the b power.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BPsychrometric"><description>BPsychrometric Component</description></class>
<class packageName="com.tridium.kitControl.logic" name="BQuadLogic"><description>BQuad is the superclass of all Baja logic objects that&#xa; operate on up to four input values.</description></class>
<class packageName="com.tridium.kitControl.math" name="BQuadMath"><description>BQuadMath is the superclass of all Baja math objects that&#xa; operate on up to four input values.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BRaiseLower"><description>Raise Lower</description></class>
<class packageName="com.tridium.kitControl.enums" name="BRaiseLowerFunction"><description>The Raise Lower function enumeration</description></class>
<class packageName="com.tridium.kitControl.util" name="BRamp"><description>BRamp generates a &#x27;sawtooth&#x27; ramp function</description></class>
<class packageName="com.tridium.kitControl.util" name="BRampWaveform"></class>
<class packageName="com.tridium.kitControl.util" name="BRandom"><description>BRandom generates a random numer.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BReliability"><description>BReliability is an BEnum that represents valid Baja reliability&#xa; values&#xa;&#xa; FIXX - should this be an Enum -- will others want to extend it???</description></class>
<class packageName="com.tridium.kitControl.util" name="BReset"><description>This function performs a &#x22;reset&#x22; on the value inA.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BResetLimitsExceededMode"><description>This enum is used to specify the mode to use when either of the inputLowLimit&#xa; or inputHighLimit values for BReset is exceeded.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BSecure"><description>BSecure is an BEnum that represents valid Baja Secure&#xa; values</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BSequence"><description>BSequence is a component that 2 - 10 load sequence function.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BSequenceBinary"><description>BSequenceBinary is a component that 2 - 10 load binary sequence function.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BSequenceLinear"><description>BSequenceLinear is a component that 2 - 10 load linear sequence function.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BSetpointLoadShed"></class>
<class packageName="com.tridium.kitControl.energy" name="BSetpointOffset"><description>Degree Day Calculation object</description></class>
<class packageName="com.tridium.kitControl.energy" name="BShedControl"><description>Demand Shed Object&#xa;&#xa;   This object receives inputs from a network EDL source and a local EDL source that&#xa;   specify the number of load levels that should be shed.</description></class>
<class packageName="com.tridium.kitControl.math" name="BSine"><description>BSine performs the operation out = sin(inA)</description></class>
<class packageName="com.tridium.kitControl.util" name="BSineWave"><description>BSineWave generates a sine wave.</description></class>
<class packageName="com.tridium.kitControl.energy" name="BSlidingWindowDemandCalc"></class>
<class packageName="com.tridium.kitControl.math" name="BSquareRoot"><description>BSquareRoot performs the operation out = sqrt(inA)&#xa; (square root of inA)</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusBooleanToBoolean"><description>BStatusBooleanToBoolean is a component that converts a statusNumeric to a int.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStatusDemux"><description>BStatusDemux will decode the status flags of&#xa;   its inputs and expose as individual StatusBoolean&#xa;   outputs.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusEnumToEnum"><description>BStatusEnumToEnum is a component that converts a statusEnum to a DynamicEnum.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusEnumToInt"><description>BStatusEnumToInt is a component that converts a StatusEnum to a Integer.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusEnumToStatusBoolean"><description>BStatusEnumToStatusBoolean is a component that converts a StatusEnum to a StatusBoolean.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusEnumToStatusNumeric"><description>BStatusEnumToStatusNumeric is a component that converts a StatusEnum to a StatusNumeric.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusNumericToDouble"><description>BStatusNumericToDouble is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusNumericToFloat"><description>BStatusNumericToFloat is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusNumericToInt"><description>BStatusNumericToInt is a component that converts a statusNumeric to a int.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusNumericToStatusEnum"><description>BStatusNumericToStatusEnum is a component that converts a StatusNumeric to a StatusEnum.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusNumericToStatusString"><description>BStatusNumericToStatusString is a component that converts a StatusNumeric to a StatusString.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusStringToStatusNumeric"><description>BStatusStringToStatusNumeric is a component that converts a StatusString to a StatusNumeric.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStatusValueToValue"><description>BStatusNumericToDouble is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BStopRun"><description>BStopRun is an BEnum that represents valid Baja StopRun&#xa; values</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringConcat"><description>BStringConcat is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.constants" name="BStringConst"><description>String constant object</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringIndexOf"><description>BStringTest is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringLatch"><description>BStringLatch is used to latch a string value on the rising edge of the Clock property.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringLen"><description>BStringLen is a component that calculates the lenght of a string.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringSelect"><description>BStringSelect uses a numeric to switch between multiple strings.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringSubstring"><description>BStringSubstring is a component that return substring from of a string.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringTest"><description>BStringTest is a component that converts a float to a statusNumeric.</description></class>
<class packageName="com.tridium.kitControl.conversion" name="BStringToStatusString"><description>BStringToStatusString is a component that converts a string to a statusString.</description></class>
<class packageName="com.tridium.kitControl.util" name="BStringTrim"><description>BStringTrim is a component that trims string.</description></class>
<class packageName="com.tridium.kitControl.math" name="BSubtract"><description>BSubtract performs the operation out = (inA - inB)&#xa;&#xa; If either input is Double.NaN, the output will be&#xa; Double.NaN.</description></class>
<class packageName="com.tridium.kitControl.util" name="BSwitch"><description>BSwitch is the base class for muxes and demuxes&#xa;   It is a 3 to 10 position switch.</description></class>
<class packageName="com.tridium.kitControl.math" name="BTangent"><description>BTangent performs the operation out = tan(inA)</description></class>
<class packageName="com.tridium.kitControl.timer" name="BTimeDifference"><description>BTimeDifference will calculate the difference between two BAbsTime inputs in milliseconds.</description></class>
<class packageName="com.tridium.kitControl.hvac" name="BTstat"><description>BTstat models a two position thermostat&#xa; with setpoint and differential inputs.</description></class>
<class packageName="com.tridium.kitControl.enums" name="BTwoSpeed"><description>BTwoSpeed is an BEnum that represents valid Baja twospeed&#xa; values</description></class>
<class packageName="com.tridium.kitControl.math" name="BUnaryMath"><description>BUnaryMath is the superclass of all Baja math objects take&#xa; operate on a single input value.</description></class>
<class packageName="com.tridium.kitControl.logic" name="BXor"><description>BXor performs a logical XOR on all valid inputs and writes&#xa; the result to the out property.</description></class>
</module>
</bajadoc>
