<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BIHistorySource" name="BIHistorySource" packageName="javax.baja.history" public="true" interface="true" abstract="true" category="interface">
<description>
BIHistorySource is an interface implemented by objects that &#xa; create a history.  It is used to receive notification&#xa; that a BHistoryConfig property has changed.  When&#xa; a BHistoryConfig property changes, the config instance&#xa; checks to see if its parent is a BIHistorySource.  If so,&#xa; it notifies the parent that the config has changed.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">17 Apr 2003</tag>
<tag name="@version">$Revision: 1$ $Date: 4/17/03 11:50:53 AM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<!-- javax.baja.history.BIHistorySource.historyConfigChanged(javax.baja.history.BHistoryConfig, javax.baja.sys.Property) -->
<method name="historyConfigChanged"  public="true" abstract="true">
<description>
Receive notification that a history configuration has&#xa; changed.
</description>
<parameter name="config">
<type class="javax.baja.history.BHistoryConfig"/>
</parameter>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BIHistorySource.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
