<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.ext.BIntervalHistoryExt" name="BIntervalHistoryExt" packageName="javax.baja.history.ext" public="true" abstract="true">
<description>
BIntervalHistoryExt provides the basic interface needed to collect&#xa; history records on a fixed interval.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">18 Nov 2004</tag>
<tag name="@version">$Revision: 7$ $Date: 6/5/09 1:12:03 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.history.ext.BHistoryExt"/>
</extends>
<property name="interval" flags="">
<type class="javax.baja.sys.BRelTime"/>
<description>
Slot for the &lt;code&gt;interval&lt;/code&gt; property.&#xa; The amount of time between records.
</description>
<tag name="@see">#getInterval</tag>
<tag name="@see">#setInterval</tag>
</property>

<action name="intervalElapsed" flags="h">
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;intervalElapsed&lt;/code&gt; action.&#xa; Receive notification that the collection interval has expired and&#xa; it&#x27;s time to collect another record.
</description>
<tag name="@see">#intervalElapsed()</tag>
</action>

<!-- javax.baja.history.ext.BIntervalHistoryExt() -->
<constructor name="BIntervalHistoryExt" public="true">
<description/>
</constructor>

<!-- javax.baja.history.ext.BIntervalHistoryExt.getInterval() -->
<method name="getInterval"  public="true">
<description>
Get the &lt;code&gt;interval&lt;/code&gt; property.&#xa; The amount of time between records.
</description>
<tag name="@see">#interval</tag>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.setInterval(javax.baja.sys.BRelTime) -->
<method name="setInterval"  public="true">
<description>
Set the &lt;code&gt;interval&lt;/code&gt; property.&#xa; The amount of time between records.
</description>
<tag name="@see">#interval</tag>
<parameter name="v">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.intervalElapsed() -->
<method name="intervalElapsed"  public="true">
<description>
Invoke the &lt;code&gt;intervalElapsed&lt;/code&gt; action.&#xa; Receive notification that the collection interval has expired and&#xa; it&#x27;s time to collect another record.
</description>
<tag name="@see">#intervalElapsed</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.started() -->
<method name="started"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.stopped() -->
<method name="stopped"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.activated(javax.baja.sys.BAbsTime, javax.baja.sys.BAbsTime, javax.baja.status.BStatusValue) -->
<method name="activated"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="startTime">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<parameter name="currentTime">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<parameter name="value">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.deactivated(javax.baja.sys.BAbsTime, javax.baja.status.BStatusValue) -->
<method name="deactivated"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="currentTime">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<parameter name="value">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.pointChanged(javax.baja.sys.BAbsTime, javax.baja.status.BStatusValue) -->
<method name="pointChanged"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="timestamp">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<parameter name="out">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.writeRecord(javax.baja.sys.BAbsTime, javax.baja.status.BStatusValue) -->
<method name="writeRecord"  protected="true" abstract="true">
<description>
Write a record for the specified timestamp and value.
</description>
<parameter name="timestamp">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<parameter name="out">
<type class="javax.baja.status.BStatusValue"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.doIntervalElapsed() -->
<method name="doIntervalElapsed"  public="true">
<description>
Receive notification that the current interval has elasped.  This&#xa; causes a record to be written.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.clockChanged(javax.baja.sys.BRelTime) -->
<method name="clockChanged"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This callback is invoked when the system clock is modified.&#xa; The shift parameter specifies the positive or negative change&#xa; in the clock&#x27;s value.&#xa; Overridden here to reschedule the collection if necessary.
</description>
<parameter name="shift">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.changed(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="changed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Handle a property change.
</description>
<parameter name="p">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.updateStatus() -->
<method name="updateStatus"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Update the status for this extension.
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.ext.BIntervalHistoryExt.interval -->
<field name="interval"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;interval&lt;/code&gt; property.&#xa; The amount of time between records.
</description>
<tag name="@see">#getInterval</tag>
<tag name="@see">#setInterval</tag>
</field>

<!-- javax.baja.history.ext.BIntervalHistoryExt.intervalElapsed -->
<field name="intervalElapsed"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;intervalElapsed&lt;/code&gt; action.&#xa; Receive notification that the collection interval has expired and&#xa; it&#x27;s time to collect another record.
</description>
<tag name="@see">#intervalElapsed()</tag>
</field>

<!-- javax.baja.history.ext.BIntervalHistoryExt.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
