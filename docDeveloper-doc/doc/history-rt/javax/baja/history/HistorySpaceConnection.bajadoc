<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.HistorySpaceConnection" name="HistorySpaceConnection" packageName="javax.baja.history" public="true" interface="true" abstract="true" category="interface">
<description>
HistorySpaceConnection provides access to a HistorySpace. All reads, writes,&#xa; and deletes are done through the HistorySpaceConnection.&#xa;&#xa; Access methods from BIHistory and BHistorySpace in NiagaraAX have been moved&#xa; to HistorySpaceConnection for Niagara4.
</description>
<tag name="@author">Blake Puhak</tag>
<tag name="@creation">12/3/13</tag>
<tag name="@since">Niagara 4.0</tag>
<implements>
<type class="java.lang.AutoCloseable"/>
</implements>
<!-- javax.baja.history.HistorySpaceConnection.getHistory(javax.baja.history.BHistoryId) -->
<method name="getHistory"  public="true" abstract="true">
<description>
Return a &lt;code&gt;<see ref="javax.baja.history.BIHistory">BIHistory</see>&lt;/code&gt; with the specified historyId from the&#xa; &lt;code&gt;<see ref="javax.baja.history.BHistorySpace">BHistorySpace</see>&lt;/code&gt; that we&#x27;re connected to. This may open resources which&#xa; should be closed when no longer needed by calling&#xa; &lt;code&gt;<see ref="javax.baja.history.BIHistory#close()">BIHistory.close()</see>&lt;/code&gt;.
</description>
<parameter name="historyId">
<type class="javax.baja.history.BHistoryId"/>
<description>
the unique identifier of the target BIHistory.
</description>
</parameter>
<return>
<type class="javax.baja.history.BIHistory"/>
<description>
the BIHistory with the specified historyId or &lt;code&gt;null&lt;/code&gt; if the&#xa;  history is not found.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.getSummary(javax.baja.history.BIHistory) -->
<method name="getSummary"  public="true" abstract="true">
<description>
Get summary of the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to get the record count of.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistorySummary"/>
<description>
the HistorySummary of the specified history.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.getRecordCount(javax.baja.history.BIHistory) -->
<method name="getRecordCount"  public="true" abstract="true">
<description>
Get the number of records in the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to get the record count of.
</description>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.getFirstTimestamp(javax.baja.history.BIHistory) -->
<method name="getFirstTimestamp"  public="true" abstract="true">
<description>
Get the timestamp of the first record in the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to get the timestamp from.
</description>
</parameter>
<return>
<type class="javax.baja.sys.BAbsTime"/>
<description>
the timestamp of the first record in the specified history.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.getLastTimestamp(javax.baja.history.BIHistory) -->
<method name="getLastTimestamp"  public="true" abstract="true">
<description>
Get the timestamp of the last record in the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to get the timestamp from.
</description>
</parameter>
<return>
<type class="javax.baja.sys.BAbsTime"/>
<description>
the timestamp of the last record in the specified history.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.getLastRecord(javax.baja.history.BIHistory) -->
<method name="getLastRecord"  public="true" abstract="true">
<description>
Get the last record in the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to get the record from.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistoryRecord"/>
<description>
the last record in the specified history.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.append(javax.baja.history.BIHistory, javax.baja.history.BIHistoryRecordSet) -->
<method name="append"  public="true" abstract="true">
<description>
Append the specified records to the end of the history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
The history to append to.
</description>
</parameter>
<parameter name="newRecords">
<type class="javax.baja.history.BIHistoryRecordSet"/>
<description>
The records to append.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.update(javax.baja.history.BIHistory, javax.baja.history.BHistoryRecord) -->
<method name="update"  public="true" abstract="true">
<description>
Overwrite the specified record in the specified history.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
The history to update the record in.
</description>
</parameter>
<parameter name="record">
<type class="javax.baja.history.BHistoryRecord"/>
<description>
The record to update.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.scan(javax.baja.history.BIHistory) -->
<method name="scan"  public="true" abstract="true">
<description>
Get every record in the history.&#xa; &lt;p&gt;&#xa; This is equivalent to &lt;code&gt;timeQuery(null, null, descending)&lt;/code&gt;.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to query.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<type class="javax.baja.history.BHistoryRecord"/>
</args>
</parameterizedType>
<description>
Cursor of BHistoryRecords
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.scan(javax.baja.history.BIHistory, boolean) -->
<method name="scan"  public="true" abstract="true">
<description>
Get every record in the history.&#xa; &lt;p&gt;&#xa; This is equivalent to &lt;code&gt;timeQuery(null, null, descending)&lt;/code&gt;.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to query.
</description>
</parameter>
<parameter name="descending">
<type class="boolean"/>
<description>
if &lt;code&gt;true&lt;/code&gt; the records will be returned in&#xa;  descending order by timestamp.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<type class="javax.baja.history.BHistoryRecord"/>
</args>
</parameterizedType>
<description>
Cursor of BHistoryRecords
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.timeQuery(javax.baja.history.BIHistory, javax.baja.sys.BAbsTime, javax.baja.sys.BAbsTime) -->
<method name="timeQuery"  public="true" abstract="true">
<description>
Query the history based on a time range.&#xa; &lt;p&gt;&#xa; The result is inclusive of the end points.  If either&#xa; endpoint is &lt;code&gt;null&lt;/code&gt;, then the interval will&#xa; be considered open on that end, i.e. &lt;code&gt;query(null, null)&lt;/code&gt;&#xa; is equivalent to a &lt;code&gt;timeQuery(startTime, endTime, false)&lt;/code&gt;.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to query.
</description>
</parameter>
<parameter name="startTime">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The earliest time to include in the result.&#xa;                  If &lt;code&gt;null&lt;/code&gt;, then no lower bound is enforced.
</description>
</parameter>
<parameter name="endTime">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The latest time to include in the result.&#xa;                  If &lt;code&gt;null&lt;/code&gt;, then no upper bound is enforced.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<type class="javax.baja.history.BHistoryRecord"/>
</args>
</parameterizedType>
<description>
Returns a collection of the records that fall within&#xa;         the specified time range.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.timeQuery(javax.baja.history.BIHistory, javax.baja.sys.BAbsTime, javax.baja.sys.BAbsTime, boolean) -->
<method name="timeQuery"  public="true" abstract="true">
<description>
Query the history based on a time range.&#xa; &lt;p&gt;&#xa; The result is inclusive of the end points.  If either&#xa; endpoint is &lt;code&gt;null&lt;/code&gt;, then the interval will&#xa; be considered open on that end, i.e. &lt;code&gt;query(null, null)&lt;/code&gt;&#xa; is equivalent to a &lt;code&gt;timeQuery(startTime, endTime, false)&lt;/code&gt;.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to query.
</description>
</parameter>
<parameter name="startTime">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The earliest time to include in the result.&#xa;                  If &lt;code&gt;null&lt;/code&gt;, then no lower bound is enforced.
</description>
</parameter>
<parameter name="endTime">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The latest time to include in the result.&#xa;                  If &lt;code&gt;null&lt;/code&gt;, then no upper bound is enforced.
</description>
</parameter>
<parameter name="descending">
<type class="boolean"/>
<description>
if &lt;code&gt;true&lt;/code&gt; the records will be returned in&#xa;  descending order by timestamp.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<type class="javax.baja.history.BHistoryRecord"/>
</args>
</parameterizedType>
<description>
Returns a collection of the records that fall within&#xa;         the specified time range.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.flush(javax.baja.history.BIHistory) -->
<method name="flush"  public="true" abstract="true">
<description>
Commit any unsaved changes.
</description>
<parameter name="history">
<type class="javax.baja.history.BIHistory"/>
<description>
the history to flush.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.exists(javax.baja.history.BHistoryId) -->
<method name="exists"  public="true" abstract="true">
<description>
Determine whether a history exists with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
The unique identifier for the target history.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if a history exists for the specified&#xa;   id, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.history.HistorySpaceConnection.createHistory(javax.baja.history.BHistoryConfig) -->
<method name="createHistory"  public="true" abstract="true">
<description>
Create the specified history.
</description>
<parameter name="config">
<type class="javax.baja.history.BHistoryConfig"/>
<description>
The history configuration to use for the new history.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.deleteHistory(javax.baja.history.BHistoryId) -->
<method name="deleteHistory"  public="true" abstract="true">
<description>
Delete the history with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
The unique identifier for the target history.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.deleteHistories(javax.baja.naming.BOrd[]) -->
<method name="deleteHistories"  public="true" abstract="true">
<description>
Delete the histories with the specified ids.
</description>
<parameter name="ords">
<type class="javax.baja.naming.BOrd" dimension="1"/>
<description>
The ords of the histories to delete.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.renameHistory(javax.baja.history.BHistoryId, java.lang.String) -->
<method name="renameHistory"  public="true" abstract="true">
<description>
Rename the history with the specified history id.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
The id of the history to rename.
</description>
</parameter>
<parameter name="historyName">
<type class="java.lang.String"/>
<description>
The new name to assign to the history name.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.clearAllRecords(javax.baja.history.BHistoryId) -->
<method name="clearAllRecords"  public="true" abstract="true">
<description>
Clear all records from the specified history.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
the id of the history to clear.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.clearAllRecords(javax.baja.naming.BOrd[]) -->
<method name="clearAllRecords"  public="true" abstract="true">
<description>
Clear all records from the specified histories.
</description>
<parameter name="ords">
<type class="javax.baja.naming.BOrd" dimension="1"/>
<description>
The ords of the histories to clear.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.clearOldRecords(javax.baja.history.BHistoryId, javax.baja.sys.BAbsTime) -->
<method name="clearOldRecords"  public="true" abstract="true">
<description>
Clear all records from the specified history.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
The id of the history to clear.
</description>
</parameter>
<parameter name="before">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The earliest time to keep in the result.  Records&#xa;   before this time will be removed from the specified histories.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.clearOldRecords(javax.baja.naming.BOrd[], javax.baja.sys.BAbsTime) -->
<method name="clearOldRecords"  public="true" abstract="true">
<description>
Clear all records from the specified histories that are before the&#xa; specified time.
</description>
<parameter name="ords">
<type class="javax.baja.naming.BOrd" dimension="1"/>
<description>
The ords of the histories to clear.
</description>
</parameter>
<parameter name="before">
<type class="javax.baja.sys.BAbsTime"/>
<description>
The earliest time to keep in the result.  Records&#xa;   before this time will be removed from the specified histories.
</description>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.HistorySpaceConnection.close() -->
<method name="close"  public="true" abstract="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Close this connection to the HistorySpace.
</description>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
