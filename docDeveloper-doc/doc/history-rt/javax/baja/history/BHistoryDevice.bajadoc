<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BHistoryDevice" name="BHistoryDevice" packageName="javax.baja.history" public="true">
<description>
BHistoryDevice represents a source device for histories.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">27 Mar 2003</tag>
<tag name="@version">$Revision: 21$ $Date: 6/1/10 2:43:29 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BObject"/>
</extends>
<implements>
<type class="javax.baja.space.BISpaceNode"/>
</implements>
<implements>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<type class="javax.baja.history.BHistoryId"/>
</args>
</parameterizedType>
</implements>
<implements>
<parameterizedType class="javax.baja.bql.BIRelational">
<args>
<type class="javax.baja.sys.BIObject"/>
</args>
</parameterizedType>
</implements>
<implements>
<type class="javax.baja.security.BIProtected"/>
</implements>
<!-- javax.baja.history.BHistoryDevice(javax.baja.history.BHistorySpace, java.lang.String) -->
<constructor name="BHistoryDevice" public="true">
<parameter name="space">
<type class="javax.baja.history.BHistorySpace"/>
</parameter>
<parameter name="deviceName">
<type class="java.lang.String"/>
</parameter>
<description>
Constructor.
</description>
</constructor>

<!-- javax.baja.history.BHistoryDevice.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getSpace() -->
<method name="getSpace"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the space for this node.
</description>
<return>
<type class="javax.baja.space.BSpace"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getOrdInSession() -->
<method name="getOrdInSession"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return &lt;code&gt;getOrdInSpace()&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getOrdInSpace() -->
<method name="getOrdInSpace"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the ord which identifies this entry in its space.&#xa; This ord should be relative with the space as the base.&#xa; If not mounted then return null.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.isPendingMove() -->
<method name="isPendingMove"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
If this object is currently contained by the current Mark&#xa; and the mark is set to pending move, then this method returns&#xa; true.  In user interfaces this flag should be used to render&#xa; the object grayed out to illustrate that a cut operation has&#xa; been performed on the object, but that a paste operation&#xa; is needed to complete the move.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.setPendingMove(boolean) -->
<method name="setPendingMove"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Set the pending move flag.
</description>
<parameter name="pendingMove">
<type class="boolean"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getDeviceName() -->
<method name="getDeviceName"  public="true">
<description>
Get the device name.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavOrd() -->
<method name="getNavOrd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavName() -->
<method name="getNavName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the name to use for navigation.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavDisplayName(javax.baja.sys.Context) -->
<method name="getNavDisplayName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the display name to use for navigation.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavIcon() -->
<method name="getNavIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavDescription(javax.baja.sys.Context) -->
<method name="getNavDescription"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the description.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavParent() -->
<method name="getNavParent"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the parent in the nav tree.
</description>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.hasNavChildren() -->
<method name="hasNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Children are lazily loaded so always return true.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavChild(java.lang.String) -->
<method name="getNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.resolveNavChild(java.lang.String) -->
<method name="resolveNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavChildren() -->
<method name="getNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the children of this node.
</description>
<return>
<type class="javax.baja.nav.BINavNode" dimension="1"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getNavHashCode() -->
<method name="getNavHashCode"  public="true">
<description>
Get the hash code.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.addNavChild(javax.baja.nav.BINavNode) -->
<method name="addNavChild"  public="true">
<description>
Add the specified BINavNode to this container.
</description>
<parameter name="child">
<type class="javax.baja.nav.BINavNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.removeNavChild(javax.baja.nav.BINavNode) -->
<method name="removeNavChild"  public="true">
<description>
Add the specified BINavNode to this container.
</description>
<parameter name="child">
<type class="javax.baja.nav.BINavNode"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getCategoryMask() -->
<method name="getCategoryMask"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Files are mapped to categories by ord in &lt;code&gt;CategoryService.ordMap&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.category.BCategoryMask"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getAppliedCategoryMask() -->
<method name="getAppliedCategoryMask"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Files are mapped to categories by ord in &lt;code&gt;CategoryService.ordMap&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.category.BCategoryMask"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getPermissions(javax.baja.sys.Context) -->
<method name="getPermissions"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.security.BPermissions"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.canRead(javax.baja.naming.OrdTarget) -->
<method name="canRead"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.canWrite(javax.baja.naming.OrdTarget) -->
<method name="canWrite"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.canInvoke(javax.baja.naming.OrdTarget) -->
<method name="canInvoke"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getRelation(java.lang.String, javax.baja.sys.Context) -->
<method name="getRelation"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="id">
<type class="java.lang.String"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<parameterizedType class="javax.baja.collection.BITable">
<args>
<type class="javax.baja.sys.BIObject"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.cursor() -->
<method name="cursor"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<parameterizedType class="javax.baja.collection.TableCursor">
<args>
<type class="javax.baja.history.BHistoryId"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getColumns() -->
<method name="getColumns"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.collection.ColumnList"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getTableFacets() -->
<method name="getTableFacets"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BFacets"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getAgents(javax.baja.sys.Context) -->
<method name="getAgents"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the list of agents for this BObject.  The&#xa; default implementation of this method returns&#xa; &lt;code&gt;Registry.getAgents()&lt;/code&gt;
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.agent.AgentList"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.history.BHistoryDevice.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
