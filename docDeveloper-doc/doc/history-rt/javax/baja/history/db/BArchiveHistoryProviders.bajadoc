<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.db.BArchiveHistoryProviders" name="BArchiveHistoryProviders" packageName="javax.baja.history.db" public="true" final="true">
<description>
BArchiveHistoryProviders is a container for &lt;code&gt;<see ref="javax.baja.history.db.BArchiveHistoryProvider">BArchiveHistoryProvider</see>&lt;/code&gt;&#xa; instances installed in a station.
</description>
<tag name="@author">Scott Hoye on 03/22/2021</tag>
<tag name="@since">Niagara 4.11</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.util.BIRestrictedComponent"/>
</implements>
<!-- javax.baja.history.db.BArchiveHistoryProviders() -->
<constructor name="BArchiveHistoryProviders" public="true">
<description/>
</constructor>

<!-- javax.baja.history.db.BArchiveHistoryProviders.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.listProviders(boolean) -->
<method name="listProviders"  public="true">
<description>
Lookup and return a list of any optionally installed (dynamic)&#xa; &lt;code&gt;<see ref="javax.baja.history.db.BArchiveHistoryProvider">BArchiveHistoryProvider</see>&lt;/code&gt; children. When the operationalOnly&#xa; parameter is true, the returned list will be filtered to contain only&#xa; operational BArchiveHistoryProvider children.
</description>
<parameter name="operationalOnly">
<type class="boolean"/>
<description>
When true, only operational BArchiveHistoryProvider&#xa;                        children will be included in the result.  When&#xa;                        false, all BArchiveHistoryProvider children will be&#xa;                        returned, even those that are currently&#xa;                        nonoperational.
</description>
</parameter>
<return>
<parameterizedType class="java.util.List">
<args>
<type class="javax.baja.history.db.BArchiveHistoryProvider"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.isChildLegal(javax.baja.sys.BComponent) -->
<method name="isChildLegal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Only allow &lt;code&gt;<see ref="javax.baja.history.db.BArchiveHistoryProvider">BArchiveHistoryProvider</see>&lt;/code&gt; children
</description>
<parameter name="child">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.checkParentForRestrictedComponent(javax.baja.sys.BComponent, javax.baja.sys.Context) -->
<method name="checkParentForRestrictedComponent"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Prevent multiple BArchiveHistoryProviders container instances and ensure&#xa; only one (frozen) container can live under the BHistoryService.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.history.db.BArchiveHistoryProviders.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
