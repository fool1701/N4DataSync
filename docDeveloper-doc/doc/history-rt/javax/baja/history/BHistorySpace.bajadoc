<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BHistorySpace" name="BHistorySpace" packageName="javax.baja.history" public="true" abstract="true">
<description>
BHistorySpace is the space that manages access to histories&#xa; in a history database.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">05 Mar 2003</tag>
<tag name="@version">$Revision: 37$ $Date: 8/3/10 1:04:04 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.space.BSpace"/>
</extends>
<implements>
<type class="javax.baja.category.BICategorizable"/>
</implements>
<implements>
<type class="javax.baja.security.BIProtected"/>
</implements>
<implements>
<type class="javax.baja.sys.BIPropertySpace"/>
</implements>
<implements>
<type class="javax.baja.dataRecovery.BIDataRecoverySource"/>
</implements>
<annotation><type class="java.lang.SuppressWarnings"/>
<elementValue name="value">
<annotationValue kind="array">
<elementArray>
<annotationValue kind="expr">
<expression>&#x22;squid:S1448&#x22;</expression>
</annotationValue>
</elementArray>
</annotationValue>
</elementValue>
</annotation>
<!-- javax.baja.history.BHistorySpace() -->
<constructor name="BHistorySpace" public="true">
<description>
Constructor.
</description>
</constructor>

<!-- javax.baja.history.BHistorySpace.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.hasNavChildren() -->
<method name="hasNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Children are lazily loaded so always return true.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getNavChild(java.lang.String) -->
<method name="getNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.resolveNavChild(java.lang.String) -->
<method name="resolveNavChild"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Resolve the nav child with the specified name.
</description>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.nav.BINavNode"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getNavChildren() -->
<method name="getNavChildren"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get all of the nav children.
</description>
<return>
<type class="javax.baja.nav.BINavNode" dimension="1"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getOrdInSession() -->
<method name="getOrdInSession"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
The ord in the session is always &#x22;history:&#x22;.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getCategoryMask() -->
<method name="getCategoryMask"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Files are mapped to categories by ord in &lt;code&gt;CategoryService.ordMap&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.category.BCategoryMask"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getAppliedCategoryMask() -->
<method name="getAppliedCategoryMask"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Files are mapped to categories by ord in &lt;code&gt;CategoryService.ordMap&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.category.BCategoryMask"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getPermissions(javax.baja.sys.Context) -->
<method name="getPermissions"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.security.BPermissions"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.canRead(javax.baja.naming.OrdTarget) -->
<method name="canRead"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.canWrite(javax.baja.naming.OrdTarget) -->
<method name="canWrite"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.canInvoke(javax.baja.naming.OrdTarget) -->
<method name="canInvoke"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getConnection(javax.baja.sys.Context) -->
<method name="getConnection"  public="true" abstract="true">
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="javax.baja.history.HistorySpaceConnection"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getConnection(boolean, javax.baja.sys.Context) -->
<method name="getConnection"  public="true" final="true">
<description>
Create a connection to the history space, specifying whether or not&#xa; to exclude archive history data (e.g. history data archived to the cloud&#xa; or some other archive provider) during any subsequent queries run by the&#xa; connection.
</description>
<tag name="@since">Niagara 4.11</tag>
<parameter name="excludeArchiveData">
<type class="boolean"/>
<description>
When true, archive history data will not be used&#xa;                          by any queries run by the returned connection&#xa;                          (only local history data will be considered). When&#xa;                          false, archive history data will be used to&#xa;                          supplement local data for any queries run by the&#xa;                          returned connection.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The Context to use in association with the connection.
</description>
</parameter>
<return>
<type class="javax.baja.history.HistorySpaceConnection"/>
<description>
A connection to the history space.
</description>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getDeviceName() -->
<method name="getDeviceName"  public="true" abstract="true">
<description>
Get the name of the device that owns this history space.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.getHistoryIds(javax.baja.naming.BOrd) -->
<method name="getHistoryIds"  public="true">
<description>
Get a cursor of the history ids for the corresponding ord.&#xa; If the ord is to a history, then the only id in the cursor&#xa; is the history ord.  If the ord is to a history device,&#xa; then the cursor includes the ids of all histories for the device.
</description>
<parameter name="ord">
<type class="javax.baja.naming.BOrd"/>
<description>
An ord the specifies a set of ids either by&#xa;   device or history id.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<type class="javax.baja.history.BHistoryId"/>
</args>
</parameterizedType>
<description>
Returns a cursor of the history ids for the ord.
</description>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.listDevices() -->
<method name="listDevices"  public="true" abstract="true">
<description>
List the source devices for the histories in this space.
</description>
<return>
<type class="javax.baja.history.BHistoryDevice" dimension="1"/>
<description>
Returns an array of the names for devices that have&#xa;   histories in this space.
</description>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.listHistories(javax.baja.history.BHistoryDevice) -->
<method name="listHistories"  public="true" abstract="true">
<description>
List this histories that are stored in this space for&#xa; the specified device.
</description>
<parameter name="device">
<type class="javax.baja.history.BHistoryDevice"/>
</parameter>
<return>
<type class="javax.baja.history.BIHistory" dimension="1"/>
<description>
Returns an array of history ids for the histories&#xa;   that originated from the specified device.
</description>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.deviceExists(java.lang.String) -->
<method name="deviceExists"  public="true" abstract="true">
<description>
Determine whether this space contains histories from the&#xa; specified device.
</description>
<parameter name="deviceName">
<type class="java.lang.String"/>
<description>
The name of the device.
</description>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.getDevice(java.lang.String) -->
<method name="getDevice"  public="true" abstract="true">
<description>
Get the history device with the specified name.
</description>
<parameter name="deviceName">
<type class="java.lang.String"/>
<description>
The name of the device.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistoryDevice"/>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.getConfig(javax.baja.history.BHistoryId) -->
<method name="getConfig"  public="true" abstract="true">
<description>
Get the configuration for the history with the specified id.
</description>
<parameter name="id">
<type class="javax.baja.history.BHistoryId"/>
<description>
The unique identifier for the target history.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistoryConfig"/>
<description>
Returns the configuration for the specified history&#xa;   or null if the history is not found.
</description>
</return>
<throws>
<type class="javax.baja.history.HistoryException"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the icon.
</description>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.findObjects(javax.baja.sys.Type, javax.baja.naming.BOrd, java.lang.String, javax.baja.sys.Context) -->
<method name="findObjects"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Find the histories with a property with the specified name.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="objectType">
<type class="javax.baja.sys.Type"/>
<description>
The common record type of the histories to return in the result.&#xa;   If null, the result is not filtered by history record type.
</description>
</parameter>
<parameter name="baseOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The base ord from which to start&#xa;   searching (this must be an Ord resolving to a particular history device, or single history).&#xa;   Only histories that are descendants of this base history device will be included in the result.&#xa;   If null, the search will include the entire history space and span all history devices.
</description>
</parameter>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to search for.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the search.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.findObjects(javax.baja.sys.Type, javax.baja.naming.BOrd, java.lang.String, javax.baja.sys.Type, javax.baja.sys.Context) -->
<method name="findObjects"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Find the histories with a property with the specified name and type.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="objectType">
<type class="javax.baja.sys.Type"/>
<description>
The common record type of the histories to return in the result.&#xa;   If null, the result is not filtered by history record type.
</description>
</parameter>
<parameter name="baseOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The base ord from which to start&#xa;   searching (this must be an Ord resolving to a particular history device, or single history).&#xa;   Only histories that are descendants of this base history device will be included in the result.&#xa;   If null, the search will include the entire history space and span all history devices.
</description>
</parameter>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to search for.
</description>
</parameter>
<parameter name="propertyType">
<type class="javax.baja.sys.Type"/>
<description>
The type of the property to search for.  If null,&#xa;   any types will be included that have the given propertyName.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the search.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.findObjects(javax.baja.sys.Type, javax.baja.naming.BOrd, java.lang.String, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="findObjects"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Find the histories with the specified property name and value.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="objectType">
<type class="javax.baja.sys.Type"/>
<description>
The common record type of the histories to return in the result.&#xa;   If null, the result is not filtered by history record type.
</description>
</parameter>
<parameter name="baseOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The base ord from which to start&#xa;   searching (this must be an Ord resolving to a particular history device, or single history).&#xa;   Only histories that are descendants of this base history device will be included in the result.&#xa;   If null, the search will include the entire history space and span all history devices.
</description>
</parameter>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to search for.
</description>
</parameter>
<parameter name="propertyValue">
<type class="javax.baja.sys.BValue"/>
<description>
The value of the property to search for.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the search.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.findDistinctValues(javax.baja.sys.Type, javax.baja.naming.BOrd, java.lang.String, javax.baja.sys.Context) -->
<method name="findDistinctValues"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Find the distinct values for the specified property name within the history space.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="objectType">
<type class="javax.baja.sys.Type"/>
<description>
The common record type of the histories used to compute the result.&#xa;   If null, the result is not filtered by history record type.
</description>
</parameter>
<parameter name="baseOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The base ord from which to start&#xa;   searching (this must be an Ord resolving to a particular history device, or single history).&#xa;   Only histories that are descendants of this base history device will be included in the result.&#xa;   If null, the search will include the entire history space and span all history devices.
</description>
</parameter>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to search for.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the search.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.findDistinctValues(javax.baja.sys.Type, javax.baja.naming.BOrd, java.lang.String, javax.baja.sys.Type, javax.baja.sys.Context) -->
<method name="findDistinctValues"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Find the distinct values for the specified property name and type within the history space.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="objectType">
<type class="javax.baja.sys.Type"/>
<description>
The common record type of the histories used to compute the result.&#xa;   If null, the result is not filtered by history record type.
</description>
</parameter>
<parameter name="baseOrd">
<type class="javax.baja.naming.BOrd"/>
<description>
The base ord from which to start&#xa;   searching (this must be an Ord resolving to a particular history device, or single history).&#xa;   Only histories that are descendants of this base history device will be included in the result.&#xa;   If null, the search will include the entire history space and span all history devices.
</description>
</parameter>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to search for.
</description>
</parameter>
<parameter name="propertyType">
<type class="javax.baja.sys.Type"/>
<description>
The type of the property to search for.  If null,&#xa;   any types will be included that have the given propertyName.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the search.
</description>
</parameter>
<return>
<parameterizedType class="javax.baja.sys.Cursor">
<args>
<wildcardType class="?">
<bounds kind="extends">
<type class="javax.baja.sys.BIObject"/>
</bounds>
</wildcardType>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.addIndex(java.lang.String, javax.baja.sys.Context) -->
<method name="addIndex"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Index the specified property.  Indexed propertys should be more efficient to search.&#xa; Implementation of indexing is optional.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property to index.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the operation.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
Returns true if the requested index was created, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.removeIndex(java.lang.String, javax.baja.sys.Context) -->
<method name="removeIndex"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Remove the index for the specified property.
</description>
<tag name="@since">Niagara 3.5</tag>
<parameter name="propertyName">
<type class="java.lang.String"/>
<description>
The name of the property that should no longer be indexed.
</description>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
<description>
The context for the operation.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.dataRecoveryReserve() -->
<method name="dataRecoveryReserve"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called by the DataRecoveryService when the service enters the reserve state (save started).
</description>
<tag name="@since">Niagara 4.10</tag>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.dataRecoveryRestore(javax.baja.dataRecovery.IDataRecoveryRecord) -->
<method name="dataRecoveryRestore"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called by the DataRecoveryService when a record should be restored.
</description>
<tag name="@since">Niagara 3.6</tag>
<parameter name="rec">
<type class="javax.baja.dataRecovery.IDataRecoveryRecord"/>
</parameter>
<return>
<type class="boolean"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.dataRecoveryRestoreComplete() -->
<method name="dataRecoveryRestoreComplete"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Callback to indicate that no further records will be restored to this source.
</description>
<tag name="@since">Niagara 3.6</tag>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.dataRecoverySpy(javax.baja.spy.SpyWriter, java.util.Iterator&lt;javax.baja.dataRecovery.IDataRecoveryRecord&gt;) -->
<method name="dataRecoverySpy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Provide spy information for the history space&#x27;s data recovery.&#xa; The default implementation is to do nothing.
</description>
<tag name="@since">Niagara 3.6</tag>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<parameter name="recoveryData">
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.dataRecovery.IDataRecoveryRecord"/>
</args>
</parameterizedType>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.fw(int, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) -->
<method name="fw"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Framework support access; this method should&#xa; never be used by developers.
</description>
<parameter name="x">
<type class="int"/>
</parameter>
<parameter name="a">
<type class="java.lang.Object"/>
</parameter>
<parameter name="b">
<type class="java.lang.Object"/>
</parameter>
<parameter name="c">
<type class="java.lang.Object"/>
</parameter>
<parameter name="d">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object"/>
</return>
</method>

<!-- javax.baja.history.BHistorySpace.spy(javax.baja.spy.SpyWriter) -->
<method name="spy"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Dump spy info.
</description>
<parameter name="out">
<type class="javax.baja.spy.SpyWriter"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.history.BHistorySpace.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
