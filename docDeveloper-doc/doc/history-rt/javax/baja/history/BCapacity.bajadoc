<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BCapacity" name="BCapacity" packageName="javax.baja.history" public="true" final="true">
<description>
BCapacity defines the capacity of a history.  The capacity can be defined&#xa; in terms of record count or storage size.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">03 Jul 2002</tag>
<tag name="@version">$Revision: 8$ $Date: 3/28/11 4:23:31 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.history.BCapacity.makeByRecordCount(int) -->
<method name="makeByRecordCount"  public="true" static="true">
<description>
Create a capacity restricted by record count.
</description>
<parameter name="maxRecords">
<type class="int"/>
<description>
The capacity as a number of records.
</description>
</parameter>
<return>
<type class="javax.baja.history.BCapacity"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.makeByStorageSize(long) -->
<method name="makeByStorageSize"  public="true" static="true">
<description>
Create a capacity restricted by storage size.
</description>
<parameter name="maxSize">
<type class="long"/>
<description>
The capacity in bytes.
</description>
</parameter>
<return>
<type class="javax.baja.history.BCapacity"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.makeUnlimited() -->
<method name="makeUnlimited"  public="true" static="true">
<description>
Create an unlimited capacity.
</description>
<return>
<type class="javax.baja.history.BCapacity"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.isUnlimited() -->
<method name="isUnlimited"  public="true">
<description>
Is this capacity unlimited?  If so, the max capacity should be ignored.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.isByRecordCount() -->
<method name="isByRecordCount"  public="true">
<description>
Is the capacity restricted by record count?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.isByStorageSize() -->
<method name="isByStorageSize"  public="true">
<description>
Is the capacity restricted by storage size?
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.getMaxRecords() -->
<method name="getMaxRecords"  public="true">
<description>
Get the maximum number of records if limited by record count.&#xa; Deprecated - use getMaxStorage() instead.
</description>
<return>
<type class="int"/>
<description>
Returns the maximum number of records or -1 if no&#xa;   maximum is defined.  If capacity is limited by record count&#xa;   and the maximum is greater than Integer.MAX_VALUE, this method&#xa;   will return Integer.MAX_VALUE.
</description>
</return>
</method>

<!-- javax.baja.history.BCapacity.getMaxStorage() -->
<method name="getMaxStorage"  public="true">
<description>
Get the maximum number of bytes if limited by storage size.
</description>
<return>
<type class="long"/>
<description>
Returns the maximum number of bytes or -1 if no&#xa;   maximum is defined.
</description>
</return>
</method>

<!-- javax.baja.history.BCapacity.hashCode() -->
<method name="hashCode"  public="true">
<description>
BCapacity hashCode implementation
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Compare this instance to the specified object for equality.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Encode this instance to the specified output.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCapacity.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Decode this instance from the specified input.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCapacity.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Encode this instance to a string that can be decoded using&#xa; decodeFromString().
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Decode the specified string into a BCollectionInterval instance.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCapacity.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BCapacity.UNLIMITED -->
<field name="UNLIMITED"  public="true" static="true" final="true">
<type class="javax.baja.history.BCapacity"/>
<description/>
</field>

<!-- javax.baja.history.BCapacity.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.history.BCapacity"/>
<description/>
</field>

<!-- javax.baja.history.BCapacity.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.history.BCapacity.recordCountFacets -->
<field name="recordCountFacets"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

</class>
</bajadoc>
