<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BTrendFlags" name="BTrendFlags" packageName="javax.baja.history" public="true" final="true">
<description>
BTrendFlags is the set of flags that can be set for a trend record.  They&#xa; provide extra context information about the record data.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation"/>
<tag name="@version">$Revision: 11$ $Date: 12/10/08 12:56:45 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BBitString"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.history.BTrendFlags.getBits() -->
<method name="getBits"  public="true">
<description>
Get the byte containing the flag bits.
</description>
<return>
<type class="byte"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.set(int, boolean) -->
<method name="set"  public="true">
<description>
Get a new instance that is equal to this instance with the specified bit&#xa; set to the new state.
</description>
<parameter name="ordinal">
<type class="int"/>
</parameter>
<parameter name="newState">
<type class="boolean"/>
</parameter>
<return>
<type class="javax.baja.history.BTrendFlags"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.make() -->
<method name="make"  public="true" static="true">
<description>
Construct an instance in which all days are true
</description>
<return>
<type class="javax.baja.history.BTrendFlags"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.make(int) -->
<method name="make"  public="true" static="true">
<description>
Construct an instance in which all days are&#xa; set to the given value
</description>
<parameter name="bits">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.history.BTrendFlags"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.make(byte) -->
<method name="make"  public="true" static="true">
<description>
Construct an instance in which all days are&#xa; set to the given value
</description>
<parameter name="bits">
<type class="byte"/>
</parameter>
<return>
<type class="javax.baja.history.BTrendFlags"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getBit(int) -->
<method name="getBit"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return if the bit specified by the given ordinal is set.
</description>
<parameter name="ordinal">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getBit(java.lang.String) -->
<method name="getBit"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return if the bit specified by the given tag is set.
</description>
<parameter name="tag">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getOrdinals() -->
<method name="getOrdinals"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get an array enumerating the list of all known&#xa; ordinal values of this bitstring instance.
</description>
<return>
<type class="int" dimension="1"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.isOrdinal(int) -->
<method name="isOrdinal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Is the specified ordinal value included in this&#xa; bitstring&#x27;s range of valid ordinals.
</description>
<parameter name="ordinal">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getTag(int) -->
<method name="getTag"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the tag identifier for an ordinal value.
</description>
<parameter name="ordinal">
<type class="int"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getDisplayTag(int, javax.baja.sys.Context) -->
<method name="getDisplayTag"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the user readable tag for an ordinal value.
</description>
<parameter name="ordinal">
<type class="int"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getInstance(int[]) -->
<method name="getInstance"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the BBitString instance which maps to the&#xa; specified set of ordinal values.
</description>
<parameter name="ordinals">
<type class="int" dimension="1"/>
</parameter>
<return>
<type class="javax.baja.sys.BBitString"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.isTag(java.lang.String) -->
<method name="isTag"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return true if the specified tag is contained by the range.
</description>
<parameter name="tag">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.tagToOrdinal(java.lang.String) -->
<method name="tagToOrdinal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the ordinal associated with the specified tag.
</description>
<parameter name="tag">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.isEmpty() -->
<method name="isEmpty"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return if true if no bits set.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getEmptyTag() -->
<method name="getEmptyTag"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
The empty tag is &#x22;none&#x22;.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.hashCode() -->
<method name="hashCode"  public="true">
<description>
BTrendFlags uses its bits as the hash code.
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Equality is based on bitmask equality.
</description>
<parameter name="obj">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BTrendFlags is serialized using writeByte
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BTrendFlags.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BTrendFlags is unserialized using readByte()
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BTrendFlags.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Text format is the bit mask in hex.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Read the bit mask as hex.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BTrendFlags.toDataValue() -->
<method name="toDataValue"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.data.BIDataValue"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BTrendFlags.START -->
<field name="START"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.OUT_OF_ORDER -->
<field name="OUT_OF_ORDER"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.HIDDEN -->
<field name="HIDDEN"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.MODIFIED -->
<field name="MODIFIED"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.INTERPOLATED -->
<field name="INTERPOLATED"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.RESERVED_0 -->
<field name="RESERVED_0"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.RESERVED_1 -->
<field name="RESERVED_1"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.RESERVED_2 -->
<field name="RESERVED_2"  public="true" static="true" final="true">
<type class="byte"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.start -->
<field name="start"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.outOfOrder -->
<field name="outOfOrder"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.hidden -->
<field name="hidden"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.modified -->
<field name="modified"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.interpolated -->
<field name="interpolated"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.history.BTrendFlags"/>
<description/>
</field>

<!-- javax.baja.history.BTrendFlags.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
