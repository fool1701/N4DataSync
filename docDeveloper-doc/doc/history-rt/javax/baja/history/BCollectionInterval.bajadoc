<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BCollectionInterval" name="BCollectionInterval" packageName="javax.baja.history" public="true" final="true">
<description>
BCollectionInterval describes the interval on which history records&#xa; are collected.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">03 Jul 2002</tag>
<tag name="@version">$Revision: 6$ $Date: 1/25/08 4:04:10 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BSimple"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NoSlotomatic"/>
</annotation>
<!-- javax.baja.history.BCollectionInterval.make(javax.baja.sys.BRelTime) -->
<method name="make"  public="true" static="true">
<description>
Create a regular collection interval.
</description>
<parameter name="interval">
<type class="javax.baja.sys.BRelTime"/>
</parameter>
<return>
<type class="javax.baja.history.BCollectionInterval"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.makeIrregular() -->
<method name="makeIrregular"  public="true" static="true">
<description>
Create a BCollectionInterval for an irregular interval.
</description>
<return>
<type class="javax.baja.history.BCollectionInterval"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.isIrregular() -->
<method name="isIrregular"  public="true">
<description>
Is this collection interval irregular?  If so, the interval should&#xa; be ignored.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.getInterval() -->
<method name="getInterval"  public="true">
<description>
Get the interval if not irregular.
</description>
<return>
<type class="javax.baja.sys.BRelTime"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.hashCode() -->
<method name="hashCode"  public="true">
<description>
BCollectionInterval hashCode implementation
</description>
<tag name="@since">Niagara 3.4</tag>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.equals(java.lang.Object) -->
<method name="equals"  public="true">
<description>
Compare this instance to the specified object for equality.
</description>
<parameter name="o">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.encode(java.io.DataOutput) -->
<method name="encode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Encode this instance to the specified output.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCollectionInterval.decode(java.io.DataInput) -->
<method name="decode"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Decode this instance from the specified input.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCollectionInterval.encodeToString() -->
<method name="encodeToString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Encode this instance to a string that can be decoded using&#xa; decodeFromString().
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.decodeFromString(java.lang.String) -->
<method name="decodeFromString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Decode the specified string into a BCollectionInterval instance.
</description>
<parameter name="s">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.sys.BObject"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BCollectionInterval.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BCollectionInterval.DEFAULT -->
<field name="DEFAULT"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.REGULAR_1_MIN -->
<field name="REGULAR_1_MIN"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.REGULAR_5_MIN -->
<field name="REGULAR_5_MIN"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.REGULAR_15_MIN -->
<field name="REGULAR_15_MIN"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.REGULAR_30_MIN -->
<field name="REGULAR_30_MIN"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.REGULAR_1_HOUR -->
<field name="REGULAR_1_HOUR"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.IRREGULAR -->
<field name="IRREGULAR"  public="true" static="true" final="true">
<type class="javax.baja.history.BCollectionInterval"/>
<description/>
</field>

<!-- javax.baja.history.BCollectionInterval.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
