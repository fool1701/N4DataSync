<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BHistoryScheme" name="BHistoryScheme" packageName="javax.baja.history" public="true">
<description>
BHistoryScheme is the ord scheme for accessing histories in&#xa; a history database.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">05 Mar 2003</tag>
<tag name="@version">$Revision: 18$ $Date: 8/18/09 4:28:34 PM EDT$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.space.BSpaceScheme"/>
</extends>
<annotation><type class="javax.baja.nre.annotations.NiagaraSingleton"/>
</annotation>
<!-- javax.baja.history.BHistoryScheme() -->
<constructor name="BHistoryScheme" protected="true">
<description>
Constructor with scheme id.
</description>
</constructor>

<!-- javax.baja.history.BHistoryScheme.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BHistoryScheme.getSpaceType() -->
<method name="getSpaceType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
BHistoryScheme is used to access histories in a BHistorySpace.
</description>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BHistoryScheme.parse(java.lang.String) -->
<method name="parse"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This method gives scheme the chance to return a custom&#xa; subclass of OrdQuery with a scheme specific API.  The&#xa; default implementation returns an instance of BasicQuery.
</description>
<parameter name="queryBody">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="javax.baja.naming.OrdQuery"/>
</return>
</method>

<!-- javax.baja.history.BHistoryScheme.resolve(javax.baja.naming.OrdTarget, javax.baja.naming.OrdQuery, javax.baja.space.BSpace) -->
<method name="resolve"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This is the subclass hook for resolve after the&#xa; default implementation has mapped the ord to an&#xa; instanceof BSpace.
</description>
<parameter name="base">
<type class="javax.baja.naming.OrdTarget"/>
</parameter>
<parameter name="query">
<type class="javax.baja.naming.OrdQuery"/>
</parameter>
<parameter name="space">
<type class="javax.baja.space.BSpace"/>
</parameter>
<return>
<type class="javax.baja.naming.OrdTarget"/>
</return>
</method>

<!-- javax.baja.history.BHistoryScheme.INSTANCE -->
<field name="INSTANCE"  public="true" static="true" final="true">
<type class="javax.baja.history.BHistoryScheme"/>
<description/>
</field>

<!-- javax.baja.history.BHistoryScheme.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
