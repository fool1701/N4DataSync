<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="history" runtimeProfile="rt" qualifiedName="javax.baja.history.BHistoryRecord" name="BHistoryRecord" packageName="javax.baja.history" public="true" abstract="true">
<description>
BHistoryRecord is the base class for records that can&#xa; be stored in the history database.
</description>
<tag name="@author">John Sublett</tag>
<tag name="@creation">19 Mar 2003</tag>
<tag name="@version">$Revision: 21$ $Date: 3/4/10 3:08:06 PM EST$</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BStruct"/>
</extends>
<implements>
<type class="java.io.Externalizable"/>
</implements>
<implements>
<type class="javax.baja.history.BIHistoryRecordSet"/>
</implements>
<property name="timestamp" flags="s">
<type class="javax.baja.sys.BAbsTime"/>
<description>
Slot for the &lt;code&gt;timestamp&lt;/code&gt; property.
</description>
<tag name="@see">#getTimestamp</tag>
<tag name="@see">#setTimestamp</tag>
</property>

<!-- javax.baja.history.BHistoryRecord() -->
<constructor name="BHistoryRecord" protected="true">
<description/>
</constructor>

<!-- javax.baja.history.BHistoryRecord(javax.baja.sys.BAbsTime) -->
<constructor name="BHistoryRecord" protected="true">
<parameter name="timestamp">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.history.BHistoryRecord.getTimestamp() -->
<method name="getTimestamp"  public="true">
<description>
Get the &lt;code&gt;timestamp&lt;/code&gt; property.
</description>
<tag name="@see">#timestamp</tag>
<return>
<type class="javax.baja.sys.BAbsTime"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.setTimestamp(javax.baja.sys.BAbsTime) -->
<method name="setTimestamp"  public="true">
<description>
Set the &lt;code&gt;timestamp&lt;/code&gt; property.
</description>
<tag name="@see">#timestamp</tag>
<parameter name="v">
<type class="javax.baja.sys.BAbsTime"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getSchema() -->
<method name="getSchema"  public="true">
<description/>
<return>
<type class="javax.baja.history.BHistorySchema"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.isFixedSize() -->
<method name="isFixedSize"  public="true" abstract="true">
<description>
Tests whether this record type has a fixed size.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.readExternal(java.io.ObjectInput) -->
<method name="readExternal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="in">
<type class="java.io.ObjectInput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.getRecordSize() -->
<method name="getRecordSize"  public="true">
<description>
Get the size of this record.  This is a potentially&#xa; expensive operation.  The default behavior is to&#xa; serialize the record to a buffer and return the&#xa; resulting number of bytes.
</description>
<return>
<type class="int"/>
<description>
Returns the size of the record in bytes or&#xa;   -1 if the size cannot be determined.
</description>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.read(java.io.DataInput) -->
<method name="read"  public="true" final="true">
<description>
Read this instance from the specified input.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
<description>
A DataInput for reading the record data.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistoryRecord"/>
<description>
For convenience, always returns a reference to this record.
</description>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.doRead(java.io.DataInput) -->
<method name="doRead"  protected="true" abstract="true">
<description>
Subclasses must override this method to read all of the record&#xa; fields except for the first timestamp.
</description>
<parameter name="in">
<type class="java.io.DataInput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.writeExternal(java.io.ObjectOutput) -->
<method name="writeExternal"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="out">
<type class="java.io.ObjectOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.write(java.io.DataOutput) -->
<method name="write"  public="true" final="true">
<description>
Write this instance to the specified output.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
<description>
A DataOutput for writing the record data.
</description>
</parameter>
<return>
<type class="javax.baja.history.BHistoryRecord"/>
<description>
For convenience, always returns a reference to this record.
</description>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.doWrite(java.io.DataOutput) -->
<method name="doWrite"  protected="true" abstract="true">
<description>
Subclasses must override this method to write all of the record fields except&#xa; for the first timestamp.
</description>
<parameter name="out">
<type class="java.io.DataOutput"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.history.BHistoryRecord.toString(javax.baja.sys.Context) -->
<method name="toString"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the string representation of this record.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.toSummary(javax.baja.sys.Context) -->
<method name="toSummary"  public="true" final="true">
<description>
Get a summary string for this record.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.toDataSummary(javax.baja.sys.Context) -->
<method name="toDataSummary"  public="true" final="true">
<description>
Get a summary string for the data in this record not&#xa; including the timestamp.
</description>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.toDataSummary(java.lang.StringBuffer, javax.baja.sys.Context) -->
<method name="toDataSummary"  public="true">
<description>
Get a summary string without the timestamp.
</description>
<parameter name="s">
<type class="java.lang.StringBuffer"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getRecordCount() -->
<method name="getRecordCount"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Only one record in this set.
</description>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getRecord(int) -->
<method name="getRecord"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the record at the specified index.
</description>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="javax.baja.history.BHistoryRecord"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getRecords() -->
<method name="getRecords"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get an array of the records in the set.
</description>
<return>
<type class="javax.baja.history.BHistoryRecord" dimension="1"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getLastRecord() -->
<method name="getLastRecord"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This is the last and only record in the set.
</description>
<return>
<type class="javax.baja.history.BHistoryRecord"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getRecordTypeSpec() -->
<method name="getRecordTypeSpec"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the type spec for the record type.
</description>
<return>
<type class="javax.baja.util.BTypeSpec"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.getHistoryVersion() -->
<method name="getHistoryVersion"  public="true">
<description/>
<return>
<type class="int"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.setHistoryVersion(int) -->
<method name="setHistoryVersion"  public="true">
<description/>
<parameter name="version">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.history.BHistoryRecord.timestamp -->
<field name="timestamp"  public="true" static="true" final="true">
<type class="javax.baja.sys.Property"/>
<description>
Slot for the &lt;code&gt;timestamp&lt;/code&gt; property.
</description>
<tag name="@see">#getTimestamp</tag>
<tag name="@see">#setTimestamp</tag>
</field>

<!-- javax.baja.history.BHistoryRecord.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.history.BHistoryRecord.TIMESTAMP_FACETS -->
<field name="TIMESTAMP_FACETS"  public="true" static="true" final="true">
<type class="javax.baja.sys.BFacets"/>
<description/>
</field>

<!-- javax.baja.history.BHistoryRecord.VERSION_1 -->
<field name="VERSION_1"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.history.BHistoryRecord.VERSION_2 -->
<field name="VERSION_2"  public="true" static="true" final="true">
<type class="int"/>
<description/>
</field>

<!-- javax.baja.history.BHistoryRecord.version -->
<field name="version"  protected="true">
<type class="int"/>
<description/>
</field>

</class>
</bajadoc>
