<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="event" runtimeProfile="rt" qualifiedName="javax.baja.event.BEventSource" name="BEventSource" packageName="javax.baja.event" public="true">
<description>
&lt;p&gt;A &lt;code&gt;BEventSource&lt;/code&gt; is the entry point of events into the &#xa; &lt;code&gt;<see ref="javax.baja.event.BEventService">BEventService</see>&lt;/code&gt; component tree.  It provides an easy way to wire &#xa; components into the event subsystem.  Event Source implementations can &#xa; either act as a conduit for events generated elsewhere in &#xa; the station, or originate new events.&#xa; &#xa; &lt;p&gt;As an implementation of &lt;code&gt;<see ref="javax.baja.event.BIEventRoutable">BIEventRoutable</see>&lt;/code&gt;, these components can be &#xa; chained to other &lt;code&gt;BEventRoutable&lt;/code&gt; components such as &#xa; &lt;code&gt;<see ref="javax.baja.event.BEventFilter">BEventFilter</see>&lt;/code&gt;, &lt;code&gt;<see ref="javax.baja.event.BEventRecipient">BEventRecipient</see>&lt;/code&gt;, and other &#xa; &lt;code&gt;BEventSource&lt;/code&gt; instances.&#xa; &#xa; &lt;p&gt;One possible reason for creating a new an event source is to generate &#xa; events from regularly occurring station events.  For example, from a custom &#xa; component subscriber:&#xa; &#xa; &lt;pre&gt;&lt;code&gt;&amp;#xa;   Subscriber subscriber = new Subscriber()&amp;#xa;   {&amp;#xa;     public void event(BComponentEvent componentEvent)&amp;#xa;     {&amp;#xa;       if(componentEvent.getId() == BComponentEvent.TOPIC_FIRED &amp;amp;&amp;amp;&amp;#xa;           componentEvent.getSlot().equals(BCardReader.cardSwipe)) {&amp;#xa;        &amp;#xa;          BEvent event = BEvent.make((BComponentEvent)componentEvent.clone());&amp;#xa;&amp;#xa;          BOrd sourceOrd = componentEvent.getSourceComponent().getNavOrd();&amp;#xa;          if (sourceOrd != null)&amp;#xa;            event.setSource(BOrdList.make(sourceOrd));&amp;#xa;          &amp;#xa;          fireEvent(event);&amp;#xa;       }&amp;#xa;     }&amp;#xa;   };&amp;#xa; &lt;/code&gt;&lt;/pre&gt;&#xa; In this is example, the events generated have the original component event&#xa; as the &lt;code&gt;value&lt;/code&gt; property of the event.  Note that the original &#xa; &lt;code&gt;<see ref="javax.baja.sys.BComponentEvent">BComponentEvent</see>&lt;/code&gt; is cloned before being embedded in the EventService &#xa; event to ensure that the original values are preserved.
</description>
<tag name="@author">Lee Adcock</tag>
<tag name="@creation">20 Feb 11</tag>
<tag name="@version">$Revision: 4$ $Date: 4/11/11 3:48:34 PM EDT$</tag>
<tag name="@since">Niagara 3.7</tag>
<extends>
<type class="javax.baja.sys.BComponent"/>
</extends>
<implements>
<type class="javax.baja.event.BIEventRoutable"/>
</implements>
<topic name="event" flags="s">
<eventType>
<type class="javax.baja.event.BEvent"/>
</eventType><description>
Slot for the &lt;code&gt;event&lt;/code&gt; topic.
</description>
<tag name="@see">#fireEvent</tag>
</topic>

<!-- javax.baja.event.BEventSource() -->
<constructor name="BEventSource" public="true">
<description/>
</constructor>

<!-- javax.baja.event.BEventSource.fireEvent(javax.baja.event.BEvent) -->
<method name="fireEvent"  public="true">
<description>
Fire an event for the &lt;code&gt;event&lt;/code&gt; topic.
</description>
<tag name="@see">#event</tag>
<parameter name="parameter">
<type class="javax.baja.event.BEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.process(javax.baja.event.BEvent) -->
<method name="process"  public="true" final="true">
<description>
Implementation of the &lt;code&gt;<see ref="javax.baja.event.BEventSource#process(javax.baja.event.BEvent)">#process</see>&lt;/code&gt; method called by the &#xa; &lt;code&gt;BEventService&lt;/code&gt; as new events are passed to the source. This is a&#xa; requirement of &lt;code&gt;BIEventRoutable&lt;/code&gt;.
</description>
<parameter name="event">
<type class="javax.baja.event.BEvent"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.isParentLegal(javax.baja.sys.BComponent) -->
<method name="isParentLegal"  public="true" final="true">
<description>
Enforces that an event source must be a child of either &#xa; &lt;code&gt;BEventService&lt;/code&gt; or &lt;code&gt;<see ref="com.tridium.event.BEventSourceFolder">BEventSourceFolder</see>&lt;/code&gt;.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
<description>
The component that is being tested as a parent of this &#xa;               component.
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
True if the component is valid, meaning it is the Event Service or&#xa;         an Event Source Folder, false otherwise.
</description>
</return>
</method>

<!-- javax.baja.event.BEventSource.getEventService() -->
<method name="getEventService"  public="true" final="true">
<description>
A convenience method for obtaining a reference to the local &#xa; &lt;code&gt;BEventService&lt;/code&gt;.
</description>
<return>
<type class="javax.baja.event.BEventService"/>
<description>
A reference to the local &lt;code&gt;BEventService&lt;/code&gt;
</description>
</return>
</method>

<!-- javax.baja.event.BEventSource.routeTo(javax.baja.event.BIEventRoutable) -->
<method name="routeTo"  public="true" final="true">
<description/>
<parameter name="routable">
<type class="javax.baja.event.BIEventRoutable"/>
</parameter>
<return>
<type class="javax.baja.event.BIEventRoutable"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.routeTo(java.lang.String, javax.baja.event.BIEventRoutable) -->
<method name="routeTo"  public="true" final="true">
<description/>
<parameter name="name">
<type class="java.lang.String"/>
</parameter>
<parameter name="routable">
<type class="javax.baja.event.BIEventRoutable"/>
</parameter>
<return>
<type class="javax.baja.event.BIEventRoutable"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.getIcon() -->
<method name="getIcon"  public="true">
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.event.BEventSource.event -->
<field name="event"  public="true" static="true" final="true">
<type class="javax.baja.sys.Topic"/>
<description>
Slot for the &lt;code&gt;event&lt;/code&gt; topic.
</description>
<tag name="@see">#fireEvent</tag>
</field>

<!-- javax.baja.event.BEventSource.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
