<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="wb" qualifiedName="com.tridium.ddf.ui.DdfMgrLearnUtil" name="DdfMgrLearnUtil" packageName="com.tridium.ddf.ui" public="true">
<description>
Provides the functionality that is common between the ddf device learn and&#xa; the ddf point learn.
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.ui.DdfMgrLearnUtil() -->
<constructor name="DdfMgrLearnUtil" protected="true">
<description>
Cannot instantiate! Access static methods only.
</description>
</constructor>

<!-- com.tridium.ddf.ui.DdfMgrLearnUtil.makeColumns(javax.baja.workbench.mgr.BAbstractManager) -->
<method name="makeColumns"  public="true" static="true">
<description>
Makes the columns for the learn aspect of a ddf workbench manager.&#xa; This is accomplished by introspecting the discovery object type and&#xa; making the MgrColumn array accordingly.
</description>
<parameter name="mgr">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearnUtil.toTypes(java.lang.Object) -->
<method name="toTypes"  public="true" static="true">
<description>
Given a discovery row object, return a list of the types&#xa; which may be used to model it as a BComponent in the&#xa; station database.  This method is used by the add command.&#xa; The type at index 0 in the array should be the type which&#xa; provides the best mapping.  Return an empty array if the&#xa; discovery cannot be mapped.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

</class>
</bajadoc>
