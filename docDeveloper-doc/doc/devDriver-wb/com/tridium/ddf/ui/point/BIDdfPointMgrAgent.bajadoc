<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="wb" qualifiedName="com.tridium.ddf.ui.point.BIDdfPointMgrAgent" name="BIDdfPointMgrAgent" packageName="com.tridium.ddf.ui.point" public="true" interface="true" abstract="true" category="interface">
<description/>
<implements>
<type class="javax.baja.sys.BInterface"/>
</implements>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.ui.point.BIDdfPointMgrAgent.getUiName() -->
<method name="getUiName"  public="true" abstract="true">
<description>
This name can be either just a name or a lexicon key that defines the button text and the&#xa; optional button label.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- com.tridium.ddf.ui.point.BIDdfPointMgrAgent.doInvoke(com.tridium.ddf.ui.point.BDdfPointManager, com.tridium.ddf.BDdfNetwork, com.tridium.ddf.BDdfDevice, com.tridium.ddf.BDdfPointDeviceExt) -->
<method name="doInvoke"  public="true" abstract="true">
<description>
This method is called when the user clicks the&#xa; corresponding button on the point manager for this&#xa; agent. The developer may define any functionality&#xa; here.&#xa; &#xa; NOTE: This will execute on the client-side proxy&#x27;s&#xa; virtual machine. Any access to the server-side&#xa; host will therefore have to be through properties,&#xa; actions, etc.
</description>
<parameter name="deviceManager">
<type class="com.tridium.ddf.ui.point.BDdfPointManager"/>
</parameter>
<parameter name="network">
<type class="com.tridium.ddf.BDdfNetwork"/>
</parameter>
<parameter name="device">
<type class="com.tridium.ddf.BDdfDevice"/>
</parameter>
<parameter name="ptDevExt">
<type class="com.tridium.ddf.BDdfPointDeviceExt"/>
</parameter>
<return>
<type class="javax.baja.ui.CommandArtifact"/>
<description>
an undo/redo command artifact or null
</description>
</return>
</method>

<!-- com.tridium.ddf.ui.point.BIDdfPointMgrAgent.getFlags() -->
<method name="getFlags"  public="true" abstract="true">
<description>
This method is called when the ddf point manager &#xa; is created. It allows the developer to specify the MGR_CONTROLLER flags&#xa; that govern whether a button, menu item, toolbar item, etc. is created&#xa; for this agent.
</description>
<return>
<type class="int"/>
<description/>
</return>
</method>

<!-- com.tridium.ddf.ui.point.BIDdfPointMgrAgent.update(com.tridium.ddf.ui.point.BDdfPointManager, com.tridium.ddf.ui.DdfMgrControllerUtil.DdfPointMgrAgentCommand) -->
<method name="update"  public="true" abstract="true">
<description>
The developer should review the given BDdfPointManager and consider&#xa; updating (eg. enable/disable) the given agentCommand and/or any other&#xa; commands on the manager&#x27;s controller. The method is called anytime&#xa; there is a change of state on the point manager (eg. discovery list&#xa; selection change, database list selection change, database component&#xa; event, learn mode changed, etc.)&#xa; &#xa; For example (to enable the agent&#x27;s UI widget(s) if one database item is selected):&#xa;  agentCommand.setEnabled(pointManager.getController().getSelectedRows().length == 1);&#xa;  &#xa; For example (to enable the agent&#x27;s UI widget(s) if one or more database items are selected):&#xa;  agentCommand.setEnabled(pointManager.getController().getSelectedRows().length &gt; 0);&#xa;  &#xa; For example (to enable the agent&#x27;s UI widget(s) if zero database items are selected):&#xa;  agentCommand.setEnabled(pointManager.getController().getSelectedRows().length == 0);
</description>
<parameter name="pointManager">
<type class="com.tridium.ddf.ui.point.BDdfPointManager"/>
<description/>
</parameter>
<parameter name="agentCommand">
<type class="com.tridium.ddf.ui.DdfMgrControllerUtil$DdfPointMgrAgentCommand"/>
<description>
this is a special instance of IMgrCommand. It is&#xa; a reference to the corresponding GUI command (button, menu item, and/or&#xa; toolbar button) on the device manager.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.point.BIDdfPointMgrAgent.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
