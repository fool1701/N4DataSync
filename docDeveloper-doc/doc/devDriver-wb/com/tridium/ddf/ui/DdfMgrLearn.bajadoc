<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="devDriver" runtimeProfile="wb" qualifiedName="com.tridium.ddf.ui.DdfMgrLearn" name="DdfMgrLearn" packageName="com.tridium.ddf.ui" public="true">
<description>
This customized version of MgrLearn is used on the point manager and the device manager.&#xa;&#xa; This is a fully-functional MgrLearn. The discovery columns are based on introspection. The&#xa; &#x27;toRow&#x27; method is based on introspection.
</description>
<tag name="@author">lperkins</tag>
<extends>
<type class="javax.baja.workbench.mgr.MgrLearn"/>
</extends>
<implements>
<type class="com.tridium.ddf.IDdfFacetConst"/>
</implements>
<!-- com.tridium.ddf.ui.DdfMgrLearn(javax.baja.workbench.mgr.BAbstractManager) -->
<constructor name="DdfMgrLearn" public="true">
<parameter name="manager">
<type class="javax.baja.workbench.mgr.BAbstractManager"/>
</parameter>
<description/>
</constructor>

<!-- com.tridium.ddf.ui.DdfMgrLearn.setJob(javax.baja.job.BJob) -->
<method name="setJob"  public="true">
<description/>
<parameter name="job">
<type class="javax.baja.job.BJob"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.makeColumns() -->
<method name="makeColumns"  protected="true">
<description>
Automatically determines the MgrColumns for the discovery list.
</description>
<return>
<type class="javax.baja.workbench.mgr.MgrColumn" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.toRow(java.lang.Object, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="toRow"  public="true">
<description>
Automatically synchronizes the data in a discovery object with an&#xa; instance of MgrEditRow representing a database object to be modified.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.jobComplete(javax.baja.job.BJob) -->
<method name="jobComplete"  public="true">
<description>
This callback is automatically invoked when the&#xa; current job set via &lt;code&gt;setJob()&lt;/code&gt; completes.
</description>
<parameter name="job">
<type class="javax.baja.job.BJob"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.isDepthExpandable(int) -->
<method name="isDepthExpandable"  public="true">
<description>
All depths are potentially expandable, since we do not really&#xa; know how the driver developer is going to use this.
</description>
<parameter name="depth">
<type class="int"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.hasChildren(java.lang.Object) -->
<method name="hasChildren"  public="true">
<description>
A discovery object hasChildren is the discovery object&#xa; implements BIDdfDiscoveryGroup.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.isExisting(java.lang.Object, javax.baja.sys.BComponent) -->
<method name="isExisting"  public="true">
<description/>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<parameter name="component">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getChildren(java.lang.Object) -->
<method name="getChildren"  public="true">
<description>
Casts the given discovery object to a BIDdfDiscoveryGroup,&#xa; gets all BIDdfDiscoveryObject&#x27;s under the given discovery&#xa; object, registers for component events on any that are BComponents,&#xa; and returns the Object[] array of the child BIDdfDiscoveryObjects.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="java.lang.Object" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getIcon(java.lang.Object) -->
<method name="getIcon"  public="true">
<description>
Overrides MgrLearn.getIcon(Object) to define an icon. If the given discovery&#xa; object implements BIDdfDiscoveryIcon, then we call getDiscoveryIcon on the&#xa; discovery object and return the resulting BImage. Otherwise, we compute a&#xa; reasonable default icon for the discovery object.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.toTypes(java.lang.Object) -->
<method name="toTypes"  public="true">
<description>
Determines the Niagara AX database types that are valid for&#xa; the given discovery object.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.workbench.mgr.MgrTypeInfo" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.isGroup(java.lang.Object) -->
<method name="isGroup"  public="true">
<description>
A discovery object is a group if it implements BIDdfDiscoveryGroup.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="boolean"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.updateControlPointProps(com.tridium.ddf.ui.DdfMgrColumnUtil.DdfMgrProp, com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="updateControlPointProps"  protected="true">
<description>
Updates the standard properties that are on the control point. This is used in the toRow logic.
</description>
<parameter name="editDlgColProp">
<type class="com.tridium.ddf.ui.DdfMgrColumnUtil$DdfMgrProp"/>
</parameter>
<parameter name="discoveryPointLeaf">
<type class="com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf"/>
<description/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.updateControlPointProps(com.tridium.ddf.ui.DdfMgrColumnUtil.DdfMgrPropPath, com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="updateControlPointProps"  protected="true">
<description>
Updates the properties that are on the proxy extension. This is used in the toRow logic.
</description>
<parameter name="editDlgColPropPath">
<type class="com.tridium.ddf.ui.DdfMgrColumnUtil$DdfMgrPropPath"/>
<description/>
</parameter>
<parameter name="discoveryPointLeaf">
<type class="com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf"/>
<description/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.updateControlPointProps(javax.baja.workbench.mgr.MgrColumn, com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="updateControlPointProps"  protected="true">
<description>
This is part of the point manager&#x27;s toRow logic.
</description>
<parameter name="editDlgCol">
<type class="javax.baja.workbench.mgr.MgrColumn"/>
</parameter>
<parameter name="discoveryPointLeaf">
<type class="com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf"/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.updateControlPointProps(com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="updateControlPointProps"  protected="true">
<description>
This possibly updates the facets, device facets, conversion, and tuning policy name for&#xa; the MgrEditRow, if the MgrEditRow has DdfMgrColumnUtil.DdfMgrProp or DdfMgrPropPaths&#xa; that point to those properties.
</description>
<parameter name="discoveryPointLeaf">
<type class="com.tridium.ddf.discover.BIDdfPointDiscoveryLeaf"/>
<description/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
<description/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.pointManagerToRow(java.lang.Object, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="pointManagerToRow"  protected="true">
<description>
This is part of the &#x27;toRow&#x27; logic for the point manager. This updates&#xa; any properties that are tied to columns for BSimples that are under the&#xa; driver&#x27;s readParameters, writeParameters, or pointId
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getProxyExtWriteParametersType(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="getProxyExtWriteParametersType"  protected="true">
<description>
Looks at the row&#x27;s proxy extension and determines&#xa; the Type of its customized writeParameters property.
</description>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getProxyExtReadParametersType(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="getProxyExtReadParametersType"  protected="true">
<description>
Looks at the row&#x27;s proxy extension and determines&#xa; the Type of its customized readParameters property.
</description>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getProxyExtPointIdType(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="getProxyExtPointIdType"  protected="true">
<description>
Looks at the row&#x27;s proxy extension and determines&#xa; the Type of its customized pointId property.
</description>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.updateDatabaseIdColumns(javax.baja.sys.Property, java.lang.Object, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="updateDatabaseIdColumns"  protected="true">
<description>
Updates the database columns of an MgrEditRow that are for a particular BDdfIdParams property on the&#xa; row&#x27;s target. Updates these columns with the values in the given discovery object.
</description>
<parameter name="idProperty">
<type class="javax.baja.sys.Property"/>
<description>
- the driver&#x27;s proxy&#x27;s readParameters, writeParameters, or pointId property; or the driver&#x27;s deviceId or pingParameters properties
</description>
</parameter>
<parameter name="discoverValue">
<type class="java.lang.Object"/>
<description>
- The BIDdfDiscoveryObject for the given row
</description>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
<description>
- MgrEditRow representing a database object that is in the station or that may be added to the station.
</description>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.makePropPathHelperString(com.tridium.ddf.ui.DdfMgrColumnUtil.DdfMgrPropPath, java.lang.String) -->
<method name="makePropPathHelperString"  protected="true">
<description>
Converts the prop path in the given DdfMgrPropPath to a single string using&#xa; dot notation to separate the prop path.
</description>
<parameter name="ddfMgrPropPath">
<type class="com.tridium.ddf.ui.DdfMgrColumnUtil$DdfMgrPropPath"/>
<description>
the DdfMgrPropPath to convert to string
</description>
</parameter>
<parameter name="fromProp">
<type class="java.lang.String"/>
<description>
the property within the prop path to start collecting at, or empty string to&#xa; collect the entire prop path. If not null, then the return value starts at and includes the fromProp
</description>
</parameter>
<return>
<type class="java.lang.String"/>
<description/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getDatabaseColumnsForProp(java.lang.String) -->
<method name="getDatabaseColumnsForProp"  protected="true">
<description>
Gets a list of DdfMgrPropPath columns from the database columns that are&#xa; likely to be child columns of the given property.
</description>
<parameter name="propName">
<type class="java.lang.String"/>
</parameter>
<return>
<type class="com.tridium.ddf.ui.DdfMgrColumnUtil$DdfMgrPropPath" dimension="1"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.deviceManagerToRow(java.lang.Object, javax.baja.workbench.mgr.MgrEditRow) -->
<method name="deviceManagerToRow"  protected="true">
<description/>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getDeviceIdType(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="getDeviceIdType"  protected="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getPingParametersType(javax.baja.workbench.mgr.MgrEditRow) -->
<method name="getPingParametersType"  protected="true">
<description/>
<parameter name="row">
<type class="javax.baja.workbench.mgr.MgrEditRow"/>
</parameter>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.isExistingDevice(com.tridium.ddf.discover.BIDdfDiscoveryLeaf, com.tridium.ddf.BDdfDevice) -->
<method name="isExistingDevice"  public="true">
<description>
This is the default &#x27;isExisting&#x27; test for the DdfMgrLearn when it is used for a device manager.
</description>
<parameter name="discoveryLeaf">
<type class="com.tridium.ddf.discover.BIDdfDiscoveryLeaf"/>
<description>
the discovery object, cast as BIDdfDiscoveryLeaf
</description>
</parameter>
<parameter name="databaseDevice">
<type class="com.tridium.ddf.BDdfDevice"/>
<description>
the database component, cast as BDdfDevice
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the discovery leaf is a BIDdfDeviceDiscoveryLeaf and its deviceId and pingParameters&#xa; structures are &#x27;equivalent&#x27; to the corresponding ones on the databaseDevice OR if the discovery leaf&#xa; is not a BIDdfDeviceDiscoveryLeaf then this  return true if it is equivalent to the device&#x27;s deviceId&#xa; structure. This method returns false otherwise.
</description>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.isExistingPoint(com.tridium.ddf.discover.BIDdfDiscoveryLeaf, javax.baja.control.BControlPoint) -->
<method name="isExistingPoint"  public="true">
<description>
This is the default &#x27;isExisting&#x27; test for the DdfMgrLearn when it is used for a point manager.
</description>
<parameter name="discoveryLeaf">
<type class="com.tridium.ddf.discover.BIDdfDiscoveryLeaf"/>
<description>
the discovery object, cast as BIDdfDiscoveryLeaf
</description>
</parameter>
<parameter name="proxyPoint">
<type class="javax.baja.control.BControlPoint"/>
<description>
the database component, cast as BControlPoint
</description>
</parameter>
<return>
<type class="boolean"/>
<description>
true if the discovery leaf is a BDdfPointDiscoveryLeaf and its pointId, readParameters,&#xa; and writeParameters structures are &#x27;equivalent&#x27; to the corresponding ones on the proxy extension&#xa; that is under the given point OR if the discovery leaf is not a BDdfPointDiscoveryLeaf then this&#xa; return true if it is equivalent to the proxy extension&#x27;s pointId, readParameters, or writeParameters&#xa; structure. This method returns false otherwise.
</description>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getPointIconDefault(java.lang.Object) -->
<method name="getPointIconDefault"  protected="true">
<description>
Determines an icon to use for the given discovery object. This method is called for point&#xa; managers if the discovery object itself does not specify an icon.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getPointIconDefault(com.tridium.ddf.discover.BIDdfDiscoveryLeaf) -->
<method name="getPointIconDefault"  protected="true">
<description>
Returns an icon that looks like the icon for the discovery object&#x27;s&#xa; corresponding control point&#x27;s icon, except that read-only discovery&#xa; points get an icon with a rectangle (same color though as the control&#xa; point&#x27;s icon). Writable discovery points get an icon with a circle (&#xa; exactly the same as the control point&#x27;s icon)
</description>
<parameter name="discovery">
<type class="com.tridium.ddf.discover.BIDdfDiscoveryLeaf"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getDeviceIconDefault(java.lang.Object) -->
<method name="getDeviceIconDefault"  protected="true">
<description>
Gets an icon for a device manager&#x27;s discovery object. This method is&#xa; called if the discovery object does not customize the icon itself.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.getIconDefault(java.lang.Object) -->
<method name="getIconDefault"  protected="true">
<description>
Gets an icon for the discovery object. This method is called if the&#xa; discovery object does not customize the icon itself.
</description>
<parameter name="discovery">
<type class="java.lang.Object"/>
</parameter>
<return>
<type class="javax.baja.gx.BImage"/>
</return>
</method>

<!-- com.tridium.ddf.ui.DdfMgrLearn.deviceIcon -->
<field name="deviceIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDeviceDiscoveryLeaf discovery objects.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.pointGroupIcon -->
<field name="pointGroupIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryGroup objects on the Ddf Point Manager.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.deviceGroupIcon -->
<field name="deviceGroupIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryGroup objects on the Ddf Device Manager.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.numericElementIcon -->
<field name="numericElementIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is NumericWritable.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.booleanElementIcon -->
<field name="booleanElementIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is BooleanWritable.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.enumElementIcon -->
<field name="enumElementIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is EnumWritable.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.stringElementIcon -->
<field name="stringElementIcon"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is StringWritable.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.numericElementIconRo -->
<field name="numericElementIconRo"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is NumericPoint.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.booleanElementIconRo -->
<field name="booleanElementIconRo"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is BooleanPoint.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.enumElementIconRo -->
<field name="enumElementIconRo"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is EnumPoint.
</description>
</field>

<!-- com.tridium.ddf.ui.DdfMgrLearn.stringElementIconRo -->
<field name="stringElementIconRo"  public="true" static="true" final="true">
<type class="javax.baja.gx.BImage"/>
<description>
The default discovery icon for BIDdfDiscoveryLeaf discovery objects on the point manager whose&#xa; default database type is StringPoint.
</description>
</field>

</class>
</bajadoc>
