<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="platCrypto" runtimeProfile="rt" qualifiedName="javax.baja.platCrypto.certs.BPKCS7CertificateHandler" name="BPKCS7CertificateHandler" packageName="javax.baja.platCrypto.certs" public="true" final="true">
<description>
A &lt;code&gt;<see ref="javax.baja.platCrypto.certs.BICertificateFormatHandler">BICertificateFormatHandler</see>&lt;/code&gt; for the PKCS7 format.
</description>
<tag name="@author">Robert Staley on 2020-06-10</tag>
<tag name="@since">Niagara 4.10</tag>
<extends>
<type class="javax.baja.sys.BObject"/>
</extends>
<implements>
<type class="javax.baja.platCrypto.certs.BICertificateFormatHandler"/>
</implements>
<annotation><type class="javax.baja.nre.annotations.NiagaraSingleton"/>
</annotation>
<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler() -->
<constructor name="BPKCS7CertificateHandler" public="true">
<description/>
</constructor>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeCertToFile(java.security.cert.X509Certificate[], javax.baja.file.BAbstractFile) -->
<method name="writeCertToFile"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="certChain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
</parameter>
<parameter name="certFile">
<type class="javax.baja.file.BAbstractFile"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeKeyToFile(java.security.PrivateKey, boolean, javax.baja.security.BPassword, javax.baja.file.BAbstractFile) -->
<method name="writeKeyToFile"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="privateKey">
<type class="java.security.PrivateKey"/>
</parameter>
<parameter name="encryptKey">
<type class="boolean"/>
</parameter>
<parameter name="encryptionKey">
<type class="javax.baja.security.BPassword"/>
</parameter>
<parameter name="certFile">
<type class="javax.baja.file.BAbstractFile"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeCertAndKeyToFile(java.security.PrivateKey, boolean, javax.baja.security.BPassword, java.security.cert.X509Certificate[], javax.baja.file.BAbstractFile) -->
<method name="writeCertAndKeyToFile"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="privateKey">
<type class="java.security.PrivateKey"/>
</parameter>
<parameter name="encryptKey">
<type class="boolean"/>
</parameter>
<parameter name="encryptionKey">
<type class="javax.baja.security.BPassword"/>
</parameter>
<parameter name="certChain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
</parameter>
<parameter name="certFile">
<type class="javax.baja.file.BAbstractFile"/>
</parameter>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeCert(java.security.cert.X509Certificate[]) -->
<method name="writeCert"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="certChain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeKey(java.security.PrivateKey, boolean, javax.baja.security.BPassword) -->
<method name="writeKey"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="privateKey">
<type class="java.security.PrivateKey"/>
</parameter>
<parameter name="encryptKey">
<type class="boolean"/>
</parameter>
<parameter name="encryptionKey">
<type class="javax.baja.security.BPassword"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.writeCertAndKey(java.security.PrivateKey, boolean, javax.baja.security.BPassword, java.security.cert.X509Certificate[]) -->
<method name="writeCertAndKey"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="privateKey">
<type class="java.security.PrivateKey"/>
</parameter>
<parameter name="encryptKey">
<type class="boolean"/>
</parameter>
<parameter name="encryptionKey">
<type class="javax.baja.security.BPassword"/>
</parameter>
<parameter name="certChain">
<type class="java.security.cert.X509Certificate" dimension="1"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
<throws>
<type class="java.io.IOException"/>
</throws>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getMimeType() -->
<method name="getMimeType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getSupportedFileExtensions() -->
<method name="getSupportedFileExtensions"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<parameterizedType class="java.util.Set">
<args>
<type class="java.lang.String"/>
</args>
</parameterizedType>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getDefaultFileExtension() -->
<method name="getDefaultFileExtension"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getCertificateFormatName(javax.baja.sys.Context) -->
<method name="getCertificateFormatName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.getCertificateFormatFileTypeName(javax.baja.sys.Context) -->
<method name="getCertificateFormatFileTypeName"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.supportsPrivateKey() -->
<method name="supportsPrivateKey"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.INSTANCE -->
<field name="INSTANCE"  public="true" static="true" final="true">
<type class="javax.baja.platCrypto.certs.BPKCS7CertificateHandler"/>
<description/>
</field>

<!-- javax.baja.platCrypto.certs.BPKCS7CertificateHandler.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
