<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="test" runtimeProfile="wb" qualifiedName="javax.baja.test.BMockSession" name="BMockSession" packageName="javax.baja.test" public="true">
<description/>
<extends>
<type class="javax.baja.nav.BNavContainer"/>
</extends>
<implements>
<type class="javax.baja.naming.BISession"/>
</implements>
<implements>
<type class="javax.baja.space.BISpaceContainer"/>
</implements>
<implements>
<type class="javax.baja.nav.BINavContainer"/>
</implements>
<implements>
<type class="javax.baja.naming.BServiceScheme$ServiceSession"/>
</implements>
<!-- javax.baja.test.BMockSession.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.isConnected() -->
<method name="isConnected"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Does the session have an active logical connection.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.connect() -->
<method name="connect"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Do nothing
</description>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.test.BMockSession.disconnect() -->
<method name="disconnect"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Do nothing
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.close() -->
<method name="close"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Remove the session from the list of &lt;code&gt;<see ref="javax.baja.test.BMockHost">javax.baja.test.BMockHost</see>&lt;/code&gt; children
</description>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getHost() -->
<method name="getHost"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the parent host or null if unmounted.
</description>
<return>
<type class="javax.baja.naming.BHost"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getAbsoluteOrd() -->
<method name="getAbsoluteOrd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the host absolute ord for this object.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getOrdInHost() -->
<method name="getOrdInHost"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the ord of this session within its parent host.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getSessionContext() -->
<method name="getSessionContext"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the Context to use for this session.
</description>
<return>
<type class="javax.baja.sys.Context"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getNavOrd() -->
<method name="getNavOrd"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the primary ord used to navigate to a view on&#xa; this object.  This should be an normalized absolute&#xa; ord.
</description>
<return>
<type class="javax.baja.naming.BOrd"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.mountSpace(javax.baja.space.BISpace) -->
<method name="mountSpace"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Add the specified BISpace to this container.
</description>
<parameter name="space">
<type class="javax.baja.space.BISpace"/>
</parameter>
<return>
<type class="javax.baja.space.BISpace"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.unmountSpace(javax.baja.space.BISpace) -->
<method name="unmountSpace"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Remove the specified BISpace from this container.
</description>
<parameter name="space">
<type class="javax.baja.space.BISpace"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.getSpaces() -->
<method name="getSpaces"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get a Iterator to all spaces in this space container.
</description>
<return>
<parameterizedType class="java.util.Iterator">
<args>
<type class="javax.baja.space.BISpace"/>
</args>
</parameterizedType>
<description>
an Iterator to all spaces in this space container.
</description>
</return>
</method>

<!-- javax.baja.test.BMockSession.getService(javax.baja.sys.Type) -->
<method name="getService"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="type">
<type class="javax.baja.sys.Type"/>
</parameter>
<return>
<type class="javax.baja.sys.BComponent"/>
</return>
</method>

<!-- javax.baja.test.BMockSession.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

</class>
</bajadoc>
