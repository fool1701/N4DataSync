<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="test" runtimeProfile="wb" qualifiedName="javax.baja.test.BMockSessionScheme$MockSessionQuery" name="BMockSessionScheme.MockSessionQuery" packageName="javax.baja.test" public="true" static="true" innerClass="true">
<description/>
<extends>
<type class="java.lang.Object"/>
</extends>
<implements>
<type class="javax.baja.naming.OrdQuery"/>
</implements>
<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery(java.lang.String) -->
<constructor name="MockSessionQuery" public="true">
<parameter name="sessionName">
<type class="java.lang.String"/>
</parameter>
<description/>
</constructor>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.getSessionName() -->
<method name="getSessionName"  public="true">
<description/>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.getScheme() -->
<method name="getScheme"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the scheme id of the query.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.getBody() -->
<method name="getBody"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Get the ASCII body of the query.
</description>
<return>
<type class="java.lang.String"/>
</return>
</method>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.isHost() -->
<method name="isHost"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return if this OrdQuery is an host.  Host queries are&#xa; absolute and resolve to a BHost.  Since host queries are&#xa; absolute they trump any queries to their left during&#xa; normalization.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.isSession() -->
<method name="isSession"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Return if this OrdQuery is a session.  Sessions queries&#xa; are absolute within a host, and resolve to a BISession.
</description>
<return>
<type class="boolean"/>
</return>
</method>

<!-- javax.baja.test.BMockSessionScheme.MockSessionQuery.normalize(javax.baja.naming.OrdQueryList, int) -->
<method name="normalize"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
This method is called during BOrd.normalize() to give&#xa; each query the ability to normalize itself.  The&#xa; index specifies the location of this query in the&#xa; parsed queries list.  This method allows OrdQueries to&#xa; merge or truncate relative ords.
</description>
<parameter name="list">
<type class="javax.baja.naming.OrdQueryList"/>
</parameter>
<parameter name="index">
<type class="int"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

</class>
</bajadoc>
