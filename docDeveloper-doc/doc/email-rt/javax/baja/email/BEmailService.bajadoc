<?xml version="1.0" encoding="UTF-8"?>
<bajadoc version="2.0" createdBy="niagara-baja-doclet-1.0.9" createdAt="03-May-2024" createdOn="883e7f7a9875">
<class module="email" runtimeProfile="rt" qualifiedName="javax.baja.email.BEmailService" name="BEmailService" packageName="javax.baja.email" public="true">
<description>
BEmailService manages the life-cycle of BEmailAccounts.
</description>
<tag name="@author">Mike Jarmy on 6 Jan 03</tag>
<tag name="@since">Baja 1.0</tag>
<extends>
<type class="javax.baja.sys.BAbstractService"/>
</extends>
<implements>
<type class="javax.baja.util.BIRestrictedComponent"/>
</implements>
<action name="send" flags="">
<parameter name="parameter">
<type class="javax.baja.email.BEmail"/>
</parameter>
<return>
<type class="void"/>
</return>
<description>
Slot for the &lt;code&gt;send&lt;/code&gt; action.&#xa; Send an email via the default outgoing account.
</description>
<tag name="@see">#send(BEmail parameter)</tag>
</action>

<!-- javax.baja.email.BEmailService() -->
<constructor name="BEmailService" public="true">
<description/>
</constructor>

<!-- javax.baja.email.BEmailService.send(javax.baja.email.BEmail) -->
<method name="send"  public="true">
<description>
Invoke the &lt;code&gt;send&lt;/code&gt; action.&#xa; Send an email via the default outgoing account.
</description>
<tag name="@see">#send</tag>
<parameter name="parameter">
<type class="javax.baja.email.BEmail"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.getType() -->
<method name="getType"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.Type"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.serviceStarted() -->
<method name="serviceStarted"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.email.BEmailService.serviceStopped() -->
<method name="serviceStopped"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
<throws>
<type class="java.lang.Exception"/>
</throws>
</method>

<!-- javax.baja.email.BEmailService.enabled() -->
<method name="enabled"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.disabled() -->
<method name="disabled"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.getIcon() -->
<method name="getIcon"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.sys.BIcon"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.added(javax.baja.sys.Property, javax.baja.sys.Context) -->
<method name="added"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.removed(javax.baja.sys.Property, javax.baja.sys.BValue, javax.baja.sys.Context) -->
<method name="removed"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Called when an existing property is removed from this&#xa; component via one of the &lt;code&gt;remove&lt;/code&gt; methods.
</description>
<parameter name="property">
<type class="javax.baja.sys.Property"/>
</parameter>
<parameter name="oldValue">
<type class="javax.baja.sys.BValue"/>
</parameter>
<parameter name="context">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.getServiceTypes() -->
<method name="getServiceTypes"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Register this component under &#x22;email:EmailService&#x22;.
</description>
<return>
<type class="javax.baja.sys.Type" dimension="1"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.getLicenseFeature() -->
<method name="getLicenseFeature"  public="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description/>
<return>
<type class="javax.baja.license.Feature"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.checkParentForRestrictedComponent(javax.baja.sys.BComponent, javax.baja.sys.Context) -->
<method name="checkParentForRestrictedComponent"  public="true" final="true">
<annotation><type class="java.lang.Override"/>
</annotation>
<description>
Only one allowed to live under the station&#x27;s BServiceContainer.
</description>
<parameter name="parent">
<type class="javax.baja.sys.BComponent"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.getDefaultOutgoingAccount() -->
<method name="getDefaultOutgoingAccount"  public="true">
<description>
Return the first outgoing account.
</description>
<return>
<type class="javax.baja.email.BOutgoingAccount"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.doSend(javax.baja.email.BEmail, javax.baja.sys.Context) -->
<method name="doSend"  public="true">
<description/>
<parameter name="email">
<type class="javax.baja.email.BEmail"/>
</parameter>
<parameter name="cx">
<type class="javax.baja.sys.Context"/>
</parameter>
<return>
<type class="void"/>
</return>
</method>

<!-- javax.baja.email.BEmailService.send -->
<field name="send"  public="true" static="true" final="true">
<type class="javax.baja.sys.Action"/>
<description>
Slot for the &lt;code&gt;send&lt;/code&gt; action.&#xa; Send an email via the default outgoing account.
</description>
<tag name="@see">#send(BEmail parameter)</tag>
</field>

<!-- javax.baja.email.BEmailService.TYPE -->
<field name="TYPE"  public="true" static="true" final="true">
<type class="javax.baja.sys.Type"/>
<description/>
</field>

<!-- javax.baja.email.BEmailService.log -->
<field name="log"  public="true" static="true" final="true">
<type class="java.util.logging.Logger"/>
<description/>
</field>

</class>
</bajadoc>
